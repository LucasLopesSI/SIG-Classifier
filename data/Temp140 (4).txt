This article was downloaded by: [McMaster University]
On: 26 November 2014, At: 07:39
Publisher: Taylor & Francis
Informa Ltd Registered in England and Wales Registered Number: 1072954 Registered
office: Mortimer House, 37-41 Mortimer Street, London W1T 3JH, UK

International Journal of Geographical
Information Science
Publication details, including instructions for authors and
subscription information:
http://www.tandfonline.com/loi/tgis20

Use of grid computing for modeling
virtual geospatial products
Aijun Chen a , Liping Di a , Yaxing Wei a , Yuqi Bai a & Yang Liu a
a Center for Spatial Information Science and Systems , George
Mason University , Greenbelt , MD , USA
Published online: 24 Jul 2009.

To cite this article: Aijun Chen , Liping Di , Yaxing Wei , Yuqi Bai & Yang Liu (2009) Use of grid
computing for modeling virtual geospatial products, International Journal of Geographical
Information Science, 23:5, 581-604, DOI: 10.1080/13658810902733666

To link to this article:  http://dx.doi.org/10.1080/13658810902733666

PLEASE SCROLL DOWN FOR ARTICLE

Taylor & Francis makes every effort to ensure the accuracy of all the information (the
“Content”) contained in the publications on our platform. However, Taylor & Francis,
our agents, and our licensors make no representations or warranties whatsoever as to
the accuracy, completeness, or suitability for any purpose of the Content. Any opinions
and views expressed in this publication are the opinions and views of the authors,
and are not the views of or endorsed by Taylor & Francis. The accuracy of the Content
should not be relied upon and should be independently verified with primary sources
of information. Taylor and Francis shall not be liable for any losses, actions, claims,
proceedings, demands, costs, expenses, damages, and other liabilities whatsoever or
howsoever caused arising directly or indirectly in connection with, in relation to or arising
out of the use of the Content.

This article may be used for research, teaching, and private study purposes. Any
substantial or systematic reproduction, redistribution, reselling, loan, sub-licensing,
systematic supply, or distribution in any form to anyone is expressly forbidden. Terms &
Conditions of access and use can be found at http://www.tandfonline.com/page/terms-
and-conditions

International Journal of Geographical Information Science
Vol. 23, No. 5, May 2009, 581–604

Research Article

Use of grid computing for modeling virtual geospatial products

AIJUN CHEN*, LIPING DI, YAXING WEI, YUQI BAI and YANG LIU
Center for Spatial Information Science and Systems, George Mason University,
Greenbelt, MD, USA

(Received 21 July 2007; in final form 14 December 2008)

Earth science research and applications usually use Distributed Geospatial
Information Processing (DGIP) services and powerful computing capabilities to
extract information and knowledge from large volumes of distributed geospatial
data. Conceptually, such processing can be abstracted into a logical model that
utilizes geospatial domain knowledge to produce new geospatial products. Using
this idea, the geo-tree concept and the proposed geospatial Abstract Information
Model (AIM) have been used to develop a Grid workflow engine complying with
geospatial standards and the Business Process Execution Language. Upon a user’s
request, the engine generates virtual geospatial data/information/knowledge pro-
ducts from existing DGIP data and services. This article details how to (1) define
and describe the AIM in XML format, (2) describe the process logically with an
AIM, including the geospatial semantic logic, (3) conceptually describe the process
of producing a particular geospatial product step by step from raw geospatial data,
(4) instantiate AIM as a concrete Grid-service workflow by selecting the optimal
service instances and data sets, and (5) design a Grid workflow engine to execute
the concrete workflows to produce geospatial products. To verify the advantages
and applicability of this Grid-enabled virtual geospatial product system, its per-
formance is evaluated, and a sample application is provided.

Keywords: Grid computing; Abstract modeling; Virtual geospatial product; Grid
service chain; Process workflow

1.

Introduction

The development of Web/Internet technology has facilitated collaboration in Earth
science research and applications from a local scale to the global scale (Fusco et al.
2005, Ter Linden et al. 2005, Wang and Liu 2009, Zhang and Tsou 2009). In such a
complex environment, the knowledge of discipline experts plays an important role
(Zhuge 2004, 2006, Ludascher et al. 2005, Babik et al. 2006, Hu and Bian 2009) in
Distributed Geospatial Information Processing (DGIP) for Earth science research and
applications. How to extract this knowledge and how to use the knowledge to efficiently
process geospatial data for applications and decision makers remain major issues
(Raskin and Pan 2005, Lutz and Klein 2006).

Conceptually, the step-by-step processing from raw data to an application-specific
geospatial product forms an abstract DGIP model. This model captures expert
knowledge on how to produce an application-specific product from the available
raw data. To facilitate this process, we adopted the geo-object and geo-tree concepts

*Corresponding author. Email: aijunchen@gmail.com

International Journal of Geographical Information Science
ISSN 1365-8816 print/ISSN 1362-3087 online # 2009 Taylor & Francis
http://www.tandf.co.uk/journals
DOI: 10.1080/13658810902733666

Downloaded by [McMaster University] at 07:39 26 November 2014 582

A. Chen et al.

(Di and McDonald 1999). The basic knowledge from the experts is abstractly defined,
expressed, and provided in geo-object modules that are the foundations for construct-
ing logical models. Then, the available geo-object modules are used to incorporate the
complex logic of the application procedures into a geo-tree abstract model. This
abstract model is automatically instantiated into a concrete service chain by a work-
flow engine, which also executes the service chain to produce useful products. The
model can be considered a virtual geospatial product (VGP) that does not preexist but
is available upon request. Defining a virtual product with an abstract DGIP model
allows a virtual product system to quickly capture the domain knowledge of experts
and express this derived knowledge in products. An Abstract Information Model
(AIM) can be used to implement a DGIP system to easily leverage available distrib-
uted online resources to produce VGPs. This kind of product virtualization allows the
system to offer an unlimited number of products with little effort. When a user
requests a VGP, the model is first instantiated into a concrete workflow. The work-
flow consists of instances of the concrete services used to generate an application-
specific product from distributed data sets. Conversion from a geospatial processing
model to an executable workflow incorporates the user requirements for the requested
product into the workflow, ensuring that the product matches these requirements.

Given the complexity of Earth science research and the large volumes of geospatial
data involved, the DGIP processes are often data- and computing-intensive, requiring
high-performance and high-throughput computing. For sharing geospatial resources,
the Open Geospatial Consortium (OGC) has developed standards and specifications,
such as the Catalogue Service/Web Profile (CS/W, Nebert and Whiteside 2005), the
Web Coverage Service (WCS, Evans 2003), the Web Map Service (WMS, de la
Beaujardie`re 2001), and the Web Feature Service (WFS, Vretanos 2002). These
OGC Web services can be used to build a geoprocessing workflow (service chaining)
(Friis-Christensen et al. 2009). Therefore, Grid computing (Foster et al. 2001) and
OGC Web services are integrated in this study to build Grid service chaining using
online computing, data resources, and geospatial standards.

This article describes the AIM concept and implementation using geo-tree, grid
computing, and geospatial Web services. The objective is to effectively use existing
knowledge to process geospatial data and extract new knowledge products. Section 2
reviews research relevant to the workflow engine. Section 3 introduces the geo-object
and geo-tree concepts. Section 4 describes the development of a geospatial AIM and
its schema and implementation based on the geo-tree concept. Section 4 also intro-
duces a system catalog for registration of AIMs. Section 5 details how experts can use
the AIM to build an application-specific Logical Processing Model (LPM), and
register and retrieve it from the catalog. Section 6 describes how to instantiate an
LPM into a concrete grid-service chaining workflow. Section 7 presents a Business
Process Execution Language (BPEL)-compliant grid service workflow engine and
describes how to use the engine to execute a concrete workflow. Section 8 describes the
system architecture and implementation. A use case is introduced to evaluate perfor-
mance. Conclusions are in Section 9.

2. Related work

Use of scientific workflows to implement virtual data products from existing distrib-
uted data and computing resources in Grid environment is a promising approach
(Deelman et al. 2003, Amin et al. 2004, Bardeen et al. 2005, Di et al. 2005, 2006, Cybok

Downloaded by [McMaster University] at 07:39 26 November 2014 Modeling virtual geospatial products

583

2006, Yu and Buyya 2006, Zhao et al. 2006, Barker and van Hemert 2008). Most
representative scientific workflows have their own languages to describe and con-
struct domain-specific workflows, but generally do not follow domain standards. The
BPEL for Web Services (BPEL4WS) standard has been widely adopted for building
workflows (Cybok et al. 2006, Yu and Buyya 2006, Friis-Christensen et al. 2009).

The Kepler system (Ludascher et al. 2005) is an extensible dataflow- and actor-
oriented workflow system for bioinformatics, geoinformatics, and cheminformatics.
It is Web Service based, not Grid service based, although it provides a few Grid
functions, such as GridFTP and Globus job scheduling. Our system, in contrast, is
based on an abstract model, geospatial standards, and geospatial use cases. The Kepler
metadata provides semantic annotations to describe components and their inputs and
outputs.

Planning for execution in Grids (PEGASUS) (Zhao et al. 2006) provides a virtual data
Grid to manage, trace, communicate, and explore the creation and analysis of diverse
data objects in a scalable, heterogeneous computational environment. PEGASUS has
two primary components: (1) a virtual data schema for defining the objects and the
relationships among the objects and (2) a virtual data system for users to construct and
maintain the system in a distributed context. Zhao et al.’s (2006) research is focused on
high-energy physics and astronomy and has some similarities to our research.

Deelman et al. (2003) proposed an approach for generating workflows for the Grid
that describe the execution of a complex application built from individual compo-
nents. The authors have developed two types of workflow generators: a concrete
workflow generator and an abstract and concrete workflow generator. Both genera-
tors construct workflows for specific application domains, such as high-energy phy-
sics and geophysics, using application specific components. Users must manually
discover what resources are available and where the replicated data are located.

Cybok (2006) has proposed a Grid workflow infrastructure based on Open Grid
Service Architecture (OGSA) using the BPEL4WS concepts. The OGSA infrastructure
(a) exploits a variety of advanced Grid features, such as factories, lifecycle management,
and notifications; (b) supports basic workflow functionalities; and (c) uses an
orchestration-based approach to Grid service workflow management by specifying
the Grid Workflow Execution Language notation and a Grid workflow execution
engine. However, the infrastructure is not based on a logical concept. The workflow
consists of concrete Grid services that cannot be easily re-used, and no graphical
interface is available for constructing workflow models online.

Bubak et al. (2005) introduced a system for constructing Grid workflows consisting
of: (i) a workflow composer; (ii) a Grid service registry; (iii) domain ontologies, which
must be populated by the user to describe and register data and services; and (iv) an
ontology inference engine to acquire the proper data and services. This system is more
conceptual than practical. Domain ontologies and semantic descriptions are the key
concepts for an automatic workflow system, but without a well-defined, feasible
ontology, usage of such a system is limited.

The K-Wf Grid (Babik et al. 2006) uses state-of-the-art semantic Web and Grid
technology to facilitate automatic and dynamic orchestration and execution of
knowledge-based Grid workflows. The system defines a new XML-based language –
the Grid Workflow Description Language – to describe a workflow model that is built
based on Petri net theory. It also semiautomatically maps an abstract workflow into a
concrete workflow and dynamically monitors and analyzes the workflow perfor-
mance. The system is similar to a good practical semantic Grid system. However,

Downloaded by [McMaster University] at 07:39 26 November 2014 584

A. Chen et al.

geospatial knowledge and standards are not involved, and BPEL4WS is not
considered.

Swift (Zhao et al. 2007) is a Grid-based parallel computation environment, which
uses XML schema to describe logical structure and its own scripting language to
express the workflow. Swift is a task-oriented system for providing super parallel
computation in the Grid environment.

Taverna (Oinn et al. 2005) is a Web Services-based tool for composing bioinformatics

workflows for the life sciences community, but it provides minimal Grid services.

SwinDeW (Yan et al. 2006) introduces a peer-to-peer (P2P) system to manage
decentralized workflows for improving performance, scalability, reliability, user sup-
port, and system openness. Dutch Space and the European Space Agency (ESA)
European Space Research Institute have proposed a Grid-based workflow manage-
ment system – GridAssist (Ter Linden et al. 2005) – to provide a user-friendly
environment for executing distributed Earth observing instrument simulations using
a computational Grid.

Model Builder (ESRI 2008) is a set of commercial software components from ESRI
Inc. that provides three types of components for constructing models: elements, con-
nectors, and text labels. Elements are data and pre-implemented tools for users to
process data for user-specific applications. Some constructed models can be reused, but
each model is application-specific and data-specific. All procedures are manual and
instance (specific tools and data)-based. There is no discussion of how to incorporate
expert knowledge to logically model abstract geospatial processes using a particular set
of service instances and data. Model Builder is a desktop system and not Web-based.
An ontology-based Grid workflow system is a semantic or knowledge system.
Zhuge (2004, 2006) introduced a relevant description of such a system, consisting of
a methodology, a resource space model, a semantic link network model, and a
knowledge flow network model of the semantic Grid and the knowledge Grid.

Compared to previous systems, the research reported here has the following

improvements:

(a) Adopts geospatial and information standards, such as geospatial domain

standards, Grid standards, and BPEL4WS.

(b) Defines a high-level conceptual model schema using the geo-tree concept for

automatically constructing geospatial processing.
(c) Uses a geospatial ontology to define the abstract model.
(d) Provides a user-friendly online graphical user interface for easily capturing

experts’ knowledge.

(e) Fully utilizes and integrates the functions of Globus Toolkit 4.0. Grid service is

the atom for constructing complicated geospatial applications.

(f) Logical geoprocessing model representing experts’ knowledge can be repeat-
edly instantiated into concrete workflows by selecting optimal data and Grid
service’s instances dispersed in the Grid virtual organization.

(g) A BPEL4WS compatible Grid workflow is designed to execute the concrete

workflow as a Grid service-chaining.

3. Theoretical foundation

The VGP uses the geo-object and geo-tree concepts described by Di and McDonald
(1999) and subsequently enhanced and enriched (Di et al. 2005, 2006, 2008) at the
George Mason University Center for Spatial Information Science and Systems.

Downloaded by [McMaster University] at 07:39 26 November 2014 Modeling virtual geospatial products

585

A geo-object consists of a data set, the data set attributes (metadata), and a set of
methods that operate on the data set (e.g., transformation, subsetting). A geo-object
stored at a data center is an archived geo-object. Theoretically, all geoinformation and
knowledge products can be derived from archived geo-objects. Thus, from the object-
oriented point of view, all processes for discovery of geoinformation and knowledge
are procedures of creating new geo-objects from existing ones.

A geospatial logical process model (LPM) is a conceptual model representing the
logical relationships among components of a complex geospatial application. A ‘user
geo-object’ is a geo-object that results from a user request. This object either is already
in a data archive or can be derived by executing a geo-processing algorithm on a set of
input geo-objects. Decomposition of a user geo-object produces a tree structure
representing the process workflow, called a geo-tree. Construction of a geo-tree is a
geospatial modeling process; the geo-tree itself is a geospatial LPM that contains the
knowledge of a specific application domain and results in a VGP upon request.
Because a geo-tree captures the process steps but not a specific product, it represents
only the type of geo-object that it can produce, not an instance (an individual data
set). The geo-tree thus logically describes how archived geo-objects work together to
generate a new (virtual) geo-object. A geo-tree, with user-specified parameters, can be
instantiated from an LPM into a concrete workflow that is executed by the workflow
engine to produce the VGP. Within this procedure, the knowledge in the LPM can be
easily and widely reused.

Each node of a geo-tree can be considered a geospatial service module. In this
module, the service should be well defined, have clear input and output requirements,
and be capable of independent execution. This article describes some sample geospa-
tial Grid service modules that can be reused to construct new geospatial models – new
geo-trees. From the Grid service point of view, a geo-tree is a complex Grid service
chain, and the construction of a geo-tree is a service-chaining process.

4. Geospatial AIM and its XML schema

To support VGP, we present a geo-tree description of an AIM using Service-Oriented
Architecture (SOA) and XML representations. The AIM can be used by experts to
construct geospatial LPMs and consists of (1) an abstract DataType, (2) a
ServiceType, (3) the logical relationships between DataTypes and ServiceTypes, and
(4) the cataloged XML descriptions and registration of the above three, to support on-
the-fly construction of an LPM.

4.1 Definition of DataType

DataTypes are defined using the scientific terminology of the Earth science disci-
plines, for example, Digital Elevation Model (dtDEM), land slope (dtSlope), land
aspect (dtAspect), and landslide (dtLandslide). A DataType is an abstract type for a
data set category. Experts use DataTypes to express their knowledge when developing
an LPM using a Web-based interface. The DataTypes and relationships among
DataTypes are defined in the geospatial ontologies (Raskin and Pan 2005).

4.2 Definition of ServiceType

A ServiceType represents a set of Grid/Web services that have similar structures and
functionalities. The ServiceType Name, Input, Output, and Operation are expressed

Downloaded by [McMaster University] at 07:39 26 November 2014 586

A. Chen et al.

Data type 

Input

ServiceType 

Operation

Output

Data type

Figure 1. Definition of ServiceType.

Table 1. XML definition of ServiceType.

,serviceType name=‘‘service-type-name’’.
,inputList. ,input name=‘‘data-type-name’’/.+ ,/inputList.

,operationList. ,operation name=‘‘operation-name’’/.+ ,/operationList.
,outputList. ,output name=‘‘data-type-name’’/.+ ,/outputList.

,/serviceType.+

using Earth science terminology to reflect the scientific meaning of a service category.
The ServiceType Name is the Operation Name, e.g., slope calculation (stSlope) or
aspect calculation (stAspect). The Input and Output indicate the DataTypes and
ServiceType processes and returns, respectively. The Operation indicates the func-
tions that a ServiceType performs. The relationships between ServiceTypes are
defined using a geospatial service ontology (Figure 1).

A ServiceType is specified by its name, attributes, input data type, operation type,

and output data type. Table 1 provides the XML definition for ServiceType.

4.3 Definition of logical relationships in AIM

In the AIM, logical activity is introduced to express the logical relationships among
ServiceTypes. Four core logical activities are defined: unit-activity, parallel-activity,
sequence-activity, and condition-activity (Figure 2.).

Unit-activity has only one member, a ServiceType. Each ServiceType is encapsu-
lated as a unit-activity. The other three activity types are specified by two members,
which can be any ServiceTypes or core activities. In Sequence-activity, the first and
last members are in sequence, as the output of the first member is the input of the last.
In parallel-activity, the action of the two members is in parallel. Condition-activity
includes a condition in addition to two members. If the condition is true, the first
member acts; otherwise, the last one does.

Unit-activity 

Sequence-activity

Parallel-activity

Condition-activity

Figure 2. Logical relationships in the abstract information model.

Downloaded by [McMaster University] at 07:39 26 November 2014 Modeling virtual geospatial products

587

Activities with two members are called bi-activities. If both the first and the last
members of a bi-activity are unit-activities, the bi-activity is a simple activity.
Otherwise, it is called a complex activity. Both simple and complex activities represent
workflows and are the final activities exposed to users.

4.4 AIM specification and its XML schema

Table 2 presents the formal AIM specification, consisting of a DataType, a
ServiceType, and their relationships. Table 3 is the XML schema defining vocabul-
aries and rules used by experts to build up an LPM for a specific application.

4.5 AIM registration and Grid-enabled geospatial catalog

A standards-compliant geospatial catalog for registering the AIM,
including
DataTypes, ServiceTypes, and their relationships, has been designed and implemen-
ted. The catalog accepts registration of available data sets and service instances.
Subject matter experts retrieve ServiceTypes and DataTypes from the catalog to
construct an LPM and register it as a VGP. The registered data sets and service
instances are used to automatically instantiate concrete geospatial processing

Table 2. The XML specification of the AIM.

,aim.
,abstractservice name=‘‘name’’ targetnamespace=‘‘http://bpel.laits.gmu.edu/aim’’.

,service name=‘‘sname’’.

,attribute input=‘‘inname’’ operation=‘‘opname’’ output=‘‘outname’’?. ,/attribute.

+
,activity.

,activitymembers.?

,/activitymember.+
,compositeactivity.

,activitymember name=‘‘mname’’ operation=‘‘opname’’ ?.

,unitactivity name=‘‘uaname’’ member=‘‘mname’’?.
,sequenceactivity name=‘‘saname’’ fmember=‘‘mname’’ lmember=‘‘mname’’ ?.

,/unitactivity.+

Table 3. Vocabularies and rules for the AIM.

,xs:element name=‘‘service’’ type=‘‘as:serviceType’’.
,xs:unique name=‘‘attribute’’.
,xs:selector xpath=‘‘attribute’’/.
,xs:field ‘‘@name’’/.
,xs:complexType name=‘‘serviceType’’.
,xs:complexContent.
,xs:sequence.
,xs:element ref=‘‘as:attribute’’ minOccurs=‘‘0’’ maxOccurs=‘‘unbounded’’/.
,xs:attribute name=‘‘name’’ type=‘‘NCName’’ use=‘‘required’’/.
,xs:element name=‘‘attribute’’ type=‘‘as:attributeType’’/.
,xs:complexType name=‘‘attributeType’’.
,xs:complexContent.
,xs:attribute name=‘‘input’’ type=‘‘QName’’ use=‘‘required’’/.
,xs:attribute name=‘‘operation’’ type=‘‘QName’’ use=‘‘required’’/.
,xs:attribute name=‘‘output’’ type=‘‘QName’’ use=‘‘required’’/.

Downloaded by [McMaster University] at 07:39 26 November 2014 588

A. Chen et al.

workflows from LPMs when users request a VGP. A Web interface of the catalog is
provided for users querying both real and virtual data products.

An object-oriented, Grid-enabled Catalog Service for the Web (GCS/W) (herein-
after referred to as ‘the catalog’) has been designed. The catalog follows the e-business
Registry Information Model (ebRIM)-based (OASIS 2002) and the OGC Catalog
Service for the Web (CS/W) specification (Gilles 2006, Primavera 2006) for registering
basic objects and the AIM. It extends the CS/W information model for registering
geospatial data sets and service instances. This model is based on the NASA Earth
Observing System (EOS) Core System metadata standard for HDF-EOS data (NASA
1994), the FGDC Content Standard for Digital Geospatial Metadata and its Remote
Sensing Extensions (FGDC 2002), the ISO 19115 standard Geographic information –
metadata, and ISO 19119 Geographic information – services. Details can be found in
Section 6.2. The catalog conforms to the OGC CS/W ISO profile (Voges et al. 2005).
EbRIM provides features for users to define classification schemes, and the
ClassificationScheme object is used to describe taxonomies. The DataType classifica-
tions are defined as in the NASA Global Change Master Directory (GCMD).
ServiceTypes are defined in three ways, according to the NASA GCMD, ISO
19119, and OGC service standards. There is thus one DataType classification and
three ServiceType classifications. Each DataType or ServiceType corresponds to a
ClassificationNode object in the GCS/W. Every DataType and ServiceType is regis-
tered in the GCS/W. One kind of DataType corresponds to only a single DataType
classification, but a ServiceType may belong to one or more ServiceType classifica-
tions. The AIM is registered in GCS/W and is later used by experts to build up LPMs.
The GCS/W plays a key role in modeling virtual products, because DataTypes,
ServiceTypes, LPMs, data sets, service instances, and their related metadata are all
stored in and accessible from the catalog.

5. Modeling the logical processing model

Using the AIM, a Web-based, user-friendly interface is provided for experts who are
logically and virtually constructing an LPM. An expert constructs an LPM to virtually
declare a geospatial product that does not exist in a geospatial system, but can be
created upon user request. The LPM provides product virtualization, enabling a
geospatial data system to offer an unlimited number of products with little effort.
The LPM is also a kind of special ServiceType that can be repeatedly used by domain
experts to widely share and reuse knowledge.

Modeling an LPM consists of the following three steps:

(a) Experts launch a User Web Interface (UWI) that is designed and implemented

using the AIM.

ServiceTypes.

(b) Experts construct abstract LPMs using the available DataTypes and

(c) Experts register LPMs into the catalog as VGPs for future retrieval. LPMs are,

in fact, new ServiceTypes that can be reused to construct other LPMs.

5.1 Design of the user web interface

The purpose of the UWI is to provide a user-friendly Web-based interface for experts
to express their domain knowledge – creating LPMs based on the AIM. Table 4 lists
the requirements that guide the design of the UWI.

Downloaded by [McMaster University] at 07:39 26 November 2014 Modeling virtual geospatial products

589

Table 4. The requirements for guiding the design of the UWI.

a The UWI should automatically display all available DataTypes and ServiceTypes in the

b Experts should be able to query and display all available ServiceTypes while selecting an

system catalog for experts to select

existing DataType, and vice versa

c Simple descriptions should be provided for every available DataType and ServiceType
d There are no direct connections between any two DataTypes or ServiceTypes. There must be

a ServiceType between two DataTypes, and vice versa
e LPMs should be WYSIWYG (What you see is what you get)
f The UWI should provide a mechanism for validating the final LPM
g The UWI should provide detailed procedures for input of metadata during registration of

h Experts and general users should be able to list all registered LPMs and authorized experts

the LPM to the catalog

should be able to modify LPMs

The UWI runs as a Java Applet in Web browsers. The interface is divided into two
columns (Figure 3). The left column contains three tab pages: DataType,
ServiceType, and Selected ServiceType. The DataType and ServiceType tab pages
list all available resources as tree structures. The Selected ServiceType tab page lists
available resources to experts while querying the catalog.

The right column contains two tab pages: Model Design Panel and Registered Model
List. The Model Design Panel is a workbench on which experts construct LPMs. On the
workbench, a DataType is represented as a green octagon and a ServiceType is
represented as a blue rectangle. A ServiceType rectangle is connected with one or
several DataType octagons as input and one DataType octagon as output. Pairs of

Figure 3. The user Web interface for building logical geospatial process models.

Downloaded by [McMaster University] at 07:39 26 November 2014 590

A. Chen et al.

ServiceTypes can be connected only through a DataType that is the output of the first
ServiceType and the input of the second The Registered Model List panel is used to
provide user-friendly management of all registered LPMs. Authorized experts can list
all registered LPMs, view the details of the descriptions, reload them on the workbench
for modification, or delete them. Figure 3 displays a screen shot of a landslide suscept-
ibility example having four inputs.

5.2 Expressing the knowledge of experts

An expert uses an LPM to represent the steps in processing raw data into an
application-specific geospatial product. When an expert opens the UWI to start
building a LPM, the UWI automatically displays the available DataTypes and
ServiceTypes from the catalog. Now, the expert has to decide what ‘type’ of data he
wants – the ‘type’ is one of the DataTypes defined in the AIM. The expert selects one
desired DataType. He selects a ServiceType that, he thinks, can produce that type of
data. He then selects one or more new ServiceTypes whose output (DataTypes)
matches the input (DataTypes) of the previous ServiceType selected (refer to
Figure 3). Repeating the last step, the expert each time uses the output of the new
ServiceType as the input of the ServiceType selected in the previous step until the
input for the last ServiceType is an elementary DataType whose corresponding
DataInstances already exist. This process creates a ServiceType chain that is an
LPM, representing the domain knowledge on how to produce a specific geospatial
product. Using the AIM, an expert can build LPMs from any combination of
sequence, parallel, and condition activities.

To avoid producing invalid LPMs, the constraints discussed in Sections 4.1 and 4.2
are applied when DataTypes and ServiceTypes are defined. An expert can query all
ServiceTypes from the catalog consistent with these constraints after selecting a
DataType. The query results will be shown in the left column of the Selected
ServiceType tab page, and the expert can select only these ServiceTypes. The proce-
dure is similar when the expert first selects a ServiceType and then needs to select a
DataType. Before an LPM is registered into the catalog, each ServiceType is queried
to verify that the inputs and output DataTypes are consistent with the ServiceType
requirements.

5.3 Registration and retrieval of LPMs

An expert can register a new LPM into the catalog as a VGP. The logical model
created in the workbench is converted into an XML document following the XML
schema of the AIM. This XML document is registered in the catalog.

The queriable core metadata elements, a subset of the extended CS/W information
model described in Section 4.5, are applied to describe the LPM. These elements are
registered into the catalog with the LPM. Thus, the expert can describe the new LPM
using standard FGDC or ISO 19115 metadata: name, description, applicable spatial
and temporal range, general keywords, specific keywords, etc. Figure 4 shows screen-
shots of an LPM registration.

An LPM that has been built and registered in the catalog is immediately available
for user queries. A universal CS/W portal interface was designed and implemented for
querying both the real data products and the LPMs using the same queriable core
metadata elements. The user never needs to know if the desired product already exists
or must be produced online. However, there are significant differences in the internal

Downloaded by [McMaster University] at 07:39 26 November 2014 Modeling virtual geospatial products

591

Figure 4. The user Web interface for registering logical geospatial process models.

procedures of the two types of requests. When replying to a VGP request, the system
receives only a qualified LPM that represents a VGP that does not really exist. The
LPM is instantiated into a concrete processing workflow consisting of Grid services
and executed through a Grid workflow engine to produce the requested VGP.

5.4 An example of an LPM

Figure 3 shows an LPM for Landslide susceptibility forecasting with four inputs:
Terrain_Slope, Terrain_Aspect, California_WHR13_Class, and Enhanced Thematic
Mapper (ETM)_Normalized Difference Vegetative Index (NDVI) DataTypes, which
are the outputs of the Slope, Aspect, California_WHR13_Classification, and NDVI
the Slope and Aspect
ServiceTypes,
ServiceTypes
of
California_WHR13_Classification and NDVI ServiceType are of DataType –
ETM. Table 5 summarizes the LPM as registered in the catalog.

respectively. The input DataTypes of
of DataType Terrain_Elevation,
are

inputs

and

the

6.

Instantiating LPMs into grid service-oriented concrete workflows

When a user requests a virtual product, the system will materialize the LPM using
those concrete data sets and service instances with attributes available in the Grid
environment. Therefore, data sets, service instances, and their metadata must be
available in the catalog. A Grid INstantiation Service (GINS) was created to instanti-
ate LPMs into executable concrete workflows. GINS involves the following key steps:

Downloaded by [McMaster University] at 07:39 26 November 2014 592

A. Chen et al.

Table 5. Illustration of a logical process model in XML format.

,logicprocess name=‘‘Landslide_4i’’ targetnamespace=‘‘http://bpel.laits.gmu.edu/bpel/lpm’’.

,activitymembers.

,activitymember name=‘‘Landslide_Susceptibility_2i’’

operation=‘‘Landslide_Susceptibility_4i’’/.

,activitymember name=‘‘Slope’’ operation=‘‘Slope’’/.
,activitymember name=‘‘Aspect’’ operation=‘‘Aspect’’/.. . .

,compositeactivity.

,parallelactivity name=‘‘Activity_1’’ memberfirst=‘‘Slope’’ memberlast=‘‘Aspect’’/.
,sequenceactivity name=‘‘Activity_2’’ memberfirst=‘‘Activity_1’’

memberlast=‘‘Landslide_

Susceptibility_4i’’/.

,flowactivity name=‘‘model’’ expression=‘‘Activity_2’’/.. . .

(a) Define service instances, data sets, their metadata descriptions and their

registration to the catalog;

(b) Parse the LPMs;
(c) Select appropriate service instances and data;
(d) Transfer parameters of service instances along sequences of service instances;

(e) Produce Web Service Description Language (WSDL) and BPEL descriptions

and

of the concrete workflow.

6.1 Definitions of DataInstance and ServiceInstance

DataInstances (also referred to as data sets) are instances of some kinds of DataType
and physically exist. Data sets may have multiple replicas resulting from multiple
requests for a virtual product across distributed storage location in the Grid environ-
ment. These data sets will be accessed when a user requests both existing data and VGPs,
but will never be accessed in the modeling phase when an expert is constructing a VGP.
A ServiceInstance is a service instance that belongs to one or several ServiceTypes.
It is physically deployed in many kinds of distributed computing units in the Grid
environment, such as high-performance servers or clusters. All ServiceInstances are
standard Grid services that are described through WSDL files, associated with one or
several ServiceTypes, and used upon request to construct concrete workflows.

Figure

ServiceTypes, DataTypes,
ServiceInstances, DataInstances, and LPMs. The output of the LPM is a previously

relationships

among

shows

the

5

ServiceTypes

ServiceInstances

Specific case

Associates to

LPMs

Decides

Associates to

Output

Associates to

DataInstances

DataTypes

Real data

Virtual data

Figure 5. Relationships of DataType, ServiceType, DataInstance, and ServiceInstance.

Downloaded by [McMaster University] at 07:39 26 November 2014 Modeling virtual geospatial products

593

existing DataType. DataInstances are associated with one or more DataTypes,
whereas ServiceInstances are associated with one or more ServiceTypes.
DataInstances refer to both real data and virtual data created upon request.

6.2 Metadata descriptions of DataInstance or ServiceInstance and their registration

The core workflow metadata are described using the ISO 19115 metadata standard
parts 1 and 2 (ISO/TC211 2002a, 2002b), the NASA ECS metadata standard (NASA
1994) for HDF-EOS data, and the FGDC metadata standard and its extension for
remote sensing (FGDC 2002, Neal et al. 2006). Chen et al. (2005) list the core
metadata elements the system selects for a data set. This extended metadata model
is integrated with the OGC CS/W information model. A CSWExtrinsicObject object
is used to represent a DataInstance. The Slot object is used to provide metadata
elements that are not original attributes of CSWExtrinsicObject.

The metadata elements are represented in an XML document following the ISO
19115 metadata XML schema. A data set is registered in the catalog by processing its
metadata document. If a data set has multiple replicas on the Grid, a unique logical
name is defined. Each replica is associated with a concrete service instance that has an
accessible physical address for serving this replica upon user request. The Replica
Location Service (RLS) (Chervenak et al. 2008) distributed as part of Globus Toolkit
is used to store the relationships between logical names and concrete replicas.
Registration of a data set involves an ebRIM-based catalog service and Globus
RLS, both of which must be registered with related metadata.

The ISO 19119 service metadata standard (ISO/TC211 2002c) is used to describe
service instances. The Slot object is used to extend service object elements when service
instances are registered to the catalog. Each service instance has a standard WSDL
description. To chain a service instance correctly as a part of the entire concrete
workflow, the Instantiation service must parse the WSDL to get the input and output
parameters of the selected service instance. Table 6 summarizes a concise WSDL
example of the Grid Slope service.

6.3 Parsing of LPMs and optimized selection of service instances and data sets

The GINS includes a pure Java parser, which parses an LPM to extract the
ServiceType chains from the XML document. The parser lists all ServiceTypes
involved in the LPM and their logical relationships.

Usually, several instances of a given ServiceType and several replicas of a given data
set are available in the system. A Replica and Optimization Service (ROS) was created
to automatically select the optimal service instance and data set replicas. The ROS
integrates the Monitoring and Discovery Service (MDS4) and the RLS of Globus
Toolkit 4. The RLS is tightly coupled with GCS/W to provide data replica management
of registered geospatial data and selection of optimal service instances and data sets.
MDS4 monitors and obtains dynamic information for every node. RLSs are responsible
for managing distributed replicas of registered geospatial data. An ROS identifies all
nodes that provide service instances or/and data sets, then selects that node with optimal
available resources such as CPU, memory, and storage.

After GINS parses the LPM to get all ServiceTypes, it queries the catalog by
submitting each ServiceType as a query condition to GCS/W, to retrieve all available
service instances for each individual ServiceType. Then, ROS is invoked to select the
service instance that provides the best performance in the Grid environment for each

Downloaded by [McMaster University] at 07:39 26 November 2014 594

A. Chen et al.

Table 6. A WSDL example of the grid slope service.

wsdl:definitions targetNamespace= ‘‘http://laits.gmu.edu/GridSlope/service’’
name=‘‘GridSlope’’ . . . . . ..

,wsdl:types.

,xsd:schema, ,, targetNamespace=‘‘http://laits.gmu. edu/GridSlope/service’’.
,xsd:complexType name=‘‘GridDataLinkType’’.
,xsd:element name=‘‘dEM2Slope’’.
,xsd:element name=‘‘dEM2SlopeResponse’’.

,wsdl:message name=‘‘dEM2SlopeOutputMessage’’. . . . ,/wsdl:message.
,wsdl:message name=‘‘dEM2SlopeInputMessage’’. . . . ,/wsdl:message.
,wsdl:portType name=‘‘GridSlopePortType’’.

,wsdl:operation name=‘‘dEM2Slope’’.
,wsdl:input message=‘‘tns:dEM2SlopeInputMessage’’/.
,wsdl:output message=‘‘tns:dEM2SlopeOutputMessage’’/. ,/wsdl:operation.

,wsdl:binding name=‘‘GridSlopePortTypeSOAPBinding’’ type=‘‘tns:GridSlopePortType’’.

,soap:binding style=‘‘rpc’’ transport=‘‘http://schemas.xmlsoap.org/soap/http’’/.
,wsdl:operation name=‘‘dEM2Slope’’.

,soap:operation soapAction=‘‘http://laits.gmu.edu/GridSlope/GridSlopePortType/

dEM2SlopeRequest’’/.
,wsdl:service name=‘‘GridSlopeService’’.

,wsdl:port name=‘‘tns:GridSlopePortTypePort’’
binding=‘‘tns:GridSlopePortTypeSOAPBinding’’.

,soap:address location=‘‘http://laits.gmu.edu:8080/wsrf/services/GridSlope’’/.

ServiceType. The list of ServiceTypes becomes a list of optimal service instances. The
WSDL file of each service instance is also returned. Given the appropriate WSDL file
and the list of logical relationships, the mapping of parameters between any sequentially
connected service instances can be determined. An XML document expressing this
mapping is used to produce the BPEL file of the LPM.

The Grid-enabled Web Coverage Service (GWCS) and Grid-enabled Web Map
Service (GWMS) (Chen et al. 2006a) are always used to process raw geospatial data to
provide data products or intermediate results that meet user query requirements.
Every raw geospatial data item is bound to a GWCS and/or a GWMS. The GWCS/
GWMS is always automatically chained into the concrete workflow to serve raw
geospatial data to those individual service instances that require the data as an input.
Therefore, the selection of the optimal raw data is related to the selection of the
GWCS/GWMS. Because several replicas of the raw data exist in the Grid environ-
ment, it is best to select the raw data at a node where a GWCS/GWMS exists. If
several nodes have both data and GWCS/GWMS, then the ROS is invoked to select
the node with the best performance. If GWCS/GWMS is not available at the node
with the desired raw data, the best node that hosts GWCS/GWMS and the best node
that hosts the desired raw data are selected. Then, GridFTP-based DTS securely
transfers the desired raw data to the best GWCS node, where the raw data are
processed.

6.4 Producing WSDL and BPEL files for concrete workflow

Given the list of available optimal service instances, their WSDL files, and the list of
logical relationships between service instances, GINS produces the BPEL (Curbera
et al., 2006) and WSDL descriptions necessary to execute the concrete workflow.
Tables 7 and 8 provide partial examples of a concrete BPEL workflow and a WSDL

Downloaded by [McMaster University] at 07:39 26 November 2014 Modeling virtual geospatial products

595

Table 7. Part of a concrete BPEL workflow file.

,BPELProcess xmlns=‘‘http://bpel.laits.gmu.edu/bpel/’’.
,process . . . name=‘‘Landslide_2i’’ targetNamespace=‘‘http://bpel.laits.gmu.edu/bpel/lpm’’.

,partnerLinks.

,partnerLink name=‘‘Landslide_2iProvider’’
partnerLinkType=‘‘tns:Landslide_2iPLinkType’’/.

,partnerLink name=‘‘GridWCSServiceProvider’’ . . ./.
,partnerLink name=‘‘GridSlopeAspectServiceProvider’’ . . ../.
,partnerLink name=‘‘GridSlopeServiceProvider’’. . ../.

,variables.

,variable name=‘‘request’’ messageType=‘‘tns:Landslide_2iRequestMessage’’/.
,variable name=‘‘response’’ messageType=‘‘tns:Landslide_2iResponseMessage’’/.

partnerLink=‘‘Landslide_2iProvider’’ portType=‘‘tns:Landslide_2iPortType’’

,sequence name=‘‘main’’.
,receive name=‘‘receive’’

operation=‘‘process’’.
,flow.

,sequence.
,assign.

,copy.,from expression=‘‘string(‘564809.0,4161608.0,587849.0,4192328.0’)’’/.
,to variable=‘‘getCoverageInputMessage_3Request’’ part=‘‘parameters’’ query=‘‘/

ns0:

getCoverage/ns0:bbox’’/. ,/copy.

,copy.,from expression=‘‘string(‘epsg:32610’)’’/. . . . ,/copy.
,copy.,from expression=‘‘string(‘application/HDF-EOS’)’’/. . . .,/copy.

,invoke partnerLink=‘‘GridWCSServiceProvider’’

portType=‘‘ns0:GridWCSPortType’’

operation= ‘‘getCoverage’’ inputVariable=‘‘getCov_3Request’’ outputVariable=‘‘getCov

,reply name=‘‘reply’’ partnerLink=‘‘Landslide_2iProvider’’ portType=‘‘tns:Landslide_

_3Response’’.

2iPortType’’.

Table 8. Part of a WSDL file for a concrete BPEL workflow file.

,wsdl:definitions name=‘‘Landslide_2i’’ targetNamespace=‘‘http://bpel.laits.gmu.edu/bpel/
lpm’’.

,!– import WSDL files for GridWCS, GridLandslide2, GridSlopeAspect, and GridSlope –.
,wsdl:import . . . . . .’’/.
,wsdl:types.

,s:element name=‘‘Landslide_2iRequest’’. . . . ,/s:element.
,s:element name=‘‘Landslide_2iResponse’’. . . . ,/s:element.

,wsdl:message name=‘‘Landslide_2iResponseMessage’’. . . . ,/wsdl:message.
,wsdl:message name=‘‘Landslide_2iRequestMessage’’. . . . ,/wsdl:message.
,wsdl:portType name=‘‘Landslide_2iPortType’’.
,wsdl:operation name=‘‘process’’.

,wsdl:input message=‘‘tns:Landslide_2iRequestMessage’’/.
,wsdl:output message=‘‘tns:Landslide_2iResponseMessage’’/.

,plnk:partnerLinkType name=‘‘GridWCSServicePLinkType’’.
,plnk:portType name=‘‘ns1:GridWCSPortType’’/.

,plnk:partnerLinkType name=‘‘GridSlopeAspectServicePLinkType’’.
,plnk:partnerLinkType name=‘‘GridSlopeServicePLinkType’’.
,plnk:partnerLinkType name=‘‘GridLandslide2ServicePLinkType’’.

Downloaded by [McMaster University] at 07:39 26 November 2014 596

A. Chen et al.

file, respectively, for the landslide susceptibility application, with Slope and aspect as
two inputs.

7. Grid workflow engine and execution of BPEL workflow

BPEL is being used by OGSA and the Web Services Resource Framework to imple-
ment a Grid service workflow (Slomiski 2006). Recently, many Grid workflow
engines have been created, for example, PEGASUS (Deelman et al. 2006), K-
WfGrid (Bubak et al. 2006), Swift (Zhao et al. 2007), Gridbus (Yu and Buyya
2006), Kepler (Ludascher et al. 2005), Taverna (Oinn et al. 2005, Hull et al. 2006),
and SwinDeW-G (Yang et al. 2007). A BPEL-compliant Grid Workflow Engine
Service (GWES), named GridBPELPower, has been designed for executing a concrete
BPEL workflow. Users can get their desired VGPs by using GWES to execute the
concrete BPEL workflow. GridBPELPower consists of the following functional
modules:

(1) Grid WSDL services that provide online operation for deploying, initiating,
testing and running Grid services, and viewing the WSDL of Grid services (see
Figure 6). A Grid service can be deployed by providing its local or online
WSDL file in secure or insecure mode.

(2) A BPEL process that can be deployed using a zip/jar file or two files: *.bpel and
*.wsdl. The file *.bpel includes the concrete workflow represented in BPEL,
and *.wsdl is the WSDL description of the concrete workflow.

Figure 6. GridBPELPower interface, showing some deployed grid services and one service’s
initiating interface.

Downloaded by [McMaster University] at 07:39 26 November 2014 Modeling virtual geospatial products

597

(3)

Instances that provide tools for instances of BPEL processes: testing, debug-
ging, and viewing the source.

(4) Logical Business Process Library (LBPL) activities that provide tools for
viewing LPMs and for debugging each step of a model. A logical model is
deployed through its URL address.

GridBPELPower works in two modes. The first mode is to execute a Grid
services workflow. GridBPELPower can be deployed into any Grid service con-
tainer, such as the Globus container, and securely invoked by any Grid service
using the BPEL and WSDL files. The second mode is as a Grid services container.
Grid services can be deployed into GridBPELPower through their WSDLs. Users
can also deploy concrete BPEL workflows through the BPEL and WSDL files, and
can test, debug, and run workflows, view workflow charts, and view and debug
WSDL files of the Grid services involved. GridBPELPower serves as a Grid
services orchestration and choreography engine in the SOA environment, integrat-
ing Grid services into collaborative and transactional geospatial processes. It
supports different invocations of Grid services, such as the HTTP POST/GET
and SOAP document/rpc (remote procedure call) styles. Both orchestrated Grid
services and Web services can be executed using this engine. It can be run in J2EE-
compliant application servers, for example, Tomcat, JBoss, Sun AS, Oracle AS,
Weblogic, and WebSphere. Figure 6 shows the interface of GridBPELPower as a
Grid service container, with some deployed Grid services and the initial procedure
of one of the Grid services.

8. System architecture, implementation, performance, and application

8.1 System architecture

The system architecture consists of three tiers (Figure 7). The first tier includes a
modeling interface for experts to construct LPMs, and data retrieval and acquisition
interfaces for both experts and general users. The second tier, the OGC Web
Services interface tier, consists of OGC CS/W and WCS/WMS portals. With these
portals, users can transparently access Grid computing resources and Grid-based
geospatial resources. The third tier, the Grid services tier, includes Grid-enabled
OGC Web services, extended Grid services, and Grid geospatial services (Chen et al.
2006b).

Subject matter experts construct abstract processing models using the modeling
interface and register models in the catalog using the GCS/W interface. General
users deploy the CS/W portal to submit requests for geospatial products. A list of
matched geospatial products, both real and virtual, is returned to the user interface.
User selections from the list are sent to the Grid-enabled Virtual WCS/WMS
(GVWCS/WMS) service, which forward the requests to the Intelligent Grid
Service Mediator (iGSM) for real data and to the GINS for virtual products.
GINS parses the LPMs to extract the ServiceTypes, then queries GCS/W and
invokes ROS to obtain the optimal service instances and their WSDL descriptions
for every ServiceType. Finally, GINS produces BPEL and WSDL files and returns
them to GVWCS/WMS. GVWCS/WMS sends both files
to GWES –
GridBPELPower. GWES executes the BPEL workflow by invoking Grid services
instances distributed in the Grid environment to generate products and returns the
URL from which users can get the products.

Downloaded by [McMaster University] at 07:39 26 November 2014 User tier

OGC tier

Grid tier

Other grid 
services

GWICS

598

A. Chen et al.

Modeling interface 

Retrieving interface

Acquiring interface 

CS/W portal 

WCS portal

WMS portal 

GCS/W 

Real data request 

GVWCS/WMS

Virtual data request 

iGSM

GINS 

GWES

Other database

CSISS catalog database for 
ServiceType, DataType 
service instances, datasets, 
virtual geospatial products 

ROS

GWMS

GWCTS

CSISS
GWCS

ARC
GWCS

LLNL 
GWCS

Real geospatial data warehouse from CSISS, LLNL, Ames

GRLS

Index
service

GDTS

GWCS

Globus Toolkit 4.0 with Grid Security Infrastructure (GSI) 

 

  WMS: Web Map Service 

Legends: 
CS/W: Catalog Service for Web 
WCS: Web Coverage Service 
 
 
GVWCS/WMS: Grid-enabled Virtual Web Coverage Service and Web Map Service 
 
iGSM: intelligent Grid Service Mediator    
 
 
ROS: Replica and Optimization Service 
GCS/W: Grid-enabled Catalog Service for Web 
GWCS: Grid-enabled Web Coverage Service 
 
GRLS: Globus Replica Location Service working as Grid service 
IndexServie: Globus Monitoring and Discovery Service working as Grid service   
GDTS: GridFTP-based Data Transfer Service as Grid service 
GWCTS: Grid-enabled Web Coordinate Transfer Service (Muller et al. 2004)
GWICS: Grid-enabled Web Image Classification Service (Yang and Whiteside 2005)
CSISS: Center for Spatial Information Science and Systems at George Mason University 
ARC: NASA Ames Research Center  

GINS: Grid INstantiation Service 
GWES: Grid Workflow Engine Service 
 
GWMS: Grid-enabled Web Map Service 

 

LLNL: Lawrence Livermore National Laboratory 

Figure 7. Architecture of the geospatial grid computing system for VGPs.

8.2 Testbed and system security

The testbed is based on OGSA (Foster et al. 2002). The Virtual Organization (VO)
forms a secure Grid environment for the testbed. The testbed VO consists of the GMU
CSISS, NASA ARC, and LLNL Earth System Grid (ESG). Each partner’s VO has its
own Certificate Authority (CA), issuing host, user, and services certificates for
authorized users. Authentication and authorization between any two VOs and any
two machines in the VO are possible.

Because this Grid project serves as one node of the Committee on Earth
Observation Satellites (CEOS) Grid testbed, any two machines from the CEOS VO
are joined to the testbed VO. Authorized users from the CEOS testbed can access any
Grid resource in the testbed, and users of the testbed can use any resource located at
the CEOS node.

Downloaded by [McMaster University] at 07:39 26 November 2014 Modeling virtual geospatial products

599

8.3 The lifecycle of VGPs

The lifecycle of Grid-enabled virtual geospatial process modeling consists of three
phases:

(1) The knowledge phase – building LPMs by composing geospatial modules into
geospatial processes. The experts’ knowledge is embedded into individual
modules and the logical relationships of composed modules.

(2) The instantiation phase – instantiating LPMs into concrete Grid service chains
from available optimal Grid services instances and data listed in the system
catalog.

(3) The product phase – executing the concrete workflow, geospatial Grid service

chains to generate geospatial products for users.

When users request virtual data, the second and third phases form a new short
lifecycle to serve VGPs. The users thus benefit from the professionals’ knowledge.

8.4 Performance evaluation

The dependence of overall request-response times of a Grid service (secure and non-
secure) and a Web service on the method of invocation, the size of the request, and the
response payload have been compared. One Grid service (GCS/W)-Web service (CS/W)
pair was compared as a function of request and response payload sizes. GCS/W runs in the
Globus container and CS/W runs in an Axis Web service engine deployed in the Tomcat
container. Both services use the same core Java catalog services, database management
system, geospatial data catalog, access protocols, and running environments.

The secure Grid service requires 300 milliseconds more processing time than the
non-secure Grid service and 600 milliseconds more processing time than the Web
service. As payloads increase, these differences in response times converge to a small
number as does the ratio of the overhead to the overall processing times, and
eventually can be ignored. Those performances of the Web service and Grid service
are tested using a single PC. The experiment shows that both kinds of single services
have almost identical performances with increasing payload while they run alone.
However, faced with a global complex geospatial application, the advantages of Grid
services, such as Grid security, finding and selecting optimal data and computing
resources from available huge amount of online resources, stand out. However, our
utilization of grid computing did not focus on the improvement of the system
performance by optimizing the collaboration among components. A systematic
investigation of the performance bottlenecks and their solutions within a Web plat-
form (such as Yang et al. 2005) and geospatial Web services (such as Yang et al. 2007)
would be needed for future improvement of the system.

8.5 Application case and experiment results

As an example, landslide susceptibility will be generated for regions of California
where there are DEM data in HDF-EOS format. Professionals want such geospatial
data products. How can experts utilize the system to reach this goal?

An expert can easily derive landslide susceptibility from the slope and aspect ratio
of the terrain, parameters that can be obtained from the DEM data through the
appropriate Grid services. Using the modeling graphic interface, the expert selects the
Landslide_Susceptibility DataType. An instance of this DataType is the expert

Downloaded by [McMaster University] at 07:39 26 November 2014 600

A. Chen et al.

Figure 8. Landslide susceptibility for one location in California, USA.

the expert knows that

desired data. By querying the system catalog,
the
Landslide_Susceptibility DataType can be produced by either of two ServiceTypes:
the Landslide_Susceptibility_2i ServiceType, which requires two inputs, and the
Landslide_Susceptibility_4i ServiceType, which requires four inputs. The expert
selects the Landslide_Susceptibility_2i ServiceType, which has the required input
DataTypes: Terrain_Slope and Terrain_Aspect. The slope and aspect ServiceTypes
can produce Terrain_Slope and Terrain_Aspect DataTypes, respectively, given the
DEM DataType. The DEM data for the terrain are available in the system in HDF-
EOS format and can be directly served through GWCS. The expert creates the LPM
and registers it in the system catalog for future reuse. Figure 8 shows the virtual data
product produced – the landslide susceptibility of a region in California.

9. Conclusions and future research

This article has introduced an intelligent Grid-enabled approach to implement VGPs.
This approach facilitates domain experts’ extensive use of Earth science knowledge to
produce VGPs for research and applications. An AIM has been proposed to con-
ceptualize and classify geospatial domain ontologies for building up LPMs. A Web
interface was created to facilitate the logical composition of geospatial process
models. All LPMs that are constructed can be registered into a Grid-enabled system
catalog. A BPEL-compliant instantiation Grid service was developed to instantiate
LPMs into Grid service-oriented concrete workflows, as Grid service chains. Finally,
a BPEL-compliant Grid workflow engine was developed to execute concrete work-
flows in Grid environment to produce virtual data products. This approach utilizes

Downloaded by [McMaster University] at 07:39 26 November 2014 Modeling virtual geospatial products

601

the three phases of knowledge, instantiation (by optimizing available information),
and product (in the form of data). Ultimately, a user can apply knowledge derived
from experts with Grid resources to efficiently and rapidly obtain valuable geospatial
products. This new system will facilitate the use of Grid technologies and OGC Web
services for resource sharing and interoperability in geospatial research.

A promising development of an ontology-based collaborative semantic and knowl-
edge Grid (Flahive et al. 2005) has been inspired by intelligent knowledge systems (Di
2005, Oh et al. 2006) based on Web services. Existing geospatial taxonomies can be
used to develop the geospatial domain ontologies (Raskin and Pan 2005, Di et al.
2006). An automatic geospatial inference system will be implemented in the future for
automatic intelligent integration of Grid services, supported by Grid resources and
combined with our current system, geospatial ontologies, and Web service integration
tools. LPMs with knowledge incorporated will be constructed to produce many
VGPs. Visualization and monitoring of execution procedures and behavior of work-
flow chains over the Grid is important (Allcock et al. 2002). Doing so will help find
failure locations, bottlenecks, and other problems.

Acknowledgments
This project was supported by grants from the NASA Earth Science Data and
Information System Project (NCC5-645, PI: Dr. Liping Di), NASA Advanced
Information System Technology program (NAG-13409, PI: Dr. Liping Di), NASA
REASoN program (NNG04GE61A, PI: Dr. Liping Di), and US National
Geospatial-Intelligence Agency NURI program (HM1582-04-1-2021, PI: Dr.
Liping Di). Additional funding was supplied by OGC for developing the OGC Web
Services: WCS, WMS, CS/W. Many thanks are given to our colleague, Dr. Barry
Schlesinger, for his proofreading of the manuscript.

References
ALLCOCK, W., BESTER, J., BRESNAHAN, J., FOSTER, I., GAWOR, J., INSLEY, J.A., LINK, J.M. and PAPKA,
M.E., 2002, GridMapper: a tool for visualizing the behavior of large-scale distributed
systems. In Proceedings of 11th IEEE International Symposium on High Performance
Distributed Computing (HPDC-11 ’02), 23–26 July, Edinburgh, Scotland, UK, 179pp.

AMIN, K., LASZEWSKI, G., HATEGAN, M., ZALUZEC, N., HAMPTON, S. and ROSSI, A., 2004,
GridAnt: a client-controllable grid workflow system. In 37th Hawaii International
Conference on System Sciences, 5–8 January, Big Island, HI, USA, 10pp.

BABIK, M., GATIAL, E., HABAL, O., HLUCHY, L., LACLAVIK, M. and MALISKA, M., 2006, Semantic
grid services in K-Wf grid. In The Second International Conference on Semantics,
Knowledge and Grid, 2006 (SKG ’06), 1–3, 6 November, Guilin, China, 66pp.
BARDEEN, M., GILBERT, E., JORDAN, T., NEPYWODA, P., QUIGG, E., WILDE, M.and ZHAO, Y.,
2005, The QuarkNet/grid collaborative learning e-Lab. In 2nd International Workshop
on Collaborative and Learning Applications of Grid Technology and Grid Education, 9–12
May Cardiff, UK, pp. 27–34.

BARKER, A. and VAN HEMERT, J. 2008, Scientific workflow: a survey and research directions.
Lecture Notes in Computer Science, Vol. 4967, pp. 746–753 (Berlin: Springer Verlag).
BUBAK, M., GUBAALA, T., KAPAALKA, M., MALAWSKI, M. and RYCERZ, K., 2005, Workflow
composer and service registry for grid applications. Future Generation Computer
Systems, 21(1), pp. 79–86.

BUBAK, M., NOWAKOWSKI, P. and UNGER, S., 2006, K-WfGrid – knowledge-based workflow
system for grid applications. In M. Bubak and S. Unger(Eds) , Proceedings of CGW’06,
Vol. II, pp. 1–12, ISBN 978-83-915141-8-4.

Downloaded by [McMaster University] at 07:39 26 November 2014 602

A. Chen et al.

CHEN, A., DI, L., WEI, Y., LIU, Y., BAI, Y., HU, C. and MEHROTRA, P., 2005, Grid computing
enabled geospatial catalogue service. American Society for Photogrammetry and
Remote Sensing (ASPRS) 2005, 7–11 March, Baltimore, MD, USA, CD-ROM,
ISBN 1-57083-076-2.

CHEN, A., DI, L., WEI, Y. and BAI, Y., 2006a. Geospatial grid. In S. Shekhar and H. Xiong
(Eds), The Encyclopedia of Geographic Information Science, 1 Nov 2007, pp. 419–424,
(Berlin: Springer Verlag) ISBN: 038730858X.

CHEN, A., DI, L., WEI, Y. and BAI, Y., 2006b. An optimized grid-based, OGC standards-
compliant collaborative software system for serving NASA geospatial data. In 2nd
IEEE Systems and Software Week (SASW 2006), Loyola College Graduate Center,
25–27 April, Columbia, MD, USA, pp .159–166.

CHERVENAK, A., SCHULER, R., RIPEANU, M., AMER, M. BHARATHI, S. FOSTER, I., IAMNITCHI,
A. and KESSELMAN, C., 2008, The globus replica location service: design and experience.
In IEEE Transactions on Parallel and Distributed Systems, 12 August, IEEE computer
Society Digital Library, available online at: http://doi.ieeecomputersociety.org/
10.1109/TPDS.2008.151.

CURBERA, F., KHALAF, R., NAGY, W.A. and WEERAWARANA, S, 2006, Implementing BPEL4WS:
the architecture of a BPEL4WS implementation. Concurrency and Computation:
Practice & Experience (Workflow in Grid Systems), 18(10), pp. 1219–1228.

CYBOK, D., 2006, A grid workflow infrastructure. Concurrency and Computation: Practice and

Experience (Workflow in Grid System), 18(10), pp. 1243–1254.

DEELMAN, E., BLYTHE, J., GIL, Y., KESSELMAN, C., MEHTA, G., VAHI K., BLACKBURN, K.,
LAZZARINI, A., ARBREE, A., CAVANAUGH, R. and KORANDA, S., 2003, Mapping abstract
complex workflows onto Grid environments. Journal of Grid Computing, 1(1), pp. 9–23.
DEELMAN, E., BLYTHE, J., GIL, Y., KESSELMAN, C., MEHTA, G., PATIL, S., SU, M., VAHI K. and
LIVNY, M., 2006, Pegasus: mapping scientific workflows onto the grid. Lecture Notes in
Computer Science, Vol. 3165/2004, pp. 11–20.

DE LA BEAUJARDIE` RE, J., 2001, Web map service implementation specification, (OGC 01-047r2),

version 1.1.0. Open Geospatial Consortium Inc., 21 June, pp. 21–41.

DI, L., 2005, A framework for developing web service-based intelligent geospatial knowledge

systems. Journal of Geographic Information Sciences, 11(1), pp. 24–28.

DI, L., CHEN, A., BAI, Y. and WEI, Y., 2006, Implementation of geospatial product virtualiza-
tion in grid environment. In The Sixth Annual Earth Science Technology Conference –
ESTC2006, NASA’s Earth Science Technology Office (ESTO), 27–29 June, College
Park, MD, USA, CD-ROM, ISBN: 0-9785223-1-1.

DI, L., CHEN, A., YANG, W., LIU, Y, WEI, Y., MEHROTRA, P., HU, C. and WILLIAMS, D., 2005,
The development of a geospatial data Grid by integrating OGC Web services with
Globus-based Grid technology. GridWorldTM/GGF15, 3–6 October, Boston, MA,
USA.

DI, L., CHEN, A., YANG, W. and ZHAO, P., 2003, The integration of Grid technology with OGC
web services (OWS) in NWGISS for NASA EOS data. In Proceedings of Workshop on
Grid Applications and Programming Tools Held in Conjunction with GGF8, 24–27 June,
Seattle, USA, pp. 63–72.

DI, L., CHEN, A., YANG, W., LIU, Y., WIE, Y., MEHROTRA, P., HU, C. and WILLIAMS, D., 2008,
The development of a geospatial data Grid by integrating OGC Web services with
Globus-based Grid technology. Concurrency and Computation: Practice and
Experience, 20(14), pp. 1617–1635.

DI, L. and MCDONALD, K., 1999, Next generation data and information systems for Earth
sciences research. Proceedings of the first international symposium on digital earth, , vol.
I., pp. 569–577 (Beijing, China: Science Press).

ESRI, 2008, Model Builder: ArcGIS 9.2 desktop help: an overview of model concepts and
terms, available online at: http://webhelp.esri.com/arcgisdesktop/9.2/index.cfm?
TopicName=An_overview_of_model_concepts_and_terms, (retrieved in July 2007).

Downloaded by [McMaster University] at 07:39 26 November 2014 Modeling virtual geospatial products

603

EVANS, J.(Ed.), 2003, Web coverage service (WCS), (OGC 03-065r6), version 1.0.0. Open

Geospatial Consortium Inc., 27 August, pp. 11–36.

FGDC, 2002, Content standard for digital geospatial metadata: extensions for remote sensing
metadata. Federal Geographic Data Committee, Standard Working Group, 2002. pp.
67–128.

FLAHIVE, A., RAHAYU, W., TANIAR, D. and APDUHAN, B., 2005, A distributed ontology frame-
work in the semantic grid environment. In 19th International Conference on Advanced
Information Networking and Applications (AINA’05). Vol. 2, 28–30 March. Tamkang
University, Taiwan, pp. 193–196.

FOSTER, I., KESSELMAN, C. and TUECKE, S., 2001, The anatomy of the grid – enabling scalable
International Journal of High Performance Computing

virtual organizations.
Applications, 15(3), pp. 200–222.

FOSTER, I., VOECKLERL, J., VILDE, M. and ZHAO, Y., 2002, Chimera: a virtual data system for
representing, querying, and automating data derivation. International Conference on
Scientific and Statistical Database Management, July 2002, Edinburgh, UK, 37–46.

FRIIS-CHRISTENSEN, A., LUCCHI, R., LUTZ, M. and OSTLANDER, N., 2009, Service chaining
architectures for implementing distributed geoprocessing applications. International
Journal of Geographic Information Science, 23(5), pp. 561–580.

FUSCO, L., GUIDETTI, V. and VAN BEMMELEN, J., 2005, e-Collaboration and grid-on-demand

computing for earth science at ESA. ERCIM News, 61, pp. 12–13.

GILLES, M. (Ed.), 2006, OGC(cid:2) catalogue services specification 2.0.0 (with corrigendum) EO
application profile for CSW 2.0, (OGC(cid:2) 06-079) version 0.1.4. Open Geospatial
Consortium, Inc. 6 June, pp. 12–23.

HU, S. and BIAN, L., 2009, Interoperability of functions in environmental models – a case study in
hydrological modeling. International Journal of Geographic Information Science, in press.
HULL, D., WOLSTENCROFT, K., STEVENS, R., GOBLE, C., POCOCK, M.R., LI, P. and OINN, T., 2006,
Taverna: a tool for building and running workflows of services. Nucleic Acids Research,
1 July, 34(Web Server issue), pp. 729–732.

ISO/TC211, 2002a, Geographic information – metadata, ISO 19115:2003, International
Standards Organization (ISO) Technical Committee 211, ISO TC211/WG3, 17
December, pp. 18–32.

ISO/TC211, 2002b, ISO draft: Geographic information – metadata – part 2: extensions for
imagery and gridded data, ISO/WD 19115-2.2. International Standards Organization
(ISO) Technical Committee 211, pp.19–34.

ISO/TC211, 2002c, Geographic information – services, draft international standard ISO/DIS
19119. International Standards Organization (ISO) Technical Committee 211, pp. 4–40.
LUDASCHER, B., ALTINTAS, I., BERKLEY, C., HIGGINS, D., JAEGER, E., JONES, M., LEE, E., TAO, J.
and ZHAO, Y, 2005, Scientific workflow management and the Kepler system. Special
Issue: Workflow in grid systems In G.C. Fox and D. Gannon, (Eds), Concurrency and
Computation: Practice and Experience, 18(10), pp. 1039–1065.

LUTZ, M. and KLEIN, E., 2006, Ontology-based retrieval of geographic information.
International Journal of Geographical Information Science, 20(3), pp. 233–260.
MU¨ LLER, M.U., WARMERDAM, F., WHITESIDE, A. and FELLAH, S., 2004, OpenGIS(cid:2) web coordi-
nate transformation service (WCTS) implementation specification. Version: 0.1.9.
OGC 04-0XX. Open Geospatial Consortium, Inc., pp. 112–118.

NASA, 1994, Proposed ECS core metadata standard release 2.0. Hughes Applied Information

Systems, 1994, 420-TP-001-005: Landover, Maryland, pp. 12–20.

NEAL, P., DAVIDSON, J. and Westcott, B. (Eds), 2006, OpenGIS(cid:2) catalogue service implementa-
tion specification 2.0.1 – FGDC CSDGM application profile for CSW 2.0. (OGC(cid:2) 06-
129r1), version 0.0.12. Open Geospatial Consortium, Inc. 18 October, pp. 19–47.
NEBERT, D. and WHITESIDE, A. (Ed.), 2005, OGC(cid:2) catalogue services specification, (OGC(cid:2) 04-
021r3), version 2.0.0 with corrigendum. Open Geospatial Consortium, Inc. 20 May, pp.
8–42, 110–151.

Downloaded by [McMaster University] at 07:39 26 November 2014 604

A. Chen et al.

OASIS, 2002, OASIS/ebXML registry information model v2.0. OASIS/ebXML Registry

Technical Committee, pp. 11–27.

OH, S.C., LEE, D. and KUMARA, S.R.T., 2006, A comparative illustration of AI planning-based

web services composition. ACM SIGecom Exchanges, 5(5), 1–10.

OINN, T., GREENWOOD, M., ADDIS, M., ALPDEMIR, M.N., FERRIS, J., et al., 2005, Taverna:
lessons in creating a workflow environment for the life sciences. Concurrency and
Computation: Practice and Experience, 18(10), pp. 1067–1100.

PRIMAVERA, R. (Ed.), 2006, OGC(cid:2) catalogue services specification 2.0.0 (with Corrigendum) EO
products extension package for ebRIM (ISO/TS 15000-3) profile of CSW 2.0 (OGC(cid:2) 06-
131), version 0.0.3. Open Geospatial Consortium, Inc., 18 August 2006, pp. 8–38.
RASKIN, R. and PAN, M.J., 2005, Knowledge representation in the semantic web for Earth and
environmental terminology (SWEET). Computers & Geosciences, 31(9), pp. 1119–1125.
SLOMISKI, A., 2006, On using BPEL extensibility to implement OGSI and WSRF grid work-
flows. Concurrency and Computation: Practice & Experience (Workflow in Grid
Systems), 18(10), pp. 1229–1241.

TER LINDEN, M., DE WOLF, H. and GRIM, R., 2005, GridAssist – a user friendly grid-based
workflow management tool. International conference workshops on parallel processing,
ICPP 2005, 14(17), pp. 5–10.

VOGES, U. and SENKLE, K. (Eds), 2005, OpenGIS(cid:2) catalogue services specification 2.0 –
ISO19115/ISO19119 application profile for CSW 2.0 (OGC(cid:2) 04-038r2), version
0.9.3. Open Geospatial Consortium, Inc., 27 April, pp. 22–75.

VRETANOS, P., 2002, Web feature service implementation specification (OGC(cid:2) 02-058), version

1.0.0. Open Geospatial Consortium, Inc., 19 September, pp. 11–33.

WANG, S. and LIU, Y., 2009, TeraGrid GIScience gateway: bridging cyberinfrastructure and
GIScience. International Journal of Geographic Information Science, in press.
YAN, J., YANG, Y. and RAIKUNDALIA, G.K., 2006, SwinDeW-a p2p-based decentralized work-
flow management system. IEEE Transactions on Systems, Man and Cybernetics, Part A:
Systems and Humans, 36(5), pp. 922–935.

YANG, C., CAO, Y. and EVANS, J., 2007, WMS performance and client design principles. The

Journal of GeoInformation Science and Remote Sensing, 44(4), pp. 320–333.

YANG, W. and WHITESIDE, A., 2005, Web image classification service (WICS) implementation
specification (OGC(cid:2)-05-017), version 0.3.3. Open Geospatial Consortium Inc., 8
February, pp. 15–32.

YANG, Y., LIU, K., CHEN, J., LIGNIER, J. and JIN, H., 2007, Peer-to-peer based grid workflow
runtime environment of SwinDeW-G. In IEEE International Conference on e-Science
and Grid Computing, 10–13 December, Bangalore, India, pp. 51–58.

YANG, C., WONG, D., YANG, R. and KAFATOS, M., LI, Q., 2005, Performance improving
techniques in WebGIS. International Journal of Geographical Information Science,
19(3), pp. 319–342.

YU, J. and BUYYA, R., 2006, A taxonomy of workflow management systems for grid computing.

Journal of Grid Computing, 3(3–4), pp. 171–200.

ZHANG, T. and TSOU, M.H., 2009, Developing a grid-enabled spatial web portal for internet
GIServices and geospatial cyberinfrastructure. International Journal of Geographic
Information Science, in press.

ZHAO, Y., HATEGAN, M., CLIFFORD, B., FOSTER, I., VON LASZEWSKI, G., RAICU, I., STEF-PRAUN,
T. and WILDE, M., 2007, Swift: fast, reliable, loosely coupled parallel computation. In
2007 IEEE Congress on Services, 9–13 July, pp. 199–206.

ZHAO, Y., WILDE, M., FOSTER, I., VOECKLERL, J., DOBSON, J., GLIBERT, E., JORDAN, T. and
QUIGG, E., 2006, Virtual data grid middleware services for data-intensive science.
Concurrency and Computation: Practice and Experience, 18(6), pp. 595–608.
ZHUGE, H., 2004, The Knowledge Grid, pp. 12–27 (Singapore: World Scientific Publishing Co.).
ZHUGE, H., 2006, Autonomous semantic link networking model for the knowledge Grid.
Concurrency and Computation: Practice and Experience, 19(7), pp. 1065–1085.

Downloaded by [McMaster University] at 07:39 26 November 2014 