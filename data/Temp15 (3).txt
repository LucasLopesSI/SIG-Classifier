G   E   O   M   A   T   I   C   A

                                       MR-V: LINE SIMPLIFICATION THROUGH 
                   MNEMONIC RASTERIZATION

                                                  Emmanuel Stefanakis
                                                  Department of Geodesy and Geomatics Engineering
                                                  University of New Brunswick, Canada
                                                  

Linear  features  (e.g.,  roads,  rivers),  outlines  of  areas  (e.g.,  municipal  boundaries,  lake  banks)  or
mov ing objects’ trajectories (e.g., humans, vehicles) are represented on paper or digital maps with polyline
geometries. Sampling, discretization and generalization processes result in polylines represented by a subset
of vertices of the original line. The simplified version of a linear feature may violate some spatial relations
(topological, direction or distance) that apply between the original line and some other objects in space,
unless  a  model  that  considers  the  context  of  the  neighbouring  space  is  applied.  The  latter  turns  the  line
sim plification  into  a  rather  complicated  and  challenging-to-automate  process.  This  paper  introduces  a
method that supports a consistent line simplification without considering the context of the neighbouring
space.  The  method  applies  well-known  geo-processing  tasks,  such  as  polyline-to-raster  and  raster-to-
poly l ine conversions, and is compliant with the raster tiled maps as well as the discrete global grid systems.

Les  entités  linéaires  (p.  ex.,  les  routes,  les  rivières),  les  pourtours  de  surfaces  (p.  ex.,  les  limites
munic i pales, les rives des lacs) ou les trajectoires d’objets en mouvement (p. ex., les humains, les véhicules)
sont représentés sur des cartes papier ou numériques avec des géométries de type polyligne. Les processus
d’échantillonnage, de discrétisation et de généralisation donnent lieu à des polylignes représentées par un
sous-ensemble de sommets de la ligne originale. La version simplifiée d’une entité linéaire peut enfreindre
certaines relations spatiales (topologie, direction ou distance) qui s’appliquent entre la ligne originale et
certains  autres  objets  dans  l’espace,  à  moins  qu’un  modèle  qui  tient  compte  du  contexte  de  l’espace
avoisi nant  ne  soit  appliqué.  Ce  dernier  transforme  la  simplification  de  la  ligne  en  un  processus  plutôt
com plexe et difficile à automatiser. Cet article présente une méthode qui appuie une simplification uniforme
de la ligne sans tenir compte du contexte de son espace avoisinant. La méthode applique des tâches bien
connues de géotraitement, par exemple la conversion de polylignes en données matricielles et de données
matricielles en polylignes, et elle est conforme aux cartes des tuiles matricielles de même qu’aux systèmes
mondiaux de quadrillage discrets.

1. Introduction

A  map  or  visualization  of  the  earth’s  surface
represents  geographic  features  at  a  smaller  scale.
Hence, the information it contains must be restrict ed
to what can be presented graphically at map scale
and  fit  in  the  map  medium.  This  adjustment
process  is  called  generalization [Keates 1989].
One fundamental generalization process in cartog-
raphy  is  simplification,  which  applies  to  linear
fea tures (e.g., roads, rivers), outlines of areas (e.g.,
municipal  boundaries,  lake  banks),  or  moving
objects’  tra jectories  (e.g.,  humans,  vehicles).
Simplification  of  a  line  involves  removal  of  high
density  vertices,  based  on  a  given  criterion  (e.g.,
minimize  line  distortion  by  controlling  the  offset
of 
the  original
[Douglas-Peucker 1973]), to reduce complexity or
redundancy in a dataset.

the  generalized 

line  from 

The reduction technique is simple, but obtaining
a consistent or meaningful output is a complicated
problem. The issues of consistent simplification arise
from the fact that real world geometric properties are
often  constrained  by  neighbouring  objects  within  a
given  space.  Simplification  of  geometric  properties
without  context  may  change  the  meaning  of  such
properties  (semantic  representation).  The  problem
has been investigated in the past and var i ous methods
that consider the contextual information of the neigh-
bouring  space  have  been  proposed,  implemented
and tested [Tienaah et al. 2015]. 

On the other hand, with the wide-spread use of
earth browsers (e.g., Google Maps, Bing Maps, and
OpenStreeMap),  background  maps  are  mainly
delivered through raster tiles at various zoom levels
(resolutions)  [Stefanakis 2015b].  Linear  features

Emmanuel
Stefanakis
estef@unb.ca

                                                                                              dx.doi.org/10.5623/cig2016-401

GEOMATICA  Vol. 70, No. 4, 2016, pp. 269 to 282

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

such as roads, rivers or sea vessel trajectories, can be
disseminated in vector or raster format. In either case,
these  features  must  match  the  background  maps  at
any zoom level without spatial inconsistencies. 

This  paper  introduces  a  new  method  to  line
simplification  that  applies  a  mnemonic  rasteriza-
tion (mR)  followed  by  a  vectorization (V).  This
method, named mR-V, can prevent spatial inconsis-
tencies with neighbouring objects in the embedded
space  without  considering  these  objects  in  the
sim plification  process.  In  addition,  the  method
applies  simple  geo-processing  conversion  algo-
rithms and is compliant with the representation of
the  earth’s  surface  through  raster  tiles  at  multiple
resolutions. The method has been implemented and
tested  over  a  series  of  synthetic  and  real  linear
fea tures  at  fine  and  coarse  resolutions.  Various
tes sellations  of  the  geographic  space,  including
dis crete geographic grid systems (DGGS) [Sahr et
al. 2003; Stefanakis 2016] have also been consid-
ered.  The  method  has  been  compared  with
Douglas-Peucker  algorithm  at  various  resolutions
and the results of the comparison clearly show the
potential of the proposed method.

The  content  of  this  paper  is  organized  as
fol lows.  Section  2  provides  some  background
information  regarding  line  simplification  and  the
spatial  inconsistencies  that  may  arise  when  neigh-
bouring objects in space are ignored. Section 3 intro-
duces the new method. Section 4 presents the results
of experiments carried out to validate and evaluate
the  new  method.  Finally,  Section  5  concludes  the
discussion  by  summarizing  the  new  method  and
highlighting open topics for future research. 

2. Background

Simplification of linear features is a fundamental
process  in  map  generalization  that  has  long  been
investigated  by  cartographers  [Cromley 1991;  Li
and  Openshaw 1992;  Weibel 1997;  van  der
Poorten  and  Jones 2002;  Robinson  et  al. 2005].
Various techniques have been proposed to support
this process in traditional paper maps as well as in
digital  maps,  multi-resolution,  historical  and
streaming  databases  [Jones 1997;  Peuquet 2002;
Giannotti and Pedreschi 2008; Abam et al. 2010].
Douglas-Peucker  algorithm [1973]  is  one  of  the
most popular techniques in line simplification. The
algorithm was extended to also consider the tempo-
ral dimension for lines representing trajectories of
moving  objects  [Meratnia  and  de  By 2004;
Potamias et al. 2006]. 

According to Weibel [1996], line simplification
must satisfy the shape, semantic, metric and topolog-
ical constraints of the original line. There have been a
series  of  attempts  to  meet  those  constraints,  while
according to Kulik et al. [2005], there is no generaliza-
tion  algorithm  that  can  satisfy  them  all.  Kulik  et  al.
[2005] also introduced DMin algorithm that comprises
both  a  geometric  and  a  semantic  component  and
applies a weighting function to offer the adaptability
to particular users and users’ tasks. More recently, in
mobility  data  modelling,  the  problem  of  annotating
trajectories with semantic data has been investigated
[Yan  et  al. 2011;  Alvares  et  al. 2007;  Richter  et  al.
2012;  Stefanakis 2015]  in  an  attempt  to  enrich  the
content of line features and achieve their compression.
A common example of inconsistencies that may
arise  through  line  simplification  is  the  violation  of
spatial relations of the original line with other objects
in  neighbouring  space.  A  spatial  relation  specifies
how an object is located in space in relation to some
other reference object. The spatial relations between
geographic  entities  are  various  and  their  interpreta-
tion  is  highly  dependent  on  the  application  domain
[Longley et al. 2011]. Three categories of spatial rela-
tions  are  usually  considered  in  geographic  domains
[Egenhofer  and  Franzosa 1991;  Papadias  et  al.
1997]: (a) direction, (b) distance and (c) topological.   

Figure  1  shows  a  few  example  linear  features
representing sea vessel trajectories. The simplification
of a trajectory (solid line) may result in a simplified
trajectory  (dashed  line)  that  violates  the  topological
direction,  or  distance  relations  between  the  source
trajectory and some other objects (e.g., an island) in
space. Specifically, a topological inconsistency occurs
in Figure 1b as the simplified trajectory intersects an
island in the neighbouring space. A direction relation is
violated  in  Figure  1c  when  the  simplified  trajectory
passes  by  the  opposite  (eastern)  side  of  the  island.
Finally, a distance relation inconsistency happens in
Figure  1d when  the  simplified  trajectory  approaches
too closely to the coastline of the island.  

The  problem  of  contextual  line  simplification
has been examined in the past by numerous schol-
ars [de Berg et al. 1998; Saalfeld 1999; Bertolotto
and  Zhou 2007;  Daneshpajouh  and  Ghodsi  2011;
Stefanakis  2012;  Tienaah  et  al. 2015].  Extensions
of conventional line simplification algorithms, such
as  Douglas-Peucker  algorithm,  that  considers  the
contextual  information  of  the  neighbouring  space,
can prevent spatial inconsistencies during the sim-
plification  process.  However,  these  solutions  are
usually very complicated, difficult to automate, and
cannot always guarantee the optimum simplification
for a linear feature. 

270

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

3. mR-V Line Simplification
Method

mR-V line  simplification  method  consists  of
three phases: (1) mnemonic rasterization; (2) vec-
torization of  the  mnemonic  raster  image,  and
(3) refinement of the simplified polyline. Mnemonic
rasterization occurs by inputting the original linear
feature  and  producing  an  enhanced  raster  image,
named  mnemonic  raster  image.  The  latter  is  then
vectorized  to  produce  a  simplified  version  (poly-
line) of the original linear feature. Finally, the sim-
plified  polyline  is  refined  to  get  rid  of  redundant
vertices or take a more natural form. The following
sections describe the three phases in more detail. 

3.1 Mnemonic Rasterization

Rasterization is  the  process  of  converting
vec tor graphics into a raster image [Robinson et al.
1995]. Through rasterization a linear feature is con-
verted  into  a  set  of  pixels.  Vectorization is  the
reverse process that creates vector graphics from a
raster  image.  Both  processes  have  been  widely
in  cartography  and  spatial  analysis.
used 
Commercial  and  open  source  software  packages
provide the functionality to convert a linear feature
into a raster image and vice versa. 

The polyline to raster conversion (rasterization)
is a straightforward process. A raster grid of a pre-
defined resolution (chosen according to the quality
specifications of the output image) is superimposed
on  the  vector  description  (Figure  2a).  All  picture
elements  (pixels)  intersected  by  the  polyline  are
turned  into  grey  or  assigned  a  value  representing
the  presence  of  the  linear  feature,  e.g.,  1  versus  0
for  no  presence  (Figure  2b).  Those  grey  pixels
define the polyline’s envelope. 

(a)

   

(b)

(c)

(d)

Figure 1: (a) Sea vessels moving between islands (a snapshot from
MarineTraffic [2016] AIS in the Aegean Sea). (b) The source (original in solid
line) and (c, d) tar get (simplified in dashed line) trajectories of a vessel against
an island (polygon).

(a)

(b)

Figure 2: Polyline to raster conversion: (a) example rasterization of a linear feature; (b) all pixels crossed by the linear feature are turned
into grey; these pixels define the envelope of the polyline. (Result generated using GIS software.) 

271

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

The raster to polyline conversion (vectorization)
is a much more complicated process where pixels
depicting the presence of a linear feature (Figure 3a)
are  converted  to  a  series  of  polyline  vertices
con nected by edges (Figure 3b). 

The vectorization of a raster image that represents
a linear feature of high sinuosity at a low resolution
is  ambiguous  or  even  impossible.  As  shown  in
Figure  2a,  the  linear  feature  has  a  low  sinuosity
along  the  left  half,  which  increases  significantly
along the right half. The raster representation of the
linear feature with high sinuosity consists of multiple
adjacent pixels that form a polygonal area (Figure
2b and Figure 3a). A raster to polyline conversion
of  these  pixels  is  impossible,  unless  some  insight
regarding  the  geometry  of  the  original  linear
fea ture is given. 

Provided  that  the  raster  to  polyline  conversion
(vectorization)  in  this  study  is  applied  on  top  of  a
raster  generated  by  a  polyline  to  raster  conversion
(rasterization)  of  a  known  (the  original)  linear  fea-
ture, a mnemonic rasterization can offer the required
insight to support an efficient vectorization. 

Mnemonic  rasterization of  a  linear  feature  is
an  enhanced  rasterization  process  that  generates  a
raster image representing the feature through a col-
lection of grey pixels. The add-on is that each pixel
is assigned a linked list of index values that repre-
sent the order in which the pixel was visited while
tracing the original line from the start vertex to the
end  vertex.  The  outcome  of  the  process  is  a
mnemonic  raster  image.  Figure  4 shows  the  out-
come of a mnemonic rasterization for two example
linear features. 

3.2 Vectorization of a Mnemonic
Raster Image

the 

The  raster  to  polyline  conversion  of  a
mnemonic  raster  image  results  in  a  polyline  with
minimal ambiguities. Figure 5 lists the pseudo code
said  conversion  algorithm  named
of 
RasterToPolyline(raster image, point S, point E, int
s, int e). The polyline starts from vertex S and ends
at vertex E of the original line (the centroids of the
corresponding pixels could be chosen alternatively).
The  pixels  of  the  mnemonic  raster  are  visited
fol low ing the sequence of the index values gener-
at ed  by  the  mnemonic  rasterization.  Function
FindPixel(raster image, int k) is used to find the
next  pixel  in  each  step  of  the  algorithm.  This
function  searches  the  linked  lists  attached  to
image  pixels  and  reports  the  pixel  labelled  with
index value k.  

(a)

(b)

Figure 3: Raster to polyline conversion. Example vectorization of
a raster image to a polyline. (a) Grey pixels represent the
pres ence of a linear feature. (b) These pixels are connected with
edges to form the polyline. High sinuosity of the linear feature
(along the right half in Figure 2a) creates a high density of pixels
in the raster image and turns the vectorization inefficient. (Result
gen er ated using GIS software.) 

(a)

(b)

Figure 4: Example mnemonic rasterization of two linear features.
The numbers in the shaded pixels represent the index values.
S and E are the start and end ver tices of the linear feature, and
are assigned the index values s and e, respectively. 

272

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

array_of_points RasterToPolyline(raster image, point S, point E, int s, int e)
{

// pixel index value from mnemonic rasterization

int k; 

array_of_points polyLine = null;

point vertexCurr;

pixel pixelCurr; pixelNext;

vertexCurr := S;

AddVextex(polyLine, vertexCurr);

pixelCurr := FindPixel(image, s);

k := 1;

while (k < e) do {

// initialize simplified polyline 

// current vertex

// current and next pixels of the raster image

// current vertex is assigned start vertex S

// start vertex is added to polyline

// current pixel is assigned the start vertex pixel

// k is assigned the value 1

// loop while k < the index value of end vertex (e)

pixelNext := FindPixel(image, k);  

vertexCurr := ComputeVertex(pixelCurr, pixelNext);

AddVextex(polyLine, vertexCurr);

pixelCurr := pixelNext;

// find pixel with index value k

// compute next vertex

// add next vertex into polyline

// assign next pixel to current pixel

// augment index value by 1 

k := k+1;

} 

vertexCurr := E;

AddVextex(polyLine, vertexCurr);

return polyline;

}

// last pixel; assign end point E to current vertex

// add end point into polyline

// return simplified polyline

Figure 5: Mnemonic raster image to polyline conversion algorithm. 

Function  ComputeVertex(pixel  pixelFrom,
pixel  pixelTo)  is  the  one  that  generates  all
inter me diate  ver tices  of  the  simplified  line.  This
function applies one of two alternative vectorization
methods: (a) pixel centroid, or (b) pixel edge method.
These methods are described next.

Given  two  pixels  in  a  mnemonic  raster  image
with consecutive index values, e.g., k and k+1, and
labels pixelFrom and pixelTo, these pixels can share
either  an  edge  or  a  vertex.  In  other  words,  the  two
pixels  can  be  either  direct  or  indi rect  neighbours
(Figure 6a). 

(a)

(b)

(c)

Figure 6: Direct and indirect neighbors of a pixel in the (a) rectangular, (b) triangular and (c) hexagonal grid. 

273

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

(a)

(b)

Figure 7: Vectorization methods—(a) pixel centroid and (b) pixel edge. 

Figure 8: Example vec tor-
ization of the mnemonic
raster files in Figure 4.
Vertices with labels d1, d2,
d3, and d4 are double as
the corresponding pix els
(for d1,d2) or edges (for
d3,d4) were intersected by
the original line twice. 

274

(a)

(b)

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

(a)

(c)

(b)

(d)

Figure 9: mR-V method example for the simplification of (a) line in Figure 2; vectorization using (b) pixel centroid, and (c) pixel edge
alternative; (d) the result of Douglas-Peucker algorithm with a threshold equal to the image resolution (pixel size). 

In pixel centroid method, the vertex representing
pixelTo is always its centroid (Figure 7a). On the
other hand, in pixel edge method pixelTo is repre-
sented  by  a  vertex  that  is  either  the  midpoint  of
the common edge with pixelFrom (when the two
are  direct  neighbours)  or  the  common  vertex
(when  the  two  are  indirect  neighbours)  (Figure
7b).  The  pixel  centroid  method  is  similar  to  the
raster  mode  method  proposed  by  Li  and
Openshaw [1992].

Figure 8 provides two simplified examples of
vectorization  of  the  mnemonic  raster  images  in
Figure 4.  The  raster  to  polyline  conversion  is
shown  using  both  methods:  pixel  centroid  (top)
and pixel edge (bottom). Notice that some vertices

may  be  double  as  the  corresponding  pixels  were
assigned multiple index values.

Figure 9  shows  the  result  of  mR-V  method  in
the simplification of line in Figure 2. mR-V method
is highly capable of handling the part of the line with
high  sinuosity,  because  of  the  mnemonic  rasteriza-
tion.  In  addition,  the  vectorization  that  applies  the
pixel edge alternative (Figure 9b) gives a result that
is better than that given by the pixel centroid method
(Figure 9c). The reason for this is that the pixel edge
method  can  separate  the  vertices  created  when  the
same  pixel  (pixelTo)  is  reached  by  two  different
direct  or  indirect  neighbour  pixels  (pixelFrom)
(Figure 10a). On the other hand, the pixel centroid
method fails to do so (Figure 10b). 

(a)

(b)

Figure 10: The same pixel (pixelTo) was reached by two different neighbor pixels. (a) Pixel centroid method results in the same vertex.
(b) Pixel edge method creates two distinct vertices.  

275

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

3.3 Refinement of the Simplified
Polyline

A polyline produced by the vectorization of a
mnemonic  raster  image  can  be  further  refined  so
that  redundant  vertices  are  removed.  In  addition,
appropriate transformations can be applied to give
the simplified polyline a smoother form. 

The simplified polyline may include triplets of
collinear  vertices. As  shown  in  Figure 8  several
triplets of vertices are collinear and can be eliminated
without  affecting  the  geometry  of  the  polyline. An

algorithm  to  complete  this  task  is  to  trace  the
poly line starting from S and consider all consecutive
triplets of vertices. If it happens that three consecu-
tive vertices define a line segment with the second
vertex  lying  in  between  the  other  two,  this  vertex
will be removed from the polyline. Figure 11 shows
example refinement of the polylines pro duced by the
mR-V simplification in Figure 8.

The simplified polyline produced by the mR-V
simplification may also include double vertices. As
shown in Figure 11b (also explained in Figure 8b),
before the elimination of collinear vertices, vertices

(a)

(b)

Figure 11: Refinement of the polylines in Figure 8 to eliminate collinear vertices. 

276

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

d1,  d2,  d3,  and  d4  are  double  vertices.  In  the
refine ment process to eliminate collinear vertices,
vertex  d1  will  turn  to  a  single  vertex,  while
ver tices  d2,  d3,  and  d4  will  remain  double.  In  a
subsequent  process,  some  of  the  double  vertices
may be simplified into single ones. This can hap-
pen only to the ones generated by pixels (pixelTo)
with consecutive index values. Hence, vertices d3
and d4 can turn into sin gle vertices, while vertex
d2 must remain double.  

Both  pixel  centroid  and  pixel  edge  methods
may  produce  spike edges  along  the  polyline.  A
spike edge occurs when two consecutive edges of
the polyline happen to coincide. The start vertex of
the first segment coincides with the end vertex of
the  second  and  vice  versa.  Spike  edges  may  also
occur  when  Douglas-Peucker  algorithm  is  per-
formed  (Figure 16a).  Spike  edges  may  be  fixed
manually  or  automatically  by  separating  the  com-
mon  vertices. The  separation  can  be  implemented
by a shift within the range of a pixel. An example
is given in Figure 12. 

The  result  of  mR-V  simplification  can  be
fur ther simplified to eliminate any zig-sag pattern
that is not visible at a given resolution. Before this
process  is  described,  the  notion  of  pi  pattern and
hat pattern are introduced.

Given  a  sequence  of  N  vertices  (with  N > 3)
generated by the pixel centroid method, a pi pattern
is defined when the two end vertices lie in pixels on
the same row or column and the rest of the vertices
lie  in  pixels  in  the  same  adjacent  row  or  column,
respectively.  Figure 13a  shows  some  example  pi
patterns in the pixel centroid method. 

Given  a  sequence  of  N  vertices  (with  N > 2)
generated by the pixel edge method, a hat pattern is
defined when the two end vertices lie on the same
edge line of a raster grid row or column and the rest
of  the  vertices  lie  within  a  half  pixel  distance  on
one  side  of  that  edge.  Figure 13c  shows  some
example hat patterns in the pixel edge method.

Pi  and  hat  patterns  can  be  eliminated  and
replaced  by  straight  line  edges.  Figures  13b, d
show how the pi and hat patterns in Figure 13a, c
can be eliminated. As the grid resolution is related
to the visual acuity, the shift that this simplifica-
tion introduces is smaller than the grid resolution
and hence non visible or insignificant. The elimi-
nation  of  pi  and  hat  patterns  usually  results  in
polylines with collinear vertices. The elimination
of  these  vertices  can  follow  by  applying  the
refinement process described in the beginning of
this section.  

The elimination of pi and hat patterns may also
cause  additional  spike  edges  or  even  eliminate

(a)

(b)

Figure 12: Example refinement of spike edges in (a) pixel centroid and (b)
pixel edge method. Dashed line represents the original linear feature and
solid line represents the simplified polyline. White vertex on the left is
sep a rated into two on the right. 

(a)

(c)

(b)

(d)

Figure 13: Examples of (a) pi and (c) hat patterns in pixel centroid and
pixel edge method, respectively. Elimination of (b) pi and (d) hat patterns
and replacement with straight edges. 

277

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

(a)

(b)

Figure 14: Example elimination of (a) pi and (b) hat patterns in pixel centroid and pixel edge method,
respectively. The elimination leads to a more consistent result. 

them  (see  Figure 15d  versus  15g).  On  the  other
hand, the elimination of those patterns may offer a
more  consistent  simplification  in  some  cases. As
shown  in  Figure 14,  the  same  linear  feature  may
have  a  different  topological  relation  with  the
raster  grid. As  a  result,  the  shape  of  the  polyline
produced  by  mR-V  simplification  differs  signifi-
cantly.  An  elimination  of  the  pi  or  hat  patterns
may  give  a  consistent  result.  It  is  important  to
notice  that  other  simplification  algorithms  also
suffer  by  similar  inconsistencies  in  the  result.
Specifically,  Douglas-Peucker  algorithm  results
may vary when the end vertices are different (e.g.,
in the simplification of a closed line). 

4. Experiments

mR-V  simplification  method  has  been
imple mented  and  tested  with  a  series  of  synthetic
and  real  linear  features  that  represent  geographic
entities  as  well  as  sea  vessel  trajectories.  Various
resolution  levels  were  considered,  while  the
results  were  compared  with  those  produced  by

Douglas -Peucker [1973]  algorithm,  with  the
threshold value (offset distance) chosen equal to
the resolution of the mnemonic rasterization. An
example  for  a  synthetic  line  is  given  in  Figure
9c, d. Note that mR-V line was not refined for hat
patterns  yet.  The  form  of  the  mR-V  polyline
bet ter  represents  the  original  line.  In  addition,
Douglas-Peucker  result  violates  twice  the  area
outside  the  original  polyline’s  envelope,  in
columns  4  and  12  of  the  raster  image. This  may
cause  spatial  inconsistencies  with  the  objects  in
the neighbouring space. 

Figure  15  presents  another  example  of  a
lin e ar  feature  simplified  using  mR-V  method  in
various  resolutions:  1000 m,  500 m  and  100 m.
The  result  of  the  rasterization  in  various
res o lu tions  is  shown  in  Figures  15a,b,c.  Figures
15d,e,f  show  the  result  of  mR-V  simplification
using the pixel edge method before refinement in
the  three  resolutions,  while  Figure  15g, h  show
the  result  after  the  removal  of  hat  patterns.  It  is
noticeable  that  the  removal  of  hat  patterns  in
Figure  15g  also  eliminated  the  spike  edge  in
Figure 15d.  

278

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

(a)

(b)

(c)

(d)

(e)

(f)

Figure 15: Rasterization of a lin ear
feature in three resolutions:
(a) 1000 m, (b) 500 m and (c) 100 m. 
The result polyline (solid line) of an
mRV-sim p li f i  cation using the pixel
edge method in the three res o lu tions:
(d) 1000 m, (e) 500 m and (f) 100 m. 
Refinement of the polyline with
removal of hat pat terns in resolutions: 
(g) 1000 m and (h) 500 m. 

(g)

(h)

279

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

(a)

(b)

(c)

Figure 16: Douglas-Peucker simplification (solid line) of the linear feature in Figure 15 (dashed line). Threshold values:
(a) 1000 m, (b) 500 m and (c) 100 m.

Figure 16 shows the polyline that resulted from
the  simplification  of  the  original  linear  feature  in
Figure 15 using Douglas-Peucker algorithm. The thresh-
old values  chosen  are  equal  to  the  resolution  (pixel
size) considered in Figure 15. By comparing Figures
15g with 16a, mR-V simplification can better approx-
imate the form of the original line in low resolutions
with  an  equivalent  number  of  vertices.  In  addition,
Douglas-Peucker  result  may  suffer  from  spatial

incon sistencies,  as  the  resulted  polyline  violates  the
area outside the polyline envelope (Figures 16b,c). 

Figure  17  shows  the  envelope  of  the  original
polyline of Figure 15c in resolution 100 m. The solid
line  represents  the  result  of  Douglas-Peucker  sim-
pli fication  with  a  threshold  value  equal  to  50 m.
Experiments with a threshold value equal to 25 m or
even 10 m (i.e., one tenth of the resolution of the enve-
lope) showed the resulted polyline still violating the
area outside the envelope. As mentioned in the previ-
ous  section, the grid resolution depends on the visual
acuity at the target scale (scale of the simplification).   

5. Conclusion

This paper introduces mR-V, a method that can
support  the  contextual  simplification  of  linear
fea tures  without  considering  the  neighbouring
objects  in  space.  mR-V  method  consists  of  well-
known  geo-processing  tasks,  such  as  polyline-to-
raster  and  raster-to-polyline  conversions,  while  it
applies  a  mnemonic  rasterization  to  facilitate  the
construction of the simplified polyline. Appropriate
refinement  techniques  can  further  improve  the
result of mR-V method. 

Experimental  work  shows  that  mR-V  method
can produce a simplified polyline that does not vio late
the existing spatial relations of the original polyline
with  neighbouring  objects.  This  is  something  that
well-established line simplification algorithms, such
as Douglas-Peucker, cannot guarantee. 

mR-V line simplification method is compliant
with  the  raster  tiled  maps  being  produced  by  earth
browsers  (e.g.,  Google  Maps,  Bing  Maps  and

Figure 17: Douglas-Peucker simplification of the linear feature in Figure 15c.
Original polyline envelope in a resolution of 100 m. Threshold value: 50 m.
Some spatial inconsistencies highlighted. 

280

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

Acknowledgments

This work was funded by the Natural Sciences
and  Engineering  Research  Council  of  Canada
(NSERC-DG). 

OpenStreeMap) at various zoom levels, as well as the
discrete  global  grid  systems  (DGGS;  Figure  18)
[Sahr et al. 2003; Stefanakis 2016]. Figure 19 shows
an  example  of  the  mR-V  simplification  of  a  vessel
trajectory on top of a DGGS that applies a recursive
partitioning  of  triangular  pixels  (Figure  19a  and
Figure 6). The pixel edge method is applied to gener-
ate the simplified polyline vertices in the vectoriza-
tion of the mnemonic raster image (Figure 19b,c). 

There are multiple emerging issues that need to
be addressed in future work to advance our under-
standing  of  the  mR-V  method.  First,  an  extended
investigation of alternative refinement methods of
the  simplified  polyline  with  various  tessellations,
including the triangle and hexagon (Figure 6b,c) will
be carried out. Second, the mnemonic raster to poly-
line algorithm will be optimized so that the task is
accomplished  in  a  single  pass  [Li  and  Openshaw
1992]. Third, the results of the mR-V method will
be extensively compared with those of other raster
mode algorithms [Li and Openshaw 1992] as well
as conventional line simplification algorithms, such
as  Douglas-Peucker,  that  were  enriched  by  a  con-
textual  simplification  framework  [Tienaah  et  al.
2015].  Finally,  a  thorough  investigation  on  how
mR-V  method  performs  on  various  discrete  global
grid systems (DGGS) will be car ried out, including a
comparison of the results with those of existing algo-
rithms,  such  as  the  Quaternary  Triangular  Mesh
(QTM) filtering of vector map data [Dutton 1999]. 

Figure 18: North Pacific Ocean in a Discrete Geographic Grid System based
on the partitioning of an octahedron [Goodchild et al. 1991]. 

(a)

Figure 19: A linear feature representing a vessel trajectory from Hawaii to Los Angeles, CA on (a) the DGGS;
(b) mnemonic rasterization on the DGG; (c) vectorization of the mnemonic raster image. 

(b)

(c)

281

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. G   E   O   M   A   T   I   C   A

References

Abam, M.A., M. Berg, P. Hachenberger and A. Zarei. 2010.
Streaming algorithms for line simplification. Discrete
and Computational Geometry. 43(3nj): 497–515.
Alvares, L.O., V. Bogorny, B. Kuijpers, J.A.F. de Macedo,
B. Moelans and A. Vaisman. 2007. A model for enrich-
ing  trajectories  with  semantic  geographical  informa-
tion.  In:  Proceedings  of  the  15th  Annual  ACM  Intl.
Symposium on Advances in GIS. Article No. 22. 
Bertolotto, M. and M. Zhou. 2007. Efficient and consistent
line  simplification  for  web  mapping.  Intl.  J.  of  Web
Engineering and Technology. 3(2): 139–156.

Cromley, R.G. 1991. Hierarchical methods of line simplifi-
cation.  Cartography  and  Geographic  Information
Science. 18(2): 125.

Daneshpajouh, S., and M. Ghodsi. 2011. A heuristic homo-
topic path simplification algorithm. In: Murgante, B., et
al., (Eds) Computational Science and its Applications –
ICCSA 2011. Springer Berlin Heidelberg, 132–140.
de  Berg,  M.,  M.  van  Kreveld  and  S.  Schirra.  1998.
Topologically correct subdivision simplification using
the bandwidth criterion. Cartography and Geographic
Information Systems. 25(4): 243–257.

Douglas, H.D. and T.K. Peucker. 1973. Algorithms for the
reduction of the number of points required to represent
a  digitized  line  or  its  caricature.  The  Canadian
Cartographer. 10(2): 112–122.

Dutton, G., 1999. Scale, sinuosity, and point selection in dig-
ital  line  generalization.  Cartography  and  Geographic
Information Science. 26(1): 33–54. 

Egenhofer, M.J. and R.D. Franzosa. 1991. Point-set topolog-
ical  spatial  relations.  Intl.  J.  of  Geographical
Information Systems. 5(2): 161–174.

Giannotti, F. and D. Pedreschi, (Eds). 2008. Mobility, Data

Mining and Privacy. Springer.

Goodchild, M.F., Y. Shiren and G. Dutton. 1991. Spatial data
representation and basic operations for a triangular data
structure. Technical Report 91–8. National Center for
Geographic Information and Analysis. 

Jones,  C.  1997.  Geographical  Information  Systems  and
Computer Cartography. Addison Wesley Longman Ltd. 
Keates, J.S. 1989. Cartographic Design and Production. 2nd

Ed. Longman.

Kulik, L., M. Duckham and M. Egenhofer. 2005. Ontology-
driven  map  generalization.  J.  of  Visual  Languages  &
Computing. 16(3): 245–267.

Li,  Z.,  and  S.  Openshaw.  1992. Algorithms  for  automated
line  generalization  based  on  a  natural  principle  of
objective  generalization.  Intl.  J.  of  Geographical
Information Systems. 6(5): 373–389. 

Longley, P.A., M. Goodchild, D.J. Maguire and D.W. Rhind.
2011.  Geographic  Information  Systems  and  Science.
3rd Edition. Wiley. 

MarineTraffic.  2016.  Live-ships  map:  AIS.  [Viewed  on

January 30, 2016] http://www.marinetraffic.com/ais/

Meratnia, N., and R.A. de By. 2004. Spatiotemporal com-
pression  techniques  for  moving  point  objects.
Proceedings of the Intl. Conf. on Extending Database
Technology (EDBT). Springer. LNCS 2992,  765–782.
Papadias, D., Y. Theodoridis and E. Stefanakis. 1997, Multi-
dimensional range query processing with spatial rela-
tions. Geographical Systems. 4(4): 343–365.

Peuquet,  D.J.  2002.  Representations  of  Space  and  Time.

Guilford Press, New York.

Potamias, M., K. Patroumpas and T. Sellis. 2006. Sampling
trajectory  streams  with  spatiotemporal  criteria.
Proceedings  of  the  Statistical  and  Scientific  Database
Management (SSDBM). 275–284.

Richter, K.F., F. Schmid and P. Laube. 2012. Semantic trajec-
tory compression: Representing urban movement in a
nutshell. J. of Spatial Information Science. (4): 3–30.

Robinson,  A.H., 

J.L.  Morrison  P.C.  Muehrcke,
A.J.  Kimerling,  S.C.  Guptill.  2005.  Elements  of
Cartography. 6th Ed. Wiley.

Saalfeld, A. 1999. Topologically consistent line simplifica-
tion with the Douglas-Peucker algorithm. Cartography
and Geographic Information Science. 26(1): 7–18.
Sahr, K., D. White and A.J. Kimerling. 2003. Geodesic dis-
crete  global  grid  systems.  Cartography  and
Geographic  Information  Science.  30(2):  121–134.
DOI: http://dx.doi.org/10.1559/152304003100011090
Stefanakis,  E.  2012.  Trajectory  generalization  under  space
constraints.  In:  Proceedings  of  the  7th Intl.  Conf.  on
Geographic  Information  Science  (GIScience  2012).
Columbus, Ohio, Sept. 18–21, 2012.

Stefanakis,  E.  2015.  SELF—Semantically  Enriched  Line
simpliFication.  Intl.  J.  of  Geographical  Information
Science (IJGIS). 29(10): 1826–1844. Taylor & Francis.
http://dx.doi.org/ 10.1080/13658816.2015.1053092
Stefanakis, E. 2015b. Map Tiles and Cached Map Services.
GoGeomatics.  Magazine  of  GoGeomatics  Canada
[online]. December 2015.

Stefanakis,  E.  2016.  Discrete  global  grid  systems—a  new
OGC  standard  emerges.  GoGeomatics:  Magazine  of
GoGeomatics Canada [online]. January 2016.

Tienaah,  T.,  E.  Stefanakis,  D.  Coleman.  2015.  Contextual
Douglas-Peucker  simplification.  Geomatica.  69(3):
327–338. doi:10.5623/cig2015-306

van der Poorten, P.M. and C.B. Jones. 2002. Characterisation
and generalisation of cartographic lines using Delaunay
triangulation.  Intl.  J.  of  Geographical  Information
Science. 16(8): 773–794.

Weibel, R. 1996. A typology of constraints to line simplifica-
tion. In: Proceedings of 7th Intl. Symposium on Spatial
Data Handling, Delft, The Netherlands. 533–546. 
Weibel,  R.  1997.  Generalization  of  spatial  data:  principles
and selected algorithms. In: Kreveld, M., et al., (Eds)
Algorithmic  Foundations  of  Geographic  Information
Systems. Springer Berlin Heidelberg, 99–152.

Yan,  Z.,  D.  Chakraborty,  C.  Parent,  S.  Spaccapietra  and
K. Aberer. 2011. SeMiTri: A framework for semantic
annotation  of  heterogeneous 
In:
Proceedings  of  the  14th Intl.  Conf.  on  Extending
Database Technology (EDBT 2011). 259–270.

trajectories. 

MS rec’d 16/06/16
Revised MS rec’d 16/09/28

Author

Emmanuel  Stefanakis,  PhD,  PEng,  is  an
Associate  Professor  of  Geographic  Information
Systems  and  Science  and  the  Director  of  Graduate
Studies in the Department of Geodesy and Geomatics
Engineering  at  the  University  of  New  Brunswick.
Home page: http://www2.unb.ca/~estef/ q

282

Geomatica Downloaded from www.nrcresearchpress.com by YORK UNIV on 12/24/18For personal use only. 