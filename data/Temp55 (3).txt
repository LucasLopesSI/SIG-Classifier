bs_bs_banner

Research Article

Transactions in GIS, 2016, 00(00): 00–00

A Method for Matching Crowd-sourced and Authoritative
Geospatial Data

Heshan Du, Natasha Alechina, Michael Jackson and Glen Hart

University of Nottingham

Abstract
A method for matching crowd-sourced and authoritative geospatial data is presented. A level of tolerance
is deﬁned as an input parameter as some difference in the geometry representation of a spatial object is to
be expected. The method generates matches between spatial objects using location information and lexical
information, such as names and types, and veriﬁes consistency of matches using reasoning in qualitative
spatial and description logic. We test the method by matching geospatial data from OpenStreetMap and
the national mapping agencies of Great Britain and France. We also analyze how the level of tolerance
affects the precision and recall of matching results for the same geographic area using 12 different levels of
tolerance within a range of 1 to 80 m. The generated matches show potential in helping enrich and update
geospatial data.

1 Introduction

Maps, whether digital or paper-based, are a common feature of our daily life. They typically
provide a two-dimensional representation of geographic features, such as roads, rivers, build-
ings, places, etc., in the real world (i.e. a topographic base) over which other “thematic” infor-
mation may be displayed such as density of population or crime statistics. The information
represented provides both an indication of where on the Earth’s surface an object of interest is
(i.e. its geometry) and lexical information on what that geometry represents (e.g. a road and its
name, such as “High Street”). Such information represented in maps is often referred to as geo-
spatial data and plays an essential role in many governmental, economic and social operations,
such as disaster response, urban planning and tourism.

Traditionally, most national level mapping was carried-out by government agencies or spe-
cialist mapping companies, because it required the use of expensive or difﬁcult-to-obtain survey
data, plus specialist tools and later software and an associated high level of expertise. Geospa-
tial data, which is surveyed and classiﬁed using formal quality assurance procedures, for exam-
ple by a national mapping agency, is referred to as “authoritative”. Maps produced by the
general public, who did not have access to such data sources, nor the specialist tools and soft-
ware, focused more on smaller areas and on indicating where key features were in relative
terms but typically could not be relied upon for precise location, completeness or consistency.
This situation has been radically changed in recent years by a number of technological develop-
ments and by governments through the release of associated data (e.g. precise Global Naviga-
tion Satellite System data, satellite and aerial imagery). Perhaps the most important of these

Address for correspondence: Heshan Du, Department of Computer Science, University of Nottingham, UK. E-mail: Heshan.Du@
outlook.com
Acknowledgements: We express thanks to the Ordnance Survey of Great Britain and the Institut G(cid:2)eographique National of France for
providing the test data.

VC 2016 John Wiley & Sons Ltd

doi: 10.1111/tgis.12210

2 H Du, N Alechina, M Jackson and G Hart

developments is the mobile smartphone. Such phones are capable of accurately recording their
positions and combined with the use of simple-to-use applications can delimit physical and
man-made features and tag the resulting geometries with information describing the nature,
purpose and use of those features. This “crowd-sourced data” may be actively collected as a
volunteer activity by citizens (Goodchild 2007) or passively acquired as a bi-product of an
application the main purpose of which is something else. The concept of “crowd-sourced geo-
spatial data” was expressed in different ways, such as citizen science, volunteered or involun-
tary geospatial information, user-generated content, public participation or collaboratively
contributed geographic information and neogeography,
in literature from 1990 to 2014
(Goodchild 2007; Heipke 2010; Comber et al. 2014). OpenStreetMap (OSM) (OpenStreetMap
2014) is the most popular map project of crowd-sourced data. Compared with authoritative
data, crowd-sourced data is usually less geometrically accurate, less formally structured and
lacks the associated metadata that allows it to be used in situations where commercial, policy
or life-critical use is involved (Jackson et al. 2010). However, crowd-sourced geospatial data
still offers great potential as it often contains richer user-based information, can reﬂect real-
world changes (e.g. new construction of buildings) more quickly, and has a much lower acqui-
sition cost. It is desirable to use authoritative and crowd-sourced data to complement each
other in order to provide a more complete, up-to-date, people-centric and richer picture of geo-
spatial data. One promising application of this is to use crowd-sourced geospatial data to help
national mapping agencies enrich and update authoritative data.

Governments invest large amounts of money in national mapping agencies, which act as
the primary source of geospatial information in many countries. In order to provide the most
up-to-date maps to customers, it is essential for national mapping agencies to update their data
frequently and regularly. However, this is expensive in both time and money. Taking Ordnance
Survey of Great Britain (OSGB) (Ordnance Survey 2014a), Great Britain’s national mapping
authority, as an example, according to its agency performance monitors, one of the OSGB
2013-2014 targets is “some 99.6% of signiﬁcant real-world features greater than six months
old are represented in the database” (Ordnance Survey 2014b). To achieve this, OSGB employs
a number of different methods:

1. Major construction companies are contracted to provide change intelligence concerning
where and when they will build and their site plans, enabling Ordnance Survey to sched-
ule a ﬁeld survey in a timely fashion. This will capture a signiﬁcant amount of change
intelligence related to all major building sites, road construction and other large con-
struction events.

2. OSGB collects planning permissions from local authorities.
3. OSGB receives change reports from individual surveyors who have observed any change

in their local areas.

4. OSGB captures further changes using aerial imagery. This can be used to capture missed
major changes, such as a single house and a farm barn (that does not require a planning
permission). It will also capture a lot of minor changes, such as new or removed hedge-
rows and paths.

5. OSGB also receives change reports (e.g. letters, emails or phone calls) from the general
public, but these reports only comprise a very small proportion of all of the intelligence
received.

For OSGB, minor changes are the most problematic, such as small buildings constructed
by small private building companies, change of function (e.g. a country house is changed to a
hotel), natural changes (e.g. a change of vegetation type or coastal erosion), extensions and

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

A Method for Matching Crowd-sourced and Authoritative Geospatial Data

3

alterations to buildings, private roads (either new built or modiﬁed). In summary, most major
changes will be captured by OSGB, but there is a higher likelihood that small changes in build-
ings and changes to attributions (e.g. change of purpose) will be missed. Capturing this infor-
mation is becoming increasingly important as OSGB moves from being simply a map producer
to one that wishes to supply much richer geographic information.

As shown by the example of OSGB, current working methods employed by national map-
ping agencies leave room for improvement and are faced with challenges raised by the rapid
development of crowd-sourced geospatial data. As EuroGeographics’ President, Ingrid Vanden
Berghe (Geospatial PR 2014), says, “Europe’s National Mapping, Cadastral and Land Registry
Authorities must adapt their activities to become geospatial information brokers if they are to
continue to meet society’s expectations”. This indicates that national mapping agencies will
collate data rather than just collect data in future, except for areas where only national map-
ping agencies are able to collect the data.

To use crowd-sourced data for enriching and updating authoritative data, it is essential to
establish correspondence (matches) between spatial features represented in crowd-sourced and
authoritative geospatial data. By using the established matches, descriptions about the corre-
sponding spatial features can be identiﬁed and compared, which facilitates information valida-
tion, exchange and enrichment across datasets. In addition, using the established matches,
spatial features that are not matched can be found. Descriptions about such unmatched spatial
features in one dataset often contain additional useful information (e.g. more recent or up-to-
date data) for the other dataset. Several real-world application examples will be described later
in this article.

However, matching disparate geospatial data is far from straightforward. In different geo-
spatial datasets, different terminologies or vocabularies are often used to describe spatial fea-
tures. For example, the same restaurant may be classiﬁed as a Restaurant in one dataset, whilst
as a Place to Eat in another database and simply as a brand name in others (e.g. McDonald’s).
An identically spelt word, even within a single language, can often have many different mean-
ings. Whilst an authoritative dataset will have a deﬁned taxonomy or ontology where a word
should have a precise deﬁnition, the “crowd” may not follow such rules and may use several
descriptions for a common object some of which may be local vernacular terms. For example,
the word College may mean an institution within a university in one dataset, refer to a govern-
ment secondary school in another, and to a private language training establishment in a third.
Other terms may be used inconsistently, for instance, one person may include McDonald’s
within the category restaurant whilst others may not. For the same geographic area or the same
set of spatial features, different geospatial data sources will have different representative geo-
metries. Features may be represented in one dataset, but not in the other. The scale or accuracy
of the geometry capture may vary. Even where the same precision of measurement is adopted,
different points may be captured to represent the boundary of a feature so that two independ-
ently captured representations of a single object will always differ in some respect. As shown in
Figure 1, the position and shape of Huntingdon Primary and Nursery School are represented
differently in OSGB data (stippled) and OSM data (solid). In Figure 2, the Victoria Shopping
Centre is represented as several shops in OSGB, but as a whole in OSM.

In this article, we present a generic method for matching spatial objects held in different
datasets with no shared form of digital identity. A spatial object in a geospatial dataset has an
ID, location information and meaningful labels, such as names or types, and represents an
object in the real-world. A geometry here refers to a point, a line or a polygon, which is used to
represent location information in geospatial datasets. We use both location and lexical infor-
mation to generate matches, and then check consistency of matches using reasoning in

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

4 H Du, N Alechina, M Jackson and G Hart

Figure 1 Huntingdon Primary and Nursery School represented in OSGB (stippled), OSM (solid)
and their relative position

Figure 2 Victoria Shopping Centre represented in OSGB (stippled), OSM (solid) and their relative
position

qualitative spatial and description logic. This idea has been implemented as a software tool
called MatchMaps and its main steps have been described brieﬂy in Du et al. (2015b), but with-
out providing detailed algorithms for generating matches. This is what we do in this article. To
tolerate slight differences in geometric representations for the same spatial feature, the match-
ing algorithms use a level of tolerance r (cid:2) R(cid:2) 0 as input. The evaluation presented in Du et al.
(2015b) is extended to show how the value of r affects matching results. In Du et al. (2015b),
the method was used to match OSM data and OSGB. In this article, we additionally use the
method to match OSM data and data from IGN (Institut G(cid:2)eographique National 2014), the
national mapping agency of France.

The remainder of this article is structured as follows. Section 2 reviews related work on
geospatial data matching. Section 3 presents algorithms for matching geometries and spatial
objects. Section 4 explains how the value of r affects matching results and shows the generality
of the method using IGN data. Section 5 discusses the practical use of the matches using real-
world examples. Section 6 concludes the article and indicates possible future work.

2 Related Work

Geospatial data matching is deﬁned as the task of identifying corresponding spatial features
between different geospatial datasets. It is an essential step for data comparison, data integra-
tion or enrichment, change detection and data update. Over the last few decades, many meth-
ods (such as Walter and Fritsch 1999; Mustire and Devogele 2008; Safra et al. 2010, 2013; Li
and Goodchild 2011; Huh et al. 2013; Tong et al. 2009, 2014) have been developed for match-
ing authoritative geospatial data. Du (2015) provided a summary of these methods and dis-
cussed the limitations. None of these methods have been widely accepted and generally

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

A Method for Matching Crowd-sourced and Authoritative Geospatial Data

5

applied. The methods designed for matching authoritative geospatial data are not very suitable
for OpenStreetMap (OSM) data, due to the information incompleteness and inaccuracy in
OSM data, as well as its informal or non-standard representations. With the development of
crowd-sourced geospatial data, several attempts have been made to match crowd-sourced geo-
spatial data and authoritative geospatial data in the last few years.

Anand et al. (2010) applied map-matching techniques to match road networks by calculat-
ing average distance and angle. However, it is computationally expensive and limited to linear
features.

Ludwig et al. (2011) implemented an automated procedure for matching street networks
of Navteq and OSM in Germany. Geometries and thematic attributes are compared to generate
matches. However, it is speciﬁcally designed for business and geomarketing purposes, exclud-
ing features of no business interest.

Du et al. (2011) deﬁned the meaning of “same feature” regarding positional closeness,
name similarity, category similarity and neighborhood similarity. Then the probability of two
spatial features being the same is calculated using a weighted function taking all these parame-
ters into account. This work is preliminary and leaves the task of assigning weights of parame-
ters to users.

Du et al. (2012) deﬁned geometry consistency and topological consistency for road net-
works. Two lines are geometrically consistent with respect to a level of tolerance r, if and only
if they fall into the r-buffer of each other. Topological consistency is checked using a descrip-
tion logic reasoner Pellet (Sirin et al. 2007), by comparing values of a functional data property
“neighbor set”. A neighbor set stores all the neighbors of an edge (two edges are neighbors if
they have the same node). However, checking such topological consistency is too strict, due to
inaccuracy and incompleteness of OSM data.

Koukoletsos et al. (2012) proposed an automated matching method for linear data in order
to assess the completeness of OSM data compared to OSGB. It consists of seven stages and uses
distance, orientation and attribute (road name and type) similarity constraints to generate and
reﬁne matches. However, with the existence of topological inconsistencies in OSM data, the
method is not very efﬁcient. In addition, the method does not handle abbreviations (which exist
in OSM data) well when matching attributes.

Yang et al. (2013) proposed a heuristic probabilistic relaxation approach to match road
networks. They use buffers to obtain candidate matches, then reﬁne them by shape (dis)similar-
ity (deﬁned by distance, orientation and length) and structural similarity. The experimental
results of matching OSM and authoritative data are of high precision. However, the method is
computationally expensive, and does not use attribute data, like road names.

Yang et al. (2014) proposed a method for matching points of interest from a crowd-
sourced dataset and road networks from an authoritative dataset. It ﬁrst constructs a connectiv-
ity graph by mining linear cluster patterns from points, then matches nodes in the graph to
roads by probabilistic relaxation and a vector median ﬁltering. The method assumes that linear
patterns exist among the points. The performance of the method mainly depends on the cluster-
ing result of points.

Fan et al. (2014) introduced a method for matching building footprints (polygons), in
order to assess the quality of OSM data. Their similarity measure is deﬁned by the per-
centage of overlap area, using 30% as the threshold for matching footprints. By the exper-
imental result of the study area in Munich, the method achieves very high precision
and recall, both over 99%. However, the similarity measure will fail, for example, when
the same building is represented as two disjoint polygons in OSM data and authoritative
data.

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

6 H Du, N Alechina, M Jackson and G Hart

Most of the methods discussed above are designed for matching roads or other linear fea-
tures (except Fan et al. 2014) and do not support the veriﬁcation of matches (except Du et al.
2012). In this article, we present a new method for matching crowd-sourced and authoritative
geospatial data. It uses both location and lexical information such as names and types to gener-
ate matches, and veriﬁes consistency of matches using reasoning in description and qualitative
spatial logic. The method was used to match buildings and places (polygonal features) repre-
sented in several real-world datasets. In experiments, it achieved high precision and recall, as
well as reduced human effort.

3 Method

In this section, we present a method for matching spatial features in disparate geospatial data-
sets. The method consists of two main steps: matching geometries and matching spatial objects.
The geometry matching is based on the concepts of “possibly partOf” and “possibly sameAs”.
Section 3.1 explains algorithms used for matching geometries. Section 3.2 describes a proce-
dure following which spatial objects are matched using geometry matches and lexical informa-
tion. The method has a wider application than matching authoritative and crowd-sourced data
and could be applied wherever it is necessary to match two geospatial datasets of vector data.

3.1 Matching Geometries

Since geometries in a crowd-sourced dataset may not be very accurate, when matching them to
geometries in an authoritative dataset, a level of tolerance or margin of error is needed to toler-
ate slight differences in geometric representations for the same feature. With respect to a level
of tolerance r (cid:2) R(cid:2)0, two new spatial relations BPT and BEQ are deﬁned as follows and illus-
trated in Figure 3. They formalize “possibly partOf” and “possibly sameAs”, respectively.

Deﬁnition 3.1: According to ISO19107 (ISO Technical Committee 211 2003), the buffer
of a geometry g is a geometry which contains exactly all the points within r distance
from g, where r (cid:2) R(cid:2)0. This is formalized as:

buffer g; rð

Þ5fpj9q 2 g : d p; qð

Þ 2 0; r½

(cid:3)g

where buffer(g, r) and g are in the same reference system and dimension.

Figure 3 The three hatched red circles are buffered part of (BPT) the solid blue circle (left); Buf-
fered Equal or BEQ (right)

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

A Method for Matching Crowd-sourced and Authoritative Geospatial Data

7

Deﬁnition 3.2: Let r (cid:2) R(cid:2)0 denote a level of tolerance. For two geometries g1 and g2,
BPT(g1,g2) (g1 is buffered part of g2), iff g1 (cid:4) buffer(g2,r); BEQ(g1, g2) (g1 and g2 are
buffered equal), iff BPT(g1, g2) and BPT(g2, g1).

If BEQ and BPT are deﬁned by an appropriate level of tolerance r (cid:2) R(cid:2)0, then for geome-
tries X and Y, if BEQ(X, Y), then X and Y possibly represent the same real-world location,
otherwise, they represent different locations. Similarly, if BPT(X, Y), then X represents a loca-
tion which is possibly part of what Y refers to. The geometry matching method presented in
this section is based on this rationale, and takes a level of tolerance r (cid:2) R(cid:2)0 as input for match-
ing two sets of geometries. This r denotes the maximal difference between geometric represen-
tations of the same spatial features from input datasets. The value of r can be established
empirically by looking at two datasets side by side and matching geometries of features (e.g.
landmarks) which are known to be the same.

The geometry matching method consists of two main algorithms, Algorithms 2 and 3,
which generate BPT and BEQ matches respectively, by calculating and comparing the minimal
rs (Deﬁnition 3.3).

Deﬁnition 3.3: A level of tolerance r (cid:2) R(cid:2)0 is minimal with respect to geometries g1
iff g1 (cid:4) buffer(g2,r) holds and for any b (cid:2) R(cid:2)0 and b < r, g1 (cid:4) buffer(g2,b)
and g2,
level of tolerance with respect to g1 and g2 is denoted as
does not hold. The minimal
minr(g1, g2).

The measure minr is not symmetric. As shown in Figure 4, X is a red circle and Y is a blue
circle. Then the minimal level of tolerance with respect to X and Y is d1, whilst the minimal
level of tolerance with respect to Y and X is d2. Though deﬁned independently, the minimal
level of tolerance was proved to be a measure equivalent to the directed Hausdorff distance,
which is a generic measure for geometries (Du 2015).

Algorithm 1 provides a way to calculate the minimal r with respect to geometries g1 and
g2 approximately. The input real numbers l and u denote a lower bound and an upper bound
of r (cid:2) R(cid:2)0 respectively: r (cid:2) [l, u], l (cid:2) R(cid:2)0, u (cid:2) R(cid:2)0. The number b (cid:2) R(cid:2)0 denotes the accu-
racy level, such that the absolute difference between the calculated and the actual value of r is
no larger than b. Algorithm 1 does a “binary search” between the lower bound l and the upper
bound u of r. It terminates and returns a calculated value m for the minimal r, if m is accurate
enough (Line 3) or a boundary case is reached, where g1 (cid:4) buffer(g2, m) and the boundaries of

Figure 4 minr(X, Y) 5 d1 and minr(Y, X) 5 d2

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

8 H Du, N Alechina, M Jackson and G Hart

g1 and buffer(g2, m) are connected (Line 8, g1 and buffer(g2, m) are equal or g1 is a tangential
proper part of buffer(g2, m)).

function minr(g1, g2, l, u, b)
m 5 (l 1 u)/2
if (u - l) (cid:5) b then return m
end if
if g1 (cid:4) buffer(g2, m) then

Algorithm 1:
1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:

else

end if
end function

b1 5 boundary(g1)
b2 5 boundary(buffer(g2, m))
if b1 \ b2 is not empty then return m
end if
return minr(g1, g2, l, m, b)

return minr(g1, g2, m, u, b)

Algorithm 2 takes two sets of geometries G1, G2 and a level of tolerance r (cid:2) R(cid:2)0 as input.
For each geometry g1 in G1, it calculates the best candidate h in G2, and adds BPT(g1, h) to the
set of output matches MG1ﬁG2, if such an h exists. The minimal r is used as the criterion to
select the best candidates (Deﬁnition 3.4).

Deﬁnition 3.4: For a geometry g, a set of geometries S, a level of tolerance r (cid:2) R(cid:2)0, the
geometry h1 (cid:2) S is the best candidate for g, iff minr(g, h1) < r, and for any h (cid:2) S,
minr(g,h) (cid:2) minr(g,h1).

Algorithm 2:
1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
15:
16:

function bpt-match(G1, G2, r)
MG1! G2 5 {}
for g1 (cid:2) G1 do
h 5 null
for g2 (cid:2) G2 do

if minr(g1, g2) < r then
r 5 minr(g1, g2)
h 5 g2

end if

end for
if h! 5 null then

add BPT(g1, h) to MG1!G2

end if

end for
return MG1!G2

end function

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

A Method for Matching Crowd-sourced and Authoritative Geospatial Data

9

function beq-match(G1, G2, r)
MG1!G25bpt-match(G1, G2, r)
Mbeq 5 {}
for g2 (cid:2) G2 do

S 5 {g1 (cid:2) G1 | BPT(g1, g2) (cid:2) MG1!G2}
Gs 5 Ug(cid:2)S g
if BPT(g2, Gs) then

if Gs is multiple then

Gs 5 reﬁne(Gs, g2, r)

end if
add BEQ(g2, Gs) to Mbeq

Algorithm 3:
1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
15:

end if

end for
return Mbeq

end function

Algorithm 3 calculates BEQ matches using BPT matches generated by Algorithm 2. For
every geometry g2 (cid:2) G2, Algorithm 3 matches it to a geometry Gs, which is a union of geome-
tries in G1, such that g2 and Gs are buffered equal, if such a Gs exists. This is done as follows.
For every geometry g2 (cid:2) G2, we ﬁrstly obtain a set S containing every g1 (cid:2) G1 such that
BPT(g1, g2) is in MG1!G2 (Lines 2-5). Since each geometry g (cid:2) S is a buffered part of g2, their
union Gs is a buffered part of g2. If g2 is also a buffered part of Gs (Line 7), then g2 and Gs are
buffered equal. Generating BEQ matches between g2 and Gs directly may have some side
effects or noise, especially when Gs consists of several disconnected parts (Gs is multiple, Line
8). Three examples are shown in Figure 5, where in each, the blue solid geometry is buffered
equal to the union of several red stippled geometries. The extra red stippled geometries actually

function reﬁne(Gs, g2, r)
s 5 minr(g2, Gs)
for g (cid:2) Gs.getGeometries() do

if g2 contains g then continue
end if
remain 5 Gs n g
if BPT(g2, remain) does not hold then continue
end if
sr 5 minr(g2, remain)//sr (cid:2) s
if s 5 sr then return reﬁne(remain, g2, r)
end if
t 5 minr(Gs, g2)
tr 5 minr(remain, g2)
if (s 1 t) (cid:2) (sr 1 tr) then return reﬁne(remain, g2, r)
end if

Algorithm 4:
1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
15:
16:
17:
18:

end for
return Gs
end function

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

10 H Du, N Alechina, M Jackson and G Hart

do not have any correspondences. The best candidates found for them using Algorithm 2 are
the blue solid geometries, but the matches are wrong since the level of tolerance allowed is too
large. Algorithm 4 is designed to reﬁne Gs in such cases, by calculating and comparing the min-
imal rs (Deﬁnition 3.3).

Algorithm 4 takes two geometries Gs, g2 as input, where Gs is multiple and g2 is not. Gs
and g2 are buffered equal with respect to the level of tolerance r. Algorithm 4 reﬁnes Gs to a
subset of it, and maintains the buffered equal relation as an invariant during the reﬁning pro-
cess. This is done as follows. For every geometry g contained in Gs, if g is not fully covered by
g2, then we obtain remain, which is Gs without g (Line 6). To maintain the invariant, we check
whether BEQ(remain, g2) holds. Since BPT(Gs, g2) and remain (cid:6) Gs, BPT(remain, g2) already
holds. Thus, we only need to check whether g2 is a buffered part of remain. If yes, the next steps
in the for-loop are followed. We calculate the minimal r (Deﬁnition 3.3) with respect to g2 and
Gs (Line 2), g2 and remain (Line 9) as s and sr, respectively. By Deﬁnition 3.3, Deﬁnition 3.1
and remain (cid:6) Gs, sr (cid:2) s. If s and sr are equal, then we can remove g from Gs without changing
the required buffer size (Line 10). After applying this, the extra red geometries in Figure 5 (left
and middle) are removed, as shown in Figure 6 (left and middle, respectively). However, the
extra geometries in Figure 5 (right) cannot be removed, because the boundary of the blue geom-
etry is close to the red geometries outside, the existence of which makes the required buffer size
smaller. For such cases, we calculate the minimal r with respect to Gs and g2 (Line 12), remain
and g2 (Line 13), as t and tr, respectively. If (s 1 t) (cid:2) (sr 1 tr), we can remove g from Gs without
making the sum of required buffer sizes larger (Line 14). Applying this removes the extra geo-
metries in Figure 5 (right), as shown in Figure 6 (right). Algorithm 4 recursively removes one
part from Gs and returns the remaining parts, until no parts can be removed.

After applying Algorithm 4, Algorithm 3 generates and adds reﬁned BEQ matches to its

output mapping Mbeq.

3.2 Matching Spatial Objects

In this section, we describe a method for matching spatial objects, making use of BEQ matches
generated by Algorithm 3 and lexical descriptions (names and types) of spatial objects. A
sameAs match between spatial objects a and b states that a and b represent the same real-world
object. This is denoted as sameAs(a, b). A partOf match from a spatial object a to a spatial
object b states that a represents a real-world object which is part of what b refers to. This is
denoted as partOf (a, b). The output of the object matching method is a set of sameAs and par-
tOf matches between spatial objects. The method does not directly use BPT matches generated

Figure 5 BEQ matches with “noise”

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

A Method for Matching Crowd-sourced and Authoritative Geospatial Data

11

Figure 6 Reﬁned BEQ matches

by Algorithm 2, mainly because spatial objects and their parts may not have any similar lexical
information.

As a function, objects(g) maps every geometry g to a set of spatial objects, where the geom-
etry of each object gi (cid:4) g. For any pair of geometries g1 and g2 which are BEQ-matched, we
match objects(g1) and objects(g2) based on the similarity of lexical information (names and
types represented by strings).

The similarity measure for lexical information is described as follows. For strings s1 and s2,
similar(s1, s2) is true, if s1, s2 are equal, one contains the other, one is an abbreviation of the
other, or their Levenshtein edit distance is smaller than length(s1)/2 or length(s2)/2. For any spa-
tial object o, let names(o) denote its set of names, types(o) denote its set of types. For any pair
of spatial objects o1,o2, similarNames(o1, o2) is true, if there exist n1 (cid:2) names(o1) and n2 (cid:2)
names(o2) such that similar(n1, n2). Otherwise, similarNames(o1, o2) is false. similarTypes
(o1, o2) is deﬁned in the same way as deﬁning similarNames(o1, o2). For the type similarity,
using string comparison is not sufﬁcient, and more sophisticated similarity measures should be
used to recognize different words expressing the same type, for example, house, dwelling and
residential. Currently, such information is only hard-coded for houses. For spatial object o,
house(o) is true, if the type of o is house, dwelling or residential. Otherwise, house(o) is false.

For any pair of geometries g1 and g2 which are BEQ-matched by Algorithm 3, objects(g1)

and objects(g2) are matched as follows:

Case 1: If |objects(gi)| 5 0, i (cid:2) {1, 2}, then there are no objects to match.
Case 2: If |objects(gi)| 5 0, |objects(gj)| > 0, i 6¼ j, then objects in objects(gj) do not have

any corresponding objects.

Case 3: If |objects(gi)|5 1, i (cid:2){1, 2}, oi (cid:2) objects(gi), similarNames(o1,o2) is true, or
names(o1) is empty, or names(o2) is empty, then we generate a sameAs match between o1
and o2.

Case 4: If |objects(gi)|5 1, |objects(gj)| > 1, i 6¼ j, then:
a)

If there exists exactly one object oj (cid:2) objects(gj), such that for oi (cid:2) objects(gi), sim-
ilarName(oi, oj) is true, then we generate a sameAs match between oi and oj.
b) Otherwise, for each object oj (cid:2) objects(gj), we generate a partOf match from oj to

oi (cid:2) objects(gi).

Case 5: If |objects(gi)|> 1, i (cid:2) {1, 2}, then:
a)

If there exists at most one object o in objects(gi) such that house(o) is false, and for
any other object oi in objects(gi), house(oi) is true, then we create an abstract object
Oi corresponding to the aggregation of all objects in objects(gi). For every object oj
(cid:2) objects(gj), i 6¼ j, we generate a partOf match from oj to Oi.

As shown in Figure 7, there is only one spatial object (yellow) which is not a
house, and all others are houses. Matching every spatial object is not interesting

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

12 H Du, N Alechina, M Jackson and G Hart

Figure 7 All are houses except one

b)

but requires much more effort than creating and matching an abstract object for
them.
If no abstract object is created, then we match objects by their names ﬁrst and then
by their types.
i. For objects o1 (cid:2) objects(g1), o2 (cid:2) objects(g2), if similarNames(o1, o2), then we
generate all possible matches: a sameAs match between o1 and o2, partOf
matches from o1 to o2 and from o2 to o1.

ii. For “not-matched” objects o1 (cid:2) objects(g1), o2 (cid:2) objects(g2), if at least one of
names(o1) and names(o2) is empty, and at least one of similarTypes(o1, o2) and
(house(o1) (cid:2)house(o2)) is true, then we generate a sameAs match between o1
and o2, partOf matches from o1 to o2 and from o2 to o1.

Then we use our new qualitative spatial logic LBPT (Du and Alechina 2014a, b) to
verify consistency of the generated matches with respect to location information.
LBPT was designed for reasoning about geometries represented in different geospatial
datasets, in particular crowd-sourced datasets. The relations between geometries con-
sidered in the logic are: BPT, Near and Far. By Deﬁnition 3.2, BEQ is deﬁnable by
BPT. The relations Near and Far are also deﬁned using a level of tolerance r. LBPT
formalizes different cases where a contradiction can be detected by LBPT reasoning.
For any pair of spatial objects a and b, we assumed that if sameAs(a, b) is true, then
the geometry of a and the geometry of b are BEQ; if partOf (a, b) is true, then the
geometry of a is BPT the geometry of b, where BEQ and BPT are deﬁned using an
appropriate level of tolerance r. A contradiction exists, for example, if spatial objects
a1 is sameAs a2, b1 is sameAs b2, a1 and b1 are near, but a2 and b2 are far. As an
optional step, we could use description logic to verify consistency of the generated
matches with respect to UNA/NPH (Unique Name Assumption/No PartOf Hierarchy)
(Du et al. 2015b) after using spatial. For example, an inconsistency exists, if a spatial
object is stated as being sameAs two spatial objects in another dataset. This step could
be skipped if UNA/NPH is violated frequently in an input dataset.

Finally, we use description logic to verify consistency of all generated matches with respect
to classiﬁcation information. For example, an inconsistency exists, if sameAs(o1, o2), o1 is a
Bank, o2 is a Clinic, Bank and Clinic are disjoint, containing no common element. If any incon-
sistency is detected by reasoning in spatial logic or description logic, minimal sets of statements

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

A Method for Matching Crowd-sourced and Authoritative Geospatial Data

13

for deriving it will be generated and visualized to a domain expert for deciding which statement
is wrong and should be retracted to restore consistency. The detailed explanations for using
spatial and description logic to verify matches have been provided in (Du et al. 2013, 2015b).

4 Evaluation

In Du et al. (2015b), we established the precision and recall of the method for matching OSM
data (building layer) (OpenStreetMap 2014) and OSGB MasterMap data (Address Layer and
Topology Layer) (Ordnance Survey 2014a) using a single value of r (the level of tolerance). In
Du et al. (2015a), we evaluated the method with respect to the amount of human effort
required for resolving contradictions detected by reasoning in spatial and description logic, and
showed that the human effort was reduced compared with a fully manual matching process. In
this section, we extend the previous evaluation in two ways. Firstly, we use several different
values of r for matching the same area represented in OSM and OSGB MasterMap data and
explain how the value of r affects the matching results. The study area is in the city centre of
Nottingham, UK. Secondly, we apply the method to match OSM and IGN data (BD TOPO
database, buildings and toponymy layers) (Institut G(cid:2)eographique National 2014) to show the
generality of the method. The study area is a central area in Paris, France.

As explained already in Du et al. (2015b), before applying the method presented in Section
3, we used standard 2D spatial tools to aggregate adjacent OSM geometries automatically so
that a block of houses can be matched together. Figure 8 shows the geometric representations
of the same block of houses in OSGB (stippled) and OSM data (solid). From OSM data, we
only know all of them are houses. Matching the houses one by one is time-consuming and not
helpful for enriching OSGB/IGN data.

4.1 Nottingham Case Study

The data used in the Nottingham case was obtained in 2012 and is shown in Figure 9. Its statis-
tics are summarized in Table 1. The spatial objects in OSGB are generated using names of
buildings and premises within buildings. The number of OSM spatial objects is smaller than
that of OSGB, because OSM data often describes a collection of OSGB spatial objects as a
whole, for example, many OSGB shops as one large shopping centre in OSM data.

We apply the method several times to match spatial objects in the Nottingham case using a
variety of r values. The ground truth is established in the same way as explained in Du et al.
(2015b). For each OSM spatial object, we classify it into one of the following categories by
checking all the generated matches involving it: “Correctly Matched” (True Positive or TP),
“Incorrectly Matched” (False Positive or FP), “Correctly Not-matched” (True Negative or TN)
and “Incorrectly Not-matched” (False Negative or FN). If a spatial object is incorrectly
matched but should be matched (i.e. there exists a correct match for it), then we label it as
FPsbm. Note that the size of each category is the number of OSM spatial objects in it. For exam-
ple, for the Victoria Centre in OSM data, though there are hundreds of partOf matches involv-
ing it, it is only counted as one element in “Correctly Matched”. Precision is computed as the
ratio of |TP| to |TP| 1 |FP|, and recall as the ratio of |TP| to |TP| 1 |FN| 1 |FPsbm|.

Table 2 summarizes the matching results for matching spatial objects in the Notting-
ham case using 12 different values of r. From 0 to 80 m, we take a value for every 10
meters. We also take some other values (1, 3, 5 and 15 m) because the precision/recall
changes more quickly from 0 to 10 m and from 10 to 20 m. For the matching results
obtained by taking 5, 10, 20, 30, 40 and 60 m as the level of tolerance, Figure 10

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

14 H Du, N Alechina, M Jackson and G Hart

Figure 8 The geometric representations of the same block of houses in OSGB data (stippled),
OSM data (solid) and their relative position

Figure 9 The geometric representations of Nottingham city centre from OSGB (left) and OSM
(right)

Table 1 Data used for Nottingham case study

OSM geometry

OSGB geometry

OSM spatial object

OSGB spatial object

953

7,795

281

13,204

visualizes the geometries of spatial objects in different categories as maps. In Du et al.
(2015b), we estimated the appropriate level of tolerance for the Nottingham case to be 20
m and established the precision and recall. The matching results obtained here using r
520 m are slightly different from those presented in Du et al. 2015b), because the graphi-
cal user interface was modiﬁed (see Du et al. (2015a) with simpler but fewer options pro-
vided to users for retracting wrong matches. Based on the matching results obtained using
different r values presented in Table 2, using r 5 20 m achieves both relatively high preci-
sion and recall compared to others. This justiﬁes that r 5 20 m is appropriate and a good
estimate. However, it is not the optimal, as the matching results obtained using r 5 30 m
are of the same precision but slightly higher recall than those obtained using r 5 20 m. In

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

A Method for Matching Crowd-sourced and Authoritative Geospatial Data

15

Recall

Precision

Table 2 Matching OSM spatial objects to OSGB, Nottingham case

r

1
3
5
10
15
20
30
40
50
60
70
80

TP

1
25
100
162
173
175
177
177
178
178
178
178

FP

0
1
9
17
20
21
21
36
37
39
39
44

TN

72
72
68
67
64
64
65
54
53
52
52
47

FN

208
183
104
35
24
21
18
14
13
12
12
12

0.005
0.12
0.48
0.78
0.83
0.84
0.85
0.85
0.85
0.85
0.85
0.85

1
0.96
0.92
0.91
0.90
0.89
0.89
0.83
0.83
0.82
0.82
0.80

the following, we provide a more detailed analysis on how the level of tolerance affects
the precision and recall.

As shown in Table 2, when the level of tolerance r is 1 m, only one spatial object is cor-
rectly matched, and all others are not matched. Hence the recall is nearly 0. With the increase
of the r value, as shown in Figure 10, more spatial objects are correctly matched. For example,
in Figure 11, the Arkwright building of the Nottingham Trent University is represented as a
concave geometry in OSGB data but as a convex geometry in OSM data, which can be matched
using r 5 30 m but not r 5 20 m.

As the increase of r makes more spatial objects correctly matched, the recall increases rap-
idly to 0.78 when r 5 10 m, as shown by Figure 12. Then the recall increases more and more
slowly because fewer and fewer spatial objects can be correctly matched. It reaches 0.85 when
r 530 m, and stays the same until r 5 80 m. When r 5 80 m, there are still spatial objects
which are incorrectly not-matched. The method cannot match them, mainly because the lexical
matching used by the method cannot match different names (represented by non-similar
strings) of the same real-world object. For example, the OSGB spatial object labeled as
“Nottinghamshire Constabulary, Police Services” and the OSM spatial object labeled as
“Central Police Station” cannot be matched but actually represent the same object in the real-
world.

As shown in Table 2 and Figure 13, increasing the level of tolerance r from 1 to 80 m, the
precision falls but it is always (cid:2) 0.8. The precision becomes lower when r increases, mainly
because a larger level of tolerance means that more spatial objects are incorrectly stated as
being partOf some other spatial objects nearby. It is difﬁcult to prevent such mistakes because
spatial objects and their parts may not have any similar lexical information and therefore par-
tOf matches are generated based mostly on geometry matching. Although the generated
matches will be veriﬁed using reasoning in spatial logic and description logic, not all mistakes
can be detected. For example, increasing the value of r from 30 to 40 m, the main concourse,
ticket ofﬁce, travel center and some other ofﬁces or shops within the Nottingham train station
represented in OSM are all incorrectly stated as being partOf the Xpress Catering within the
Nottingham train station represented in OSGB, as their geometries are matched. Such wrong

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

16 H Du, N Alechina, M Jackson and G Hart

Figure 10 OSM spatial objects of the Nottingham case are classiﬁed into four categories: TP
(Black), FP (Red), TN (Yellow) and FN (Green)

partOf matches are not detected by spatial logic because the objects involved are all near to
each other. They are not detected by description logic because some OSM spatial objects do
not have any type information and the use of description logic for verifying consistency of par-
tOf matches (Du et al. 2015b) is limited by a small set of manually generated “partOf-

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

A Method for Matching Crowd-sourced and Authoritative Geospatial Data

17

Figure 11 Nottingham Trent University’s Arkwright building represented in OSGB (stippled),
OSM (solid) and their relative position

Figure 12 The level of tolerance and recall

Figure 13 The level of tolerance and precision

disjointness” statements (e.g. a School cannot be partOf a Pub) and does not cover the types
involved in the wrong matches. As a result, the precision drops from 0.89 to 0.83. Despite this,
the precision is quite stable when r varies from 5 to 30 m and from 40 to 80 m, staying around
0.9 and 0.82, respectively.

In summary, based on the Nottingham case study, the performance of the method is quite
stable using a level of tolerance from 15 to 80 m. The precision of matching results is within a
range of 0.8 to 0.9. The recall is within a range of 0.83 to 0.85.

4.2 Paris Case Study

In this section, we report the use of the method for matching OSM data and IGN data (BD
TOPO database, buildings and toponymy layers) (Institut G(cid:2)eographique National 2014). The
study area is a central area in Paris, France. The data used in the Paris case was obtained in
2013 and is shown in Figure 14. Its statistics are summarized in Table 3. Unlike the OSGB
MasterMap data, the IGN BD TOPO database does not contain any names of premises within

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

18 H Du, N Alechina, M Jackson and G Hart

buildings. Therefore, the spatial objects in IGN are generated using only names of buildings.
Since most of the buildings in IGN data do not have a name, the number of spatial objects in
IGN data is small.

We set the value of r to be 40 m so that the ^Ile de la Cit(cid:2)e island in Paris can be matched.
Interestingly, the positional accuracy of OSM data has been estimated to be about 40 m in
France (Girres and Touya 2010). The ground truth is established manually in the same way as
explained for the Nottingham case. The geometries of OSM spatial objects which are
“Correctly Matched” (True Positive or TP), “Incorrectly Matched” (False Positive or FP),
“Correctly Not-matched” (True Negative or TN) and “Incorrectly Not-matched” (False Nega-
tive or FN) are visualized in Figure 15. Their statistics are shown in Table 4. The precision and
recall are both (cid:2) 83%. Since the number of generated matches in the Paris case is small, preci-
sion and recall are achieved by the method automatically. In other words, the reasoning in spa-
tial and description logic does not detect any inconsistency and thus requires no human effort
for retracting problematic matches. Whilst most of OSM spatial objects in the Nottingham
case are correctly matched, most of those in the Paris case are correctly not-matched. This indi-
cates OSM data contains much richer lexical information about names and types, which does
not exist in the IGN BD TOPO database. Based on the Paris case study, the method is also
applicable and effective for matching OSM data and IGN data.

5 Application

The matches generated by the method have several practical uses. Firstly, the matches can help
validate the correctness of corresponding data in input datasets. If similar records of a spatial

Table 3 Data used for Paris case study

OSM geometry

OSGB geometry

OSM spatial object

OSGB spatial object

4712

4776

326

29

Figure 14 The geometric representations of the central area of Paris from IGN (left) and OSM
(right)

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

A Method for Matching Crowd-sourced and Authoritative Geospatial Data

19

Table 4 Matching OSM spatial objects to IGN, Paris case, r 5 40 m

TP

15

FP

2

TN

309

FN

2

Precision

0.88

Recall

0.83

Figure 15 OSM spatial objects of the Paris case are classiﬁed into four categories: TP (Black), FP
(Red), TN (Yellow) and FN (Green)

feature exist in both input datasets, which are developed independently, then the records have
a higher chance of being correct. In addition, the matches facilitate information exchange and
enrichment, as one dataset may contain more detailed lexical descriptions or more user-based
information than the other. For example, classiﬁcation descriptions of spatial features in OSM
data can be more precise and more understandable by non-specialists. There are several spatial
features in OSM data, such as shopping centers, hospitals and schools, which correspond to
collections or aggregations of spatial features in OSGB.

Using the matches, spatial features that are not matched can be found. The “not matched”
spatial features in one dataset contain information that does not exist in the other dataset. For
example, in the Paris case study, most OSM spatial objects are not matched and can be used to
help enrich lexical information in the IGN BD TOPO database. Figures 16–18 show three
examples in the Nottingham case, where spatial objects are not matched but their geometries
are matched. By going to the real places to check, we found that at the location shown in Figure
16, there is a shop called “New York Nails” but no “Las Vegas Nails”, so OSGB data is wrong
and out-of-date. At the location shown in Figure 17, both Network Rail Ltd. and the NEMS
Platform One Medical Practice exist and they are next door to each other. The NEMS Platform
One Medical Practice is new and has not been reﬂected in OSGB data. The location shown in
Figure 18 is called by people working there “Eastcroft Incinerator”. It is operated by Wastenot
Reclamation Ltd. whose location is somewhere else. In this case, OSM data and OSGB data
describe different aspects of the same location, and the OSM data provides more user-based
information which can help enrich OSGB data.

As explained in Section 1, OSGB collects information about real-world changes from a
individual

variety of sources, such as major construction companies,

local authorities,

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

20 H Du, N Alechina, M Jackson and G Hart

Figure 16 The geometries of the Las Vegas Nails in OSGB data (stippled) and the New York Nails
in OSM data (solid) are BEQ-matched

Figure 17 The geometries of the Network Rail Ltd. in OSGB data (stippled) and the NEMS Plat-
form One Medical Practice in OSM data (solid) are BEQ-matched

surveyors, aerial imagery, as well as reports from the general public. As illustrated by the exam-
ples above, the unmatched OSM spatial features have the potential to comprise a complemen-
tary source of change intelligence. This OSM change intelligence may not be as accurate as the
others, but it is free and can capture not only major changes but also many minor changes in
buildings and roads noticed by OSM contributors, as well as changes in function or purpose. It
is difﬁcult for OSGB to capture such minor changes and functional changes using current meth-
ods. Using the OSM change intelligence seems promising but needs more advanced techniques
for validating the correctness of crowd-sourced data; it also needs to be tested in practice.

Figure 18 The geometries of the Wastenot Reclamation Ltd. in OSGB data (stippled) and the East-
croft Incinerator in OSM data (solid) are BEQ-matched

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

A Method for Matching Crowd-sourced and Authoritative Geospatial Data

21

6 Conclusions

In this article, we present a generic method for matching crowd-sourced and authoritative geo-
spatial data. It generates sameAs and partOf matches between spatial objects using both loca-
tion and lexical information, and veriﬁes consistency of matches using reasoning in qualitative
spatial and description logic. The method is applied for matching OSM, OSGB and IGN data.
For the Nottingham case, increasing the level of tolerance from 1 to 80 m, the precision falls
slowly and is always (cid:2) 0.8; the recall increases and converges at 0.85. For the Paris case, using
40 m as the level of tolerance, a precision of 0.88 and a recall of 0.83 are achieved. Theoreti-
cally, the method presented can be used to match objects having polygonal, linear or point geo-
metries. As future work, the generality of this method will be tested further by matching point
or linear spatial features. In addition, we will use matches for enriching and updating geospa-
tial data, and minimize the amount of human effort required during this process.

References

Anand S, Morley J, Jiang W, Du H, Jackson M J, and Hart G 2010 When worlds collide: Combining Ordnance
Survey and OpenStreetMap data. In Proceedings of Association for Geographic Information GeoCommun-
ity Conference, Stratford-Upon-Avon, UK

Comber A, Schade S, See L, Mooney P, and Foody G 2014 Semantic analysis of citizen sensing, crowdsourcing
and VGI. In Proceedings of the Seventeenth AGILE International Conference on Geographic Information
Science, Castell(cid:2)on, Spain

Du H 2015 Matching Disparate Geospatial Datasets and Validating Matches using Spatial Logic. Unpublished
PhD Dissertation, School of Computer Science, University of Nottingham (available at: http://eprints.not-
tingham.ac.uk/28982/1/Thesis-HeshanDu-2015.pdf)

Du H and Alechina N 2014a A Logic of part and whole for buffered geometries. In Proceedings of the Twenty-

ﬁrst European Conference on Artiﬁcial Intelligence, Prague, Czech Republic: 997-98

Du H and Alechina N 2014b A Logic of part and whole for buffered geometries. In Proceedings of the Seventh

European Starting AI Researcher Symposium, Prague, Czech Republic: 91-100

Du H, Alechina N, Hart G, and Jackson M J 2015a A tool for matching crowd-sourced and authoritative geospa-
tial data. In Proceedings of the International Conference on Military Communications and Information Sys-
tems, Cracow, Poland, pages 1–8

Du H, Alechina N, Jackson M, and Hart G 2013 Matching formal and informal geospatial ontologies. In Van-
denbroucke D, Bucher B, and Crompvoets J (eds) Geographic Information Science at the Heart of Europe.
Berlin, Springer Lecture Notes in Geoinformation and Cartography: 155–71

Du H, Anand S, Alechina N, Morley J G, Hart G, Leibovici D G, Jackson M J, and Ware J M 2012 Geospatial infor-
mation integration for authoritative and crowd-sourced road vector data. Transactions in GIS 16: 455–76
Du H, Jiang W, Anand S, Morley J, Hart G, and Jackson M J 2011 An ontology-based approach for geo-
spatial data integration. In Proceedings of the Twenty-ﬁfth International Cartography Conference, Paris,
France

Du H, Nguyen H H, Alechina N, Logan B, Jackson M J, and Goodwin J 2015b Using qualitative spatial logic for
validating crowd-sourced geospatial data. In Proceedings of the Twenty-ninth AAAI Conference on Artiﬁ-
cial Intelligence, Austin, Texas: 3948-53

Fan H, Zipf A, Fu Q, and Neis P 2014 Quality assessment for building footprints data on OpenStreetMap. Inter-

national Journal of Geographical Information Science 28: 700–19

Geospatial PR 2014 National Mapping, Cadastral and Land Registry Authorities Look to Future Role as Geospa-

tial Brokers. WWW document, http://geospatialpr.com/2014/10/14

Girres J F and Touya G 2010 Quality assessment of the French OpenStreetMap dataset. Transactions in GIS 14:

435–59

Goodchild M F 2007 Citizens as sensors: The world of volunteered geography. GeoJournal 69: 211–21
Heipke C 2010 Crowdsourcing geospatial data. Journal of Photogrammetry and Remote Sensing 5: 550–57
Huh Y, Yang S, Ga C, Yu K, and Shi W 2013 Line segment conﬁdence region-based string matching method for

map conﬂation. Journal of Photogrammetry and Remote Sensing 78: 69–84

ISO Technical Committee 211 2003 ISO 19107:2003 Geographic Information – Spatial Schema. Geneva.

Switzerland, International Organization for Standardization Technical Report

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

22 H Du, N Alechina, M Jackson and G Hart

Jackson M J, Rahemtulla H, and Morley J 2010 The synergistic use of authenticated and crowd-sourced data for
emergency response. In Proceedings of the Second International Workshop on Validation of Geo-
Information Products for Crisis Management, Ispra, Italy: 91-9

Koukoletsos T, Haklay M, and Ellul C 2012 Assessing data completeness of VGI through an automated matching

procedure for linear data. Transactions in GIS 16: 477–98

Li L and Goodchild M F 2011 An optimisation model for linear feature matching in geographical data conﬂation.

International Journal of Image and Data Fusion, 2: 309–28

Ludwig I, Voss A, and Krause-Traudes M 2011 A comparison of the street networks of Navteq and OSM in Ger-
many. In Geertman S, Reinhardt W, and Toppen F (eds) Advancing Geoinformation Science for a Changing
World. Berlin, Springer Lecture Notes in Geoinformation and Cartography: 65–84

Mustire S and Devogele T 2008 Matching networks with different Levels of Detail. Geoinformatica 12: 435–53
OpenStreetMap 2014 OpenStreetMap. WWW document, http://www.openstreetmap.org
Ordnance Survey 2014a Ordnance Survey. WWW document, http://www.ordnancesurvey.co.uk
Ordnance Survey 2014b Agency Performance Monitors: Ordnance Survey’s Performance Targets. WWW docu-

ment, http://www.ordnancesurvey.co.uk/about/governance/agencyperformance-monitors.html

Safra E, Kanza Y, Sagiv Y, Beeri C, and Doytsher Y 2010 Location-based algorithms for ﬁnding sets of corre-
sponding objects over several geo-spatial data sets. International Journal of Geographical Information Sci-
ence 24: 69–106

Safra E, Kanza Y, Sagiv Y, and Doytsher Y 2013 Ad hoc matching of vectorial road networks. International Jour-

nal of Geographical Information Science 27: 114–53

Sirin E, Parsia B, Grau B C, Kalyanpur A, and Katz Y 2007 Pellet: A practical OWL-DL Reasoner. Web Seman-

tics: Science, Services and Agents on the World Wide Web 5: 51–3

Tong X, Liang D, and Jin Y 2014 A linear road object matching method for conﬂation based on optimization and

logistic regression. International Journal of Geographical Information Science 28: 824–46

Tong X, Shi W, and Deng S 2009 A probability-based multi-measure feature matching method in map conﬂation.

International Journal of Remote Sensing 30: 5453–72

Walter V and Fritsch D 1999 Matching spatial data sets: A statistical approach. International Journal of Geo-

graphical Information Science 13: 445–73

Yang B, Zhang Y, and Lu F 2014 Geometric-based approach for integrating VGI POIs and road networks. Inter-

national Journal of Geographical Information Science 28: 126–47

Yang B, Zhang Y, and Luan X 2013 A probabilistic relaxation approach for matching road networks. Interna-

tional Journal of Geographical Information Science 27: 319–338

VC 2016 John Wiley & Sons Ltd

Transactions in GIS, 2016, 00(00)

