International Journal of Geographical Information
Science

ISSN: 1365-8816 (Print) 1362-3087 (Online) Journal homepage: http://www.tandfonline.com/loi/tgis20

A hierarchical approach to distance calculation
using the spread function

EN-HUI LIANG & SHIH-GANG LIN

To cite this article: EN-HUI LIANG & SHIH-GANG LIN (1998) A hierarchical approach to distance
calculation using the spread function, International Journal of Geographical Information Science,
12:6, 515-535, DOI: 10.1080/136588198241653

To link to this article:  http://dx.doi.org/10.1080/136588198241653

Published online: 06 Aug 2010.

Submit your article to this journal 

Article views: 72

View related articles 

Full Terms & Conditions of access and use can be found at
http://www.tandfonline.com/action/journalInformation?journalCode=tgis20

Download by: [University of the Sunshine Coast]

Date: 04 August 2017, At: 12:10

int. j. geographical information science, 1998, vol. 12, no. 6, 515± 535

Research Article

A hierarchical approach to distance calculation using the
spread function

EN-HUI LIANG
Department of Information Management Tamkang University 151,
Ying-Chuan Road, Tamshui, Taiwan, Republic of China
email: ehliang@mail.im.tku .edu.tw

SHIH-GANG LIN
Department of Information Management Tamkang University 151,
Ying-Chuan Road, Tamshui, Taiwan, Republic of China
email: steel@mail.im.tku.edu .tw

(Received 13 January 1997; accepted 21 December 1997 )

Abstract. The spread function is a powerful operation for analysing a wide range
information systems (GIS). One
of phenomena considered in geographical
important and common application of the spread functions is the calculation of
distance on a map. Mathematical morphology is a technique extensively used in
the area of image processing, and it has been applied to calculating distance using
the spread function. Unfortunately, its computation time is extremely long. In
this paper, we propose to reduce the computation time by using a hierarchical
data structure. The proposed approach and algorithm are presented and experi-
mental results demonstrate that a substantial speed up in computation time can
be obtained.

1.

Introduction
Geographical information systems (GIS) are rapidly being implemented within
government and industry. They allow users to store, display and manipulate large
volumes of geographic data. Distance calculation is an important task in a GIS.
Performing this task is usually achieved by a region expansion operation ( Tomlin
1990). As discussed in Arono(cid:128) ( 1989), the spread function is one of fundamental
analytical operations in GIS. Its operation can be thought of as moving step-by-
step outward in all directions from one or more starting points. Hence, it is a region
expansion operation and the radius of expansion is at the rate of one unit per each
step. It is often used to evaluate the distance between di(cid:128) erent points over a surface
in GIS applications. At each point, a running total is kept by accumulating with
distance, such that the accumulated value is the distance from the starting point.
That is, the distance is accumulated by moving outward to the adjacent cells one at
a time in every direction.

Distance is also an important concept in many ® elds including computer vision,
pattern recognition and image processing. In addition to the Euclidean distance,
City-block and Chessboard distances are often used ( Rosenfeld and Pfaltz 1968). A
distance transformation converts a binary digital image, consisting of black and
white pixels into an image where each white pixel has value which is equal to the

1365± 8816/98 $12´00 Ñ

1998 Taylor & Francis Ltd.

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 516

E.-H. L iang and S.-G. L in

distance to its nearest black pixel. Approaches to distance transformations can be
found in Rosenfeld and Pfaltz ( 1968 ) and Sharaiha and Christo® des ( 1994). A survey
of existing distance transformations is discussed in Borgefors ( 1984). In fact, the
distance calculation used in this paper has the same meaning as the distance
transformation.
Flood ®

lling ( Foley et al. 1996 ) is an operation of assigning a speci® c value to
all the points contained in a region. The order of assigning values to the points is
not particularly de® ned. Obviously, this di(cid:128) ers from the nature of the spread function
in which the values are calculated and then assigned one layer at a time. Hence, the
¯ ood ®

lling operation is not suitable for the spread function.

Mathematical morphology was ® rst studied by Matheron (1975 ) and extended
by Serra ( 1982) and Sternberg ( 1986). Mathematical morphology has been applied
ltering, edge detection,
to many areas of image processing such as nonlinear image ®
noise suppression, shape representation, smoothing, skeletonization and coding.
Object recognition, image segmentation and industrial inspection can be achieved
by using mathematical morphology as well. One important feature of mathematical
morphology is that complex and useful image tasks can be expressed in terms of
basic morphological image operations.

When a map is used for distance calculation, every point on the digital representation
of the map is represented by a value, the distance. Hence, a map can be treated as
a grey scale image from the viewpoint of image processing. Liang ( 1994 ), found that
the distance calculation based on the spread function could be directly implemented
using mathematical morphology and a direct method was proposed, but the com-
putation time of this method is very long when run on a general purpose sequential
computer. In this paper, we propose an approach to perform the distance calculation
more e(cid:129) ciently in comparison with the direct method.

For many image processing tasks, special data structures for image data
representation have led to the development of e(cid:129) cient algorithms to reduce the
computation time. The hierarchical data structure named pyramid ( Tanimoto and
Pavlidis 1975 ) is a representation scheme that recursively divides an image into
smaller partitions for coarse-to-® ne representation. Many image processing tasks
have been designed using this data structure, such as edge detection ( Tan and Loh
1993), shape computation and region growing algorithms. The advantage of the
hierarchical approach is that their use leads to aggregation resulting in algorithms
whose execution times are proportional to the number of aggregated units (e.g.
blocks) rather than to the actual size of the aggregated units (e.g., the number of
pixels in a block). We propose a new approach for performing grey scale morpho-
logical processing using the pyramid data structure to perform distance calculation
based on the notation of the spread function.

Basically, the idea of our approach is to e(cid:129) ciently ® nd the set of points
immediately adjacent to the pixels whose distances has been decided, and then
calculate the distance between each of them and a starting point. We utilize the
pyramid data structure to locate the expanded area of the region expansion operation
in the spread function. Ang et al. ( 1990 ) presented an algorithm to perform region
expansion in images that are represented by quadtrees. The e(cid:129) ciency of this
algorithm depends on the number of the merging clusters. The performance of
this algorithm has more improvement when the radius of expansion increases since
there are fewer merging clusters. However, the radius of expansion is 1 unit at each
step in the implementation of the spread function. Hence, there will be more merging

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 A hierarchical approach to distance calculation

517

clusters and the improvement is not signi® cant if the spread function is implemented
using this algorithm.

The paper consists of seven sections. In section 2, basic operations of morphology
and the spread function are reviewed. In section 3, we discuss the implementation
of the spread function using morphological algorithm for distance calculation.
In section 4, we present the proposed hierarchical approach and algorithm based
on mathematical morphology to implement
the distance calculation using the
spread function. Section 5 gives the algorithm analysis. The comparison between
the hierarchical approach and the direct method is also discussed. Section 6 presents
the experimental results and section 7 gives the conclusion.

2. Review of basic operations of morphology and spread function
2.1. Morphological dilation and erosion

There are generally two classes of morphological image operations de® ned: binary
morphology and grey scale morphology, for binary imagery and grey scale imagery,
respectively.

Most morphological transforms can be de® ned in terms of two operations:
erosion and dilation. We will present these operations for both binary and grey scale
morphology. Both dilation and erosion are performed with two operands. Usually,
the ® rst operand is referred to as the image object, while the second one is the
structuring element.

Binary morphological erosion and dilation are de® ned as set transformations
that shrink and expand a set, respectively. Haralick et al. ( 1986) de® ned mathematical
dilation by the equation:

X C Q = {x + q: x×X and q×Q }

Let (Q )t denote the translation of Q by t. That is, (Q )t = {q + t: q×Q }. Erosion is
the morphological dual to dilation. The erosion of X by Q is the set of all points t
for which t + q×X for every q belonging to Q . Mathematically, erosion of X by Q
is de® ned by the equation:

X D Q = {t: t + q×X for every q×Q }

An example of the binary dilation and erosion in a two dimensional shape is
discussed as follows. In ® gure 1, the coordinate system we use is (row, column)
’ represents the origin ( 0, 0). Let X and Q be two sets of
and the symbol `¯
points in the two dimensional space, and X = {( 1, 1),
( 3, 1) } and
Q = {( 0, 0 ), (0, 1), ( 1, 0) }. X C Q ={(1, 1), (1, 2), ( 1, 3), (2, 1), (2, 2), ( 3, 1), (3, 2), (4, 1) }
and X D Q = {( 1, 1 ) }.

( 2, 1),

( 1, 2),

( 1)

( 2)

Figure 1. An example of binary dilation and erosion.

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 (cid:129)
518

E.-H. L iang and S.-G. L in

Grey scale morphological operations are extensions of binary morphological
operations. Both the image object and the structuring element are represented by
functions rather than sets. The dilation of a grey scale image f by a grey scale
structuring ® ment k is denoted as f C k and is de® ned as follows.

f C k( p) = max{ f ( p Õ

q) + k( q ): q×K and p Õ

q×F }

( 3)

where p is an element in the two-dimensional domain of f , which is F, and K is the
two dimensional domain of k.

The erosion of a grey scale image f by a grey scale structuring element k is

denoted as f D k and is de® ned as follows.

f D k( p) = min { f ( p + q) Õ

k ( q): q×K and p + q×F }, where p×F

( 4)

An example of grey scale dilation and erosion operations are shown in ® gure 2.
f and k are shown in ® gure 2 (a) and (b), respectively. The origin of k is located at
the centre cell with the value 0. Results of dilation of f by k and erosion of f by k
are shown in ® gure 2 (c) and (d ).

2.2. Spread f unction

The spread function in GIS is an operation that moves outward in all directions
one step at a time from one or more starting points. A running total is kept by
accumulating with distance, so that the accumulated value represents the distance.
Sometimes the values may be a(cid:128) ected by constraint factors. Because values are
accumulated incrementally over relatively small spatial units, constraint factors with
irregular spatial distribution can be accommodated. For example, movement may
be stopped by barriers.

In the digital representation of a map, it is assumed that the cells are eight-
connected. That is, each cell has eight neighbours (adjacent cells) as shown in
® gure 3.

When the spread function is used to evaluate the travel distance from a designated
starting point, the distance is accumulated by moving outward to the adjacent cells
one layer at a time in every direction. An example is illustrated in ® gure 4. All the

Figure 2. An example of grey scale dilation and erosion.

Figure 3. Cell P and its eight-connected neighbours.

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 A hierarchical approach to distance calculation

519

Figure 4. The distance from the starting point.

cells adjacent and having a side in common with the starting point are assigned
the value 1, indicating 1 unit of distance (e.g., cell A). Cells diagonally adjacent to
the starting point are assigned a value of 1´4 (the diagonal distance between the
centres of the two cells, e.g., cell B). Cell C can be reached by moving diagonally
across two cells for a total distance of 2´8 units. It can also be reached by moving
down two cells and across two cells for a total distance of 4 units. The spread
function assigns the shortest distance in the case of multiple routings. This procedure
is used to calculate a value for each cell. Notice that the distance mentioned in the
example is not the straight-line distance because the spread function is performed
by moving one step at a time and the distance is obtained by accumulation.

As mentioned above, one constraint factor for the spread function is the barrier
in which no movement is allowed. For example, a lake would be a barrier to travel
by car. In ® gure 5, there are three lakes represented by `X’ in the map m . The path
from S to A must go around the lake between them. This factor will be considered
in this paper.

3. Direct method for the spread function using morphological operations

According to Liang ( 1994), the spread function can be directly implemented by
grey scale erosion. From the viewpoint of image processing, the original map can be
treated as a grey scale image if the cells on the map are used to represent distances,
and the points on the map are corresponding to the pixels ( picture elements) on the
image. Suppose the original imput map is represented by the grey scale image f
where the designated starting points have the grey scale value `0’, and all the other
points have the grey scale value `+2’. A structuring element s is chosen to interact
with f . s is de® ned as a 3 Ö
3 square with the origin at the centre. Let the origin
have the grey scale value `0’ and other elements of s are represented by the negative
values of the distances from the origin. s is shown in ® gure 6.

Figure 5. Map m.

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 520

E.-H. L iang and S.-G. L in

Figure 6. A structuring element s.

Let the original input map be represented by the grey scale image f and its
domain is F. The barrier is represented by Z, which is a subset of F. Since no
movement is allowed in the barrier, erosion operations will not be performed over
Z. The direct method for the spread function using morphological operations is
given as follows:

( 1) perform f D s ( p) for all p×F Õ Z.
( 2) repeat ( 1) until the result does not change any more.

In the implementation, we assume that the distance between the cells in the

barrier and the starting point is `+2’, and it will never change. This is in accordance
with the fact that no movement is allowed in the barrier and the cells in the barrier
will never be reached. Hence, the grey scale morphological erosion is not performed
on the cells in the barrier.

We use the original map m shown in ® gure 5 as an example. Cell S is the
starting point. Cells with the label `X’ are barrier points. Figure 7 (a) is the grey scale
representation of the map used for distance calculation. Figure 7 (b) is the inter-
mediate result after the ® rst iteration. Figure 7 (c) and (d ) are the intermediate results

Figure 7. An example of distance calculation.

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 A hierarchical approach to distance calculation

521

after the second and the third iterations, respectively. The ® nal result is shown in
® gure 7 (e).

4. Hierarchical approach

In this section, we present the hierarchical algorithm for distance calculation
using the spread function and mathematical morphology. Observing the execution
of the direct method presented in section 3, we notice that the ® nal result of distance
calculation is obtained after n iterations, where n > 1. Only the values of the
neighbouring cells of the starting points are changed at the ® rst iteration. At the
iteration i, i > 1, only the values of neighbouring cells of the cells which were changed
in the last iteration (iteration i-1) are possibly changed. The process continues until
no change occurs in the image and then the ® nal result is obtained. It is obvious
that only partial cells are possibly changed at each iteration. Hence the execution
time can be reduced substantially by only performing erosion operations on those
cells. The hierarchical algorithm presented in the paper is based on this idea.

For a given original map composed of 2NÖ

2N cells, two images, X and Y , of the
2N are created. There is a corresponding cell in X and Y to each
same size as 2NÖ
in the original map, respectively. X is used as its corresponding grey scale
cell
representation. The value of each cell
in X represents the distance as discussed
earlier. Y is used to represent the label of each cell in the original map. The label of
the cell is BLACK, WHITE, or YELLOW. Initially, cells in Y represented for starting
points have a label of BLACK colour, cells represented for barrier points have a
label of YELLOW colour, and all the remaining cells have a label of WHITE colour.
Based on the image Y , a hierarchical data structure called pyramid (see ® gure 8 )
is constructed. The pyramid has a multiple level representation Y i, for heirarchy
levels i = 0 to N . Y N at the top level is recursively divided into four (2 Ö
2) partitions,
and each partition is then divided into four smaller partitions until they reach the
0 = Y . That is, the image Y is at the bottom level of the pyramid.
level 0 where Y
Given a partition P at level i, i > 0, it has a set of descendant partitions at the lower
levels, from i-1 to 0, occupying some locations inside the region de® ned by P at each
level. At each level i where 0 < i < N , Y i consists of a set of BLACK, WHITE, GREY
and YELLOW partitions. Labels of partitions at levels higher than 0 are de® ned as
follows. For a partition P at level i, it is assigned a label of YELLOW if all four of
its child partitions at level i-1 have YELLOW colour, and the YELLOW partitions

Figure 8. Pyramid data structure.

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 522

E.-H. L iang and S.-G. L in

will never be processed. The label of P is BLACK if all four of its child partitions
have BLACK colour or have both BLACK and YELLOW colours. Similarly, the
label of P is WHITE if all four of its child partitions have WHITE colour or have
both WHITE and YELLOW colours. Finally, P is assigned a label of GREY if any
one of its child partitions has GREY colour or its four child partitions have both
BLACK and WHITE colours.

Based on the hierarchical approach, we also de® ne a multiple level representation
of structuring element Q i for hierarchy level
i = 0 to N . Hierarchical processing
begins at the top of the hierarchy, level N . While we process the Y i with structuring
element Q i from the top level N down to bottom level 0, we try to ® nd the partitions
whose child partitions need not be processed at the lower levels. At the next lower
level, only the child partitions of the remaining partitions are processed and more
partitions are found not to be processed further at the subsequent lower levels. It is
obvious that the con® guration of Q i is important because it is used to determine if
a partition and its descendant partitions will be processed. The process continues
0. Finally, their
until we reach the bottom level and a set of cells are left in Y
corresponding cells in X are processed using the grey scale erosion operation discussed
in section 3 to obtain an intermediate result. When we implement the hierarchical
process once, we accomplish one iteration of the spread function. We can then apply
the hierarchical approach iteratively to implement the spread function until the
intermediate result does not change any more. Using this approach, we try to ® nd
as many partitions as possible which do not need to be processed at lower levels in
the current hierarchy level. Only the remaining partitions are processed at the next
level. It is noted that both the direct method and the hierarchical approach have the
same number of iterations and the same intermediate result after each iteration.

it

4.1. Construction of multi-level structuring elements
is important

From the above discussion,

to decide on the multi-level
representation of the structuring element Q (Q i, for i = 0 to N ), and to de® ne the
rule for ® nding partitions whose child partitions need not be processed at the lower
levels. Here, we introduce how to obtain Q i, for i = 0 to N . Based on the grey scale
0, to
structuring element s (de® ned in ® gure 6), we ® rst de® ne an image at level 0, Q
be the set of points in the domain of s. That is, Q
3 square with the origin
at the centre. Hence, a point p at level 0 will not change its label and the value of
0
p is contained in the union of the set of WHITE cells
its corresponding cell in X if Q
0. It is also required to obtain a similar rule for
and the set of YELLOW cells in Y
partitions at the higher levels and that will be discussed in section 4.2. Before
determining the rule, we have to de® ne the structuring element Q i at level i based
on Q

0. Let the set T i be de® ned as

0 is a 3 Ö

Q x

T i= Yx×R i

where R i is the set of all image points in a 2iÖ
2i image block at level 0 and Q x , the
set Q displaced by the amount x. The level i representation of the structuring element
Q i can be obtained from the ith level partitions in the base-2 pyramid representation
of the set T i. Let the origin of Q i be the ith level partition in the base-2 pyramid
that corresponds to R i. Then Q i consists of a set of GREY partitions and a set of
BLACK partitions. Both BLACK and GREY partitions are considered as elements

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 A hierarchical approach to distance calculation

523

of Q i and we do not make any distinction between them in the hierarchical algorithm
described later. For the structuring element s, the construction of a multi-level
structuring element is shown in ® gure 9. It is observed that we got the same
structuring element at each level. That is, Q i, for i = 0 to N , is also a 3 Ö
3 square
with the origin at the centre.

4.2. Hierarchical algorithm using the spread function

In this section, we precisely describe the hierarchical algorithm to implement the
spread function. Before discussing the hierarchical approach in detail, we examine
0 ( the image Y at the bottom level of the pyramid)
what should be done in X and Y
for each iteration. At each iteration, the values of the cells in X corresponding to
0 are considered and may be changed.
the neighbouring cells of BLACK cells in Y

Figure 9. Representation of structuring element at di(cid:128) erent hierarchy levels i = 0, 1 and 2.

(E

represents BLACK colour, D

represents GREY colour, and *

represents the origin.)

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 524

E.-H. L iang and S.-G. L in

The cells which are changed have a new label of BLACK colour. The labels of the
0 are changed to WHITE colour after each iteration. The cells
BLACK cells in Y
0 and the corresponding cells in X will never
with the label of YELLOW colour in Y
be processed since they represent the barriers in which no movement is allowed.
Hence, the label of the YELLOW cell will never change.

i,

As mentioned earlier, the hierarchical processing begins at the top level and
continues down to the bottom level of the pyramid. Y N is usually a single GREY
partition. Hence, the hierarchical processing begins at level N Õ 1 instead of level N
let W (Y i) and Y E(Y i)
in the hierarchical algorithm presented later. At level
represent the set of WHITE and YELLOW partitions in Y i, respectively. As we
know, only the cells adjacent to the cells with the label of BLACK colour may
change their values at the bottom level 0. Hence, a partition P at level i and its
p k (W (Y i) n Y E (Y i) )
descendant partitions will not change their labels and values if Q i
and they need not be processed at the lower levels. In other words, the child partitions
of a partition P at level i needs to be processed at the next lower level if there exists
any BLACK or GREY partitions in Q i
p. At the next lower level, more partitions are
found which need not be processed further in subsequent levels. Finally, at the
bottom level, a set of cells necessary to be processed are found and their correspond-
ing cells in X are processed using the grey scale erosion operation. Then X has the
intermediate result for this iteration. This process continues until the intermediate
result does not change any more, and the ® nal result is in X. While we ® nish the
spread function using hierarchical approach, we can get the same result as obtained
by direct method. It was proven in Liang and Wong ( 1993). It is noted that the
0 are changed. Hence, those cells have new labels for
labels of some of the cells in Y
the next iteration. However, the labels of the partitions at the higher levels of the
pyramid should also be updated based on the labels of their descendant cells at the
bottom level 0 before the next iteration starts. The colour of the new label
is
determined according to the discussion presented earlier in this section.

In the implementation of the hierarchical approach, the input pyramid initially
contains partitions labelled as 1, 9, 5, and 10 representing the BLACK, WHITE,
GREY and YELLOW partitions respectively. During processing, the colour for
some of the partitions would be changed. By assigning a unique label to each type
of colour change (see table 1), the algorithm can remember the original colour of a
partition before changes and this allows processing to continue using the same
pyramid. For example, a partition labelled as 1, 4 or 7 would be interpreted as
originally BLACK. On the other hand, after each iteration of hierarchical processing,
we can retrieve the colour of partitions in the pyramid after this iteration. For
example, a partition labelled as 1, 2 or 3 would be considered to have colour BLACK.
Notice that we never change YELLOW partitions in the pyramid. So the colour
change of YELLOW does not appear in table 1. Besides, the grey partitions never

Table 1. Colour change labels.

From

BLACK
GREY
WHITE

BLACK

1
2
3

To
GREY

4
5
6

WHITE

7
8
9

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 A hierarchical approach to distance calculation

525

appear in the bottom of pyramid. The following de® nitions and notations will be
used for the hierarchical morphological algorithm:

Notations de® ned for algorithm:
Original image and intermediate result:

BLACK = 1
GREY = 5
WHITE = 9
YELLOW = 10

BLACK * = 1, 2 or 3

GREY* = 4, 5 or 6

Partitions that will be converted to BLACK before the next iteration begins:

Partitions that will be converted to GREY before the next iteration begins:

Partitions that will be converted to WHITE before the next iteration begins:

WHITE* = 7, 8 or 9

Partitions originally labelled WHITE:

WHITE² = 3, 6 or 9

W (Y i) = the set of partitions labelled WHITE² at level i in the image pyramid.
Y E (Y i) = the set of partitions labelled YELLOW at level i in the image pyramid.
i represents the current hierarchy level number.
r represents the horizontal coordinate of the partition of interest at level i.
c represents the vertical coordinate of the partition of interest at level i.

The algorithm is implemented using a recursive call. We ® rst input the pyramid
representation Y i, 0<
i < N , the image X, the grey scale structuring element s, and
the multi-level structuring element Q i, 0<
i < N , and allocate a block of temporary
storage T EMP for the intermediate result during processing. The size of T EMP is
equal to the size of X, and there is a corresponding cell in T EMP for each cell in X.
The algorithm consists of routines H_Spread, UpdatePartition, Re_L abel, and Erosion.
It iteratively loops routine H_Spread and Re_L abel until the image does not change
any more. The loop ® rst invokes routine H_Spread with I = N Õ
1, and r = c = 0.
When the process of H_Spread reaches the bottom level, a set of cells that will
change their values are found. Their corresponding cells in image X are processed
by calling the routine Erosion. The routine Erosion performs the grey scale erosion
operation on a particular cell in X and returns the resulting value to the correspond-
ing cell in temporary storage T EMP. Routine UpdatePartition is called by routine
H_Spread to update the label of the current partition after the labels for its child
partitions have been decided.

Recursive routine Re_L abel is invoked with I = N Õ

1, and r = c = 0 after the
recursive routine H_Spread to convert the labels back to the original set of labels of
BLACK, WHITE, and GREY (or 1, 9, 5). In fact, we only process the partitions
whose labels have been changed. While the process reaches the bottom level of the
pyramid the cells in X that should change their values can be found according to
0, and their values are replaced by copying new values
the labels of the cells in Y
from T EMP. After Re_L abel, we ® nish the hierarchical process one iteration. The
process continues until the image X does not change any more. That is, it terminates
when there are no BLACK and GREY partitions in the pyramid. We will eventually
get the ® nal result of a spread function in image X. The algorithm is presented
as follows:

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 526

E.-H. L iang and S.-G. L in

Hierarchical algorithm for a distance calculation using the spread function
Input (global parameters):
Pyramid Y i, where 0<
Image X which contains starting points and barrier points.
Grey scale structuring element s with the origin ( 0, 0) at the centre (shown as
® gure 6).
Multi-level structuring element corresponding to s: Q i, where 0 <

i < N .

i < N .

Temporary storage T EMP, of the same size as X.
Steps:
( 1) while (any partition in Y NÕ 1 is BLACK or GREY)

{H_Spread (N Õ
Re_L abel (N Õ

1, 0, 0)
1, 0, 0) }

( 2) image X is the ® nal result.
H_Spread (i, r, c)
if (i Þ 0)

then /* not at the bottom level in pyramid */

for (m = 2*r; m <
for (n = 2*c; n <

( 2*r) + 1; m = m + 1 )
( 2*c)+ 1; n = n + 1 )

if (Q i

then {H_Spread (i Õ

[m,n] 5/ (W (Y i) n Y E (Y i) ) )
1, m , n)
Y i [m , n] = UpdatePartition (i, m , n) }

else /* at the bottom level in pyramid */

for (m = 2*r; m <
for (n = 2*c; n <

( 2*r) + 1; m = m + 1 )
( 2*c)+ 1; n = n + 1 )
0 [m , n] = WHITE) and (Q 0
then {T EMP [m , n]= Erosion (m , n)

if ( (Y

[m,n] 5/ (W (Y

0 ) n Y E (Y

0 ) ) )

if (T EMP [m , n]Þ X [m , n]) /* changed by erosion */

then Y

0 [m , n]= 3}

else

if (Y

0 [m , n]= BLACK )

then {T EMP [m , n]= Erosion (m , n)
if (T EMP [m , n]= X [m , n]) /* not changed by erosion */

then Y

0 [m , n]= 7}

UpdatePartition (i, m , n)

if (Y i[m , n]= WHITE)

then {if (all four child partitions of Y i [m , n] have BLACK* or have both

BLACK * and 10)
then return ( 3)
else if (all four child partitions of Y i [m , n] have WHITE* or have both

WHITE* and 10)
then return ( 9)
else return ( 6) }

else if (Y i [m , n]= BLACK )

then {if (all four child partitions of Y i [m , n] have BLACK* or have both

BLACK* and 10)
then return ( 1)
else if (all four child partitions of Y i [m , n] have WHITE*

or have both WHITE* and 10)
then return ( 7)
else return ( 4) }

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 A hierarchical approach to distance calculation

527

else if (Y i [m , n] = GREY )

then {if (all four child partitions of Y i [m , n] have BLACK* or

have both BLACK * and 10)
then return ( 2)
else if (all four child partitions of Y i [m , n] have
WHITE* or both WHITE* and 10)
then return ( 8)
else return ( 5) }

if (Y i [m , n]= GREY*) /* Convert to the label that it should be labelled */

then {Y i [m , n]= GREY /* and then process down to its child

Re_L abel (i, m , n)

if (i Þ 0)
then /* not at the bottom level in pyramid */

for (m = 2*r; m <
for (n = 2*c; n <

( 2*r) + 1; m = m + 1 )
( 2*c) + 1; n = n + 1 )

partitions. */
Re_L abel (i Õ 1, m , n) }

else if (Y i [m , n] = 7 or 8)

then {Y i [m , n] = WHITE
Re_L abel (i Õ
else if (Y i [m , n] =2 or 3)

1, m , n) }

then {Y i [m , n] =BLACK
Re_L abel (i Õ

1, m , n) }

else /* at the bottom level in pyramid */

for (m = 2*r; m <
for (n = 2*c; n <

( 2*r) + 1; m = m + 1)
( 2*c) + 1; n = n + 1)

then {Y

0 [m , n]= BLACK
X [m , n] = T EMP [m , n] }

else if (Y

0 [m , n]= 7)

then Y

0 [m , n]= WHITE

Erosion (m , n)

MinDist = X [m , n]
for (a = Õ

1; a < 1; a = a + 1 )

for (b = Õ

1; b # 1; b = b + 1 )

if (X [m + a, n + b]Õ

s [a, b] <MinDist)

then MinDist = X [m + a, n + b]Õ

s [a, b]

return (MinDist)

4.3. Illustrative example

if (Y

0 [m , n] = 1 or 3) /* The resulting value has been changed by erosion */

/* copy the resulting value */

In this section, we show an illustrative example of the hierarchical approach for
a distance calculation using the spread function. Consider an example of hierarchical
approach for a 16 Ö
16 input image X and a structuring element (shown in ® gure 6).
N , therefore, equals 4 in the pyramid representation for the input image. Figure 10
shows the image X and the initial pyramid representation Y i, 0<
i < 4. In X, the
starting points have the value 0. The remaining points have the value `+2’. We
proceed with the pyramid starting at hierarchy level i = 3, then proceed to levels
i = 2, 1, 0. Figures 11 and 12 shows the contents of the image X and of the pyramid
after the ® rst and second iterations of the hierarchical processing from level 3 down

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 528

E.-H. L iang and S.-G. L in

Figure 10. The image X and the initial pyramid representation Y i (i= 0, 1, 2, 3 ).

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 A hierarchical approach to distance calculation

529

Figure 11. The image X and the pyramid representation Y i (i = 0, 1, 2, 3) after the ® rst iteration.

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 530

E.-H. L iang and S.-G. L in

Figure 12. The image X and the pyramid representation Y i (i= 0, 1, 2, 3) after the second iteration.

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 A hierarchical approach to distance calculation

531

to level 0, respectively. The contents of X after the third iteration is shown in
® gure 13. In ® gure 10, the cells in the grey area are visited during the process of the
® rst iteration. In total, 140 cells are visited. Similarly, the cells in the grey area in
® gures 11 and 12 are visited during the process of the second and the third iterations,
respectively. A total of 204 cells are visited in the second iteration and 244 cells are
visited in the third iteration. If we continue to perform the hierarchical approach
iteratively until the image X does not change any more, the result of the distance
calculation can be found in the image X.

If the direct method is used, 256 cells are visited for each iteration. It is obvious
that the hierarchical approach visits fewer cells. Certainly, it is possible that more
than 256 cells are visited in the fourth or the ®
fth iteration. However, the number
of cells visited using the hierarchical approach is much fewer than using the direct
method if the image is reasonably large, which is the case in most GIS applications.

5. Algorithm analysis

The pyramid data structure used in the proposed hierarchical approach consists
of equal-sized partitions at multiple levels. Each level in the pyramid representation
for the input image consists of BLACK, WHITE, GREY, and YELLOW partitions.
The space complexity for the proposed approach is the total number of partitions
in the pyramid representation Y i, 0<
i < N , the image X, and the temporary image
T EMP. The total number of partitions in the pyramid is equal to 4/3*22N, and the
total number of points in the image X is equal to 22N. In the implementation, the
data type de® ned for the partitions in the pyramid is character, which occupies
1 byte of memory, and the data type de® ned for the cells in the image X and the
temporary image is ¯ oat, which occupies 4 bytes of memory. Therefore, the total

Figure 13. The image X after the third iteration.

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 532

E.-H. L iang and S.-G. L in

space that the proposed approach used is equal to

4

3

*22N + 2*4*22N=

2N

*2

( bytes)

28

3

The space complexity of the direct method of Liang ( 1994 ) is the memory required
by the original input map, the image X for processing and a temporary image. Then
the total space for the direct method used is

1*22N + 2*4*22N= 9*22N ( bytes)

So the hierarchical approach in practice uses 1/27 additional working space than

the direct method.

As mentioned earlier, the pyramid data structure has been widely used in the
area of image processing and other related applications. It seems that it is only
2N cells. However, this limitation can be
applicable to the image composed of 2NÖ
2N image. We can imagine that a
easily solved. Assume that image m is not a 2N Ö
2N image. A particular label is
group of cells are padded to m to make it a 2NÖ
assigned to the padded cells to indicate that they need not be processed. In our case,
the label YELLOW is assigned to the padded cells since YELLOW cells are barrier
points and will never be processed. Hence, the labels of the partitions at the higher
levels can be determined. However, the padded cells and the YELLOW partitions
at higher levels representing the padded cells are not really created and stored in
the implementation of the hierarchical approach. The hierarchical algorithm pre-
sented in the previous section can then be applied to an image not of the size 2NÖ
2N
with slight modi® cation.

We analyse the time complexity of the proposed approach in terms of the
total number of partitions visited by the hierarchical algorithm and the number of
iterations. We ® rst analyse the routines H_Spread and Re_L abel of the proposed
algorithm. Routine H_Spread visits the BLACK, GREY, and some of WHITE
partitions in the pyramid. Routine Re_L abel visits partitions with colour changes
and their descendant partitions. However, these partitions were all visited by routine
H_Spread. Therefore, the total number of partitions visited by routine Re_L abel is
no more than (or about the same as) the total number of partitions visited by routine
H_Spread. Then we can obtain the total number of partitions visited by H_Spread
and say that each partition is, at the worst, visited by both routines H_Spread and
Re_L abel.

The number of partitions visited in the hierarchical approach depends on the
nature of the input image Y to be processed. In the worst case all the partitions in
the pyramid have to be visited (assuming a totally random image with starting
points), the total number is 4/3*22N or 4/3 times the total number of partitions that
have to visited in the direct method. The worst case execution time is therefore of
order O ( 4/3*22N *M ), where M is the number of iterations performed by spread
function. However, for most applications that require analysis of the spread function,
we can assume that the input image Y has a reasonable number of starting points
and barriers and the number of partitions to be visited using the hierarchical
approach is considerably less than that required in the direct method (or 22N *M ).

For convenience of analysis, we introduce Q -black and Q -white partition. A
BLACK partition in the pyramid representation is called a Q -black partition if its
parent partition is of GREY colour. Similarly, a WHITE partition is called a Q -white

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 A hierarchical approach to distance calculation

533

partition if its parent partition is of GREY colour. Let the total number of GREY,
Q -black and Q -white partitions be G, B and W , respectively. It was shown that
G + B + W = (B + W ) Õ

1 )/3 (Samet 1981, 1982 ).

We also assume that a GREY partition, Q -black, or Q -white partition is equally
likely to appear in any position and any level in pyramid. It has been shown that
the average of the maximum number of partitions visited each time a Q -black or
Q -white partition is processed is bounded above by 14/3 in Liang and Wong ( 1993 ).
Hence, the number of partitions visited by routine H_Spread is the total number of
the GREY partitions, Q -white and Q -black partitions plus some of their descendant
partitions, or G + 14/3*B + 14/3*W , which is equivalent to 17/3*B + 17/3*W Õ
1/3
since G + B + W = ( 4*(B + W ) Õ 1)/3. Assume that M is the number of iterations
performed by the spread function. Therefore, the average execution time of the
proposed algorithm is of order S M
i=1 (Bi + W i), where B i and W i are the numbers of
Q -black and Q -white partitions in the pyramid in the ith iteration, respectively. For
most reasonable applications, which have a reasonable number of starting points,
B i+ W i is considerably less than the order of 22N, which is required in the direct
method for each iteration.

The number of starting points and their positions in the map certainly a(cid:128) ect the
number of iterations and the execution times of both of the direct method and the
hierarchical approach. However, both of them execute the same number of iterations
and obtain the same intermediate result for every iteration. The reason why a
substantial speed up in computation time can be obtained using the hierarchical
approach is that the cells possibly changing their values are located more e(cid:129) ciently
at each iteration. Hence, the dependence of the execution time on the number of
starting points and iterations is not a main issue in this paper.

6. Ex perimental results

Experiments are performed to compare the execution time of the hierarchical
approach and direct method. We use the structuring element s in ® gure 6 and a
256Ö
256 test image Y which contains four rectangular blocks of barrier points.
Coordinates of the upper-left and lower-right corners of each block are shown in
table 2. Four experiments are performed using both methods. Two starting points,
four starting points, 8 starting points and 16 starting points are used in each
experiment, respectively. Their coordinates on the x-axis and y-axis are shown in
tables 3, 4, 5 and 6. The experiments are performed on a Pentium 90 machine, and
programmed in MS Visual C++. The summary of the execution times for the spread
function using the hierarchical approach and the direct method is shown in table 7.
It is observed that the hierarchical approach is about 11± 25 times faster than the
direct method.

Table 2. Coordinates of upper-left and lower-right corner of 4 barriers.

Barrier 1

Barrier 2

Barrier 3

Barrier 4

Coordinate

upper-
left

lower-
right

upper-
left

lower-
right

upper-
left

lower-
right

upper-
left

lower-
right

x-axis
y-axis

45
60

60
120

120
50

140
62

195
20

223
68

55
80

78
220

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 534

E.-H. L iang and S.-G. L in

Table 3. Coordinates of two starting points (sp1 and sp2 ).

sp2

130
180

sp4

50
190

sp8

70
20

sp1

90
60

sp2

130
180

sp4

50
190

Coordinate

x-axis
y-axis

Coordinate

x-axis
y-axis

Table 4. Coordinates of four starting points (sp1, sp2, sp3 and sp4 ).

sp1

90
60

sp2

130
180

Table 5. Coordinates of eight starting points (sp1, sp2, ¼

and sp8 ).

Coordinate

x-axis
y-axis

sp1

90
60

sp3

190
40

sp5

100
210

Table 6. Coordinates of sixteen starting points (sp1, sp2, ¼

and sp16).

Coordi-
nate

x-axis
y-axis

sp
1

90
60

sp
2

sp
3

sp
4

sp
5

130
180

190
40

50
190

100
210

sp
6

30
90

sp
7

210
220

sp
8

70
20

sp
9

sp
10

sp
11

sp
12

sp
13

sp
15

sp
16

160
100

150
30

220
70

80
130

30
220

40
140

150
225

sp3

190
40

sp6

30
90

sp7

210
220

sp
14

20
40

Table 7. Summary of execution times (in seconds).

Number of starting points

2

229
9
25´4

4

174
10
17´4

8

130
10
13

16

106
9
11´8

Direct method
Hierarchical approach
Speed up

7. Conclusion

We have presented a hierarchical approach to perform morphological processing
for a distance calculation using the spread function, and presented an hierarchical
2N test image, the average execution
algorithm based on this approach. For a 2NÖ
time of the proposed algorithm was shown to be of order S M
i=1 (B i+ W i), where B i
and W i are the numbers of Q -black and Q -white partitions in the pyramid in the ith
iteration, respectively. M is the number of iterations in execution of the algorithm.
For most applications that require distance calculation in GIS, S M
i=1 (Bi + W i) is
typically signi® cantly less than 22N *M required in the direct method. Experiments
performed on a general purpose computer show that the computation time can be
reduced by using the hierarchical approach. The reduction in computation time, of
course, depends on the nature of the original map. It is expected that when the map

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 A hierarchical approach to distance calculation

535

contains a reasonable number of starting points and barriers, the hierarchical
approach for distance calculation can be used e(cid:128) ectively.

Acknowledgment

NSC 85-2213-E-032-005.

This work was supported by the National Science Council, R.O.C., under grant

References
Ang, C. H., Samet, H., and Shaffer, C. A., 1990, A new region expansion for quadtrees.
IEEE T ransactions in Pattern Analysis and Machine Intelligence, 12, 682± 686.
Aronoff, S., 1989, Geographic Information Systems: A Management Perspective (Ottawa,

Canada: WDL Publications).

Borgefors, G., 1984, Distance transformations in arbitrary dimensions. Computer V ision,

Graphics, and Image Processing, 27, 321± 345.

Foley, J. D., van Dam, A., Feiner, S. K., and Hughes, J. F., 1996, Computer Graphics (New

York: Addison-Wesley).

Haralick, R. M., Sterberg, S. R., and Zhuang, X., 1986, Grayscale Morphology, In
Proceeding of the IEEE Computer Society Conference on Computer V ision and Pattern
Recognition ( Los Almitos: IEEE Press), pp. 543± 550.

Liang, E. H., 1994, A morphological algorithm for the calculation of distance using a spread
function. In Proceedings of the 3rd International Colloquium of L IESMARS (Wuhan,
P. R. China), pp. 284± 293.

Liang, E. H., and Wong, E. K., 1993, Hierarchical algorithms for morphological

image

processing. Pattern Recognition, 26, 511± 529.

Matheron, G., 1975, Random Sets and Integral Geometry ( New York: Wiley & Sons Inc.).
Rosenfeld, A., and Pfaltz, J. L., 1968, Distance functions on digital pictures. Pattern

Recognition, 1, 33± 61.

Samet, H., 1981, Computing perimeters of regions in images represented by quadtree. IEEE

T ransaction Pattern Analysis and Machine Intelligence, PAMI-3, 683± 687.

Samet, H., 1982, Neighbor ® nding techniques for images represented by quadtree. Computing

Graphics and Image Processing, 18, 37± 57.

Serra, J., 1982, Image Analysis and Mathematical Morphology (New York: Academic Press).
Sharaiha, Y. M., and Christofides, N., 1994, A graph-theoretic approach to distance

transformations. Pattern Recognition L etters, 15, 1035± 1041.

Sternberg, S. R., 1986, Grayscale morphology. Computer V ision, Graphics, and Image

Tan, C. L., and Loh, S. K. K., 1993, E(cid:129) cient edge detection using hierarchical structures.

Processing, 35, 333± 355.

Pattern Recognition, 26, 127± 135.

Tanimoto, S. L., and Pavlidis, T., 1975, A hierarchical data structure for picture processing.

Computing Graphics and Image Processing, 4, 104± 119.

Tomlin, C. D., 1990, Geographic Information Systems and Cartographi c Modeling (Englewood

Cli(cid:128) s, New Jersey: Prentice Hall ).

Downloaded by [University of the Sunshine Coast] at 12:10 04 August 2017 