Transactions in GIS, 1999, 3(3): 207–220

Research Article

Developing a Virtual Reality User
Interface (VRUI) for Geographic
Information Retrieval on the Internet

Iain M Brown
GIS Research Centre, University of Glamorgan

Abstract
The exponential growth of the World Wide Web provides the potential for greatly
enhanced dissemination of global data-sets and information. However,
the
concurrent rise in data supply also means that new tools are required for
information retrieval beyond the conventional graphical user-interface (GUI). This
paper reviews the development of web-based GIS functionality and demonstrates
how the multi-dimensional capabilities of VR tools can bring enhanced data
exploration and visualisation onto the Internet by providing a more powerful 3D
user-interface to identify and query data-sets. One key to the development of such
interactive tools is the link between the Virtual Reality Modelling Language
(VRML) and the JAVA platform, which together allow dynamic 3D content to be
accessed through a web browser. Exploration of
large diverse data-sets is
demonstrated by a prototype system allowing the integration of terrain-based
geoscience data-sets for scientific visualisation and education. The current
limitations of the technology are discussed and further suggestions are made to
improve the information content of the Internet.

1 Introduction

Effective management of the environment relies upon manipulating and analysing
spatial data from many different sources and timescales. Hence, as ever increasing
quantities of data become available,
the opportunity for better awareness of
sustainable resources and human impacts around the globe becomes possible. This
growth in data supply is particularly demonstrated by developments in remote sensing
where new sensors are providing increased spatial and temporal resolution of imagery.

Address for correspondence: Iain M Brown, GIS Research Centre, School of Computing,
University of Glamorgan, Wales CF37 1DL, UK. Email: IBrown@glam.ac.uk

(cid:223) 1999 Blackwell Publishers, 108 Cowley Road, Oxford OX4 1JF, UK and
350 Main Street, Malden, MA 02148, USA.

208

Iain M Brown

With the forthcoming new generation of satellites capable of providing resolutions of
1–3m per pixel, terabytes of data will be generated and archived daily. Increased
environmental awareness also means that more regular terrestrial surveys are being
completed too, especially in vulnerable areas.

Paradoxically, increased data availability does not necessarily provide an improved
information supply. In fact, it could actually hinder environmental monitoring as good
analysis and planning requires efficient access to the relevant data-sets and finding the
data can often prove problematic and time-consuming. Hence, there is a strong need
for better methods to explore and visualise data from a multitude of sources together
with more intuitive user-interfaces to assist in retrieving the data (Rhyne 1997). At the
same time, there also exists a powerful incentive to develop a wider user-base because
of
the high cost of acquiring data and the multi-disciplinary nature of much
environmental research.

The exponential growth of the global Internet clearly offers great scope for both
access to and dissemination of spatial data. Its usability has been greatly improved by
the development of the HyperText Markup Language (HTML) and the World Wide
Web (WWW) for serving and linking together related documents, so that information
can now be accessed more expediently by a web browser interface. In addition to
improving the potential for professional research collaboration, the WWW is now also
being recognised as a significant educational resource, providing a diverse and
potentially stimulating new media to promote extended study and research (Foote
1997). In addition new projects developing innovative concepts, such as the Virtual
Library and Virtual Atlas, have proved popular in disseminating geographical
information to a wider audience and demonstrate how the integration of new
technology can be used to build better public information systems (e.g. Smith 1996;
Carver et al 1997; Moore 1997).

However, when viewed in terms of a hypermedia resource (Bieber et al 1997), the
WWW is often rather ineffective in locating and accessing both data and information,
because it is mainly text and document-based, and conventional search engines are
frequently very inefficient. Accessing spatial data is particularly problematic because
visual cues, such as maps, generally prove more efficient than a text-based interface,
and this has encouraged the development of hyper-maps on the WWW (Kraak and van
Driel 1997). Psychological studies of the WWW have shown that such maps can aid
navigation and act as the catalyst for spatial knowledge (McDonald and Stevenson
1998), yet they still remain very under-utilised. This paper shows how the hypermap
concept can be extended into 3D visualisation allowing relevant data-sets to be located
and explored more effectively, and extending the conventional graphical user interface
(GUI)
Internet. Such data
visualisation tools are intended for initial exploratory analysis rather than to provide
a full GIS functionality: once located, data can then be subsequently downloaded to a
local machine for more specialised processing, if required.

to link more flexibly with the hyper-dimensional

In the example application, the physical terrain is used to provide an intuitive
interface to explore associated geoscience data-sets (e.g. from remote sensing, soils,
hydrology, geology, etc). Therefore this approach can be compared and contrasted
with other papers examining the applicability of VR modelling to GIS which have
mainly concentrated on urban environments and the 3D city-scape (e.g. Martin and
Higgs 1997; Fairbairn and Parsley 1997; Doyle et al 1998), although Mitas et al (1997)
discussed its use for modelling landscape processes.

(cid:223) Blackwell Publishers Ltd. 1999

A Virtual Reality User Interface for Geographic Information Retrieval

209

In the next section, the advantages and disadvantages of some of the current map-
based interfaces between GIS and the WWW are outlined. The following section then
introduces the development of multi-dimensional models and virtual worlds on the
WWW, and its integration with dynamic content using the JAVA program language.
An example application is then presented showing how a browser can manipulate and
explore multiple data-sets with a digital terrain model (DTM) and Virtual Reality User
the problems and future
Interface widgets as the front-end. Finally, some of
developments with the technology are discussed.

2 Web-based GIS

Client-server networks generally operate by local (client) machines requesting services
or data from a centralised server (Lilburne et al 1997; Orfali and Harkey 1997).
Although this has long been practical for local-area networks, the evolution of Internet
protocols (i.e. Tcp/Ip) has meant that it has now become a practical reality on wide-
area networks at a global scale. However, extracting information from spatial data
imposes particular demands on network performance with a major issue being how
much processing is done by the server or the client in the network; that is, should we
have a ‘‘fat’’ or ‘‘thin’’ client ? Another issue is that information is now often
distributed from several servers in the network.

Several systems have been developed which use the WWW to produce dynamic
maps on-the-fly driven by specific end-user requests; some of the packages used have
now been integrated with conventional GIS as commercial products (Limp 1997). The
de facto technique to deliver web-based material uses the front-end of an image map
and a related form in HyperText Markup Language (HTML) to send a query to a
server which processes a script using the Common Gateway Interface (CGI) and
returns the resulting image in a standard web format (e.g. GIF). However, despite the
simplicity and universality of CGI scripts they suffer the drawback for GIS that they are
restricted to a text-based interface and cannot handle geo-objects (e.g. points, lines,
polygons). Basic operations such as zooming and querying also require a new request
to be submitted to the server each time, and multiple requests from several users can
eventually result in an over-loaded server. Therefore a more effective technique than
CGI uses ‘‘plug-ins’’ which launch a special application module locally if a specific file-
type is chosen when browsing the Web, transferring data-processing operations such as
zooming and querying to the local client machine, and easing the over-loaded server.
Plug-ins have therefore been used quite successfully to visualise certain aspects of
spatial data-sets, (e.g. time-series) using formats such as Tcl/Tk or MacroMedia
ShockWave (e.g. Dykes 1997; Mitas et al 1997). However, despite their effectiveness,
plug-ins are non-standard and require the user to download and install separate
software, which can vary according to the local platform making a standard user
interface difficult to implement.

Many developers (e.g. Augusto et al 1997; Sorokine and Merzliakova 1998) now
agree that the most flexible and futuristic development for web-based visualisation
of spatial data appears to be the use of the JAVA platform (Arnold and Gosling
1998) because it potentially allows a standard and secure delivery to all machines on
the Internet. In this case, the ‘‘platform’’ consists of an object-oriented language
(JAVA), an application programming interface (API) that is operating-system

(cid:223) Blackwell Publishers Ltd. 1999

210

Iain M Brown

independent, and a low-level machine specification (the JAVA Virtual Machine) for
which compiled code is converted into bytecodes. Embedding the bytecodes inside a
HTML document allows code to be distributed over the web as applets which can
function as mini-utilities on a local machine. Applets can therefore be developed that
include basic functions such as zooming and querying and these are automatically
downloaded from server to client without the explicit installation required with
plug-ins. The object-oriented design of JAVA also means that it is very suitable for
GUI development, such as windows, menus and buttons. To ensure that such a GUI
can adapt to different platforms and their native layout managers, JAVA makes use
of the Abstract Windows Toolkit (AWT) which creates a non-specific format, only
scaling and implementing graphic objects when being interpreted within the local
Virtual Machine. A further advantage of object-orientation is that it allows inter-
operable components to be exchanged between different applications, which is a
prime consideration in the development of distributed information systems (DIS)
and the creation of Open GIS with shared resources (Lilburne et al 1997; Balonev et
al 1998).

3 Virtual Environments

3.1 Visualisation in Scientific Computing (ViSC)

The greater spatial awareness created by 3D models has become established within
scientific computing as providing an enhanced means of data exploration and
hypothesis generation for complex phenomena. Multi-dimensional visualisation
therefore provides a superior means of both exploring large data-sets and
communicating model results to others due to the richer user-interaction it enables
(e.g. Wolff and Yaeger 1994; Brown 1998). The principles of ViSC are now becoming
established in GIS, with an increased use of 3D models, such as digital terrain models
(DTMs) or CAD-based architectural models of cities (e.g. Hearnshaw and Unwin
1994), and also 4D time-series modelling in environmental monitoring and simulation
(Brown 1997). These 3D/4D models can provide a more realistic representation of real-
world environments and so improve the process of perception and cognition for
phenomena in those environments. However, 3D modelling has been generally
restricted to high performance workstations and specialist software, until the advent of
VRML which has suddenly brought it to desktop machines via low-cost browsers. By
implication, this means that we should now be able to bring the data exploration tools
of ViSC to a much wider user base as well.

3.2 Virtual Worlds and VRML

The Virtual Reality Modelling Language (VRML) provides a file format that has
now become the accepted WWW standard for multi-dimensional graphics,
representing the 3D analogue of the HTML used for serving WWW documents. It
therefore provides a technique for describing model geometry that is platform-
independent and does not require a high-performance computer. Models are usually
referred to as ‘‘virtual worlds’’ (hence the .wrl filename extension), and the most
popular method to view files at present is via a browser which acts as a plug-in to a

(cid:223) Blackwell Publishers Ltd. 1999

A Virtual Reality User Interface for Geographic Information Retrieval

211

standard web browser (e.g. Netscape Navigator, Internet Explorer); often web
browser installation now automatically includes a VRML browser so that separate
installation is not required.

In a GIS context, a basic description of the initial specification of the language is
provided by Martin and Higgs (1997). Models are built from a hierarchical set of
nodes which describe object geometry and other properties such as appearance (e.g.
colour, texture). Navigation through the 3D scene is enabled by ‘‘flying’’ and
‘‘walking’’ paradigms or target-based actions such as ‘‘examine’’ which allow
rotation and zooming of
the virtual camera. Developers also often provide
viewpoints or guided tours to ease initial exploration, and exploration of the
virtual world can be enhanced by hypertext ‘‘anchors’’ within it which link to other
files on the WWW, providing dynamic links to auxiliary information distributed at
other sites.

In this paper, we concentrate on the new functionality provided by VRML 2.0
(formalised as the VRML97 ISO standard: cf. Carey et al 1997). Although much of the
syntax remains unchanged from VRML 1.0, and the principles of progressive
geometry-building from simple primitives is still followed, the new specification has
enabled virtual worlds to be made both more compact and dynamic, making VRML a
more viable tool for exploring geographic information.

Compactness is important because one of the major problems limiting extended
use of virtual worlds at present is the large size of files, which considering the time
required to download, parse and then render a model, limits their applicability on a
congested narrow-bandwidth Internet. Hence, the most practical solution is often to
separately transfer the file to the hard disk of the local client machine before
interpreting it with the browser. This can prove useful for visualising individual
models, but it severely limits the role of VRML as a multi-dimensional conduit of web
information. Therefore, more attention needs to be addressed to file sizes and
for today’s Internet. Geometry-shrinking
structuring when developing a VRUI
programs and data compression techniques (e.g. gzip, binary format) are both
effective for this, but use of space-efficient structures can prove critical. Frequently,
automatic VRML converters (e.g. as provided in ARC/INFO 7.1) do not make best
advantage of these.

This issue can be demonstrated particularly well by the data structures used for
terrain models. The comparative advantages of grids versus triangulated irregular
networks (TINs) has been extensively discussed in the GIS literature. However, the
present situation for virtual worlds is that a grid structure (using the Elevation Grid
node introduced in VRML 2.0) generally proves more practical than using TINs and
indexed facets which was the only available method in VRML 1.0 (Figure 1). This is
despite the fact that TINs render faster than grids because rendering engines use
triangular primitives. The implicit data structure of a regular grid requires only the
height value to be specified once its spacing and extent are declared, whereas
irregular facets need explicit declaration of all x,y,z coordinates and also their
pattern of connectivity. Therefore using a grid results in a space-saving factor of
approximately 5–10, which, despite the greater adaptability of TINs to irregular
terrain,
important practical consideration when user-
interaction is critical. A third alternative is to use a lattice (triangulation of grid
squares), which renders fast but also produces large files (cf. Moore 1997 for a
review). As network bandwidth increases in the future, it is likely that TINs will

is currently the most

(cid:223) Blackwell Publishers Ltd. 1999

212

Iain M Brown

Figure 1 Once the extent is declared, the implicit structure of a grid (A) proves more
space effective than a TIN (B).

become more useful, especially with the use of a VIP algorithm to include the most
significant points of the terrain (Lee 1991).

Performance and interactivity of virtual worlds can also be improved by building
multi-resolution representations which relate to the scale of view. VRML enables
hierarchical structures such as variable terrain resolutions to be generated by using the level
of detail (LOD) control, so that at certain key range values from the surface, a finer grid is
loaded as the viewer approaches it. By dynamically linking the LOD of the parent file to
other in-line files, which contain the finer-gridded representations, only the terrain visible
at a certain scale is loaded and rendered, forming several inter-related compact worlds
rather than one impractical large one. Recently, this process has been optimised as a series
of prototype new VRML nodes, which allow switching in and out of memory of a LOD
hierarchy using a quad-tree structure (Reddy 1998) and is one of the future issues being
examined by the GeoVRML Working Group (1998) of the VRML Consortium.

3.3 Dynamic Worlds

3.3.1 Sensors and the Event Model
User-interaction can be included in virtual worlds by embedding reactive sensors within
them. The sensors have a geometric presence and, depending on their type, respond to
touch (i.e. mouse-click), observer proximity or inter-visibility. This stimulus produces
further behaviour by initiating an event that is then routed to other objects or related
content (e.g. sensor Ts1 in Figure 2). Events are a common user-interface concept to
describe the linking of a trigger activity to a desired response. We can therefore make a
landscape reactive by including sensor objects within it that produce a response such as
the generation of auxiliary information (e.g. display attribute data) or further scene
content (e.g. a guided tour may be initiated or an animation sequence). The reactive
objects may be abstract designs, such as a button, or they may be spatially integrated into
the landscape at key points. By linking the geometric sensor to a time-sensor, the stimulus
can also be used to initiate temporal content, such as animation (Figure 2; Buziek and
Hatger 1998).

(cid:223) Blackwell Publishers Ltd. 1999

A Virtual Reality User Interface for Geographic Information Retrieval

213

Figure 2
Examples of user-interaction using the VRML event model. Activating touch-
sensor (Ts1) starts an associated time-sensor which sends time_fractions to an interpolator
that incrementally steps between a range of key values, creating an animation effect.
Proximity sensor (Ps1) activates a JAVA Script to open a dialogue window when the user
moves within a specified distance of it.

3.3.2 JAVA / VRML Interface
VRML is a descriptive rather than a programming language, and to initiate true
dynamic content driven by the end-user requires a method to link to external
programs which can evaluate variables in the virtual world and provide the new
data. Although applications have been developed that deliver VRML models using
HTML and a CGI script on a remote server (Rohrer and Swing 1997), the same
arguments outlined earlier (Section 2) about poor server performance restricting
user-interaction with CGI are even more pertinent for 3D data. Fortunately, a more
flexible method to introduce dynamic content into virtual worlds can now be
utilised by interfacing JAVA or JavaScript with VRML 2.0 (Brutzman 1998);
JavaScript is a higher-level scripted derivative of JAVA which is easier to use but
less flexible. Although the present specification does not require that browsers
support these languages, most of them already enable at least one of them to be
used because of the greater range of interactivity they provide, and it is very
probable that the VRML/JAVA interface will be formalised in the next generation
of the specification.

Two methods to develop dynamic 3D content using VRML and JAVA currently
exist, depending on the style of interface required: we can therefore use the Script node
in VRML or the External Authoring Interface in JAVA (Brutzman 1998). Both of these
have been used in the VRUI described in Section 4, with each allowing a link to be
made between an object in the virtual world and a complementary object within the
JAVA (or JavaScript) routine; this is possible because both VRML and JAVA are
object-oriented languages. By using the Script node in VRML, the source of the
external JAVA/JavaScript routine is specified and when an event is routed to this node
(e.g. from a sensor), the event data are made available to the external routine also,
enabling it to be processed. The resulting new data may be used to initiate some

(cid:223) Blackwell Publishers Ltd. 1999

214

Iain M Brown

Integrating VRML and JAVA to derive dynamic 3D content. By using the Script
Figure 3
node, a JAVA program can be linked internally into a VRML scene. Alternatively, external
control of the VRML scene by a JAVA applet on a web (HTML) page can be made using the
EAI (External Authoring Interface) to get a reference to the VRML browser and its contents.

transformation in the virtual world or, alternatively, simply be displayed as text in an
auxiliary window (e.g. sensor Ps1 in Figure 2).

By using the Script node, the VRML scene is acting as the front-end to invoke user-
interaction and convey 3D spatial information to background processes running in
JAVA (Figure 3). However, there are also good reasons for wishing to control the scene
content from outside the VRML browser, typically from within a web browser because
this is an environment more users are familiar with. This can allow a very flexible user-
interface to be created by integrating VRML within a wider multimedia design and
extended functionality can be developed beyond the basic scene navigation controls
provided by VRML browsers. The key to this integration is provided by the External
Authoring Interface (EAI), which enables control of 3D scene content from outside the
VRML browser (Figure 3). In theory, any external program could be used with the EAI
but, in practice, the controlling program is a JAVA applet which has the advantages
that it is designed to be platform-independent and the AWT can be used to provide
user-interface ‘‘widgets’’ such as buttons and menus to control scene content. These
widgets use the JAVA classes of the EAI to gain a reference to the VRML browser and
then the nodes of the current scene content can be queried and manipulated using
event-in and event-out constructs (Brutzman 1998). The major disadvantage of the EAI
is that it is not currently a part of the VRML specification therefore its implementation
has not yet been standardised.

4 Example VRUI Application

4.1 Description of System

The application of a VRUI to explore geographical data-sets has been investigated by
developing a prototype for the Glamorgan (south Wales) region of the UK. The
impetus for this initiative was given by the need to organise the abundant data-sets

(cid:223) Blackwell Publishers Ltd. 1999

A Virtual Reality User Interface for Geographic Information Retrieval

215

becoming available for even a very small part of the globe (ca. 3000km2), and therefore
to encourage new research and provide educational resources. By integrating 3D
content with the WWW, the intention is to promote knowledge discovery and facilitate
preliminary analysis of appropriate environmental data-sets, initially using data from
remote sensing and thematic surveys. The interface is intended to allow dynamic
interaction with the data in the context of a virtual environment as well as the
integration of data-sets and associated content.

The basic structure of the web pages is based upon frames (Plate 1). These
represent a very useful method to sub-divide different information categories on a
single page analogous to the now ubiquitous windows-type GUI. An initial
‘‘contents’’ frame therefore lists the available areas and, by selecting one of these,
another frame loads a 3D virtual scene embedded into the page by the plug-in
VRML browser that has been locally installed. Another small frame has a Java
applet that shows a basic 2D map with the area chosen highlighted in the context of
the whole region; this map frame is also subsequently used to reference location as
the user navigates through the virtual world using the browser controls. There is also
the option of following any hyperlinks indicated in the scene (most VRML browsers
usually indicate reactive objects by a special
icon) by mouse-click. Currently,
hyperlinks in the project are initiated from text descriptions at key localities within
the scene, which link to web pages with further information (e.g. designated Sites of
Special Scientific Interest).

Above the 3D scene in the main frame is a JAVA applet with a menu of buttons
which when activated provide a series of options. This applet therefore provides the
main control on the content of the virtual world by using the EAI. An alternative
design would have been to place the button controls within the 3D VRML scene and
link them to the terrain geometry using Script nodes, or to develop a heads-up
display with information constantly updated on screen as the user moves around.
However, with the EAI and the GUI development tools of JAVA, it became apparent
that a more intuitive user-interface could be constructed using the familiar concept
of a hierarchical pull-down menu system and dialogue boxes to enter requests and
queries. The menu system is used in conjunction with the 3D navigation tools of the
native VRML browser (e.g. ‘‘zoom’’, ‘‘pan’’) to control scene content. In some cases,
the JAVA widgets may overlap with the functionality provided by the VRML
browser, but as different browsers vary in their content and quality of user-
interaction, the new widgets provide a means to standardise the user-interface for all
end-users.

The basic menu options in the prototype VRUI (Plates 1–2) can now be briefly
described. The two overlay buttons allow various image types (e.g. from remote
sensing data) or thematic maps (e.g. topography, soils, geology) to be draped over the
terrain to analyse possible relationships between land use, geomorphology and relief; a
key and other information is displayed in the ‘‘contents’’ frame (Plate 2). Next, the
query button shows the attribute values pointed at by the user at a chosen point. This is
implemented by sending an event to the VRML browser to temporarily make the 3D
scene reactive when the menu button is pressed, which then allows a touch-sensor to
return the coordinates pointed to by the mouse; these can then be used to index the
attributes at that point allowing them to be displayed in a pop-up text box. As users
sometimes get ‘‘lost’’ when navigating the virtual world, a ‘‘Where Am I?’’ button has
been provided to show the position of the observer and their orientation within the

(cid:223) Blackwell Publishers Ltd. 1999

216

Iain M Brown

scene (bearing and pitch of camera); this position is also communicated to and shown
in the map frame applet. By contrast, the ‘‘Go To’’ button (Plate 2), allows the user to
move to a specific location rather than those provided. Another button on the menu
allows the lighting direction to be changed to view different aspects of the landscape
and assist in visualising its morphology. The ‘‘MetaData’’ button provides a link to
extract source information from the VRML file and display it to the user. Such
information includes basic data-supply metadata and copyright together with scale,
projection and vertical exaggeration.

Extended functionality is provided in the prototype system by an animation
widget. This is enabled in VRML by the presence of a time-sensor which runs as a
background process and can be utilised to incrementally load new data at set time
intervals. For this, a Script node is activated which is used to link to the JAVA file from
which the new data are sequentially extracted; in some cases, interpolation between
key values can be employed to produce a smoother animation. Hence, if the data for
the user can generate animated landscapes, such as
that area are available,
geomorphological evolution in areas of dynamic landforms (e.g. sand-dunes), or to
generate a sequence of image overlays representing changing land cover or other
thematic changes through time. For this function, both the EAI and Script methods of
VRML / JAVA interface are being employed, showing that frequently they can be
utilised in a complementary manner as front-end control and background process
respectively to provide a large degree of flexibility in manipulation of the virtual
environment.

The application can also indicate variations in the availability of data-sets
depending on the users’ position in the scene. This is an important feature because
some areas have local collections of data assembled for special projects that did not
occur elsewhere (e.g. detailed vegetation survey). Such information is valuable for
decision-making on planning future surveys and projects and identifying gaps in the
current knowledge base. This feature is implemented in the current VRUI by checking
in a file the data sources available for each virtual world when it is chosen and then
passing the information to the construct menu applet. However, the intention is to
make this more dynamic by linking it with the level-of-detail control, so that when
users zoom in to smaller areas at higher resolution, the menus are reconstructed,
allowing detailed visualisation of very localised data-sets.

4.2 Extensions

An important principle regarding this project is that new information can be added as
and when it becomes available, so that it can expand and become a truly multi-
disciplinary tool. The hierarchical object-oriented structures dictated by VRML and
JAVA facilitate this by allowing new content to be added to the existing system
without major alteration, as each object is a self-contained module. New data-sets and
temporal updates can therefore be periodically added and the menu system easily
extended to cater for them by creating new objects.

Although use of elevation grids rather than TINs and indexed faces generally
produces a more acceptable level of interaction, it is still necessary to improve the
efficiency of terrain rendering. This is because, as projects expand to cover a larger
area, data-sets naturally become more extensive. Currently the multi-resolution model
generally becomes impractical beyond three levels of detail. A useful technique

(cid:223) Blackwell Publishers Ltd. 1999

A Virtual Reality User Interface for Geographic Information Retrieval

217

therefore is to employ culling of superfluous detail during rendering by using the
visibility sensor to only load those areas visible at the observers’ position (Hoppe,
1998). Large-scale virtual worlds will also require the addition of geographical
functionality to VRML not currently in the specification, such as a semi-regular
elevation grid to handle spherical projection coordinates. Another issue to be tackled is
the efficient visualisation of vector data (e.g. drainage and road networks) on the 3D
terrain model. In this case, the lesser accuracy of elevation grids proves a disadvantage
because the vector lines on occasion are not co-planar with the landscape and at high
resolution can be seen to float above it. This problem can be resolved by integrating the
vector data with terrain based on indexed faces but of course, there is a significant
computation overhead then which reduces interaction.

Work is also required to establish stronger links between the virtual environment
and on-line databases to allow more detailed data querying. Unfortunately, using the
JAVA Database Connection (JDBC) with VRML is currently slow and inefficient and
proposed additions to the specification allowing embedded SQL commands within
VRML represent significant improvements (Lipkin 1998). A full system implementation
also requires better metadata constructs. For example, it is proposed to extend the
VRUI so that users can enter place or area names from a gazetteer; at present, this is
only implemented for a few key localities (Plate 1). This will allow a closer relationship
between the 3D model and both text/tables and 2D maps, so that it is possible to use
one format to find, query and display information in another format in a non-linear
manner. Naturally, for a public information system, the ability to use qualitative terms
(such as place names and regions) is obviously more desirable than requiring the user to
deal with exact spatial coordinates. Abstract tools, such as a spatial thesaurus (Moss et
al 1998), which can handle fuzzy terms (e.g. find the ‘‘Cambrian Mountains’’) will
hopefully encourage extended use of the system by non-specialists such as the general
public.

5 Conclusions

The VRUI provides an innovative new means to integrate diverse geographical
information and visualise it in 3D. Using the EAI to link VRML with a JAVA
applet provides an intuitive menu-based user interface that can be located with
other associated material on a web page, and provides new functionality in
addition to the native VRML browser controls. A wide range of applications and a
diverse set of end-users is catered for, ranging from specialists querying a spatial
decision support system (SDSS) to non-specialists browsing data within a public
information system. The ‘‘virtual’’ realism of the 3D models has a significant
educational value also.

Possibly the main factor which may limit widespread applicability is the sometimes
unpredictable evolution of Internet standards and the variations in implementation
between different browser software. Hence, at present, VRML browsers can differ
widely in their interpretation of parts of the current specification, and even web
browsers differ in their implementation of some JAVA classes. This can present a
severe challenge when trying to produce a standardised user interface for all machines.
However, the available evidence so far suggest that web technology becomes more
stable as it matures and tighter standards are developed.

(cid:223) Blackwell Publishers Ltd. 1999

218

Iain M Brown

With regard to the example application, this operates successfully on the latest
generation of VRML/web browsers, although the quality of
interaction varies
depending on the combination used. Formalisation of the EAI as part of the VRML
ISO standard would increase cross-platform compatibility, but it is conceivable that
future developments may also constrain the nature of any VRML/JAVA interface. Of
course, a VRUI could be developed with other software, using for example specialised
plug-ins, but it is unlikely that they could provide the same integration with the WWW
that VRML/JAVA can provide. An alternative scenario is that the recent introduction
of the JAVA3D class libraries (Sowizral et al 1998) will allow VRUI development as
multi-dimensional applets rather than use plug-ins at all.

Experience with this prototype system suggests further research is required to
improve its efficiency as more data are added and large multi-scale virtual worlds are
created. By adopting a bottom-up approach, starting with a small area, then tiling
together successively larger regions, it is hoped to maintain a high degree of interaction,
in conjunction with technological improvements (e.g. Internet bandwidth, rendering
engines). It is also important to develop more powerful abstract metaphors for spatial
query. In this respect, the research is evolving in a complementary role to the
expanding knowledge base on creating large-scale digital libraries on the Internet. The
concept of providing a single access point to multiple spatio-temporal databases is
likely to become increasingly important as data supply increases and the growth in
distributed information systems continues. The flexibility of the VRUI suggests that it
can therefore provide a powerful visual front-end to interface with data warehouses
and the actual physical locations of those repositories becomes transparent to the end-
user.

Acknowledgements

Satellite imagery for this project was used with kind permission of Eurimage/NRSC
(Landsat) and SPOT/NRSC (SPOT). Terrain and map data are derived from Ordnance
Survey Landform and Meridian data-sets with kind permission of the Controller of
HMSO (Crown Copyright). Further details of the Virtual Glamorgan project are
available on http://www.comp.glam.ac.uk/pages/staff/imbrown/vrml.htm

References

Arnold K and Gosling J 1998 The Java programming language (2nd Edition). Reading, MA,

Addison Wesley Longman

Augusto E, Gomes M R, and Abrantes G 1997 Accessing geographic data through WWW. In
Information.

the 3rd Joint European Conference on Geographical

Proceedings of
Amsterdam, IOS Press: 135–44

Balonev O T, Bergmann A, Breunig M, Cremers A B, and Shulimov S 1998 A CORBA–based
approach to data and systems integration for 3D geoscientfic applications. In Proceedings of
8th
International
Geographical Union: 396–407

International Symposium on Spatial Data Handling. Vancouver,

Bieber M, Vitali F, Ashman H, Balasubramanian V, and Oinas-Kukkonen H 1997 Fourth
generation hypermedia: Some missing links for the World Wide Web. International Journal
of Human Computer Studies 47: 31–65

Brown I M 1997 Multi-parameter visualisation of 3D/4D spatio-temporal data. In Proceedings of

(cid:223) Blackwell Publishers Ltd. 1999

A Virtual Reality User Interface for Geographic Information Retrieval

219

the 3rd Joint European Conference on GIS. Amsterdam, IOS Press: 555–74

Brown I M 1998 A generic system for integrated modelling of multi–dimensional spatial data.

Physics and Chemistry of the Earth 23: 284–7

Brutzman D 1998 The Virtual Reality Modeling Language and Java. Communications of the

ACM 41: 57–64

Buziek G and Hatger C 1998 Interactive animation and digital cartometry by VRML2.0 and Java
within a temporal environmental model on the basis of a DTM of the Elbe estuary and a 12
hour tide period. WWW document, http://visart.ifk.uni–hannover.de/~buziek/COMVIS/
COMVIS98/buziek/comvis98.html

Carey R, Bell G, and Marrin C 1997 VRML 97 Specification. WWW document, http://

www.vrml.org/Specifications/VRML97/

Carver S, Blake M, and Turton I 1997 Open spatial decision–making: Evaluating the potential of
the WWW. In Kemp Z (ed) Innovations in GIS 4. London, Taylor and Francis: 267–77
Doyle S, Dodge M, and Smith J 1998 The potential of World Wide Web based mapping and
virtual reality technologies for mapping urban environments. Computers, Environment and
Urban Systems 22: 137–55

Dykes J A 1997 Exploring spatial data representation with dynamic graphics. Computers and

Fairbairn D and Parsley S 1997 The use of VRML for cartographic presentation. Computers and

Geosciences 23: 345–70

Geosciences 23: 475–81

Foote K E 1997 The Geographers’ Craft: Teaching GIS in the Web. Transactions in GIS 2: 137–

GeoVRML Working Group 1998 Virtual Reality Modeling Language. WWW document, http://

Hearnshaw H M and Unwin D J (eds) 1994 Visualization in Geographical Information Systems.

www.ai.src.com/geovrml/

London, John Wiley and Sons

Hoppe H 1998 Smooth view-dependent level-of-detail control and its application to terrain

rendering. WWW document, http://research.micosoft.com/~hoppe/svdlod.pdf

Kraak M J and van Driel R 1997 Principles of hypermaps. Computers and Geosciences 23: 457–

50

64

Lee J 1991 Comparison of existing methods for building triangular irregular network models for
International Journal of Geographical

terrain from grid digital elevation models.
Information Systems 5: 267–85

Lilburne L, Benwell G, and Buick R 1997 GIS, expert systems and interoperability. Transactions

in GIS 2: 233–43

Limp W F 1997 Weave maps across the Web. GIS World 10: 46–55
Lipkin D 1998 Recommended practices for SQL database access: Background and overview.

WWW document, http://www.vrml.org/WorkingGroups/dbwork/dbex.html

Martin D and Higgs G 1997 The visualization of socio-economic GIS data using virtual reality

tools. Transactions in GIS 1: 255–66

McDonald S and Stevenson R J 1998 Navigation in hyperspace: An evaluation of the effect of
navigational tools and subject matter expertise in browsing and information retrieval in
hypertext. Interacting with Computers 10: 129–42

Mitas L, Brown W M, and Mitasova H 1997 Role of dynamic cartography in simulations of

landscape processes based on multivariate fields. Computers and Geosciences 23: 437–46

Moore K 1997 Interactive virtual environments for fieldwork. WWW document, http://geog.

le.ac.uk/mek/Virtenv.htm

Moss A, Jung E and Petch J 1998 The construction of WWW–based gazetteers using thesaurus
techniques. In Proceedings of 8th International Symposium on Spatial Data Handling.
Vancouver, International Geographical Union: 65–75

Orfali R and Harkey D 1997 Client / server programming with Java and CORBA. London, John

Reddy M 1998 The QuadLOD node for VRML. WWW document, http://www.ai.sri.com/

Wiley and Sons

~reddy/geovrml/new_lod/

Rhyne, T M 1997 Going virtual with geographic information and linking scientific visualization.

Computers and Geosciences 23: 489–92

Rohrer R M and Swing E 1997 Web–based information visualization. Computer Graphics and

(cid:223) Blackwell Publishers Ltd. 1999

220

Iain M Brown

Applications 17: 52–59

Smith T R 1996 A digital library for geographically related materials. Computer 29: 54–60
Sorokine A and Merzliakova I 1998 Interactive map applets for illustration purposes. In
Proceedings of the 6th ACM Symposium on GIS. Washington, American Congress for
Mapping: 46–51

Sowizral H, Rushforth K, and Deering M 1998 The Java 3D API Specification. Reading MA,

Addison Wesley Longman

Wolff R S and Yaeger L 1994 Visualization of natural phenomena. New York, Springer-Verlag

(cid:223) Blackwell Publishers Ltd. 1999

