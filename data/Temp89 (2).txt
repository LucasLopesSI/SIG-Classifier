Geoinformatica (2012) 16:597–619
DOI 10.1007/s10707-011-0145-4

A fuzzy index for detecting spatiotemporal outliers

George Grekousis & Yorgos N. Fotis

Received: 6 February 2009 / Revised: 23 September 2011
Accepted: 29 September 2011 / Published online: 12 October 2011
# Springer Science+Business Media, LLC 2011

Abstract The detection of spatial outliers helps extract important and valuable information
from large spatial datasets. Most of the existing work in outlier detection views the condition of
being an outlier as a binary property. However, for many scenarios, it is more meaningful to
assign a degree of being an outlier to each object. The temporal dimension should also be taken
into consideration. In this paper, we formally introduce a new notion of spatial outliers. We
discuss the spatiotemporal outlier detection problem, and we design a methodology to discover
these outliers effectively. We introduce a new index called the fuzzy outlier index, FoI, which
expresses the degree to which a spatial object belongs to a spatiotemporal neighbourhood.
The proposed outlier detection method can be applied to phenomena evolving over time, such
as moving objects, pedestrian modelling or credit card fraud.

Keywords Spatiotemporal outliers . Fuzzy logic

1 Introduction

Geography-related spatial data are widely used, in satellite observation systems, marketing
analysis, spatial analysis and urban planning [29]. Although much research has focused on
finding large patterns, for many applications, finding rare instances can be more interesting
than finding common patterns [6, 25, 27]. These instances are called outliers, and they can be
traced in several real life applications, such as environmental monitoring, target tracking,
credit card fraud and health monitoring [27]. An outlier in a set of data is an observation that
is considerably dissimilar to or inconsistent with the remainder of the data [18].

Spatial outliers represent locations that are significantly different from their neighbour-
hoods even though they may not be significantly different from the entire population [21].
Identifying spatial objects as spatial outliers can lead to the discovery of unexpected,
interesting and implicit knowledge, such as local instabilities [21]. Practical applications

G. Grekousis (*) : Y. N. Fotis
Department of Planning and Regional Development, University of Thessaly, Volos,
Greece( Pedion Areos 38334
e-mail: geograik@gmail.com

Y. N. Fotis
e-mail: photis@softlab.ntua.gr

598

Geoinformatica (2012) 16:597–619

include the monitoring of severe weather conditions, pharmaceutical research, financial
applications, marketing and customer segmentation, video surveillance and intrusion
detection, climatology and location-based services.

Spatial dependency and heterogeneity are inherent properties of spatial objects, and thus,
their behaviour is influenced by nearby spatial and temporal processes. To effectively
discover spatial outliers in a given spatial region, it is important to take into account the
spatial features in the vicinity of the objects and the temporal dimension. Many studies have
been conducted on spatial outlier detection. While a more detailed discussion of these
studies is given in section 2, it suffices to point out here that most of these studies consider
being an outlier as a binary property. That is, an object in the dataset is either an outlier or it
is not. The situation is more complex in many real applications, and it is more meaningful
to assign a degree of being an outlier to each object. Only a few studies address the degree
to which an object is an outlier [7, 8]. Furthermore, spatiotemporal outlier detection has
been discussed only to a limited degree. Most research in this area deals with the discovery
of macro and micro neighbourhoods, thus dealing with outliers strictly as a binary property.

The contributions of this paper are as follows:

& The proposed methodology presents a new approach for identifying spatiotemporal
outliers by finding the degree to which an object is an outlier in relation to the temporal
neighbourhood to which it belongs.

& The proposed index considers only the location of each object and not its non-spatial
attributes. This approach can be applied in cases where the location is more important
than the attributes or can be more easily and quickly collected. For example, in cases
such as the spread of a virus or abnormal pedestrian behaviour, where spatial outliers
need to be traced in a short amount of time,
the location is easily collected by
surveillance systems, while attribute collection takes much longer.

& A novel definition for spatiotemporal outliers is proposed.
& The new definition is based on a new fuzzy index that does not consider outliers as a

binary property, but identifies to what degree an object is an outlier.

& The index is based on fuzzy clustering.
& This index is applied not in a single instance, but in a temporal context, providing a

basis for identifying spatiotemporal outliers.

The remainder of the paper is organised as follows. Section 2 discusses related research
in spatial and spatiotemporal outlier detection. Section 3 makes a brief reference to fuzzy
theory. Section 4 presents the problem definition and notation. Section 5 presents a brief
example, and section 6 presents the results of a real application. Section 7 discusses the
paper, and, lastly, section 8 provides the conclusions.

2 Related work

There is a plethora of algorithms and methods for detecting spatial outliers. These methods
can be categorised as spatial and spatiotemporal (Fig. 1).

2.1 Spatial outlier detection methods

According to Breunig [8], there are three main classes of spatial outlier detection methods:
distribution-based, depth-based and distance-based.

Geoinformatica (2012) 16:597–619

Fig. 1 Outlier detection methods

599

2.1.1 Distribution-based

In distribution-based methods, data are modelled based on a distribution function, and the
final objects are characterised as outliers depending on the initial statistical hypothesis that
controls the model. The distribution-based methods use distributions such as Normal and
the data best [23]. Outliers are then defined based on the probability
Poisson to fit
distribution [8]. The primary limitation of these methods is that, in many applications, the
exact distribution of a dataset is unknown beforehand [9]. These methods can be further
grouped into two categories: one-dimensional (1-D) and multidimensional detection [21].
Most existing spatial outlier detection algorithms mainly focus on identifying single
attribute outliers and fail to handle multiple attributes [9]. 1-D outlier detection algorithms
ignore the spatial relationships between items and only consider the statistical distributions
of non-spatial attribute values [5, 12]. Shekar et al. [21] designed an algorithm to detect
spatial outliers using a single non-spatial attribute from a dataset.

Multidimensional outlier detection methods use density functions in multidimensional space
to determine if a point is different from the majority of the data [29]. Multidimensional methods
can be further subdivided into two classes: homogeneous and spatial. Homogeneous
multidimensional methods provide tests based on density or convex-hull depth. These
methods model datasets as collections of points in a multidimensional space without
distinguishing non-spatial and spatial attributes. Consequently, they are better able to detect
global outliers rather than spatial outliers. One limitation of these methods is that they seldom
provide confidence measures for the discovered outliers [21].

Spatial methods are designed to detect spatial outliers by separating spatial from non-
spatial attributes. Two types of spatial methods have been proposed: graphical tests and

600

Geoinformatica (2012) 16:597–619

quantitative tests. Graphical tests, such as variogram clouds and Moran scatterplots [2], are
based on the visualisation of spatial data, which highlights spatial outliers [15]. However,
graphical tests are limited by the lack of precise criteria to distinguish spatial outliers.
Quantitative methods provide a precise test to distinguish spatial outliers from the remainder
of the data. Scatterplots are a typical technique for quantitative methods.

2.1.2 Depth-based

In depth-based techniques, data objects are organised into layers, and outliers are expected to be
found on the top layers. More specifically, all data are organised in a k-dimensional data space,
with every data object represented as a point in the space [20]. Each point in the space is given
a depth relative to the location of other points. Objects with smaller depth are more likely to
be outliers. Depth is the minimum number of objects to be removed to expose the object [17].
A classical algorithm used in depth-based methods is the IsoDepth algorithm. These methods
are not widely used to classify outliers due to their high computation cost for multi-attribute
data. Other techniques in depth-based methods are neural networks that can be used to
classify outliers. Self-organising maps are popular neural network approaches that are often
used for spatial proximity problems [11]; an example of this can be found in [18]. Jensen and
Gavrilova [11] designed a system to detect abnormal pedestrian behaviour in surveillance
videos. These methods are restricted, however, because they ignore the impact of underlying
objects (e.g., elevators, shops), which may differ significantly within their vicinity [10], and
they do not investigate the objects’ semantic relationship. Recently, Adam et al. [1] defined
spatial outliers using the semantic relationship.

2.1.3 Distance-based

The third category of identifying spatial outliers is distance-based methods. Distance-based
approaches are common, particularly when dealing with points, lines, polygons, locations and
the spatial neighbourhood. These methods are based on calculating how many spatial objects
are within predefined zones. Knorr and Ng [13], [14] presented the notion of distance-based
outliers. An outlier is declared as such when it is located more than a certain distance from
other objects. More specifically, a point p in a dataset is an outlier with respect to parameters k
and d if no more than k points in the dataset are at a distance of d or less from p.

Distance-based methods are not statistical methods. They use a distance metric to
measure the distances among the data points, while homogeneous multi-dimensional
metric-based methods provide tests based on concepts such as density and convex-hull
depth. The main advantage of distance-based methods is that they do not require any a
priori knowledge of data distributions, whereas the statistical methods do. Furthermore,
local spatial outliers, while statistical
distance-based methods are designed to detect
methods, such as homogeneous multi-dimensional metric-based methods, are designed to
detect global rather than spatial outliers.

The distance function can be any metric distance function. However, defining the distance
threshold is difficult. Knorr and Ng [13, 14] used the trial and test method to define the
appropriate bandwidth. Ramsway [18] proposed a formulation based on the distance of a
point from its k-th nearest neighbourhood. Each point is ranked on the basis of its distance to
its k-th nearest neighbour, and the top n points in this ranking are declared to be outliers.

Related work has been conducted in the field of image processing, where the edges of
imaged objects or unusual movements of people in closed or open areas (pedestrian

Geoinformatica (2012) 16:597–619

601

modelling) are detected. Ng et al. [17] used distance-based techniques to detect unusual
human movements recorded by CCTV.

Breunig et al. [7] introduced the notion of a local outlier in which the outlier degree of an
object is determined by taking into account the clustering structure of the neighbourhood. The
neighbourhood is defined as the minimum number of objects to be contained. Breunig et al.
[7] call this degree the Local Outlier Factor, which indicates the degree of outlier-ness of an
object. This method is not based on any explicit or implicit notion of clusters, but on the
single parameter of MinPts, which is the number of nearest neighbours of a certain distance
used to define the local neighbourhood of the object. Breunig et al. [8] also studied how the
selection of a minimum number of objects required to form a neighbourhood affects the
output of the local outlier factor.

2.2 Spatiotemporal outlier detection methods

Another major issue is that because geographic phenomena evolve over time, the temporal
dimension should also be taken into consideration when defining outliers. Although many
methods have been proposed to detect spatial outliers, the question of how to detect
temporal outliers or spatiotemporal outliers has seldom been discussed [10]. According to
Adam et al. (2004) [1], a spatiotemporal outlier is a point that differs sufficiently from other
points in the macro neighbourhood. A more complete definition for a spatiotemporal outlier
is given by Cheng and Li (2004) [10]: the spatiotemporal referenced object whose thematic
attribute values are significantly different from those of other spatially and temporally
referenced objects in its spatial and/or temporal neighbourhood.

A data model for spatiotemporal data deals with time-evolving phenomena processed in
snapshot instances called timestamps. Spatial objects in a temporal context appear in sequential
timestamps within the region, making it difficult for classical outlier detection methods to
ascertain whether there is an interaction between timestamps. The goal is to represent the
evolution of the data in terms of their relationships to one another.

[1]

Adam et al.

first address outlier detection by refining the concept of

the
neighbourhood and, second, through the complexity associated with identifying spatiotem-
poral outliers in high dimensions within the neighbourhood. Adam et al. [1] also described
a five-step process for spatiotemporal outlier detection in high-dimension datasets. Voronoi
diagrams are used to generate a micro-neighbourhood, and spatial relationships are
identified as binary relationships between pairs of objects, such as adjacency. Semantic
relationships are then identified, and those micro-neighbourhoods with similar relationships
form macro-neighbourhoods (Fig. 1). Outliers are then identified based on the distance
values among various points. Once the macro-neighbourhood has been obtained, any of the
available outlier detection techniques can be applied. The concept proposed above embeds the
temporal aspect in the macro-neighbourhood, and seems more spatial than spatiotemporal. This
approach was implemented in a highway traffic monitoring dataset and a water monitoring
dataset in the US, to capture spatiotemporal outliers.

Cheng and Li [10] applied the definition of spatial outlier to the spatiotemporal domain
and defined the spatiotemporal outlier (STO) as a spatiotemporal-referenced object whose
thematic attribute values are significantly different from those of other spatially and
temporally referenced objects in its spatial or temporal neighbourhood. A four-step multi-
scale approach was proposed to identify spatiotemporal outliers by evaluating the change
between consecutive spatial and temporal scales. First, the input data are clustered based on
background knowledge of the data. The clustering results are then aggregated to check for
data stability. In this step, outliers might be merged out. Third, the clustered results derived

602

Geoinformatica (2012) 16:597–619

from the previous steps are compared, and missing objects are identified. Finally, the
temporal neighbours of the potential STOs identified in the previous step are checked. If the
semantic value of such an STO does not have significant differences from its temporal
neighbours, then it is not an STO; otherwise, it is.

Another model [24] used for non-spatial data analyses break points, which are the times
when significant deviations from the norm occur. This model uses auto-regression statistical
methods and updates parameters to give past examples less weight. Each data/time point is
given a score (the higher the score, the more likely the point is to be an outlier), and the
model can detect both break points and outliers simultaneously [22]. Data can be modelled
using a time series or an independent model. This approach was tested on stock market data
and was able to pinpoint a number of significant break points.

Birant and Kut [6] proposed a three-step approach to detect spatiotemporal outliers in
large databases. These steps are clustering, checking spatial neighbours to identify spatial
outliers and checking temporal neighbours to identify spatiotemporal outliers. They
introduced a new outlier detection algorithm that has the ability to discover outliers
according to the non-spatial, spatial and temporal values of the objects. The algorithm
proposed in this study first identifies spatial outliers and then temporal outliers and is based
on the DBSCAN clustering algorithm.

One major drawback of existing spatiotemporal outlier detection approaches is that they
assign the property of being an outlier as a binary property. In a temporal context, it becomes
increasingly important to consider the degree of outlier-ness because dimensions increase and
the evolution of spatial objects is more complicated. In this paper, we use artificial intelligence
to handle complexity more easily. Thus, we use fuzzy logic to produce a new index for
calculating the degree to which an object is a spatial and temporal outlier. We present the basic
concepts of fuzzy logic theory in the following section.

3 Fuzzy logic

According to Zadeh [26], fuzzy logic is the process of making calculations with words and is
part of Artificial Intelligence. Fuzzy logic is a technology that gives computers the ability to
think and make decisions in a way that simulates human thought and decision making [16].
In binary logic, a set may be considered a clustering of objects that have at least one common
characteristic. If an object has this characteristic, then it belongs in the set, and vice versa (Fig. 2).
In fuzzy set theory, the set is not limited by the binary yes - no definition of each member, but
it allows a gradual definition of being a member in the set, which means that for each object, a
degree can be calculated that expresses how much that object belongs to each set. This set is
named, henceforth, a fuzzy set, and the degree is the membership value μ (Fig. 2).

The membership value μ results from a membership function, and it takes values
between 0 ≤ μ ≤ 1. Thus, the membership value μA(a) determines the degree to which an
object a belongs in set A. Figure 2 presents the differences between crisp sets and fuzzy
sets. In binary logic, an object belongs in either A or not A. For example, in crisp sets,
objects k and l belong to set A, while m and n belong to set not A (Fig. 2a). In fuzzy sets, k
is clearly inside the boundary region of set A, and n is clearly far from the boundary region
(Fig. 2b). However, the membership values of point l and m, which are on the boundary
region, are ambiguous. If complete membership in set A is represented by the number 1,
and no-membership in a set is represented by 0, then points l and m must have some
intermediate values of membership, while k must have a value close to 1 and n a value close
to 0 (Fig. 2c) [19].

Geoinformatica (2012) 16:597–619

603

Fig. 2 Binary and fuzzy sets

The clustering of objects in fuzzy logic is achieved with many algorithms, such as the fuzzy
c–means algorithm (FCM) or the Gustafson-Kessel algorithm. FCM is based on the work of Ball
and Hall [3] and was improved by Bezdek [4]. Each cluster has a cluster centre that depicts a
typical object of the cluster. The membership value of an object is related to how close to the
cluster centre it lies. Thus, if the membership value is high, then the object is similar enough to
the cluster centre and follows typical values for this cluster. However, if the membership value
is low, then the object has little similarity to the cluster. Still, this membership value shows that
there is a slight relation that can be further examined. Furthermore, if the clustering process is
repeated in the future with new data for the same objects, then tendencies in the objects can be
traced to the same cluster or a different one. Thus, a temporal study of the membership value
variance of an object in the clusters reveals tendencies for shifting from one cluster to another
or for strengthening its presence in a certain cluster.

In this paper, we use the advantages of fuzzy clustering to trace spatiotemporal outliers

by assigning the degree to which an object belongs to a spatiotemporal set.

4 Spatialtemporal outlier detection

We suggest a novel methodology to detect spatiotemporal outliers and to determine to what
extent a spatial object is an outlier.

4.1 Main concept

The detection of spatiotemporal outliers is based on a new index called the fuzzy outlier
index, or FoI. This index is defined by the use of fuzzy clustering in a spatiotemporal

604

Geoinformatica (2012) 16:597–619

neighbourhood. This index expresses the degree to which a spatial object belongs to a
spatiotemporal neighbourhood. The proposed outlier detection method can be applied in
phenomena that evolve over time, such as residential burglaries, the spread of virus, city
fires or crimes, where the next occurrence has no predefined diachronic interrelation. In this
respect, when dealing with phenomena where the next occurrence is not defined by a
linkage, objects can be accessed as clouds of points with known coordinates. We will use
the term point from now on to express this type of object. The timestamp is the time at
which a point is recorded. Because there is no linkage among points of different timestamps and
each point occurs in only one timestamp, we cannot calculate any speed variable. The intervals
among timestamps are the same (e.g., week, day, hour). Furthermore, we do not study any
nonspatial properties. We are searching for spatiotemporal outliers only by examining the
location of each point in its spatiotemporal neighbourhood. The number of timestamps that
define a temporal neighbourhood is called depth. For example, if we study a temporal
neighbourhood every five timestamps, then the depth for this neighbourhood is 5.

Using the proposed methodology, we define spatiotemporal neighbourhoods, and we
examine scenarios such as if a point existed not only in its real timestamp but also in the
previous or the following timestamps in relation to the depth of the spatiotemporal
neighbourhood. This scenario could lead to a more detailed analysis for investigating what
happened to their neighbouring point so as to “leave” it separated.

The FoI Index is based on the calculation of distances among points in sequential
timestamps and on fuzzy clustering. Using the fuzzy c-means algorithm, we cluster points
into temporal clusters to determine whether a point fits with the spatiotemporal cloud of
points or is dissimilar to it. We cluster these points based on five variables that are
dependent on time and distance. These variables will be further discussed later in this
section. The distance calculations are performed by function (1), which calculates the point
densities in a spatiotemporal neighbourhood. These five variables create an array called AC.
Each line of this array represents a point, while each column represents the value of the
corresponding variable. AC is the input table for fuzzy clustering. After classification, each
point gains membership values in the clusters in which it belongs. The mean membership
value of each point in the clusters defines the FoI index.

More simply, our methodology is performed in four levels

1st Level: Calculation of variables
2nd Level: Setting array of AC for classification
3rd Level: Fuzzy clustering and membership values for each point
4th Level: FoI calculation

4.2 Definitions

(cid:1)
; st
where t={1,2,..ν}. If we consider a
Suppose that we have a set of points St ¼ st
2
1
temporal neighbourhood L={t−1,t,t+1}, we find which point of set St is a spatiotemporal
outlier.

; . . . st
n

(cid:3)

We define the following:
S is the set of n points consisting of a set of locations s1,s2,…sn.
si is the location of the ith point of set S, where i={1 to n}.
t={1,2,..ν} are the timestamps at which the point occurrences are recorded.
(cid:1)
St is the spatial set of n points in timestamp t. St ¼ st
1
i is the location of the ith point of set St in timestamp t, where i={1 to n}.
st

; . . .s t
n

; st
2

(cid:3)
.

&
&
&
&
&

Geoinformatica (2012) 16:597–619

605

&
& D ¼ Lj

L is the set of sequential timestamps that defines the temporal neighbourhood.

j is the depth of the temporal neighbourhood. The depth is the cardinality of L,
which is the count of the sequential timestamps that belong to L. For example, for t>1
and t<ν, if L={t−1,t,t+1}, then D=3.
k≤n. k is the number of nearest neighbours
Parameters k and L are user-defined based on the requirements of the problem studied
and the general context of the study.
(cid:4) (cid:5)
k st
i
choose a point i from timestamp t and we set k to 5 and L to {t-1,t,t+1}, then N L

i at each timestamp in L. If, for example, we
(cid:4) (cid:5)
k st
:
i

is the k nearest neighbours to st

&
&

& N L

a) N t

is the set of locations of the 5 nearest points of point st

i from the points of

b) N tþ1

is the set of locations of the 5 nearest points of point st

i from the points of

c) N t(cid:2)1

is the set of locations of the 5 nearest points of point st

i from the points of

(cid:4) (cid:5)
5 st
i
timestamp t.
(cid:4) (cid:5)
st
i
(cid:4) (cid:5)
st
i
timestamp t-1.

5

5

timestamp t+1 and

f L
k

: St ! R is an aggregation function defined in (1).

&
& Oout is the fuzzy set that contains the outliers.

(cid:1)
Finally, we define a spatiotemporal outlier: a point in a set St ¼ st
1

, where
t={1,2,..ν} is a spatiotemporal outlier and belongs to set Oout when FoI is smaller than a
FoImin
threshold value FoImin, or

s 2 Oout FoIs (cid:3)
j

; . . . ; st
n

; st
2

g.

(cid:3)

f

4.3 Methodology

We calculate the FoI index in the following 4 levels.

4.3.1 1st level: calculation of variables

For every point st
St St-,1 St+1 (L={t−1,t,t+1}).
An aggregated function f L
k

where j=1 to k, is:

i, we calculate the sets N L

as the k nearest neighbours of st

i from the sets

(cid:4) (cid:5)
k st
i

: St ! < is defined so that 8st

i, f L

k and for every sj 2 N L

k ðst
iÞ,

(cid:4) (cid:5)
st
i

f L
k

¼

(cid:5)

(cid:4)
dist st
i

; sj

Pk

j¼1

k

ð1Þ

Function f calculates the mean distance of a point with the nearest points for each time
stamp in L separately (Fig. 3). For example, function f calculates the mean distance of point st
i
with the k nearest neighbours point of the same timestamp or the mean distance of point st
i
with the k nearest neighbour points of the next timestamp, t+1, and so on. L defines how far
away the mean distance is calculated.

The result defines the density of the points in space and time. The k parameter is selected
from the user according to the problem in each case study. For example, if we are interested
in small neighbourhoods, we can select a small number of nearest neighbours. However, if
we are interested in larger neighbourhoods, then we can select a larger number of nearest
neighbours. On the one hand, small values in (1), that is, small distances among nearest
points, show high concentrations of points around st
i in a spatiotemporal context. Large

606

Geoinformatica (2012) 16:597–619

values, on the other hand, show large distances among points around st
i. When the values in
(1) increase, there is a high indication of spatiotemporal outlier existence. Function 1 is
used to calculate 4 variables of each point, as explained in the following section.

4.3.2 2nd level: setting array AC

Array AC is defined such that it obtains parameters for two sequential timestamps, for
example (S t, St+1). If St consists of p points (spatial objects) and St+1 consists of r points
(spatial objects), then we have a total of N = p + r points. Every point is assigned five
variables: the timestamp; the distance from the 1st nearest neighbour of time t; the distance
from the 1st nearest neighbour of time t+1; the mean distance of the k nearest neighbours of
time t; and the mean distance of the k nearest neighbours of time t+1.

We define array AC (N × 5), where N is the total number of points for two sequential

timestamps and 5 is the number of columns:

0

B
B
B
B
B
B
B
B
B
B
B
B
B
B
B
@

t

.
..

t

.
..

(cid:4) (cid:5)
1 st
f t
1
.
..
(cid:6) (cid:7)
1 st
f t
p
(cid:4)

(cid:5)

(cid:5)

.
..
(cid:4)

(cid:4) (cid:5)
k st
f t
1
.
..
(cid:6) (cid:7)
k st
f t
p
(cid:4)

(cid:5)

(cid:5)

.
..
(cid:4)

(cid:4) (cid:5)
st
1

f tþ1
1

.
..
(cid:6) (cid:7)
f tþ1
st
1
p
(cid:5)
(cid:4)
1 stþ1
f t
1
.
..

(cid:5)

(cid:4)
1 stþ1
f t
r

1

C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
A

(cid:4) (cid:5)
st
1

f tþ1
k

.
..
(cid:6) (cid:7)
f tþ1
st
p
k
(cid:5)
(cid:4)
k stþ1
f t
1
.
..

(cid:5)

(cid:4)
k stþ1
f t
r

t þ 1 f tþ1

1

stþ1
r

f tþ1
k

stþ1
r

AC ¼

t þ 1 f tþ1

1

stþ1
1

f tþ1
k

stþ1
1

ð2Þ

where:

t
(cid:4) (cid:5)
1 st
f t
i

k ðst
f t
iÞ
(cid:4) (cid:5)
st
i

f tþ1
1

timestamp.
is the distance of point si in timestamp t from the first nearest neighbour in
timestamp t, where i={1 … p}.
is the mean distance of point si in timestamp t from the k nearest neighbours
in time interval t.
is the distance of point si in timestamp t from the first nearest neighbour in
timestamp t+1.

Fig. 3 Detection of k nearest neighbours from A and distance definition in N L

k ðst
iÞ

Geoinformatica (2012) 16:597–619

607

f tþ1
k

ðst
iÞ
(cid:6)

f tþ1
1

stþ1
j

(cid:7)

f tþ1
k

ðstþ1
j

Þ

1 ðstþ1
f t
j

Þ

k ðstþ1
f t
j

Þ

is the mean distance of point si in timestamp t from the k nearest neighbours
in timestamp t+1.
is the distance of point sj in timestamp t+1 from the first nearest neighbour in
timestamp t+1 where j={1 … r}.
is the mean distance of point sj in timestamp t+1 from the k nearest
neighbours in timestamp t+1.
is the distance of point sj in timestamp t+1 from the first nearest neighbour in
timestamp t.
is the mean distance of point sj in timestamp t+1 from the k nearest
neighbours in timestamp t.

Every line of the array stands for a single point. Every column stands for a variable for
each point. In total, we have p + r points (spatial objects) with 5 variables. The timestamp
is the time at which a point exists. The timestamp is used to make a supervised
classification with fuzzy c-means. The other 4 variables give, for each point, the distances
from the nearest points of both timestamps and the mean distances from the k nearest points
in both timestamps. With these variables, we give to each point a value of how close or far
away it lies from its neighbouring points not only for the time of its existence but also in a
temporal context.

4.3.3 3rd level: fuzzy clustering

We cluster these points into two clusters to determine whether each point fits the spatiotemporal
cloud of points or is dissimilar to it. Each point obtains a membership value that expresses how
typical a point is for the cloud of points in each timestamp. If a point follows the trend, then it
has high membership value, indicating that it is not an outlier. In this case, the distances from the
first and k nearest neighbours are small. In contrast, if a point has a small membership value,
then it does not follow the trend and is a possible outlier.

The FCM employs fuzzy partitioning such that a data point can belong to all groups with
different membership grades between 0 and 1. FCM is an iterative algorithm and, in its
general form, it defines the cluster centres that minimise a dissimilarity function (4). To
accommodate the introduction of fuzzy partitioning, the membership values are randomly
initialised according to function 3:

Xc

j¼1

uij ¼ 1

for all i in {1…N} and uij 2 ½0; 1(cid:4),

N
c
uij

is the number of points (p + r) in two consecutive timestamps
is the number of clusters, and
is the membership value of point i in cluster j.

The dissimilarity function used in FCM is given in 4.

Jm ¼

XN

Xc

i¼1

j¼1

(cid:8)
(cid:8)
um
ij xi (cid:2) cj

(cid:8)
2
(cid:8)

; 1 < m < 1

ð3Þ

ð4Þ

xi=[V1,V2,…Vq] is a q-dimensional feature vector that contains the values of the

variables of point i,

608

Geoinformatica (2012) 16:597–619

kk

q
cj
m

is the total number of variables
is the cluster centre of cluster j
is a real number greater than 1 that expresses the degree of fuzziness and is a
weighting exponent.
is the Euclidean distance that expresses the similarity measure between points and
cluster centres. AC is used in this distance function to calculate the distance of each
vector xi to the cluster centre of each cluster, where i is the lines of array AC, and V is
the value in the columns of the array (q=5). Finally, we set c=2 in our method.
When m → 1, the clustering tends to be the classic binary clustering. When m → ∞, the
membership value of each point in each cluster tends to take the value 1
c [28]. We note that
m is a user-defined parameter. Usually m has a value of 2, but the trial and test method is
the most common practice used during classification to set m [19]. The parameter c gets
values greater than or equal to 2 and smaller than or equal to the number of points to be
clustered.

To reach a minimum of dissimilarity inside a cluster, there are two conditions that must be

met [4], which are given in 5 and 6.

PN

um
ij (cid:5) xi

cj ¼

i¼1

PN

um
ij

i¼1

uij ¼

(cid:9)

PC

k¼1

1

k
xi(cid:2)cj
xi(cid:2)ck
k

k
k

(cid:10) 2

m(cid:2)1

ð5Þ

ð6Þ

The algorithm runs in the following steps:

Initialise values uij (membership value- function 3) in a random or predefined way.

Step 1:
Step 2: Calculate cluster centres cj (function 5) based on previous membership values.
Step 3: Calculate the dissimilarity between centroids and data points using function 4.

Stop if its improvement over the previous iteration is below a given threshold.

Step 4: Otherwise, calculate new membership values from function 6 and go to step 2.

4.3.4 4th level: FoI calculation

As mentioned in section 3, in fuzzy clustering, each point is assigned a membership value
in every cluster. Consequently, for every point of timestamp t, we calculate a membership
value for cluster t and a membership value for cluster t+1.

For the calculation of FoI, for every point in timestamp t, we keep only the membership
value in cluster t because this is the timestamp of its existence. Still, this membership value
shows to what degree a point is an outlier in the spatiotemporal set of points in both
timestamps t and t+1. We can use the same procedure to calculate the membership function
for every point of timestamp t in clusters with the points of timestamp t−1. Here, we use only
points of timestamp t−1 instead of the points of timestamp t+1, and in the AC array, we
change indices t+1 to t−1. In the same way, the number of lines N in AC change because the
number of points of timestamp t−1 may vary from the cardinals in timestamp t+1.

Geoinformatica (2012) 16:597–619

609

ð7Þ

Each point in timestamp t is assigned a membership value for cluster t and a membership
value for cluster t−1. For the calculation of FoI, we keep only the membership value in cluster t.
In this case, a different membership value for every point in timestamp t arises that shows to
what degree a point is an outlier in the spatiotemporal set of points in both timestamps t
and t−1. To differentiate these two values, we call the first utþ1

and the second ut(cid:2)1

ij

FoI is calculated as the mean value of the two membership values of utþ1

.
ij
and ut(cid:2)1

ij

(7).

ij

FoIij ¼ 1

(cid:6)
2 ut(cid:2)1

ij þ utþ1

ij

(cid:7)

FoI is assigned values from 0 to 1 and declares the degree to which a point belongs to a
spatiotemporal dataset. For each point, the index is calculated by showing how much relevance
it has to the timestamp of its real existence and how much relevance to the previous and
following timestamps.

This index actually examines the degree to which a point fits with the spatiotemporal cloud
of points or is dissimilar to it. The higher the FoI value, the more correlated the point is with
the points from the following and preceding timestamps. However, the smaller the value of
FoI, the more of an outlier a point is because the function f L
k obtains high values due to great
distances among points in the temporal set L. Intermediate values appear when points have a
close relationship with one temporal direction, either forward or backward, thus failing to
formulate a cluster in the defined temporal neighbourhood. For example, a point in timestamp t
may have a high membership value utþ1
. As a result,
FoI (as the mean between these values) will obtain intermediate values.

in timestamp t+1 but small value in ut(cid:2)1

ij

ij

Setting the threshold where a point

is regarded to be a spatiotemporal outlier is
dependent on the problem and case study each time. Fuzzy clustering does not apply crisp
boundaries but rather linguistic rules, such as typical outlier, not so typical outlier and not
outlier. One simple approach is to rank FoI values and then check those points having the
smallest values (usually 5% to 10% of the total).

5 Brief numerical example

Suppose that we have the following data set (Fig. 4) for timestamp t and that we are seeking
the existence of outliers.

The data set is actually a subset of points (spatial objects) evolving over time and space.
These points do not have any linkage information among them but they describe the occurrence
of the same phenomena, such as cancer incidents, car thefts or credit card fraud. If we define as
an outlier the point lying a distance d further than a threshold distance dmin from the rest [13],
then a possible and clear outlier would be A (Fig. 5).

Is point A a real outlier, or could something else have occurred? In this study, we are
examining the existence of spatiotemporal outliers, and for this reason, we study the
phenomenon with a temporal perspective. We depict the preceding and following timestamp
for the whole data set below (Fig. 6).

To produce a clearer depiction of the phenomenon, we overlay these timestamps onto

one (Fig. 7).

We thus have a better image of the situation. Point A does not seem to be an outlier after
all because it defines a cluster for the specified distance in its temporal neighbourhood
(Fig. 8). However, point B, although not defined as an outlier in the first phase, is now more
clearly separated from its spatiotemporal neighbourhood (Fig. 8).

610

Fig. 4 Points in timestamp, t

Geoinformatica (2012) 16:597–619

For a more mathematical explanation of all the above, we calculate the index FoI for all

points of timestamp t (Fig. 4) and we set k to 3 and c to 2.

To build array AC, we calculate the distances with function (1) for every point of
timestamp t with its first and the 3 nearest neighbours of the next and previous timestamps
(Fig. 9).

AC is the input table for the fuzzy c-means algorithm to produce the membership values
of each point. FoI is produced by the use of function 6, and the results are depicted in
Table 1.

The FoImin (the threshold under which a point is declared an outlier) value is usually
defined for each specific problem, depending on what we regard as an outlier. For FoImin=
0,75, point B is a spatiotemporal outlier. Point A with FoI=0,78 is on the edge of being
named an outlier, mainly because of its distant neighbours at
time t. What occurs
concerning A and B must be examined further. Although A is a spatial outlier concerning a
is not a
minimum distance threshold [13], as explained earlier in this section,

it

Fig. 5 Spatial outlier definition

Geoinformatica (2012) 16:597–619

611

Fig. 6 Spatiotemporal neighbourhood (t−1,t,t+1)

spatiotemporal outlier when we apply our method. B, however, although it is not a spatial
outlier concerning the distance threshold, is a spatiotemporal outlier. The distance threshold
is only applied to one timestamp, but FoI uses different values of distances coming from (1)
to estimate how close or distant a point is in a spatiotemporal neighbourhood of points. If
we examine, for example, cancer incidents in the study area, this should trigger questions
such as the following:
& Are there any specific reasons for why B is isolated (possible population movement

outside that area, better medical treatment)?

& Are there any reasons why a new concentration of cancer incidents has been detected
around point A? Are there signs of the creation of a new cluster (possible periodic
release of toxic wastes, new factory in the area, polluted water, or even a change in the
habits of the inhabitants, e.g., consuming a new product with unknown side effects such
as genetically-engineered food)?

Furthermore, the study of FoI for other points reveals high concentrations of points in
areas around F and D (Fig. 4), showing spatiotemporal clustering. In general, when FoI is
very high, then spatiotemporal clusters are formed around this point.

Fig. 7 Points overlay

612

Geoinformatica (2012) 16:597–619

Fig. 8 Spatial outlier (A) and spatiotemporal outlier (B)

The main advantage of the FoI index is that when conducting temporal analysis, the
degree gives a measure of how much a point fits with the trend, giving us the ability to
detect possible new trends or the termination of existing ones. For example, if we observe
that points around A increase their FoI over time, this reveals the formulation of a cluster, or
a decrease in their FoI, reveals changes in the evolution of the phenomenon.

6 Experiment

In this section, we present experimental results on the fire incident data provided by the Fire
Brigade Department in Greece to test the effectiveness of our spatiotemporal fuzzy outlier
detection method. The dataset is based on 2.851 incidents served by the fire brigade in the city
of Athens during the years 2006–2007 on a monthly basis. The city of Athens has a population
of one million inhabitants, and the study of emergency incidents is of major importance.
Spatiotemporal outliers are of particular importance because their detection may help locate
new hot spot areas, detect abnormal behaviours and, in general, better organise emergency
services. Furthermore, the temporal analysis of outliers triggers new questions, such as whether
an occurrence is random or whether we should investigate any new processes in the underlying
geography.

Fig. 9 Calculating function (1)

Geoinformatica (2012) 16:597–619

Table 1 FoI results

Point

A

B
C

D

E

F

G

H

613

FoI

0,78

0,69
0,85

0,93

0,85

0,94

0,81

0,83

For the determination of spatiotemporal outliers, FoI is calculated for every point. First,
the function f L
k is calculated. Parameter k is set to 5, meaning that the spatial neighbourhood
is defined by the nearest neighbour and the 5th nearest neighbour. In total, 24 timestamps
are studied (t=1…24), where each timestamp indicates a month. Parameter L is (t−1,t,t+1),
indicating that the temporal neighbourhood is defined by three sequential timestamps: the
one studied, the preceding one, and the following one.

Due to the extent of

the temporal
neighbourhood L(t1,t2,t3) and examine whether there is any outlier in timestamp t2. A
small part of array AC for timestamps t2 and t3 is depicted in Table 2; a similar one is
created for timestamp t2−t1.

the study, we will only present results for

A small portion of the results of the algorithm (that is, FoI—function (6)) is depicted in

We created a raster surface to depict the FoI in the second timestamp, t2 (Fig. 10). This map
was created using the inverse distance weighted method, and it provides a quick overview of

Table 2 Array AC

Table 3.

Id

0202001
0202002

0202003

0202004

0202005

0202006
…

0203001
0203002

0203003

0203004

0203005

0203006
…

t

2
2

2

2

2

2

3
3

3

3

3

3

1 ðs2
f 2
i Þ
423,6881
53,61722

322,89684

419,7026

450,1493

194,2486

f 3
1 ðs3
i Þ
930,8426011
307,5792747

146,8665673

242,3020873

291,1701869

413,0640248

5 ðs2
f 2
i Þ
542,311
178,5342

449,5475

535,1064

588,947

571,1114

5 ðs3
f 3
i Þ
1076,208
485,549

470,0843

506,2652

392,0629

734,5102

1 ðs2
f 3
i Þ
10,8085
175,4027

320,6892

210,0465

108,9839

100,8085

1 ðs3
f 2
i Þ
458,1838819
145,4319827

320,6892401

422,527498

222,0954338

210,114342

5 ðs2
f 3
i Þ
243,7466
259,0135

408,9118

548,9947

612,8166

243,7466

5 ðs3
f 2
i Þ
1091,264
519,5951

551,2893

505,2021

528,5351

365,7316

614

Table 3 FoI results

Geoinformatica (2012) 16:597–619

Id

0202001

0202002
0202003

0202004

0202005

0202006
…

FoI2,3

0,72645

0,933556
0,565826

0,806233

0,7200853

0,898996
……

areas where outliers lie (small values) or areas where there is a high concentration of points.
This map is different from a point map because it is generated by the values of the fuzzy
outlier index for every point and not by their locations. It is not easy to trace hot spot areas or
where spatiotemporal outliers lie by simply mapping points because we give a value of how
much of an outlier a point is. As a result, one can trace areas with high or low FoI without
needing to overlay the points. If a raster map is generated for every timestamp and all of them
are combined by simply adding for every pixel its value (FoI value), then we create a map
where areas with small values depict areas with low FoI, meaning that points occur rarely,
and areas with high values indicate that points occur more often (hot spots). Intermediate
values express areas where points occur but are not that often. For these reasons, setting a
threshold of which the FoI value is regarded to be outlier is not essential because we seek to
locate areas where the presence of points is differentiated.

Figure 10 provides a quick overview of where points that seem to be isolated are
gathered. The light gray areas have large concentrations of points creating hot spots, while
areas that are dark gray tend to have outliers.

Fig. 10 FoI Index raster
depiction

Geoinformatica (2012) 16:597–619

615

By short ascending FoI values, approximately 5% of them has a value smaller than 0,70.
These points show a tendency to be spatiotemporal outliers, indicating that these points lie
away from both timestamps. The fuzzy outlier index shows to what degree points are
outliers in comparison with the rest. This map also depicts the points from the first and third
months. By examining areas A and B, we note the following:

&

&

In area Α, point i (0202001) lies 423,68 m away from the first nearest neighbour in
timestamp t2, while the mean distance from the 5 nearest neighbours is 542,31 m. This
point lies far from its nearest neighbours. Furthermore, the point lies 10,8 m from its nearest
neighbour and 243,74 m from its 5th nearest neighbour in timestamp t3. The FoI index is
for timestamp t2−t1, FoI2,1=0,54, and for timestamp t2−t3, FoI2,3=0,72. The final FoI for
L = t−1,t,t+1 is FoIi
In area Β, point j (0202003) lies 322,89 m away from the first nearest neighbour in
timestamp t2, while the mean distance from the 5 nearest neighbours is 449,54 m. This
point lies far from its nearest neighbours. Furthermore, it lies 320,68 m from its nearest
neighbour and 408,91 m from its 5th nearest neighbour in timestamp t3. The FoI index
is for timestamp t2−t3 FoI2,3=0,56, and for timestamp t2−t1, FoI2,1=0,78. Finally, from
function (7), FoIj

2=0,67. This point is a spatiotemporal outlier but not as point i.

2=0,63 and comes from (7). This point is a spatiotemporal outlier.

In Fig. 11, the mean value of the FoI is depicted for every pixel for the 24 timestamps.
This map depicts areas that have a constantly high presence of incidents (light grey), areas
with few incidents (black) and areas with intermediate values (grey) for the 24 timestamps
study. From this map, we trace three hot spot areas where fire incidents occur continually.
Furthermore, we trace areas where outliers can possibly emerge. Two of them are very close
to the hotspots, while the rest lie in the outskirts.

Fig. 11 FoI Index mean value

616

Geoinformatica (2012) 16:597–619

The location of spatiotemporal outliers and the tracing of hot spots of fire incidents by the
methodology suggested above is important for the organisation and management of the fire
brigade. Locating areas that have a continuous presence of incidents over time indicates that these
are high emergency areas. However, locating areas where incidents do not occur often may lead
to different strategic planning. The detection of hot spot areas leads to a greater focus on issues of
accident prevention. For example, the spatiotemporal analysis leads to a better location of fire
brigade stations and to a better allocation of vehicles in the city’s road network. Furthermore, the
detection of abnormal behaviours in some specific areas triggers questions such as whether an
occurrence is random and whether we should investigate any new processes in the underlying
geography and take precautions for the future. In addition, a time series analysis of hot spot areas
and outlier areas may provide interesting results for the spatiotemporal pattern of the incidents. A
more complete study analysing the socioeconomic environment of these areas would probably
lead to some interesting conclusions about why they appear to have a small or large number of
incidents (e.g., old houses in hot spot areas, or houses that have fully complied with building fire
safety regulations). Still, with our method, we produce a quick and easily understandable map that
may be used as a high or low risk emergency map to enable quick response and better planning.

7 Discussion

A fuzzy outlier index is proposed to trace spatiotemporal outliers when we deal with
spatiotemporal point patterns, such as the spread of viruses, residential burglaries and crimes,
where no linkage among points of different timestamps is available. The main idea is based on
examining clouds of points moving from timestamp to timestamp, where the time interval
between two successive timestamps is constant. In our approach, we trace spatiotemporal
outliers in a temporal neighbourhood of two successive timestamps (t, t+1).

For every point, four attribute values based on distance are calculated. These values express
how far or close a point is with the nearest and k-nearest points of timestamp t and timestamp
t+1. Points lying centrally in both timestamps have small distances, and points that are
detached have large distances. Time is the fifth attribute and is used as a label in fuzzy
clustering. By conducting supervised fuzzy clustering based on labelled data on a timestamp,
we cluster these points into two clusters to determine whether a point fits with the
spatiotemporal cloud of points or is dissimilar to it. Each point in timestamp t gains a
membership value expressing how much of an outlier it is with the points in each timestamp.
If a point has a high membership value, then it follows the trend, meaning that points in
both timestamps are close, and, as a result, it cannot be regarded as a spatiotemporal outlier.
However, if a point has a small membership value, then it does not go along with the trend
and is a possible spatiotemporal outlier. In this case, the distances from the rest of the points
in both timestamps are great.

Using this procedure, we checked only one direction. However, the points in timestamp t
interact with the points in timestamp t+1 as well. If we repeat the same procedure for
timestamp (t−1, t), then we will obtain a picture of what the spatial pattern was in a previous
timestamp. Again, every point in timestamp t is assigned a membership value expressing how
much of an outlier it is with the points in timestamp t and a similar value for timestamp t−1.
Thus, a point in timestamp t is assigned two different values, one for set {t, t+1} and one
for set {t−1, t}. The FoI of every point in timestamp t is the mean value of the membership
values in {t−1,t} and {t,t+1}.

In case where more than three timestamps exist, the same procedure is repeated for each
timestamp separately. Thus, for every timestamp, two values are calculated, and their mean value

Geoinformatica (2012) 16:597–619

617

is the FoI index. Consequently, every point is assigned a value of how much of an outlier it is
in the spatiotemporal neighbourhood t−1,t,t+1. Still, the first and last timestamps have only
one membership value in formula 7. Different depths of the temporal neighbourhood, for
example, two or more in front or two or more in back, will be examined in future research.
In conclusion, if a point follows the trend, meaning that it has small distances of the points of
its timestamp and with the points in neighbourhood L, then it has a high membership value,
indicating that is not an outlier. However, if a point has a small membership value, then it does
not follow the trend and is a possible outlier, which means that the distances with the points of
its timestamp and the points in L are large. Intermediate values represent mixed patterns. For
example, a point may have large distances only in the previous or following timestamps.

The value of FoI where a point is considered to be an outlier is dependent on the
problem and case study each time. The value at which a point is called an outlier cannot be
given a hard definition. After all, this is a fuzzy index that, by default, does not offer crisp
boundaries. In this respect, one point can be linguistically characterised, for example, as a
typical outlier, not so typical outlier or not outlier. For example, in the numerical example
presented in section 5, values smaller than 0,75 show a tendency for a point to be an outlier.
In the experiment based on real events, an FoI of approximately 0,60 leads to an outlier.
One simple approach is to rank FoI values and then check the points that have the smallest
values.

To our knowledge, there is no other fuzzy spatiotemporal index or spatiotemporal index

giving a value of how much of an outlier a point is to compare our results.

8 Conclusions

Finding outliers is an important task for many spatial applications and spatial analysis problems.
In this paper, we propose a definition of spatiotemporal outliers, and we use fuzzy clustering to
detect knowledge in spatial datasets. The proposed methodology addresses a new approach for
identifying outliers, combining the degree to which a point is an outlier with the temporal
neighbourhood to which it belongs. The definition is based on a new index called the Fuzzy
outlier Index (FoI) that does not consider outliers as a binary property but identifies how
outlying a point is. This index is applied not in a single instance but in a temporal context,
providing the basis for identifying spatiotemporal outliers. The method was implemented and
evaluated using both a small numerical dataset and a real dataset from the fire brigade in
Athens, Greece.

In our ongoing work, we are investigating the effect of the depth of the temporal
neighbourhood and the effect of the number of nearest neighbours on the FoI formulation.
Future work will also include the creation of models based on Artificial Intelligence methods
to use spatiotemporal detection and factor FoI to predict the future.

References

1. Adam NR, Janeja VP, Atluri V (2004) Neighborhood based detection of anomalies in high dimension
spatio-temporal sensor datasets, 2004 ACM symposium on Applied Computing, March 14–17, Nicosia,
Cyprus, P. 576–583

2. Anselin L (1995) Local Indicators of Spatial Association: LISA. Geogr Anal 27(2):93–115
3. Ball G, Hall D (1967) A clustering technique for summarizing multivariate data. Behav Sci 12:153–155
4. Bezdek JC (1981) Pattern recognition with fuzzy objective function algoritms. Plenum Press, New York
5. Barnett V, Lewis T (1994) Outliers in statistical data, John Wiley

Geoinformatica (2012) 16:597–619

618

14(4):291–297

6. Birant D, Kut A (2006) Spatio-temporal outlier detection in large databases. J Comput Inform Technol—CIT

7. Breunig M, Kriegel H, Ng RT, Sander J (1999) OPTICS-OF: identifying local outliers. In: Proc. of PKDD 99,
Prague, Czech Republic, Lecture Notes in Computer Science (LNAI 1704), Springer Verlag, pp. 262–270
8. Breunig M, Kriegel H, Ng RT, Sander J (2000) LOF: identifying density-based local outliers. Proc. ACM

SIGMOD 2000 Int. Conf. On Management of Data, Dalles, TX, 2000

9. Chen D, Chang Lu, Kou Y, Chen F (2008) On detecting spatial outliers. GeoInformatica 2008(12):455–475
10. Cheng T, Zhilin L, (2004) A multiscale approach to detect spatial-temporal outliers. Geo-Imagery

Bridging Continents XXth ISPRS Congress, July 12–23, 2004, Istanbul, Turkey

11. Jensen A, Gavrilova M (2006) Normal vs abnormal behavior. Technical Report, SPARCS Lab, https://

dspace.ucalgary.ca/bitstream/1880/45489/2/2006-819-12.pdf

12. Johnson R (1992) Applied multilevel statistical analysis. Prentice Hall
13. Knorr E, Ng R (1997) A unified notion of outliers: properties and computation. In Proc. Of the

International Conference on Knowledge discovery and data mining, 219–222

14. Knorr E, Ng R (1998) Algorithms for mining distance based outliers in large datasets. In Proceedings of

24 th VLDB Conference, 1998

15. Lu Y, Thill J-C (2003) Assessing the cluster correspondence between paired point

locations.

Geographical Analysis, Vol 35, No 4. The Ohio State University

16. McNeill D, Freiberger P (1994) Fuzzy Logic—the revolutionary computer technology that is changing

our world, Touchstone-Simon and Shuster, pp. 319

17. Ng R (2001) Detecting outliers from large datasets. In: Miller HJ, Han J (eds) Geographic data mining

and knowledge discovery. Taylor and Francis, London, pp 218–235

18. Ramaswamy S, Rastogi R, Shim K (2000) Efficient algorithms for mining outliers from large data sets. In
Proceedings of the 2000 ACM SIGMOD International Conference on Management of Data, pages 427–438

19. Ross JT (2004) Fuzzy logic with engineering applications. Wiley, England
20. Ruts I, Rousseeuw PJ (1996) Computing depth contours of bivariate point clouds. Comput Stat Data

Anal 23(1):153–168

21. Shekhar S, Lu CT, Zhang P (2003) A unified approach to detection spatial outliers. GeoInformatica 7:139–166
22. Vaswani N, Chowdhury AR, Chellappa R (2003) Statistical shapetheory for activity modeling, International
Conference on Multimedia and Expo, 2003. ICME’03 Proceedings, 2003, Volume 3, 6–9, July2003. Pg. 111-
181-4 Vol. 3

23. Yamanishi K, Takeuchi J-I, Williams G, Milne P (2004) On-line unsupervised outlier detection using

finite mixtures with discounting learning algorithms. Data Min Knowl Discov 8(3):275–300

24. Yamanishi K, Takeuchi J-I (2002) A unifying framework for detecting outliers and change points from
non-stationary time series data, 10 Proceedings of the Eighth ACM SIGKDD International Conference
on Knowledge Discovery and Data Mining, Pg. 676–681

25. Yu D, Sheikholeslami G, Zhang A (1999) Findout: finding outliers in very large datasets, In

Development of Computer Science and Engineering, Tech Report 99–03, SUNY Buffalo

26. Zadeh LA (1965) Fuzzy sets. Inf Control 8:338–353
27. Zhang Y, Meratnia N, Havinga PJM (2008) Outlier detection techniques for wireless sensor networks: a
survey. Technical Report TR-CTIT-08-59, Centre for Telematics and Information Technology, University
of Twente, Enschede. ISSN 1381–3625

28. Zimmermann H-J (1993) Fuzzy technologien. Prinzipien, Werkzeuge, Potentiale. VDI-Verlag,

Düsseldorf

29. Zhao J, Lu CT, Kou Y (2003) Detecting region outliers in meteorological data, Proceedings of the 11th
International Symposium on Advances in Geographic Information Systems, New Orleans, Louisiana, pp.
49–55, Nov. 7–8

Geoinformatica (2012) 16:597–619

619

George A. Grekousis is a lecturer of Spatial Analysis and GIS at the Department of Planning and Regional
Development, University of Thessaly, Greece. In 2001 he received the MS degree in “Geoinformation” and
in 2005 he received his PhD in Spatial Analysis in National Technical University of Athens, Greece. His
research interests include, Spatial Analysis, Spatial Databases, Data Mining, Artificial Intelligence and
Geographical Information Science.

Yorgos N. Fotis is an Associate Professor of Spatial Analysis and Locational Planning Mapping at the
Department of Planning and Regional Development, University of Thessaly, Greece. He is also director of
the Laboratory of Spatial Analysis and Thematic Mapping at the Department of Planning and Regional
Development, University of Thessaly. His research interests are Spatial Analysis, Location theory, Spatial
Decision Support Systems, Spatial Microsimulation, Integrated Urban Models.

