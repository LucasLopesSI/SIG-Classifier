This article was downloaded by: [Texas A&M University Libraries]
On: 14 November 2014, At: 11:29
Publisher: Taylor & Francis
Informa Ltd Registered in England and Wales Registered Number:
1072954 Registered office: Mortimer House, 37-41 Mortimer Street,
London W1T 3JH, UK

International Journal of
Geographical Information
Science
Publication details, including instructions for
authors and subscription information:
http://www.tandfonline.com/loi/tgis20

Towards an evaluation
of quality for names
placement methods
Steven Van Dijk , Marc Van Kreveld , Tycho
Strijk & Alexander Wolff
Published online: 10 Nov 2010.

To cite this article: Steven Van Dijk , Marc Van Kreveld , Tycho Strijk &
Alexander Wolff (2002) Towards an evaluation of quality for names placement
methods, International Journal of Geographical Information Science, 16:7,
641-661, DOI: 10.1080/13658810210138742

To link to this article:  http://dx.doi.org/10.1080/13658810210138742

PLEASE SCROLL DOWN FOR ARTICLE

Taylor & Francis makes every effort to ensure the accuracy of all
the information (the “Content”) contained in the publications on our
platform. However, Taylor & Francis, our agents, and our licensors
make no representations or warranties whatsoever as to the accuracy,
completeness, or suitability for any purpose of the Content. Any
opinions and views expressed in this publication are the opinions and
views of the authors, and are not the views of or endorsed by Taylor
& Francis. The accuracy of the Content should not be relied upon and
should be independently verified with primary sources of information.
Taylor and Francis shall not be liable for any losses, actions, claims,
proceedings, demands, costs, expenses, damages, and other liabilities
whatsoever or howsoever caused arising directly or indirectly in
connection with, in relation to or arising out of the use of the Content.

This article may be used for research, teaching, and private study
purposes. Any substantial or systematic reproduction, redistribution,
reselling, loan, sub-licensing, systematic supply, or distribution in any
form to anyone is expressly forbidden. Terms & Conditions of access
and use can be found at http://www.tandfonline.com/page/terms-and-
conditions

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 int. j. geographical information science, 2002
vol. 16, no. 7, 641–661

Research Article

Towards an evaluation of quality for names placement methods

STEVEN VAN DIJK*, MARC VAN KREVELD*, TYCHO STRIJK†
and ALEXANDER WOLFF‡
*Department of Computer Science, Utrecht University, P.O. Box 80.089,
3508 TB Utrecht, The Netherlands; e-mail: {steven,marc}@cs.uu.nl
†ASM Lithography, Veldhoven, The Netherlands; e-mail: t.strijk@freeler.nl
‡Institut fu¨r Mathematik und Informatik, Ernst-Moritz-Arndt-Universita¨t
Greifswald, Jahnstraße 15a, D-17489 Greifswald, Germany;
e-mail: awolV@mail.uni-greifswald.de

(Received 8 May 2000; accepted 17 October 2001)

Abstract. The cartographic labelling problem is the problem of placing text on
a map. This includes the positioning of the labels, and determining the shape in
the case of line and area feature labels. There are many rules and customs that
describe aspects of good label placement, like readability and clear association.
This paper gives a classi(cid:142) cation of most label placement rules, and formalizes
them into a function that can serve as a quality measure for label placement. If
such a function is implemented, it allows comparison of the output of diVerent
label placement programs. We give a simple and a more re(cid:142) ned example of the
quality function.

1.

Introduction
For a human cartographer label placement is a labor intensive task that can take
up to 50 % of the total map design time. This explains why there have been many
attempts to automate name placement, mostly in the last two decades; see the
bibliography of papers on map labelling maintained by WolV and Strijk (1996).
Automated label placement requires that the standard guidelines for label placement
be formalized. The simplest of all rules to follow is that names shouldn’t overlap.
Most automated label placement methods described in the literature comply with
this rule; however, only a few methods take into account other aspects such as
aesthetics and avoiding ambiguity.

In this paper we formalize and classify most requirements that are relevant to
the positioning of names on a map. We develop a quality function for label placement
methods that measure how well a method places labels on a given map. Such a
function is useful in many ways. Firstly, it helps us to understand what contributes
to good label placement in general. Secondly, it helps us to develop label placement
software that takes into account the various aspects of label placement. High-quality
cartographic label placement involves many, often con(cid:143) icting factors. This makes it
diYcult to develop software that takes into account all aspects simultaneously, and

Internationa l Journal of Geographical Information Science
ISSN 1365-8816 print/ISSN 1362-308 7 online © 2002 Taylor & Francis Ltd
http://www.tandf.co.uk/journals
DOI: 10.1080/13658810210138742

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 642

S. van Dijk et al.

is eYcient at the same time. This brings us to the third use of the quality function:
it provides a way to compare diVerent label placement methods. From a computa-
tional point of view, it is much easier and faster to measure quality than to optimize it.
The remainder of this paper is organized as follows. In the next section we will
globally discuss the criteria for high-quality map labelling as described in the carto-
graphic literature, and list those that are currently considered by automated label
placement methods. In §3 we develop a framework for a quality function in which
nearly all criteria can be put. This includes specifying the map elements, assumptions
on labels, and the form of the quality function. In §4 we take a more detailed look
at the criteria from literature to see how they (cid:142) t into our framework. In §5 we list
those criteria that were not included to keep the model simple and suggest ways to
extend the framework. In §6 we make the quality function more concrete by giving
an example of a fully operationalized quality function that (cid:142) ts into our framework.
We both give a simple version and a more extended version, showing that most
criteria can be captured quantitatively. §7 concludes the paper.

2. Aspects of letterings maps

A map—on paper or on screen—consists of the representation of a number of
geographic objects and their annotation. Geographic objects are objects that have
real world coordinates associated within them, and when represented on a map they
can be zero-, one-, or two-dimensional. They can also be symbolized, or composite
objects. Annotation consists of labels, that is, text or symbols associated with map
objects, and miscellaneous map objects like title and legend. The main characteristic
of annotation is that its position on the map is not determined directly by coordinates
in the real world.

2.1. Cartographic criteria

The cartographers Imhof (1975), Alinhac (1962), and Yoeli (1972) have each
listed a number of requirements for high-quality labelling. These requirements have
been summarized in various textbooks and surveys (Dent 1996, Robinson et al.
1995). Here we brie(cid:143) y list the major high-level rules again.

Legibility: In(cid:143) uenced by font size, colour (contrast with background), overlap with

Aesthetics: In(cid:143) uenced by the choice of font, shape of text, clustering (clutter),

other labels and features.

accidental regularity in text.

Harmony: In(cid:143) uenced by the choice of typeface, type family, and colour for all labelled
map objects. It is considered good practice to select one typeface, but allow
several variants of a type family, e.g. allow Times roman and italic, variation in
weight (light, medium, bold ), and a small number of font sizes.

Unambiguity: Involves avoiding text close to objects to which it does not correspond.
Harmony may help to resolve ambiguities. If river names are blue and city labels
black, a river name won’t be mistaken for a city name, even if it is the text closest
to the city.

Not disturbing the map contents: Text must sometimes be placed on top of other
objects, but should not cover important information or relevant details of the
map. Note that here the emphasis is on the map background while in the criterion
legibility emphasis is on the label.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 Evaluation of quality for names placement methods

643

Suggesting position, orientation, shape, and hierarchy: One example of this aspect is
that larger cities should have their name in a larger font than smaller cities, and
that coastal towns should have their name in the sea. Other examples are map
features with indeterminate boundaries, features whose boundary is not explicitly
shown, and composite features like groups of islands.

Notice that not all aspects of these rules are relevant to the placement of text, for
instance the issues listed under ‘Harmony’ and some of the issues listed under
‘Aesthetics’. These issues will not be evaluated when we discuss our quality function,
since we restrict ourselves to evaluating label placement.

2.2. Criteria in automated names placement research and software

The rules used in methods for automated label placement are usually much more
‘down to earth’ than the cartographer’s requirements. Most attention has been given
to labelling point features. In many cases, the only requirement is that labels should
not overlap and that the bounding box of the text touches the point to be labelled,
to make sure that the point and the label associate with each other.

Yoeli (1972) was the (cid:142) rst to study automated label placement, and incorporated
position preferences in his algorithm. Later many others followed this. Hirsch (1982)
used buVer circles around points. By forbidding other labels to intersect these buVers,
he prevented ambiguity. Ahn and Freeman (1984) developed a name-placement
system called AUTONAP that includes area labelling. AUTONAP adapts the label
shape to the so-called skeleton of an area. Langran and Poiker (1986) combine label
placement and point selection by removing the least important points in overcrowded
map regions so that the remaining labels can be placed without overlap.

Jones (1989) tried to avoid disturbing the map contents by placing a grid of
pixels on the map. DiVerent feature classes have an overlapping priority. For each
pixel the highest priority feature is determined that overlaps the pixel. For each label
position the amount of overlap is the sum of the priorities of the pixels covered by
the label. Labels are placed preferably in positions with a small amount of overlap.
Cook and Jones (1990 ) describe a Prolog rule that determines whether a label of a
city is placed on the same side of a river or boundary as the city symbol. Another
Prolog rule they describe is to halve the distance of a label to its point if the point
lies in a crowded area. This is done in order to prevent ambiguity. Doerschler and
Freeman (1992) also describe a rule-based approach. One rule they use in order to
avoid ambiguity is that route numbers may not be placed at the intersection of
two roads.

Edmondson et al. (1997) implemented a simulated-annealin g algorithm that gives
penalties for label-label and feature-label overlaps. They, too, introduced a metric to
measure how well a line label is placed with respect to the line. Pinto and Freeman
(1996) introduce a measure that evaluates how well an area label is placed in (cid:142) ve
respects. Barrault (1997) and WolV et al. (1999) both give algorithms for high-quality
line labelling where several diVerent criteria are used.

Preuß (1998) proposed an objective function for point labelling as part of an
evolution strategies approach that incorporates the following elements. Firstly, the
label of a point feature must keep a certain distance to any other point features and
labels. Secondly, for every point feature the labels that do not belong to it must keep
a certain distance. Thirdly, there is a minimum and a maximum for the distance
between a point feature and its own label. The objective function of Preuß also takes

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 644

S. van Dijk et al.

into account general preferential positions of labels relative to their point features.
In addition he computes the local density around each point feature and uses these
densities for a function that gives a penalty for clustered labels and big variance of
local density.

There are three commercial software packages that perform high-quality label
placement in many cases. These are Maplex (ESRI 1998), MapText (1999), and
EverName (EverMap 1999). They incorporate many diVerent criteria in their label
placement algorithms, and allow the user to specify personal preferences as well.
Another assessment of labelling quality in many diVerent respects is given in the
thesis of Barrault (1998 ). His research is closely related to the study presented in
this paper.

3. A speci(cid:142) cation for name placement quality

In this section we will work towards the development of a function that measures
how well a label placement algorithm performed its task on a given input. This
function will be called the quality function. We’ll (cid:142) rst specify what consitutes a map,
what labelling restrictions we impose a priori, and what we expect a label placement
algorithm to get as input and return as output.

The result obtained from the quality function should be easy to interpret. The
easiest type of output is a value for the quality. This value should be higher when
labels are placed better. Such an output allows the comparison of two diVerent
labellings of the same base map. In our opinion, the value may—at best—be
interpreted on an ordinal scale, since statements about exactly how much one
labelling is better than another will generally be meaningless. De(cid:142) ning an ordering
in labelling quality seems ambitious already. The goal is to de(cid:142) ne an ordering for
all cases where one labelling is clearly better than another. If two human carto-
graphers could decide diVerently on which label placement is better, then the ordering
induced by the quality function can follow only one judgement, of course.

Our quality function should have the properties simplicity, relevance, tractability,
and understandability . Simplicity is a general asset of a model, which the quality
function is. The type of relevance we expect is that the quality function really gives
an ordering by quality of diVerent labellings of the same map. T ractability is necessary
since the quality function should be a tool to be implemented which allows automated
comparisons. The understandability of the model is important since it should be
adjustable to give better results. To this end, the quality function should depend
only on a few parameters whose tuning has predictable eVects on the result of the
quality function.

3.1. Elements of the map

In order to formally deal with map labelling, we (cid:142) rst need to specify what objects
are present on a map. A map generally is a rectangular area with the following map
objects that have a (cid:142) xed position:

E Point features, which can be point symbols or other (pictorial ) symbols.
E Linear features, which can be lines or curves, and may branch and join.
E Areal features.

Each of these features has a display style including aspects like colour, patterns,
and width for lines. Note that linear features can have many diVerent meanings.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 Evaluation of quality for names placement methods

645

They can represent roads or rivers, administrative boundaries, parallels of latitude,
or contour lines.

A map usually contains other objects as well, objects without a (cid:142) xed position in

the real world:

E Title, legend, and other insets of the map.
E Text labels associated with any of the three types of features listed above.
E Leader symbols such as arrows that convey the association between a feature

E Diagrams and charts located inside or close to the features they are associated

and its label.

with.

All of these objects —both the ones with (cid:142) xed position in the real world and the
ones without—have an explicit position on the map when it is (cid:142) nished, and that
map can be described purely by geometry (coordinates) and display style of its objects.

3.2. A-priori restrictions of label placement

In the following we list a number of restrictions of our map model. Among others
these will aVect the type and shape of labels that a label placement algorithm can
generate if it adheres to our model. One reason to have such limitations beforehand
is that the quality function to be developed need not deal with the most pathological
situations. The advantage is that the quality function will give a better indication of
the quality in the more normal cases. A second reason is that the quality function
to be developed later can be simpler; simplicity is a desirable property for any model.
The (cid:142) rst limitations we make are that we do not consider the map elements title
and legend, and we don’t deal with diagrams and charts on the map, and visual
eVects like hill shading. We also don’t treat marginal annotation and the use of
leader symbols. Secondly, any feature receives at most one label on the map. The
other limitations deal with the allowed shape of labels. We assume that the text
itself, the type, typeface, font, and colour of the text is (cid:142) xed for each feature to be
labelled. Text is not split over lines. The text block is treated as a rectangular block,
somewhat like a bounding box. Point labels are shapes that must align with parallels
of latitude on the map. On large scale maps, the parallels are usually horizontal,
and all point labels are axis-aligned rectangles. If the parallels are curved, then the
rectangle is curved like the parallels. Line labels are text blocks that, intuitively, are
‘freely curved’ rectangles. They are speci(cid:142) ed by a base curve and a height. For area
labels we additionally allow spacing between individual characters of the text. Area
labels are speci(cid:142) ed by a base curve and a height. Spacing is restricted to be equal
between any two characters. So an area label consists of a set of curved rectangles
(one for each character) on a common base curve, where the distance between
consecutive rectangles is (cid:142) xed.

3.3. Input and output of a label placement method

Before a label placement method can start, a number of choices about the map
design must be made. For instance, what features to display, what colours and which
map projection to use. Intuitively, the map objects have been drawn but no labels
have been placed yet. However, which features should receive labels and in which
- are
font has been decided. Let F=F+|F
the sets of features that will and won’t be labelled, respectively. Note that features

- be the set of features, where F+ and F

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 646

S. van Dijk et al.

- must also be part of the input since they must be considered when placing

in F
labels of other features. Let L be the set of labels of F+ .

Thus we formalize the input to a label placement method by the set F

- of
features that will not be labelled and the set P of pairs á f , l ñ where f
is a feature
in F+ and l the corresponding label in L . Each feature has the following attributes:

feature attributes:

type (point, line or area)
geometry (position, shape, orientation)

E display style (colour, pattern, ...)
E priority

The priority is an attribute that captures how important a feature is for the

intended map use. Each label on the map is modelled as follows:

label attributes:

text
geometry (position, shape, reading direction)

E display style (colour, typeface, font, ...)
E priority

The priority of a label may be diVerent from the priority of its feature, because
sometimes the presence of a feature is more important than its label. The second
attribute of a label is the part computed by a label placement method. If a label isn’t
placed, the geometry attribute states unlabelled. We assume that the output of the
- and P and that the geometry attribute of
label placement method consists of F
each lÎ L is speci(cid:142) ed. Note that the output contains more information than the
labelled map that will be drawn based on it, because from this map one cannot
determine the priority of its features and labels, nor which labels were intended to
be placed but couldn’t. This information is necessary to evaluate the quality of the
result of a label placement algorithm.

3.4. Form of the quality function

The quality function evaluates how well a label placement method performed its
task. The quality function should re(cid:143) ect that the quality is low when labels are
missing or poorly placed, especially if labels of high priority are involved. The input
to our quality function consists of the output of the label placement method as
speci(cid:142) ed above.

The quality function for label placement is a combination of the qualities of the
individual label positions. This makes it possible to trace low quality to the labels
that cause it. There are four aspects to the quality of label placement represented in
our function. They form a break-down of the overall label placement quality into
natural categories with only little overlap in meaning.

We outline the four categories and specify for each which parameters are needed
to evaluate it. The (cid:142) rst parameter is always the one whose quality is being assessed.
Note that the partial quality functions also evaluate the corresponding feature and
label priorities since we consider these to be attributes of the features and labels.

Aesthetics. This aspect represents the quality of the shape of the label itself and is
not in(cid:143) uenced by the label’s position on the map, nor by other map features.
The aesthetic quality of a label lÎ L is denoted: qualityaesthetics (l)

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 E
E
E
E
Evaluation of quality for names placement methods

647

Label visibility. This aspect represents how well a label is visible on the map. It is
in(cid:143) uenced by other features and labels on the map. The visibility quality of a
label l is given by: qualitylabel - vis (l, F, L )

Feature visibility. This aspect represents how well a feature is visible on the map. It
is in(cid:143) uenced by other features and labels on the map. The visibility quality of a
feature f is given by: qualityfeature - vis ( f, F, L )

Label-feature association. This aspect represents how clear it is that a particular
feature and label are associated. It is partly in(cid:143) uenced by other features and
labels on the map. The association quality of a feature-label pair á f, l ñ is given
by: qualityassociation (á f, l ñ, F, L )
Note that the four categories are not only distinct conceptual (or perceptive)
notions, the quality functions show that the parameters needed to evaluate each
of them are diVerent, too. This supports the claim that the four categories have
only little overlap. Generally, the labels of L whose geometry attribute is set to
unlabelled will not in(cid:143) uence visibility or association of other map objects. The
quality function for label placement on the whole map is a combination of the
qualities of the individual features and labels. The quality function has the form:

Quality(P | F - )=c( ClµL
qualityaesthetics
ClµL
qualitylabel - vis
CfµF
qualityfeature - vis
C # f, l$ µP qualityassociation
The C-combinators iterate over all elements of the corresponding set, and c weighs
the contribution of each quality category according to the given application. In technical
maps, for instance, the visibility of labels and a good label-feature association could be
more important than aesthetical issues or the visibility of objects that consitute the map
background. Both C and c could simply return the sum of their arguments.

(l ),
(l, F, L ),
( f , F, L ),
(á f , l ñ, F, L )

)

4. Classi(cid:142) cation of names placement criteria

The general form of the quality function for label placement has been given, but
we have not yet de(cid:142) ned the four partial quality functions. Before we can do this we
shall summarize all criteria for label placement we found in the literature and classify
them. We examined papers by Imhof (1975), Alinhac (1962), and Yoeli (1972). Our
classi(cid:142) cation is according to whether and how the criteria can be incorporated into
our model. A criterion can either be enforced automatically by our restrictions on
the labelling possibilities, or it is represented in one of the four quality functions, or
we have to ignore it in our model due to the additional complexity its integration
would cause. Some of the criteria in the latter class will be discussed in §5.

4.1. Criteria handled by a-priori restrictions

1. The model does not consider fuzzy boundaries, so these boundaries must be

2. Syllabi(cid:142) cation of names is not permitted. According to the model, names can

made discrete.

never be broken into parts.

3. Names of features beyond the map border should be placed in the margin,
names should not be placed in the fold between the pages of a book. However,
our model assumes a rectangular map without margins and folds.
4. Spacing between letters should not be used for point or line labels.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 648

S. van Dijk et al.

4.2. Criteria handled by input speci(cid:142) cations

1. DiVerent font types and font sizes have to be used for the labels to re(cid:143) ect the
classi(cid:142) cation and hierarchy of the objects and their graphical association on
the map.

2. The type series should be easily grasped visually and be easily seen and read

continuously. Do not abuse the choice in type styles.

3. Font sizes have to be chosen such that labels can be placed easily.
4. Apart from geometry, a classi(cid:142) cation in type for each feature should be made,
depending on the scale of the map, for example. This is needed because on
a small-scale map, a small area feature may have to be treated as a point,
whereas on a large-scale map a river may have to be treated as an area. In
this case the label should be placed inside the river.

4.3. Criteria that in(cid:143) uence aesthetic quality
General

Labels should follow the reading direction. Intuitively, the label should be placed
such that the reader does not have to tilt his or her head to read it. For example,
letters should not be placed upside down.

Point labels should always be placed horizontally (respecting the coordinate
system used for the map). This also holds for mountain peaks, it is considered
bad practice to place the label in an arc below the peak.

1. Do not allow a line label to be complicated or extremely curved.
2. A line label should be as horizontal as possible.

1. A horizontal placing is preferred over a tilted placing.
2. Tilted area labels should be slightly curved.
3. No indecision in placing the label: if bent and crooked, then distinctly bent
and crooked. The label should be clearly tilted, or not tilted at all (horizontal).
Likewise, it should be clearly curved, or not curved at all.

4. The bending of the label should be simple: the radius of curvature of the area
label should be constant for each word and it should not span an arc of more
than 60°.

5. If possible, bend curved labels somewhat towards the horizontal.
6. Only long area labels should be allowed to curve twice.
7. If no other placement is possible, an S-curve is allowed, but it should be

composed of two circular arcs of the same radius.

8. The spacing between letters should preferably be less than twice (Imhof ) or

four times (Alinhac) the font size.

4.4. Criteria that in(cid:143) uence label visibility
General

1. Label should be placed either wholly on land or wholly in the water.
2. Overlap between a name and other features should be avoided.
3. If a label has to intersect another label, it is preferred that this happens at the

boundary between units of compound words; see (cid:142) gure 1.

Point label

Line label

Area label

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 Evaluation of quality for names placement methods

649

Figure 1. Place label at the boundary between units of a compound word.

Do not intersect point labels with a grid line.

Place line labels not too close to their feature.

Point label

Line label

Area label

1. Minimize overlap of area labels, including their spacing. This holds especially

for labels of the same type face and size.

2. The amount of spacing can be decreased when the background has a low

contrast with the label or when the background is dense.
3. Do not cross area labels with other labels at right angles.

4.5. Criteria that in(cid:143) uence feature visibility
General

Names should disturb other map contents as little as possible. Avoid covering,
overlapping, concealment. This holds especially for bifurcations,
junctions,
crossings and other important map features.

Line features

If a label of some feature must intersect a line feature of the same colour, then
avoid small angles between the label baseline and the line feature.

4.6. Criteria that in(cid:143) uence label-feature association
General

1. Names should assist in revealing spatial location, territorial extent, connec-

tions, importance and diVerentiation of objects.

2. When a feature is located next to a line feature, the feature and its label should

lie on the same side of the line feature.

Point label and feature

1. Place point label in order of preference, which is top right, bottom right, top

left, bottom left, centre top, centre bottom.
2. A point label should be placed near its feature.
3. Names of coastal towns should be placed in the water.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 650

S. van Dijk et al.

Line label and feature

line; see (cid:142) gure 2.

1. Place a line label such that the shape of the label follows the curvature of the

2. Place line labels at the junction of rivers, since the name of the river may

change there; see (cid:142) gure 2.

3. Do not place a line label too far from its feature. The distance between the

line feature and its label should be about half the font size.

4. Place line labels where there are the fewest objects.
5. Place line label over the line feature, not under it; see (cid:142) gure 3.
6. Avoid labelling lines such that there are other features between the line and

its label; see (cid:142) gure 3.

Area label and feature

1. Extent and position of a label should indicate extent and form of an area.
Bend and spread an area label such that it is spread across the shape of the
area. The label should occupy approximately two thirds of the length of the
line that extends the label across the area.

2. Expand a name towards the boundaries of the area, leaving a space of at least

1.5 times the font size at the ends.

3. A label is allowed to extend beyond the boundary of its area feature if it

cannot easily be mistaken to be a label of another feature.

5. Possible extensions

This section discusses a number of additional criteria for high quality labelling
that cannot be incorporated easily into the classes of the previous section. We make
a distinction in criteria that require more quality functions than the four given, and
criteria that require an extension of the labelling model. Some of the criteria of
the second type could be incorporated without much eVort, while others are more
diYcult to evaluate.

Figure 2. Line labels should follow the curvature of the line they label. They should be
placed at junctions to indicate whether or not the line keeps its name after the junction.

Figure 3. The label Valley River is badly placed because there is another feature between
the label and the feature it labels. The label Railway is badly placed because it is
below its feature.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 Evaluation of quality for names placement methods

651

Extensions that require more classes than the four considered

1. Evaluation of regularities: Label clusters and patterns made by labels should
be avoided. For example, labels should not be evenly dispersed, and in dense
areas labels should be centrifuged outwards. However, in order to keep the
present model simple we chose not to evaluate several labels simultaneously,
which is needed to detect clusters and patterns.

2. Alterations to features: When a label crosses a line feature and there is little
contrast between the label and the feature, the line feature should be inter-
rupted where the label crosses it. (However, if removing the background when
a label is placed across a line feature is implied, this criterion would (cid:142) t into
the feature-visibility class and no alterations would be necessary.)

Extensions that require a more complicated model

1. Multiple labels: Sometimes it is useful to have multiple labels, for example
an elevation and a name for a mountain peak or names in multiple languages
for a city. Also, for line features, labels should be repeated at suitable intervals
along the line feature. According to our model, each feature can only have a
single label.

2. Alternative label shapes: In our model each name is placed on a single line
in the label. Splitting names over multiple lines can be desirable if they consist
of multiple words. Another case occurs when a point feature is on both sides
of a line feature (for example a large city with a river running through it).
Then the label should be split and placed on either side of the line feature.
3. Separation of geometry and feature type: Sometimes the label of an area or
point feature should be placed as a line label. This is for example the case
when the area label of a glacier has to indicate the direction of the (cid:143) ow of
the ice. Another example is a mountain pass, which is labelled as a point but
with the label giving some idea about the location of the pass. Note that this
case is diVerent from point 4 in §4.2 since there the classi(cid:142) cation could be
done implicitly depending on the scale of the map and the fontsize used
for labels.

4. Polar coordinate systems: The labelling of polar maps is a separate case,
where labels have to be placed diVerently according to their distance and
position from the pole. Our model does not consider this case.

5. DiVerent letter spacing: Sometimes one can position a point label with a
break to make room for some other feature (for example a contour line).
This is not only considered bad practice, it is also not possible in our model
where spacing is equal between all letters. It can be desirable however for a
name which consists of multiple words to place the label with large spacing
between the words and less spacing between the letters of a word.

6. Fuzzy boundaries: Our model does not consider fuzzy boundaries, so these

boundaries must be made discrete.

7. Explicit speci(cid:142) cations of map dimensions, margins etc.: Names of features
beyond the map border should be placed in the margin, and names should
not be placed in the fold between the pages of a book. However, our model
assumes the map to be a rectangular area without margins.

8. Relaxing restrictions of point-label shape: In the model, point feature labels
can only be rectangular. Sometimes more can be desired, for example if there
are many labels nearby, it is best to place labels of coastal towns in the water
and curve them away from horizontal.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 652

S. van Dijk et al.

9. Special treatment of contour lines: Contour lines can place extra demands on
the placement of labels. For example, numbers indicating the height of the
contour line should be directed such that they make up a ‘ladder’ where the
top of each label points in the direction of increasing height.

10. Semantic aspects: DiVerent treatment of features with diVerent semantics
is not possible in our model. For example, administrative boundaries may
be interrupted by labels, but rivers should not. This diVerence cannot be
incorporated in the model.

6. An example function for name placement quality

This section describes a more detailed formalization of the quality function for
label placement, that will supply a value indicating the quality of a label placement
in the sense of §3.

First we decide to let the combinators C of §3.4 return the sum of their arguments.
The c-combinator adds up the four individual quality functions without weighing
them, which corresponds to a map purpose where the four qualities are considered
equally important. The general form of our quality function thus is:

Quality(P | F - )= SlµL
+SlµL
+SfµF
+S # f, l$ µP

qualityaesthetics
qualitylabel - vis
qualityfeature - vis
qualityassociation

(l)
(l, F, L )
( f , F, L )
(á f , l ñ, F, L )

The summations are done over all labels that should be on the map, all features
that are on the map, and all feature-label pairs that should be on the map, but where
labels could have been omitted by the label placement method. Even though the
quality function returns a value, and, because of it, allows to compare diVerent
labellings of the same map, the values should be interpreted on an ordinal scale. The
values should suggest a reasonable ranking among the diVerent labellings, but should
not suggest how much better or worse some labelling is.

Next we describe how the four quality functions can be de(cid:142) ned. For each quality
function we give a simple realization and an extended version. The extended version
takes into account more of the criteria listed in §4 than the simple version.

For simplicity we choose to let each quality function take values from 0 (lowest
quality) to 100 (highest quality) for each feature or label. The priorities of the labels
or features could weigh these quality values to incorporate the fact that certain
features and labels are more important than others. We omit this issue from further
consideration, since the adaptations necessary to incorporate priorities are straight-
forward. Recall that a label is considered to be a rectangular or curved shape, and
that only for area labels spacing between letters of a word is allowed.

6.1. T he aesthetic quality function

In our model point labels have a (cid:142) xed shape, hence the aesthetic quality has the
default value of 100 for point labels. For line and area labels it is determined by the
shape. The aesthetic quality of a missing label is by de(cid:142) nition equal to 100. The
criteria of Imhof (1975) and Alinhac (1962) imply that a label should not have more
than one in(cid:143) ection point and that the curvature of a label should be small.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 Evaluation of quality for names placement methods

653

Simple version. We de(cid:142) ne the aesthetical quality of a label l as follows:

100 if the baseline has at most one in(cid:143) ection point and

curvature at most the curvature of a circle with radius
the height of the text;

qualityaesthetics (l)= 0

if the baseline has more than one in(cid:143) ection point and
curvature greater than the curvature of a circle with
radius the height of the text;

50

otherwise.

Extended version. We (cid:142) rst show how fading functions help set up more realistic
quanti(cid:142) cations. We also argue why a quality function is given as a multiplication of
the diVerent criteria that are involved. These aspects also show up later in the other
three extended quality functions, but here we treat them in the context of the extended
quality function for aesthetics.

Fading functions. For our extended example we want to be able to smoothly diVeren-
tiate quite good labellings from not so good labellings. For this purpose we use a
fading function, which maps a continuously changing variable to a multiplication
factor between 0 and 1 with which the quality value is multiplied, due to this variable.
Figure 4 depicts an example of a fading function which maps the maximal curvature
of a given label to a value that gives the fraction of the quality. From the (cid:142) gure it
is clear that the best quality is obtained if the curvature is less than or equal to the
curvature of a circle with radius the height of the text. A slightly higher curvature
is not that bad, but the quality deteriorates when the curvature increases, because
the multiplication factor becomes smaller.

For the aesthetics function we can consider the following factors which in(cid:143) uence it:

E Number of in(cid:143) ection points.
E Average or maximal curvature.
E Average or maximal tilt.
E Maximal angular diVerence. (The maximal angular diVerence of a label is the
maximal diVerence in angle from a point on the baseline and the starting angle
of the baseline.)

Of these variables, the number of in(cid:143) ection points varies discretely, and the other

three vary continuously.

Figure 4. A fading function for curvature.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 654

S. van Dijk et al.

Multiplication. The diVerent aspects of the quality function (such as tilt, curvature
etc.) have to be combined to give the total quality value. Care must be taken in the
way these aspects get combined. There are two natural ways for this: addition and
multiplication. The addition formula has the form

qualityaesthetics (l)=w1 · mapAspect1 (l)+w2 · mapAspect2 (l)+ ...
where the mapAspect functions return a value in the interval [ 0, 1] , and the weights
w1 , w2 , ... should sum up to 100. The multiplication formula has the form

qualityaesthetics (l)=100 · mapAspect1 (l) · mapAspect2 (l) · ...
where the mapAspect functions again return a value in the interval [ 0, 1] . We chose
to multiply the aspects. This has two advantages. Firstly, it makes the aspects to be
independent. We assume the in(cid:143) uence of the quality caused by for example the
curvature of the label is independent from other factors, such as the tilt. The eVect
of having a bad or good curvature is captured by letting the total quality of the
label continuously change between zero and the maximum quality that was achieved
by all the other aspects. In the addition formula, any aspect can only in(cid:143) uence the
aesthetic quality partially, and a very bad aspect cannot make the aesthetic quality
zero. The second advantage of multiplication of the aspects is that the additional
weighing parameters w1 ,w2 , ... aren’t needed.

In the multiplication method it is possible to make sure that some aspect cannot
result in a quality value of zero. This is done by letting the corresponding mapAspect
function return a value in a subinterval of [ 0, 1] , for example the interval [ 0.7, 1]
if the aspect shouldn’t degrade the total quality to below 70 % of what the other
aspects give.

Returning to the extended example for the aesthetics quality function, each of
the four aspects listed before can degrade the quality of the label. We set up a
function for each of these aspects which maps the input to a value between zero and
one and multiply the functions to obtain their combined quality measure. The
(discrete) function mapInf that maps the number of in(cid:143) ection points to the quality
fraction may look like: mapInf (0)=1, mapInf (1)=1, mapInf (2)=0.75 and for i>2
we let mapInf (i)=0.5. Note that we choose to limit the eVect of many in(cid:143) ection
points to a degradation of the quality by 50 % , since it would be undesirable to
allow the quality to become zero if there are many in(cid:143) ection points but the label is
good according to the other aesthetic aspects. The fading functions for tilt and
maximal angular diVerence are similar to the fading function for curvature and can
be designed in a manner that is appropriate for the kind of map at hand.

More concretely, the quality function for the extended example will

look

something like this:

qualityaesthetics (l)=100 · mapInf (inflection(l))

· mapCurv(curvature (l))
· mapT ilt(tilt(l))
· mapAng(angDiff (l))

where mapInf maps discrete values to a quality fraction, mapCurv, mapT ilt and
mapAng are fading functions, and in¯ ection, curvature, tilt and angDiV return, respect-
ively, the number of in(cid:143) ection points, the (average or maximal ) curvature, the
(average or maximal) tilt of the label, and the maximal angular diVerence. It is easy
to extend this quality measure to incorporate more aspects by constructing the

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 Evaluation of quality for names placement methods

655

appropriate fading function. For example, in the case of area labels, spacing becomes
important. If a label is spaced much too wide or much too dense, the quality of the
label degrades. This can also be captured in a fading function.

Often it is especially important that the (cid:142) rst part of the label is labelled well and
it is less important whether the rest is labelled equally well. In that case the (cid:142) rst
part of the label can contribute more to the quality measure than the rest. If one
wants to weigh the initial portion of the label more heavily, then this can easily be
done by breaking the label in two at the desired point. Suppose l is the initial label
and we break it in two to obtain l1 and l2 . We can now use our previous quality
measure to obtain a weighted quality function, for example:

qualityweighted

aesthetics (l)=

qualityaesthetics (l1 )+qualityaesthetics (l2 )
2

The division by 2 ensures that the value remains between 0 and 100.

6.2. T he label visibility quality function

Text is considered a text block with a certain area. It can be disturbed if it
overlaps with other text or if line features or area boundaries run through it. A line
or boundary is considered to disturb all parts of the text block within a certain small
distance from the line or boundary. So there is a buVer area around the line or
boundary.

Simple version. For a label l we de(cid:142) ne qualitylabel - vis (l, F, L ) as the percentage of the
area of l that is overlapped neither by other labels nor by the buVers of line features
and boundaries; see (cid:142) gure 5. If a label is missing, its visibility quality is de(cid:142) ned to be 0.

Extended version. In the extended example for label visibility we can make a distinc-
tion between basic visibility of the label, distraction from the label, and undesirable
interaction between text labels. Basic visibility includes contrast between text and
background, and intersection with other text and features. Distraction includes a
background which itself has highly contrasting parts. The undesirable interaction
between two labels can occur when they have the same baseline and are close
together.

It would carry too far to deal with colour models, contrast, and perception issues

here, so our extended example will be restricted in these aspects.

Average background colour. We average all colours under the label to a single colour,
then use a function or table contrast (l, c) to identify the contrast between the
label colour and the average background colour c.

Figure 5. A simple label visibility quality function measures the percentage of the area of a
label (here ‘Greifswald’) that is not covered by other labels or buVers around features.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 656

S. van Dijk et al.

Intersection of labels and features with the same colour. The function intersect(l, F, L )
returns the total area of displayed point, line, and area features under the label
and of the same colour, as a percentage of the total area of the label.

Distraction of background under the label. A measure for perceived density and
complexity of the map objects under the label is needed. One could use, for
instance, the local feature density by Mackaness (1995) or the clutter function
by Jansen et al. (1998). It would carry too far to treat these in detail here. We
assume that a local feature density function L FD(l, F, L ) is given.

Undesirable text interaction with other labels. This occurs only for labels with approxi-
mately the same colour, font size, and font type. Interaction occurs when the end
of one label seems to continue smoothly as the beginning of another label. The
function interact(l, L ) is 1 if some other label has undesirable interaction with l,
otherwise it is 0.

For area label features we do not only have the label, but also the area in between
the individual letters which may cause distraction from the label. It is most serious
when the letters themselves are disturbed, it is moderately serious when the area in
between is disturbed. For the area label visibility we can take this distinction easily
into account.

The function mapContrast is a fading function that maps the value of contrast to
a value in the interval [ 0, 1] , where 0 represents no contrast and 1 represents a high
contrast. Similarly, we use fading functions mapIntersect and mapDistract to convert
the values from intersect and L FD to the interval [ 0, 1] or a subinterval of it. The
discrete function mapInteract is used to map the output of interact to the same
interval.

Using the multiplication principle, the extended quality function for label

visibility is

qualitylabel - vis (l, F, L )=100 · mapContrast(contrast(l, F, L ))
· mapIntersect(Intersect(l, F, L ))
· mapDistract(L FD(l, F, L ))
· mapInteract(interact(l, L )).

6.3. T he feature visibility quality function
Simple version. Since point features are generally small, they are visible only if no
label intersects them. So we de(cid:142) ne the visibility quality of a point feature to be 100
if it is not intersected by a label and it is 0 otherwise. We de(cid:142) ne the visibility quality
of a line feature as the percentage of its length that is not covered by labels. Similarly,
for area features the visibility quality is de(cid:142) ned as the percentage of the area that is
not covered by labels. Here we exclude the label of the area itself.

Extended version. There are only a few criteria listed in the literature concerning
feature visibility as a result of label placement, see §4.5. For a feature, labels may
disturb geometric, topological, and semantic properties. Here we concentrate on the
geometric properties. From the input to the evaluation, it is for instance impossible
to (cid:142) nd out how important the topological interrelation between two features really
is, and therefore also how badly a label could disturb an interrelationship. If a forest
borders a lake, then both lake and forest have their own importance, but one cannot
tell how important the fact is that the forest borders the lake. As a rule of thumb,
however, we can say that junctions of linear features like roads and rivers have a

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 Evaluation of quality for names placement methods

657

special importance. If we assume that such junctions are separate point features
of the feature class with their own importance, then no special provisions need to
be made. The most important topological relationships will then be taken into
consideration in the evaluation of label placement quality.

The extended model need not be diVerent from the simple model. Point features
have visibility quality 100 if they are visible and 0 if they are obscured. Line and
area features have visibility quality equal to the percentage that is not obscured.

For point and line objects, we could add a distraction component that takes
distraction by features and labels in the neighbourhood into account. The quantity
of distraction decreases with the distance to the feature.

6.4. T he association quality function

The association quality of a feature f and its label l is good if the feature and
its label are close, but no other feature is close to the label l, and no other label is
close to the feature f . We use this general observation both in the simple and the
extended quality function for association.

Simple version. For a point p and its label l, we de(cid:142) ne:

qualityassociation (á p, l ñ, F, L )=

100 if p is within half the text height from l, no

other point is within once the text height
from l, and no other label is within once
the text height from p

0

otherwise.

For line features the situation is more complicated because we would like the
label to be close to the line over its full length. Therefore, we de(cid:142) ne the quality by
thickening the line with a buVer of width one and a half times the text height, and
take the percentage of the label area that lies within this buVer.

For area features the situation is yet more involved because the label should be
close to most of the area. Intuitively, albeit somewhat simplistic, the part of the area
that is associated to the label lies within a certain distance from it. Again the idea
is to use a buVer, but this time we take a buVer around the text. Its width is chosen
twice the text height. The quality of association of an area feature a and its label l
is de(cid:142) ned as:

qualityassociation (áa, l ñ, F, L )=100 ·

Area(buffer (l) \ a)
Area(buffer(l))

If the label is missing, then the association quality is de(cid:142) ned to be 0. Note that

this de(cid:142) nition also makes sense when l or buVer (l) is larger than the area a.

Extended version. For the association of a label with its feature we use a two-level
approach: we devse a function plainAssoc( f , l) with range [ 0, 1] that takes any
feature and any label, and returns how well they associate without taking into
account the other labels or features. Then we use plainAssoc to de(cid:142) ne association
on the map: association of a label and feature in the map context is good if plainAssoc
returns a high value for f and l, it returns a low value when applied to l and any
other feature than f , and it returns a low value when applied to f and any other
label than l.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 658

S. van Dijk et al.

The association can be described by the following function that takes into account

the three components that in(cid:143) uence association:

qualityassociation (á f , l ñ, F, L )=100 · plainAssoc( f , l)

· (1 - maxfˆ µF, fˆ ë fplainAssoc( fÃ
· (1 - maxlˆµL, lˆë

, l))
lplainAssoc( f , lÃ )).

The value of the function plainAssoc( f , l) depends on several aspects, in the (cid:142) rst
place the distance between f and l. Other aspects are colour, feature type and
geometry, and label type and geometry. When f is a point feature and l is a curved
area label with spacing, then f and l will never be associated with each other,
regardless of distance and colour. Similarly, no red label will be associated to a blue
river. First we de(cid:142) ne the function plainAssoc for point features, then we will show
how this function needs to be modi(cid:142) ed for line and area features.

For a point feature f and any label l (point, line, or area label), we let

plainAssoc( f , l)= mapDist(dist( f , l))

´ mapContrast(contrast ( f , l))
´ straight(l)
´ sizeDiscrepancy ( f , l)
´ preference( f , l).

Here, dist( f , l) is the smallest distance between f and l, and mapDist is a fading
function that converts the distance to the interval [ 0, 1] . The diVerence in colour is
captured by the function mapContrast(contrast ( f , l)), the discrepancy in size of the
point feature and the text height by sizeDiscrepancy ( f , l), and straight (l) is a function
that returns 1 if l is straight and 0.5, for example, when l is curved. Finally, the
function preference uses the angle from the point feature to the label to incorporate
preference positions. The angle is converted to the interval [ 0.8, 1] , for example.

For a line feature and any label, we let plainAssoc be de(cid:142) ned in almost the same
way, but dist should be interpreted as the directed one-sided HausdorV distance
from the label l to the line feature f , i.e. maxpµlminqµfd( p, q), where d( p, q) is the
Euclidean distance of two points p and q in the plane; see Huttenlocher et al. (1993 ).
Furthermore, we omit the factor straight (l), and we include a factor for shape
discrepancy, which can be based on the standard deviation of the distance from the
baseline of the label to the line feature f .

For an areal feature f and any label l the function plainAssoc can be de(cid:142) ned in
a similar manner. The distance dist( f , l) is de(cid:142) ned as the average distance of the
points on the boundary of the label to the boundary of the area. This de(cid:142) nition
would give area labels that are in the middle and have the same shape as the area
a higher value than labels that aren’t.

7. Conclusions

In this paper we discussed the evaluation of how well a label placement method
performs its task on a given input. This involved developing a general model, a
formalization, of the shapes of label types, and of the input and output of a label
placement method. The evaluation is given as a function that maps the input and
output of a label placement method to a value representing the quality. The main
use of such a function is to compare how well diVerent label placement algorithms
perform their task on the same input.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 Evaluation of quality for names placement methods

659

Figure 6. Street labelling based on quality functions and simulated annealing.

We listed roughly sixty criteria for good label placement and classi(cid:142) ed them
according to aesthetic quality, label visibility, feature visibility, and label-feature
association. Then we gave a concrete example of a quality function, fully specifying
the quality of a label placement method on a given input. We kept this function
simple; our goal was to capture the most important criteria in a small number of
geometric concepts that can be computed automatically. These concepts include
in(cid:143) ection points of curves, curvature, distance, buVers (dilation), and area of overlap.
We also presented an example of a more extended quality function that dealt with
more of the labelling criteria, and that should incorporate these criteria better than
the simple function.

Perhaps the most important next step towards high-quality label placement is
testing how well quality is represented by the quality function given. This requires
the implementation of the functions in this paper, testing it on labelled maps, and
cartographic expert judgement of the results. Since our quality function is designed
to be transparent, possible shortcomings of the quality evaluation can be traced to
the contributing components of the quality function, and adjustments can be made.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 660

S. van Dijk et al.

In the PhD thesis of Tycho Strijk (2001), Chapter 9 contains the special case of
street labelling using a quality function based on this paper. Figure 6 shows an
example where several quality criteria have been taken into account, and labelling
is done by simulated annealing using the quality function. It is clear that the labelling
can be improved in some aspects, which can be done by incorporating more criteria
in the quality function. A possibility excluded in our paper, but common in street
labelling, is the stacking of labels. In the (cid:142) gure, one can see that stacking is allowed,
but is avoided if possible in the case study of Strijk.

We believe that a formalization, a quanti(cid:142) cation, of all criteria for high-
quality label placement will lead to a better understanding of the (cid:142) nal goals for
automated, high-quality label placement. Eventually this should lead to eYcient,
high-quality label placement methods themselves. This paper is a (cid:142) rst step towards
such a formalization.

Acknowledgments

Steven van Dijk, Tycho Strijk and Marc van Kreveld are supported by the
Dutch Organization for Scienti(cid:142) c Research (NWO). During this research, Alexander
WolV was supported by the Deutsche Forschungsgemeinschaft (DFG) under grant
Wa 1066/3-1. Furthermore, this research is supported in part by the ESPRIT IV LTR
Project No. 28155 (GALIA).

References
Ahn, J., and Freeman, H., 1984, AUTONAP—an expert system for automatic map name
placement. In Proceedings of International Symposium on Spatial Data Handling (Zurich:
International Geographical Union), pp. 544–569.

Alinhac, G., 1962, Cartographie T he´orique et T echnique, chapter IV (Paris: Institut

Ge´ographique National ).

Barrault, M., 1997, An automated system for name placement which complies with carto-
graphic quality criteria: the hydrographic network. In Proceedings of the Conference
on Spatial Information T heory (COSIT ’97), volume 1329 of L ecture Notes in Computer
Science (Berlin: Springer-Verlag), pp. 499–500.

Barrault, M., 1998, L e placement cartographique des e´critures: re´solution d’un proble`me a`
forte combinatoire et pre´sentant un grand nombre de contraintes varie´es. PhD thesis,
Marne-la-Valle´e University, November.

Cook, A. C., and Jones, C. B., 1990, A Prolog interface to a cartographic database for name
placement. In Proceedings of the 4th International Symposium on Spatial Data Handling
(Zurich: International Geographical Union), pp. 701–710.
Dent, B. D., 1996, Cartography, Chapter 14 (Wm. C. Brown Publishers).
Doerschler, J. S., and Freeman, H., 1992, A rule-based system for dense-map name placement.

Communications of the ACM, 35, 68–79.

Edmondson, S., Christensen, J, Marks, J., and Shieber, S., 1997, A general cartographic

labeling algorithm. Cartographica, 33, 13–23.

ESRI, 1998, MAPLEX—a fully automated cartographic name-placement

software.

http://www.esri.com/software/maplex.

Evermap, 1999, Evername —an advanced cartographic label-placement software for MapInfo

Professional. http://www.evermap.com/evername.htm.

Hirsch, S. A., 1982, An algorithm for automatic name placement around point data. T he

American Cartographer, 9, 5–17.

Huttenlocher, D. P., Klanderman, G., and Rucklidge, W. J., 1993, Comparing images
using the HausdorV distance. IEEE T ransactions on Pattern Analysis and Machine
Intelligence, 15, 850–863.

Imhof, E., 1975, Positioning names on maps. T he American Cartographer, 2, 128–144.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 Evaluation of quality for names placement methods

661

Jansen, M., and van Kreveld, M., 1998, Evaluating the consistency of cartographic general-
ization. In Proceedings of the 8th International Symposium on Spatial Data Handling,
edited by T. K. Poiker and N. Chrisman (Barnaby: Simon Fraser University),
pp. 668–678.

Jones, C., 1989, Cartographic name placement with Prolog. IEEE Computer Graphics &

Applications, 9, 36–47.

Langran, G. E., and Poiker, T. K., 1986, Integration of name selection and name placement.
In Proceedings of Auto-Carto 8 (Bethesda: American Congress on Surveying and
Mapping), pp. 50–64.

Mackaness, W. A., 1995, A constraint based approach to human computer interaction in
the 17th International Cartographic

automated cartography. In Proceedings of
Conference, pp. 1423–1432.

MapText, 1999, Label-EZ for automated cartographic text placement—a high-performance

productivity tool for the mapping industry. http://www.maptext.com.

Pinto, I., and Freeman, H., 1996, The feedback approach to cartographic areal text placement.
In Advances in Structural and Syntactical Pattern Recognition, edited by P. Perner,
P. Wang and A. Rosenfeld (New York: Springer-Verlag), pp. 341–350.

Preuß, M., 1998, Solving map labeling problems by means of evolution strategies. Master’s

thesis, Fachbereich Informatik, Universita¨t Dortmund, February.

Robinson, A. H., Morrison, J. L., Muehrcke, P. C., Kimerling, A. J., and Guptill, S. C.,
1995, Elements of Cartography, chapter 22 (Chichester: John Wiley and Sons).
Strijk, T., 2001, Geometric Algorithms for Cartographic L abel Placement. PhD Thesis (Utrecht:

Institute of Information and Computing Sciences, University of Utrecht).

Wolff, A., and Strijk, T., 1996, A map labeling bibliography. http://www.math-inf.uni-

greifswald.de/map-labeling/bibliography.

Wolff, A., Knipping, L., van Kreveld, M., Strijk, T., and Agarwal, P. K., 1999, A simple
and eYcient algorithm for high-quality line labeling. In Proceedings of the GIS
Research UK 7th Annual Conference (GISRUK’99), edited by D. Martin and F. Wu
(Southampton: Department of Geography, University of Southampton), pp. 146–150.
Yoell, P., 1972, The logic of automated map lettering. T he Cartographic Journal, 9, 99–108.

Downloaded by [Texas A&M University Libraries] at 11:29 14 November 2014 