Geoinformatica (2014) 18:621–669
DOI 10.1007/s10707-013-0200-4

Estimation of an unknown cartographic projection
and its parameters from the map

Tomas Bayer

Received: 3 January 2013 / Revised: 25 September 2013 /
Accepted: 28 November 2013 / Published online: 21 March 2014
© Springer Science+Business Media New York 2014

Abstract This article presents a new off-line method for the detection, analysis and esti-
mation of an unknown cartographic projection and its parameters from a map. Several
invariants are used to construct the objective function φ that describes the relationship
between the 0D, 1D, and 2D entities on the analyzed and reference maps. It is minimized
using the Nelder-Mead downhill simplex algorithm. A simplified and computationally
cheaper version of the objective function φ involving only 0D elements is also presented.
The following parameters are estimated: a map projection type, a map projection aspect
given by the meta pole K coordinates [ϕk, λk], a true parallel latitude ϕ0, central merid-
ian longitude λ0, a map scale, and a map rotation. Before the analysis, incorrectly drawn
elements on the map can be detected and removed using the IRLS. Also introduced is a
new method for computing the L2 distance between the turning functions (cid:5)1, (cid:5)2 of the
corresponding faces using dynamic programming. Our approach may be used to improve
early map georeferencing; it can also be utilized in studies of national cartographic her-
itage or land use applications. The results are presented both for the real cartographic data,
representing early maps from the David Rumsay Map Collection, and for the synthetic tests.

Keywords Digital cartography · Map projection · Analysis · Simplex method ·
Optimization · Voronoi diagram · Outliers detection · Early maps · Georeferencing ·
Cartographic heritage · Meta data · Marc 21 · MapAnalyst

1 Introduction

The detection and estimation of unknown cartographic projection parameters from a map
represents a problem belonging to the category of cartometric analysis. From both carto-
graphic and algorithmic points of view this issue can be considered remarkable; it combines

T. Bayer ((cid:2))
Department of Applied Geoinformatics and Cartography, Faculty of Sciences,
Charles University in Prague, Celetn´a 597/13, 116 36 Prague 1, Czech Republic
e-mail: bayertom@natur.cuni.cz

622

Geoinformatica (2014) 18:621–669

methods from several existing areas, particularly robust statistics, computational geometry,
and mathematical cartography. Such an analysis is beneficial and interesting for historic,
old, or current maps without information about the map’s projection; it could improve geo-
referencing. This information is also useful for further studies of the national cartographic
heritage, land use, or land cover applications.

The appropriate cataloging of maps creates the need for information about the map’s
projection and geographic extent, which form a part of the cartographic meta data. The bib-
liographic format Marc 21 contains a detailed description of a map projection in fields 034
(Coded Cartographic Mathematical Data) and 255B (Cartographic Mathematical Data) of
the bibliographic record; analogous records are also included in the INSPIRE standard. As
there was no exact way to determine a map projection, so far, this feature has been esti-
mated visually, or the record has been left blank. Using the proposed solution, this step can
be performed semi-automatically and with a higher degree of relevance using our method.
Some applications can be found in the area of natural gas and oil prospecting, where in

less developed countries geological maps in paper form are used.

The vast majority of early maps were not constructed on a solid geometric or geodesic
basis. Therefore, it is impossible to consider the existence of a map projection in such
cases. Let us ask if that sort of analysis makes sense. These maps have unsuitable geometric
properties (locally and nearly randomly changing length, area, and angular distortions not
depending directly on the geographic location), making the process of estimating the carto-
graphic parameters more difficult and ambiguous, and causing the results to be somewhat
unreliable. In the author’s opinion, even in such cases it is more suitable to try to estimate a
projection, especially if approximate georeferencing is required. This claim applies in par-
ticular to small-scale maps (world maps, maps of hemispheres or continents) created since
the 17th century, which were analyzed in the paper.

The current approach, based on 2D transformation, does not estimate the additional
parameters of the map projection (ϕk, λk, ϕ0) and does not remove map elements highly
influenced by errors negatively affecting the results. Neither the transverse nor the oblique
aspects of the projection are supported, and 1D-2D elements are not involved in the analysis.
This paper brings a new method for the detection and estimation of an unknown map’s
projection in all aspects (normal, transverse, oblique), eliminating these drawbacks. It is
based on the minimization of the objective function φ using the downhill simplex method. It
is a proper method for solving small dimensional problems. The objective function φ, which
is discussed in Section 5.1.1, is based on a combination of different types of invariants.
However, a simplified version of the objective function φ, computationally cheaper, is also
presented. Meridians and parallels are detected using the RANSAC algorithm, modified so
as to provide not only the best solution, but more acceptable solutions. Instead of a single
fit meridian or parallel, a set of meridians and parallels will be detected.

Although, the proposed method brings correct results, there is a place for further
improvements. The more efficient methods, based on the NLSP approach, available for the
on-line analysis, will be presented in the next article.

2 Related work

Due to the difficulty of estimating unknown projection parameters, especially without deep
numeric analysis, this problem has not been studied in detail. However, the development of
computer sciences has provided new analytical methods and procedures.

Geoinformatica (2014) 18:621–669

623

There are software tools focused on georeferencing and analysis of early maps
[9, 10, 35, 42], where several transformation models are supported (similarity, affine,
spline). So far, they do not allow automated detection of a map’s projection. However, they
are widely used in various institutions, including the British Library [26, 42], and the New
York Public Library [35].

Some simple methods for identifying a projection in an Arc Map software can be found
in the Esri Knowledge Base [11, 12]. A built-in Arc Map tool, based on user-entered con-
trol points and a simple affine transformation, can also be used. However, these solutions
have several limitations and are not exact. The prjfinder software[14] represents a more
sophisticated tool for Arc Map version 9, which searches for the best matching coordi-
nate system. Unfortunately, its capabilities cannot be tested under version 10.1, where the
software did not work.

The detection method, based on 2D transformations, was developed by [23] and the algo-
rithms were implemented in MapAnalyst open-source software (http://mapanalyst.org/).
According to author knowledge, this is the only solution that really works.

The proposed method is more robust; it supports the analysis of elements of different
spatial dimensions (0D, 1D, 2D), enables the determination of additional parameters of the
map projection and supports the normal, transverse, and oblique aspects of the projection.
The detection process consists of different procedures that are frequently used in com-
puter sciences. Let us give a brief overview of similar problems and topics. Given the wide
range of the paper, not all relevant articles could be referenced.

RANSAC is the very frequently used robust estimator introduced by [13]. It is applica-
ble to robust regression as M-estimators [47]. In the proposed solution, for fitting meridians
and parallels, only the linear regression is used. Algorithms for point patterns matching
on the basis of 2D transformations are widely used because of their reliability, efficiency,
invariance, and ease of computation. A matching algorithm invariant to translations, rota-
tions, and scale changes using 2D transformation was described by [8]. Another method
with uncertainty regions was brought by [36]; a similarity factor was used by [51]. Variable
uncertainty regions formed by the Tissot indicatrix, depending both on the geographic posi-
tion and the map projection properties (e.g., cartographic distortions) represent a novelty,
given the current state.

An overview of shape-matching algorithms was brought by [48]; a comparison of their
performance and efficiency characteristics was mentioned by [2]. The turning function, a
reliable and efficient shape descriptor, was introduced by [1]. Its properties and suitability
for different types of element analysis were examined in depth in a series of articles by [29,
43, 49]. Statistical methods represent another approach of computing the spatial similarity
between two sets of points; the cross nearest neighbor distance [39] measuring the spatial
proximity of two normalized data sets seems to be an appropriate similarity descriptor. Mea-
suring similarities between two data sets, using their Voronoi diagrams is not a frequently
used method. However, there is a direct approach assessing features of the Voronoi cells.
Simple criteria such as area, perimeter [31], number of vertices [7], and the distribution
of cell areas [4, 22] are considered. Due to the lack of appropriate cells, these criteria are
difficult to apply to smaller sets.

There are different strategies for identifying gross errors depending on the number of
errors in the data set: M-estimators [21], the Danish method [27], least trimmed squares
[45], and many others. An overview of robust methods in heterogeneous linear models was
created by [19]. When multiple gross errors exist, an iterative least square method brings
accurate results [18, 25, 52]. For highly contaminated data, RANSAC is also an efficient

624

Geoinformatica (2014) 18:621–669

robust estimator [20]. Algorithms for Boolean operations on simple polygons have been
described in many articles, such as: [30, 32, 33].

The downhill simplex method introduced by [37] is frequently used for non-linear
optimization. A detailed description of simplex methods can be found in [24, 41, 50]; a con-
vergence is discussed in [28, 34]. An improved version with adaptive parameters brought
[16], a quasi-gradient version [40].

3 Map projection parameters

The regular map projection P, P : S1 → S2, which represents the reference surface S1
(Earth) or its part on another, typically, flat, surface S2 (a plane), is given by coordinate
functions F, G in the explicit form

X =F (ϕ, λ),

Y = G(ϕ, λ).

This formula expresses the relationship of a point P that is transformed between surfaces
from geographic coordinates ϕ, λ to rectangular coordinates x, y. Coordinate functions are
continuous with their first and second partial derivatives, and are finite. The correspondence
of points on both systems of true and meta pole K = [ϕk, λk] for the oblique aspect express
the laws of spherical trigonometry

sin ϕ

sin λ

(cid:3) = sin ϕk sin ϕ + cos ϕk sin ϕ cos(λ − λk),
(cid:3) = cos ϕ sin(λ − λk)/ cos ϕ

,

(cid:3)

(1)

(2)

where (ϕ(cid:3), λ(cid:3)) are geographic coordinates of a point related to the meta pole K. Let us
denote e, f, g, h as Gaussian coefficients equal to

e =

G =

(cid:3)
2

(cid:3)
2

(cid:2)

(cid:2)

∂F
∂ϕ

∂F
∂λ

(cid:2)

(cid:2)

(cid:3)

2

(cid:3)

2

,

,

∂G
∂ϕ

∂G
∂λ

+

+

F = ∂F
∂ϕ
h = ∂F
∂λ

∂F
∂λ

∂G
∂ϕ

+ ∂G
∂ϕ
− ∂F
∂ϕ

∂G
∂λ

,

∂G
∂λ

.

Local linear scale factors m, n in meridian and parallel directions, for a radius of a sphere
R, and a given point P , are

m2 = e/R2 ,

n2 = g/(R2 cos2 ϕ).

The angular distortion ω(cid:3) at a given point P is
ω(cid:3) = tan

−1(h/f ).

The ellipse of distortion (i.e., the Tissot indicatrix) T given by parameters a, b, A expresses
the relationship of a local linear scale on the azimuth. An infinitely small circle of the radius
r at a given point is projected as an infinitely small ellipse given by semiaxes a, b

a = 0.5 (c + d) ,
b = 0.5(c − d),
c =
d =

(cid:4)

(cid:4)

m2 + n2 + 2mn sin ω,
m2 + n2 − 2mn sin ω,

Geoinformatica (2014) 18:621–669

the extreme values of local linear scale α measured from meridian passing P from

α = 0.5 tan

−1(2mn · sin ω/(m2 − n2)).

The convergence γm of a projected meridian or parallel γp at a given point P

γm = tan

−1

(cid:2)

(cid:3)

,

∂G
∂ϕ

/

∂F
∂ϕ

γp = tan−1

(cid:2)

(cid:3)

∂G
∂λ

/

∂F
∂λ

625

(3)

is used to determine the polar angle A of the semi-major axis of the Tissot indicatrix and the
y axis (i.e., azimuth), where α(cid:3) represents the projected extreme value of local linear scale

A = α

(cid:3)

+γm,

α(cid:3) = tan−1(b/a · tan α).

Parameters a, b, A of the Tissot indicatrix play an important role in the proposed matching
algorithm for point features. They enable the construction of uncertainty regions of variable
dimensions. We find the percentage ratio μ of point features of the testing set lying within
the uncertainty regions drawn on the corresponding point features of the reference set; see
Section 6.

3.1 Intervals of determined cartographic parameters

To avoid a geometric construct which does not respect the real cartographic parameters for
the analyzed area, cartographic principles and rules must be taken into account. Depend-
ing on the shape, size, and position of the projected analyzed area, the values of some
cartographic parameters will be refined.

Setting new intervals of ϕk, λk for an oblique aspect Let us apply known cartographic
assumptions and patterns: both prime meridian and true parallel are passing approximately
through the center of an analyzed territory (conic, cylindrical projections) and a meta pole
should be placed inside an analyzed territory (azimuthal projections). Other projections will
be applied only in the normal aspect. It is also known that cartographic projections used in
small-scale maps are commonly defined only in the normal aspect.

(cid:6)

2

2 , π

(cid:5)
− π

For a map projection analyzed in an oblique aspect, both domains apriori given by
and λk ∈ (cid:5)−π, π (cid:6) will be reduced, especially, in the longitudinal direction. New
ϕk ∈
intervals that depend both on the analyzed territory and a map projection can be found in
Table 1. Extremal values of ϕ, λ are vertices of the minimum bounding rectangle of Q. This
approach brings time improvement, primarily for smaller territories.

Table 1 Intervals ϕk, λk depending on an analyzed territory position and a map projection

Projection

Conic, cylindrical

Analyzed area

ϕmax ≤ 0
ϕmin ≥ 0
ϕmin ≤ 0 ∩ ϕmax ≥ 0

ϕk
(cid:5)
− π
(cid:5)
0, π
(cid:5)
2
0, π
2

(cid:6)
2 , 0
(cid:6)

(cid:6)

λk
(cid:5)
λmin − π
(cid:5)
λmin − π
(cid:5)
λmin − π

(cid:6)

(cid:6)

(cid:6)

2

2 , λmax + π
2 , λmax + π
2
2 , λmax + π
2

Azimuthal

ϕk
(cid:5)

(cid:6)
2 , 0
(cid:6)

− π
0, π
2
2 , π
− π
2

(cid:5)

(cid:5)

(cid:6)

λk

(cid:5)λmin, λmax (cid:6)
(cid:5)λmin, λmax (cid:6)
(cid:5)λmin, λmax (cid:6)

626

Geoinformatica (2014) 18:621–669

Such computed intervals are generally too wide, especially for large territories. Let us
make the assumption that a cartographer proposed a map projection, so that the cartographic
distortions on the borders of the analyzed area will be the smallest (or small). Therefore,
the optimal meta pole position leads to the minimization of the relative linear distortion
measured along all directions and all points. There are many linear distortion criteria given
by various formulas (Airy, Airy-Kavrayskiy and Jordan) [46]. We use the complex criterion
εc [5] of

εc = 0.5(|a − 1| + |b − 1|) +

− 1.

For a simple projection with straight meridians (cylindrical, conic azimuthal), where h = a
and k = b, this formula turns into the simpler form of

εc = 0.5(|h − 1| + |k − 1|) +

− 1.

The criteria of variations within the analyzed area that should be minimized is for the
oblique projection aspect given by

E =

1
min)(λ(cid:3)

(ϕ(cid:3)

− λ(cid:3)
An exact determination of E is very difficult. Therefore, the analyzed area is divided into k
small pieces with midpoints Pi = [ϕi , λi ]. Then E can be determined as the weighted mean
of k pieces

− ϕ(cid:3)

min)

ϕ(cid:3)
min

λ(cid:3)
min

max

max

(cid:7)

(cid:7)

ϕ(cid:3)
max

λ(cid:3)
max

εcdϕ(cid:3)dλ(cid:3).

a
b

h
k

E =

(cid:8)
k
i=1 wiεi
(cid:8)
k
i=1 wi

,

where wi = cos ϕi . We simplify this relationship and compute E values only in two extreme
points, Pmin = [ϕ(cid:3)
max, λ(cid:3)
minεc(Pmin) + cos ϕ(cid:3)

] of the analyzed area, so

] and Pmax = [ϕ(cid:3)

maxεc(Pmax)

min, λ(cid:3)

cos ϕ(cid:3)

max

min

.

(4)

E =

min
For each analyzed P , P (cid:3) pair, E is computed and compared with the required graphical
accuracy G of the map. If E > 3G, the proposed projection is inappropriate for the analyzed
area, and the objective function is penalized.

Considering the maximum length distortion m = 0.001 % for the large-scale map
(1 cm per km for S = 1000), m = 1% for the mid-scale map (S = 1, 000, 000), and anal-
ogously m = 100 % for the small-scale map (S = 100, 000, 000), the required graphical
accuracy is simply expressed as follows

cos ϕ(cid:3)

+ cos(cid:3) ϕmax

G = 1.0 · 10

−6S

This test can be applied during the heuristic check of determined parameters. Of course,
we must assume that the cartographer did not use any improper map projection parameters.

4 Input parameters of detection

Taking into account the financial and time constraints, there is no practical need to analyze
the entire early map at once. The full vectorization represents a time-consuming process,
especially if the map contains rich and extensive details. This may be thousands of features;
however, for the analysis, the subset is sufficient. According to the results of tests, 10-20
features are recommended, see Section 7.

Geoinformatica (2014) 18:621–669

627

An essential step of the detection process is represented by finding such geometric char-
acteristics of elements both in the analyzed, and reference maps, to decide which projection
has been used. To increase the detection reliability, 1D-2D features or sampled meridians
and parallels detected by the RANSAC algorithm (see Section 5.4), are involved.

Numerous requirements increasing the analysis efficiency should be put on testing sets.

The results of analyses are strongly influenced by the following factors:

Impact of spatial distribution The uniform distribution of analyzed features on a map plays
an important role. The proposed techniques are suitable for sets with approximately the
same spatial density of features. However, in many cases where it is impossible to ensure this
requirement, the drawing density on the map may be highly variable. This applies especially
to early maps. On portolan charts the coastline and ports are drawn, but the interior of
the continents is missing. Irregularly spaced clusters of points or wide territories without
analyzed points affect the results negatively, see the results in Section 8.3.

Impact of the analyzed territory The size and position of the analyzed territory strongly
affect the efficiency of the detection algorithm. The analyzed territory should have similar
dimensions in the latitudinal and longitudinal directions, and should be large enough (at
least (cid:12)ϕ = (cid:12)λ = 3◦) to ensure that the positional differences of both sets of features in
the map’s projection are not less than the graphical accuracy of the map. The locus of an
analyzed region near the equator (a similar shape in most cartographic projections) or near
the geographic/meta pole (singular points) is also not recommended.

Impact of the map scale There is a strong dependance on the previous point; the projected
territory size is a function of the map scale. Small-scale maps show a large territory in low
detail and vice versa, but they are affected by the generalization of the content. However,
small-scale map parameters are better to determine (Fig. 1).

Impact of map projection Map projection properties represent a very important factor.
Both oblique and transverse aspects are more difficult to detect. The objective function φ
has a complicated course, with many local minima (see Fig. 2). Therefore, the iteration

Fig. 1 The set of 0D features (identical points) on the analyzed and reference maps acquired in MapAnalyst
software

628

Geoinformatica (2014) 18:621–669

k

φ

0

80

60

40

20

−20

−40

−60

−80

−150

−100

−50

50

100

150

0
λ
k

Fig. 2 A convergence of the simplex X to the global minimum ϕk = 1.0◦S, λk = 73.1◦E (Map 8), selected
steps from the first 30 iterations are visualized

process can become stuck in a local minimum. Some shapes of the graticule are easily rec-
ognizable (cylindrical, azimuthal projections in the normal); others have a similar shape
(pseudo-azimuthal, pseudo-cylindrical, globular). Because of the various types of projec-
tion constant parameters, the exact values of the parameters are difficult to determine,
especially for conic projections (The North Pole projected as a point or a part of the
circle).

Impact of the map content Map sheet distortions caused by a paper aging, or organization
by map fields, must also be taken into account [3, 17, 44]. Some cartographic techniques
have a strong influence on the geometric accuracy of a map; for example, a generaliza-
tion. These effects should be corrected before analysis. However, some can be removed
completely (a paper distortion), partially (outliers), or remains (a generalization effect).
Due to the smaller generalization, topographic maps represent a better source for the
analysis.

Impact of types of features The selection of appropriate point features for analysis is rela-
tively complicated. We assume that their position does not change significantly over time
(they are stable in their geographical locations), and they are easy to identify on a map
(cities, castles, river confluences, churches). In most situations, this set of elements is suf-
ficient for further analysis. If both the analyzed map and the reference maps contain a
graticule, an additional analysis of sampled meridian/parallel points is a promising method,
improving the results. An implementation of line features (rivers, roads) into the assess-
ment process reduces the discretion and enables additional analysis, which further improves
the results. Polygonal features allow the analysis of continuous and extensive parts of maps
in a single step; they represent one of the best materials for the assessment process. Fea-
tures appropriate for analysis are selected by a cartographer manually, in accordance with
all recommendations; see Fig. 1.

Geoinformatica (2014) 18:621–669

629

5 The concept of detections

This section describes, in general, selected features, procedures, and techniques used for the
detection of an unknown map’s projection and the estimation of its parameters.

Test and reference features We consider a set of test features P = {P1, ..., Pn} ⊂ R2, (1 ≤
n ≤ ∞), where Pi represents a point, a line segment, or a closed area on the analyzed map,
and analogously, a set of reference features Q = {Q1, ..., Qn} ⊂ R2, (1 ≤ n ≤ ∞) on the
sphere. We assume that the elements in P and Q do not intersect each other and that the
element Pi = [xi, yi] represents corresponds to Qi = [ϕi , λi ].

Vector of determined parameters Let us denote Xj = (ϕk, λk, ϕ0, λ0) the vec-
tor of unknown parameters representing projection P constant parameters, and (cid:9)X =
((cid:9)ϕk,(cid:9)λk, (cid:9)ϕ0,(cid:9)λ0) their best determined values.

Fundamentals of analysis During the analysis, we search for a suitable map projection P
and its parameters (cid:9)X

P(Q) : Q → P .

(5)

Since the input data are affected by errors, we have an optimization problem

P(Q) : Q → P (cid:3),

P (cid:13)= P (cid:3),

φ(P (cid:3), P ) (cid:13)= ∅,

where the objective function φ will be minimized. The aim is to determine (cid:9)X, which
minimizes φ over P

(cid:9)X = arg min
P
This step can be solved separately for every P ∈ LP projection, where LP denotes a list of
analyzed projections. Finally, a vector X

(φ(P , Q)).

(6)

X = arg min
∀P

(φ((cid:9)X)),

representing the best parameters over all projections, is determined.

We do not perform this analysis in a single step, so the problem is decomposed in two
phases solved separately. For any Xj ∈ X representing the simplex vertex, the objective
function φ(Xj ) between P , Q, is computed in the following sub-steps:

–
–

project P(Q) : Q → P (cid:3) using Xj ,
compute the objective function φ value between P , P (cid:3).

Further details can be found in Section 5.1.1.

Equation 6 represents a classical optimization problem that can be solved in many ways.
To minimize φ, the downhill simplex method based on the global optimizing Nelder-Mead
algorithm was used. This detection technique does not need the knowledge of ∇φ; it is easy
to compute, but off-line (the analysis takes time). However, the next article brings more
advanced methods for the on-line detection.

The objective function φ and its construction are discussed in Section 5.1.1, it consists

of multiple 0D-2D criteria.

For small territories, the elements of P (cid:3) can be found directly from the map; the impact
of distortions is less than the graphic accuracy of the map. The best choice is to have the
spherical coordinates ϕ, λ. It is recommended to derive both P and Q from maps having an
approximately analogous scale, type and content.

630

Geoinformatica (2014) 18:621–669

Scheme of analysis We have P , Q sets, LP list and a vector Xj , representing the input
parameters of analyses. A detection of meridians and parallels using the modified RANSAC
algorithm is performed over reference set Q. For this purpose, we need to project Q in
a convenient map projection P, transforming meridians and parallels into a set of straight
lines.

Then starts the optimization process, which is repeated for all P ∈ LP map projections.
To make the optimizing process more efficient, the two following steps must be taken. A
heuristic H realizing a fast (and approximate) matching between selected parts of P , P (cid:3)
for Xj is computed. A wrong matching pair with H (P , P (cid:3)) > Hmax is considered as
unpromising, and penalized φ(Xj ) = ∞.

Subsequently, for a P , P (cid:3) pair, a detection of gross errors representing improperly drawn
map elements negatively affecting the results is performed. The robust IRLS method, based
on the standard Markov model, is used. Based on the analysis of about one hundred early
maps, an empirical limit of 20 % of incorrectly drawn elements was determined. If P , P (cid:3)
contain more than 25 % gross errors, a map is suspected of being unprojected or unsimilar,
and Xj is penalized in the same manner.

Otherwise P , P (cid:3), form a suitable pair, whose objective function value is determined
from φ. The selected matching algorithms for the 0D-2D entities are members of the objec-
tive function φ. An essential role is played by point features algorithms; analyses of other
features (not always available) are more complementary and improve the results.

For all P ∈ LP the vector (cid:9)X of best parameters is determined. Finally a vector X with
the minimum objective function value over all projections is found, and its parameters are
assigned to the analyzed map.

Geometric accuracy approach vs. Shape preservation approach Map projections are
divided into several categories and subcategories according to their common geometric and
cartographic properties [6, 46], which are reflected in the shape of meridians and parallels.
Therefore, a pair of maps in projections belonging to the same category has the analogous
shape of the graticule, but the residuals of corresponding points in these projections may not
be small. A classification of the analyzed map’s projection into a specific category with the
detailed determination of parameters should be one of the preferred outcomes. On the other
hand, two maps may be created in projections belonging to different categories. They may
have small residuals of corresponding points, but their graticules have a different shape; see
Fig. 3. The geometric accuracy approach classifies the Eckert projection to be more simi-
lar to the plate carree projection. On the contrary, the shape preservation approach finds the
Mercator projection to be more similar to the Plate Carree projection.

a

b

c

Fig. 3 Comparing the Voronoi diagram of the Plate Carree a projection to the Voronoi diagrams of Eckert
V b projection (more similar, if the geometric accuracy approach used) and the Mercator c projection (more
similar, if the shape preservation approach is used)

Geoinformatica (2014) 18:621–669

631

Which criterion is more important: a similar shape of the graticules, or small residuals
of corresponding points? In the author’s opinion, both criteria should be taken into account.
The standard deviation is a current descriptor for the first case; the suitable parametrization
of the shape, or the analysis of auxiliary 2D planar structures (Voronoi diagrams), are appro-
priate for the second case. This fact is important in the design of the objective function φ,
which contains both approaches.

Results of the analyses Depending on the results of the analyses, in descending order of
relevance and level of distinction, the projection parameters (case 1), projection type (case
2), or projection category (case 3) might be determined, or the map is unprojected (case 4).
Case 1: estimated parameters for all the analyses are identical. Case 2: results show a large
consensus in most of the criteria. Case 3: More projections have similar, inconclusive and
unclear results. Case 4: The results are discrepant, large residuals are present, and μ = 0
(see Eq. 9). However, this situation may occur when none of the parameters can be reliably
determined (an unprojected map without a geodesic basis).

5.1 Nelder-mead simplex method

The Nelder-Mead method minimizes the objective function φ without explicit knowledge of
its gradient ∇φ. It belongs to the global optimizing simplex methods using pure heuristics. A
simplex is represented by the m + 1 dimensional polytope. It is a proper method for solving
small dimensional optimizing problems [16]. In general, the minimized function φ is not
strictly convex. Therefore, the algorithm may fail or become stuck in the local minimum.

Algorithm description A detailed description of the algorithm can be found in [3, 7]. The
Nelder-Mead method uses an heuristic approach. During the optimization, the worst point
of the simplex is replaced. The algorithm can be summarized as follows:
1. Select a random simplex X(m + 1, m) and order its vertices as φ(X1) < φ(X2) < ... <

φ(Xm+1)

2. Compute the simplex centroid ¯X from m best points

3. Compute the reflection point Xr

¯X = 1
m

m(cid:10)

j =1

Xj .

Xr = (1 + α) ¯X − αXm+1.

4.

5.

Test Eq. 7 for Xr , perform the flip into the search space S, if necessary. The reflected
point Xr is accepted: Xm+1 = Xr , φ(Xm+1) = φ(Xr), if φ(X1) < φ(Xr) < φ(Xm).
If φ(Xr ) < φ(X1), compute the expansion point Xe

Xe = (1 + αβ) ¯X − αβXm+1.

Test Eq. 7 for Xe, perform the flip into the search space S, if necessary. The expansion
point Xe is accepted: Xm+1 = Xe, φ(Xm+1) = φ(Xe), if φ(Xe) < φ(Xr ), otherwise:
Xm+1 = Xr , φ(Xm+1) = φ(Xr ), φ(Xm+1) = φ(Xr ).
If φ(Xr ) < φ(Xm), compute the outer contraction point Xco
Xco = (1 + αγ ) ¯X − αγ Xm+1.

632

Geoinformatica (2014) 18:621–669

Test Eq. 7 for Xco, perform the flip into the search space S, if necessary. The contraction
point Xco is accepted: Xm+1 = Xco, φ(Xm+1) = φ(Xco), if φ(Xm) < φ(Xr ) <
φ(Xm+1), otherwise a shrink is performed (go to step 7).

6. Otherwise, compute the inner contraction point Xci

Xci = (1 + γ ) ¯X + γ Xm+1.
Test Eq. 7 for Xci , perform the flip into the search space S, if necessary. The contrac-
tion point Xci is accepted: Xm+1 = Xci, φ(Xm+1) = φ(Xci), if φ(Xr ) > φ(Xm+1),
otherwise a shrink is performed (Go to step 7).

7. Perform a shrink of the simplex; only the best point does not change

Xj = X1 + α(Xj − X1),
where j = 2, ..., m + 1. Test Eq. 7 for Xj , perform the flip into the search space S, if
necessary.

8. Order X vertices so as φ(X1) < φ(X2) < ... < φ(Xm+1).
9. The terminal condition: if

|φ(X1) − φ(Xm+1)| < ε,

stop the iteration process; otherwise, go to step 2.

The following values of the reflection, expansion, contraction, and shrink coefficients have
been set:

α = 1,

β = 2,

γ = 0.5,

δ = 0.5.

Based on the deep numerical tests, for our problem ε = 1.0−6 was set. The implementation
is easy, but a convergence is slower compared to NLSP methods. Therefore, the Nelder-
Mead method can not be used for on-line analysis.

Vertex reflection For all determined constant parameters of the projection, the maximum
and minimum values form an edge of search space S. If any simplex vertex Xj ∈ X falls
outside the search space S, i.e., Xj /∈ S, its simple flip must be done
(cid:11)

Xj =

2Xmin
j
2Xmax
j

− Xj , Xj < Xmin
,
− Xj Xj > Xmax
.

j

j

(7)

The extreme values of parameters ϕk, λk, ϕ0, λ0 can be found in Table 1, the R(cid:3) values in
Section 5.1.1.

5.1.1 Objective function φ

The objective function φ is to be proposed to involve the 0D-2D elements of the analyzed
map. Taking into account Eq. 6, its global minimum is found, and the determined parameters
(cid:9)X are assigned to the analyzed map.

The geometric mean is less sensitive to (possible) discrepant values of criteria than the
arithmetic mean. In accordance with Section 6, the objective function φ, which combines
several invariants (e.g., distance functions), is written as follows

(cid:12)

φ =

σ0
1 + μ[%]

· Cnnd · d2(P , P

) · d 2(F (P ), F (P

(cid:3)

(cid:3)

))

.

(cid:13)

1/4

The geometric accuracy approach is represented by the apriori variance σ0, the cross nearest
distance Cnnd, and the similarity ratio μ. The turning function distance d2(F (P ), F (P (cid:3)))

Geoinformatica (2014) 18:621–669

633

of auxiliary planar structures generated from 0D features, as well as the distance d2(P , P (cid:3))
of 1D-2D features, belong to the shape preserving approach. All invariants are widely
discussed in Section 6.

Determining φ is computationally expensive; therefore, it can be replaced by the heuristic
H , which is cheaper. The idea is very simple: If one criterion gives bad results, the remaining
criteria probably will not provide appropriate results.

Simplex initialization The simplex vertices X(m + 1, m), m = 5,

⎛

⎝

X =

R(cid:3)
1 ϕk,1 λk,1 ϕ0,1 λ0,1
...
...
...
R(cid:3)
6 ϕk,6 λk,6 ϕ0,6 λ0,6

...

...

⎞

⎠

are randomly initialized, ϕk, λk intervals can be found in Table 1. Analogously ϕ0 ∈
(cid:5)0, ϕmax(cid:6) and for the normal aspect λ0 ∈ (cid:5)min(0, λmin), λmax(cid:6), otherwise λ0 = 0. A dif-
ferent scale of both analyzed sets must be taken into account. The simplex contains R(cid:3),
representing the reduced radius of the Earth as a determined parameter. The initial value R(cid:3)
0
is computed from the scale factor

(cid:18)

s =

λ2
1

+ λ2
2

of a 2D Helmert transformation T (P , P (cid:3))

where λ1, λ2 are transformation coefficients and R(cid:3) ∈
represents the radius of the sphere reduced to the scale of the analyzed map.

0, 10R(cid:3)

0.1R(cid:3)

0

. It is apparent that R(cid:3)

(cid:3)
R
0

= R/s,

(cid:5)

(cid:6)

Simplified objective function φ Instead of the “full” objective function φ, the simplified
version involving only 0D elements can be used. Both sets P , P (cid:3) are aligned in the centers
of mass C = [Xc, Yc], c = [xc, xc]
xc = 1
n

yc, = 1
n

n(cid:10)

n(cid:10)

yi,

xi

The vector of residuals r is written as follows

Xc = 1
n

i=1
n(cid:10)

i=1

Xi,

i=1

n(cid:10)

i=1

Yi .

Yc = 1
n

⎛

⎜
⎜
⎜
⎜
⎜
⎜
⎝

r =

(X1 − Xc) − (x1 − xc)
...
(Xm − Xc) − (xm − xc)
(Y1 − Yc) − (y1 − yc)
...
(Ym − Yc) − (ym − yc)

⎞

⎟
⎟
⎟
⎟
⎟
⎟
⎠

,

and the objective function φ

φ = rT Wr,
(8)
where W represents the weight matrix of elements. This method minimizes (cid:17)P(Q) − P (cid:17)2
2
and gives results analogous to least squares solution, no rotation is allowed; it is computa-
tionally cheap. In general, the results of both methods are in accordance.

634

Geoinformatica (2014) 18:621–669

Computation of the objective function A practical computation of objective function φ(Xj ),
Xj (1, m), for actual P , Q, P in one Nelder-Mead iteration consists of several sub-steps. Let
Xj represent the j -th vertex of the simplex with stored cartographic parameters:

1. Conversion to the transverse/oblique aspect
Convert all elements Qi = [ϕ, λi ] → [ϕ(cid:3)

] using Eq. 1, where ϕk, λk are stored
in the actual simplex Xj , if transverse or oblique aspects are needed. For the normal
aspect of P, reduce λ = λ − λ0 and do not perform a conversion.

i , λ(cid:3)

i

2. Applying projection equation

Project all Q elements to P (cid:3) using Eq. 5 of P.

3. Heuristic check

Compute heuristic H (Xj ) between P , P (cid:3); see Section 5.2. For a successful case go

to step 4, otherwise set φ(Xj ) = ∞ and skip steps 4-5;

4. Outlier detection

As an optional step, outliers between P , P (cid:3) using IRLS are analyzed; see Section 5.3.
Create a weight matrix W storing the weights of all analyzed P , P (cid:3) elements; otherwise,
W = I.

5. Objective function value computation

Compute the objective function φ for P , P (cid:3); full or simplified version is used, the

weights of elements W are involved.

A sequence of iterations for Map 8 created in a stereographic projection is shown in Fig. 4.
The course of objective function φ is interesting; the global minimum close to the transverse
aspect, and many local maxima caused by points with ϕ(cid:3)
(ρ) = ∞,

.= −π/2 projected to infinity

lim
ϕ(cid:3)→−π/2

have been found. It is apparently that the problem is not convex.

(cid:21)
P (cid:3)
Time complexity The most time-consuming steps are connected with the d2(F (Pi), F
i
invariant based on the Voronoi diagram analysis. The Voronoi diagram construction
takes O(N log2(N)) time. It is known, that the average number of Voronoi vertices per
Voronoi cell does not exceed six. The merging algorithm uses O(kN log2(N)) time, where
k = 6 represents the amount of shared vertices. Creating corresponding merged faces
(cid:22)
F (P ), F (P (cid:3)) from Voronoi cells takes O
N 2 log2
, and their analysis O(2N 2) time.
Therefore, this step has the overall complexity of O

N 4 log2

2(N)
(cid:21)

(cid:22)
.

(cid:21)

(cid:22)

2(N)

Because N < 100, this step can be considered as acceptable (but probably off-line).

5.2 The heuristic strategy

Before the φ(Xj ) computation, Xj is verified to see whether it will be a good candidate for
deeper analysis. To reduce the computational time, instead of φ(Xj ), an heuristic H (Xj )
is to be calculated. Omitting this step may significantly increase the processing time (by a
factor of approximately 10).

If H (Xj ) > Hmax, the objective function φ(Xj ) is penalized

φ(Xj ) = ∞.
Keep in mind that an inappropriate heuristic parameter Hmax setting may also exclude part
of perspective Xj , (too strict) or the heuristic becomes inefficient (too weak).

The presented heuristic is based on two types of preliminary analyses: an analysis of
point features using similarity transformation (standard deviation σ ), and an analysis of

Geoinformatica (2014) 18:621–669

635

Fig. 4 Map 8: Stereographic projection in the oblique aspect, parameters estimated using the Nelder-Mead
algorithm; 1st, 5th, 10th, 15th iterations are shown

line features using the turning function (turning function d2(P , P (cid:3)) distance). The second
invariant has been used repeatedly and successfully for finding corresponding elements in
the maps [1, 15].

Coordinate limits The simplest form of heuristic brings the maximum coordinate limit
MAX COORD. This procedure is used primarily for conformal projections, and excludes
projections of the inappropriate meta pole position ϕk, λk, where P (cid:3) coordinates go to
infinity. This step takes O(n) time.

Heuristic based on the similarity transformation Let us suppose a similarity between P and
P (cid:3) given by the key ts(m, α, sx , sy) with one scale m, two shifts sx , sy and rotation α. Large
values of α can cause an acceptance of the undesirable set of features (see Fig. 5). Instead of

636

a

Geoinformatica (2014) 18:621–669

b

c

d

e

Fig. 5 Similar shapes of territories along the central meridian in an equidistant cylindrical projection, trans-
verse aspect a, and Bonne projection, normal aspect b, and territories along the intersection of the prime
meridian and equator in an equidistant cylindrical projection, transverse aspect c, Bonne projection, normal
aspect d and Lambert conformal projection, transverse aspect e

the projection in the normal aspect, the transverse or oblique aspects may be detected. Thus,
the real similarity is not the best indicator, if rotation is allowed. Instead, the homothetic
transformation can be used.

The similarity ratio μ, μ ∈ (cid:5)0, 1(cid:6) is defined as the fraction of norms from both sets P

and S

where S ⊂ P represents a subset S = {S1, ..., Sm}, m (cid:2) n, of transformed features P given
by

μ =

(cid:17)S(cid:17)
(cid:17)P (cid:17) ,

(cid:23)
(cid:23)T (P ) − P

(cid:3)

(cid:23)
(cid:23) < ε.

S =

(9)

(10)

The Eq. 9 formally expresses the relationship between the amount of transformed points
TS(P ) located within a distance ε from P (cid:3) points and the amount of projected points P .

Let us briefly comment on ε representing the radius of the uncertainty region, which is
discussed in Section 6.1. Considering dimension d (a longer edge of the P (cid:3) min-max box),
n as the amount of analyzed points and β, β ∈ (0, 1) as the sensitivity factor, the radius ε is
computed as follows

ε = β

d
√
n

,

d = max(xmax − xmin, ymax − ymin),

It is noticeable that ε represents an approximate root of point density

√

d/

n

.=

(cid:4)

AH /n

in relation to the area AH of the convex hull H (P (cid:3)) (or min-max box) multiplied by
sensitivity factor β. This geometrically represents the radius of a circle centered at P (cid:3)
i . In
our case, β = 0.2 was chosen empirically to prevent the elimination of an unnecessary large
amount of samples. In the different strategy, the dependance on the map scale, can be used

where β = 10 − 30.

ε = β · G · 1000

[km],

Geoinformatica (2014) 18:621–669

637

Let us set Hμ(Xj ) = μ. If Hμ(Xj ) < 0.75, the φ(Xj ) is penalized. This heuristic
strategy is set as primary and takes O(n) time. Another approach, based on the expected
distance to the nearest neighbor using the radius rc circle circumscribed to P (cid:3)

√

ε = β · rc/(2

n),

was used by [51],

Heuristic based on the turning function This complementary heuristic strategy is focused
on 1D features that may be present on the map. If there are no input line features, the
heuristic attempts to use detected meridians and parallels. The turning function (cid:5) seems to
be an appropriate fast shape descriptor [1]. First, both data sets P and P (cid:3) are rescaled.

Let us denote the turning functions of corresponding line features Pi , P (cid:3)
i ) and their L2 distance d2(Pi, P (cid:3)
i ) =

(cid:5)(P (cid:3)
d2(P , P (cid:3)) between P and P (cid:3), which contain n features, is given by

(cid:24)
(cid:24)(cid:5)(Pi ) − (cid:5)(P (cid:3)
i )

i as (cid:5)(Pi ) and
(cid:24)
(cid:24). The average dissimilarity

d2(P , P (cid:3)) = 1
n

n(cid:10)

i=1

d2(Pi, P (cid:3)
i )

(11)

Consider an heuristic criterion Hd = d2(P , P (cid:3)) and the amount of points in the analyzed
line feature m. If

Hd > βmd2(P , P

)max,

(cid:3)

the φ(Xj ) is penalized. Currently, we set d2(P , P (cid:3))max = 1. The algorithm for the
d2(Pi, P (cid:3)

i ) computation is described in Section 7. This step takes O(n2) time.

Heuristic based on the Voronoi diagram If the Voronoi diagram V(P ) is constructed under
P and does not contain at least three bounded Voronoi cells, due to a lack of suitable cells,
the Voronoi analyses are disabled. Cells of inappropriate shapes have been removed from
further analysis.

The values of heuristic parameters β, μmin, d2(P , P (cid:3))max must be set so that both heuris-
tics have a similar efficacy. If all Xj are marked as inappropriate, the analyzed map may be
classified as unprojected.

5.3 Removing gross errors

Due to the fact that many old maps are not constructed on a solid geometric or geodetic
basis, some of the drawn map elements are highly influenced by errors. This issue has been
mentioned in several publications: [3, 17, 44].

Flaws are likely distributed according to the normal law and have both a random and
a systematic character. Some map elements can be affected by gross errors; therefore, it
is important to locate, find, and exclude these large mistakes automatically from further
analysis. The impact of gross errors on the reconstructed graticule is illustrated in Fig. 6.
An important role is also played by the generalization, but its influence is usually below the
level of gross errors.

However, other factors, such as paper distortion or the aging effect, may also contribute
to the geometric inaccuracy. Primarily, they do not represent serious mistakes and have a
systematic character. In most cases, their effect is significantly less and cannot be detected
by this technique.

We assume a similarity between P , P (cid:3). Therefore, the problem can be solved by repeated
2D transformation of P → P (cid:3) with outlier detection. There are different strategies to

638

Geoinformatica (2014) 18:621–669

Fig. 6 The impact of outliers on Map 7: reconstructed graticule with outliers a and without outliers b. The
discrepancies are noticeable on the northern part of the map

identify gross errors depending on the amount of errors in the data set. When multiple gross
errors exist (up to 20 %), the IRLS method based on the standard Markov model, resistant
to the influence of the outliers, is appropriate [52].

Mathematical model Let us denote v to be a vector of residuals, A a matrix of the model, x
a vector of estimated model parameters, and l a vector of measurements. We solve the linear
model

where the weighted least squares condition

v = Ax − l,
(cid:8)

(cid:25)
AT Q

−1
l A

x =

Wvv = min is applied. Then
(cid:26)−1

AT Q

−1
l

l.

The weight matrix W = Q
is defined as the inverse of the measurement co-factor matrix
Ql (Ql = E for non-weighted transformation); the cofactor matrix Qv of the estimated
residuals is

−1
l

Qv = Ql − A

(cid:25)
AT Q

−1
l A

(cid:26)−1

AT ,

The standard deviation σv of the estimated residuals

(cid:4)

σvi

= σ0

Qv(i, i)

is computed from the diagonal items of Qv and apriori variance factor σ0.

The Danish method [27] iteratively decreases weights of measurements suspected to
be outliers. Weights of “proper” measurements are not changed. For every measurement

Geoinformatica (2014) 18:621–669

in iteration step k, we consider a normalized residual vi = vi/σvi , and compare it to the
specific threshold

f(k)
i

=

(cid:11)
f(k−1)
i
f(k−1)
i

· e−0.5|vi |

if |vi| ≥ 2.0,
else

and compute a new weight factor f(k)

from f(k−1)
i
(cid:11)

i

. The new co-factor matrix Q(k)

is

l

639

(12)

The iteration steps are repeated until the given condition

Qk

l (i, i) =

E
1/f(k)
i

k = 1,
k > 1.

(cid:23)
(cid:23)
(cid:23)σ (k)
0

− σ (k−1)
0

(cid:23)
(cid:23)
(cid:23) < ε

is true.

orders of magnitude.

After the elimination of outliers the values of the objective function φ decreases by 1-2

5.4 Detection of meridians and parallels using RANSAC

Another possible data source, reliable for analysis and easily available in most maps, are
meridians and parallels. These map elements keep the typical properties of the graticule
more efficient than point features. They help prevent shape discretization and improve
the reliability of the analyses. The proposed algorithm detects all types of meridians and
parallels forming more than 4 points, which may occur in both data sets P , Q.

Because of the complex shape, meridians and parallels cannot be detected directly from
P , Q. At first, Q must be projected to P (cid:3) in a convenient projection where the meridians
and parallels are formed by the straight lines. Projected meridians and parallels are easily
detectable by RANSAC, where the model function is represented by the linear fit function.
For this purpose, the Plate Carree projection given by equations x = Rλ, y = Rϕ is used.

Projected meridian and parallel Let us denote the projected sampled meridian as a
set of points M = {Mj }m
⊂ R2 and analogously, a projected sampled parallel
P = {Pj }m
⊂ R2, where the angle between any triplet of points is π. Taking into
account Eq. 3, the partial derivatives are
∂f
∂λ

∂f
∂ϕ

∂ρ
∂ϕ

∂ρ
∂λ

= R,

= R,

= 0,

= 0

j =1

j =1

and γm = 0, γp = π
2 .

Basic formulas The detection method based on the RANSAC algorithm will be modified to
provide, not only the best solution, but more acceptable solutions, detecting lines fulfilling
the condition of γ = 0 ± k π
2 (i.e., projected meridians and parallels). Instead of the one best
fit projected meridian or parallel, a set of projected meridians and parallels will be detected.
Their vertices will be used in further analysis.

We consider D = P (cid:3), |D| = n to be an input data set, S, S ⊂ D, |S| = m a sample (con-
taining detected meridian or parallel points), p(cid:17) input parameters computed with a model
function F (linear fit function)

p∗∗ output parameters minimizing the cost C of the function ρ

F (S) : S → p

∗

,

C = ρ(p

, D).

∗

640

Geoinformatica (2014) 18:621–669

The number of iterations k for probability p = 0.99 is given by

k (cid:3) log(1 − p)
log(1 − wn)

,

(13)

where w is the number of inliers contained in D.

Linear fit function The model function F (S) = {Xc, Yc, ξ } represents a non-weighted
linear fit function with residuals to X, Y axes, where

and

X(cid:3)
i

= Xi − Xc,

Y (cid:3)
i

= Yi − Yc,

(cid:2)

(cid:8)

(cid:8)
n

2
i=1 X(cid:3)

iX(cid:3)

i

n

i Y (cid:3)
i=1 X(cid:3)
(cid:8)
i=1 Y (cid:3)
n
−

i

i Y (cid:3)

i

(cid:3)

,

Xc =

Yc =

n(cid:10)

i=1
n(cid:10)

i=1

Xi
n

Yi
n

,

,

ξ = 0.5 tan

−1

ρ = 1
n

d 2
i ,

n(cid:10)

i=1
(cid:21)
(cid:3)
X
i

d =

− Xc

sin ξ −

− Yc

cos ξ.

(cid:22)

(cid:21)
(cid:3)
Y
i

(cid:22)

Xc, Yc are centroids of P (cid:3), ξ is the polar angle of the fitted line expressing the slope. All 3
parameters could be transformed easily into the slope form

c · y = m · x + b, m = tan(ξ ),

b = Yc − m · Xc.

For a meridian projected with Plate Carree, the output parameters p∗∗ = {ξ, b, } are simply
given as

and analogously for a projected parallel

ξ = π
2

,

b = Yc,

c = 0, m = 1

ξ = 0,

b = Xc,

c = 1, m = 0.

Storing detected samples Each detected RANSAC sample S represented by a line with
p∗∗ = {ξ, b, } is stored into a hash table, according to its address A given by the hash
function h(ξ, b)

A = [((int)(mξ · |ξ |))&0xF F F F ]

(cid:20) 16|[((int)(mb · |b|))&0xF F F F ]

Detected samples representing one meridian or one parallel have the same values of A ; they
differ only in the cost C. We keep only a sample with the minimum cost C representing the
best-fit line. Values mξ , mb are multiplication factors. These affect the hashing sensitivity,
the minimum of the acceptable slope, and the vertical shift differences of best-fit lines.

A modified detection algorithm based on RANSAC Consider a sample S storing meridian
or parallel points, C its cost given by ρ, p∗∗ parameters of the fitting line, and h its hash.
The detection procedure can be summarized as follows:

1.

Initialization

Initialize variables lmax = 0, l = 0, k = 0.

Geoinformatica (2014) 18:621–669

641

2. Main loop

While l < lmax repeat steps 3-6, where a suitable meridian or parallel are found and

added to the list of meridians LM or parallels LP .

3. Perform a RANSAC procedure

Call a RANSAC procedure for the following parameters: P (cid:3), k, m, εacc, and find any

acceptable solution Sacc described with parameters Cacc, pacc, hacc.

4. Test the RANSAC solution: meridian

If any acceptable sample Sacc is found and its angle |pacc.ξ | = π

2 , it represents a

meridian. Perform the following steps:
(a) Test, if any meridian with the same hash hacc exists in LM . If such a meridian
M ∈ LM with worse cost M .Cacc > Cacc exists, update its properties in LM :

M .Sacc = Sacc, M .Cacc = Cacc, M .p

∗∗
acc

= p

∗∗
acc.

(b) Otherwise, create a new meridian M (Sacc, Cacc, pacc, hacc), which is inserted in

the list: LM ← M .

5. Test the RANSAC solution: parallel

If any acceptable sample Sacc is found and its angle |pacc.ξ | = 0, it represents a

parallel. Perform the following steps:
(a) Test, if any parallel with the same hash hacc is in LP. If such a parallel P ∈ LP

with worse cost P.Cacc > Cacc exists, update its properties in LP:
P.Sacc = Sacc, P.Cacc = Cacc, P.p

= p

∗∗
acc.

∗∗
acc

(b) Otherwise, create a new parallel P(Sacc, Cacc, pacc, hacc) which is inserted in the

list: LP ← P.
Increment l = l + 1.

6.
The repeatedly called RANSAC procedure with input parameters P (cid:3), k, m, εacc returns any
acceptable sample Sacc, which satisfies both the conditions of cost Cacc and length m. It can
be summarized as follows:

1. Main loop

While k < kmax, repeat steps 2-5.

2.

Initialize random sample

3. Create a sample adding P (cid:3) elements

C = ρ(p∗).

Add random P (cid:3)
not presented in S.

Add 2 random P (cid:3) items to S and compute the initial fit p∗ = F (S) and its cost

i elements to a sample S. Repeat sub-steps a-b for all P (cid:3)

i , i = 1, ..., n

(a) Store properties of the actual sample S

Sold = S; Cold = C; p∗
old

= p∗.

(b) Add P (cid:3)

i temporary to S and compute a new fit p∗ = F (S) and its cost C = ρ(p∗)

for updated S. If a cost difference (cid:12)C satisfies

(cid:12)C = |C − Cold | >

|εacc|
√
mi

,

the new sample S is unacceptable and we return to the previous one, Sold
S = Sold ; C = Cold ; p

∗ = p

∗
old .

642

Geoinformatica (2014) 18:621–669

4. Test for acceptability of the sample

If |S| ≥ m and its cost C < εacc is acceptable, the suitable sample S has been found.

Update the properties of the acceptable solution

Sacc = S; Cacc = C; p∗∗
acc

= p∗,

compute its hash hacc = H (p∗∗
Increment k = k + 1.

5.

acc.ξ, pacc.b) and return a sample S.

Both algorithms are computationally expensive and partially inappropriate for on-line anal-
ysis. Saving meridians and parallel points into separate input files seems to be a better
option.

6 Detection methods for point features

Most of the analyzed early maps are available in raster formats. For purposes of analysis, the
complete vectorization of the map is somewhat redundant. Therefore, a set of 0D features
(identical points) is a primary and typical source material for analysis.

This feature applies particularly to libraries with large printed map collections, where the
complete vectorization is impossible due to financial or time constraints. The majority of
their collection is stored in the raster formats.

Hence, the partial vectorization is done by the user. It depends on his knowledge and
experience, which are reflected in the choice of the identical points. Overall, the detection
process appears more laborious. The below mentioned invariants will be used to construct
the objective function φ.

6.1 Detection methods based on the geometric accuracy

Let us bring a short overview of methods describing the geometric accuracy. In the simplest
case, the objective function φ may express the least squares condition.

6.1.1 Detection methods based on 2D transformations

These techniques are based on the assumption of the linear relationship between sets P , P (cid:3),
primarily the similarity. They represent a standard descriptor taking into account the P , P (cid:3)
residuals. Affinity and co-linearity are non-conformal, non-linear models causing a twist,
and both are inconvenient.

Uncertainty regions Uncertainty regions of fixed sizes formed by squares [36], or circles
[51] are using as auxiliary descriptors. Matching with uncertainty regions of variable dimen-
sions formed by the Tissot indicatrix depending both on the geographical position (and thus
on distortions) and the analyzed projection represents a new approach, given the current
state.

As mentioned above, we are trying to determine the subset S ⊂ P lying inside the
uncertainty regions and to compute the similarity ratio μ. The results of the analysis are
given by the following parameters: the similarity ratio μ and the apriori variance σ 2
0 . Unlike
heuristics, there is a generalized condition for S
(cid:23)
(cid:23)T (P ) − P

(cid:23)
(cid:23) < P(ε).

S =

(cid:3)

Geoinformatica (2014) 18:621–669

643

It revisits S as a subset of the transformed points P , which lay inside the modified uncer-
tainty regions represented by ellipses of distortion centered on the P (cid:3) points projected by P.
Hence, a circle of radius ε is transformed into an ellipse T with parameters a, b, A. This
fact is important especially for boundary territories (northern and southern), where extreme
local linear scales a, b and maximum angular distortion (cid:12)ω

(cid:12)ω = 2 sin

−1(|a − b| /(a + b))

have large values. For conformal projections, ellipses of distortion are replaced with circles
having a rapidly increasing radius r = a. A circle with a fixed radius r = ε is not a good
estimator in such territories; see Fig. 7.

Apriori variance σ 2
from the roots of residuals vi used in the objective function φ, is written as follows:

0 , the basic accuracy characteristic computed

0 An apriori variance σ 2

φ(P , P

(cid:3)

) = σ 2
0

=

n(cid:10)

i=1
(cid:18)

vivi
2n − 4

,

vi =

(Xi − X(cid:3)

i )2 + (Yi − Y (cid:3)

i )2,

(14)

i, Y (cid:3)

where X(cid:3)
i are transformed coordinates xi, yi. Minimizing this function represents a
solution of the least squares problem. A detailed description of these techniques will be pre-
sented in the next article. In accordance with our requirements of the rotation invariance
or dependency, Helmert or homothetic transformation is used. Let us set P (cid:3) to be a global
system and P to be a local system.

Helmert transformation The Helmert transformation is given by the key t (m, α, sx, sy). It
is the first and probably the most common and obvious estimator. A similar approach, used
by [23], is available in MapAnalyst software.

In most cases, the Helmert transformation brings very accurate results. Due to the rota-
tion invariance, for some types of input sets, it is not an appropriate descriptor. An incorrect
matching of samples with a large value of rotation between P , P (cid:3) may lead to the detection
of a different type of projection. This relatively rare case may occur for specific types of
sets, when several negative factors acting simultaneously. Sets located along the equator or
prime meridian projected both in normal and transverse aspects have similar shapes in most
map projections; however, they are rotated one another.

Examples of such situations are shown in Fig. 5. Although, the graticule shapes of the
strip, located along the central meridian in the Bonne and equidistant cylindrical projection
are analogous, they are mutually rotated. Notice the similar cases relating to the spherical

a

b

c

Fig. 7 Points with drawn uncertainty regions represented by circles r = ε a and Tissot indicatrices b in the
sinusoidal projection, Voronoi diagrams of both data sets P , P (cid:3) c

644

Geoinformatica (2014) 18:621–669

quadrangle, close to the intersection of the equator and the central meridian. Its shape is
almost similar across all categories of map projections. Without taking into account the
angle of rotation, several projections may be incorrectly detected and interchanged.

Homothetic transformation The homothetic transformation is given by the key t (m, sx , sy )
with one scale m and two shifts sx , sy (no rotation is allowed). The transformation model
matrix A(2n, 3) and vector of measurements l(2n, 1) are

A =

⎞

⎟
⎟
⎟
⎟
⎟
⎟
⎠

,

⎛

⎜
⎜
⎜
⎜
⎜
⎜
⎝

X1 1 0
...
... ...
Xn 1 0
Y1 0 1
..
..
..
Yn 0 1

⎞

⎟
⎟
⎟
⎟
⎟
⎟
⎠

.

⎛

⎜
⎜
⎜
⎜
⎜
⎜
⎝

x1
...
xn
y1
...
yn

l =

It has all the benefits of the Helmert transformation; moreover, it is not invariant to rotation.
However, there are some situations when rotation independence is required. These include
a secondary rotation of the analyzed map caused by inappropriate insertion into the scanner
or by a switched map orientation on the page (portrait vs. landscape). This negatively affects
the apriori variance σ 2

0 , and a projection is not detectable.

This estimator is very close to the simplified version of the objective function φ, which

minimizes the residuals between P and P (cid:3).

6.1.2 Detection based on the nearest neighbor distance methods

The nearest neighbor distance methods are based on an examination of objects located in
the close region of the analyzed object. This uses the assumption that there is an influence
from an object which depends on its distance to the analyzed object.

Cross nearest neighbor distance The cross nearest neighbor distance Cnnd of data sets
P , P (cid:3) containing nP and nP (cid:3) elements, aligned in the centers of mass, is defined as

φ(P , P (cid:3)) = Cnnd(P , P (cid:3)) =

(cid:27)

nP(cid:10)

i=1

d (1)

(cid:26)

(cid:25)
Pi, P (cid:3)
j
(cid:28)

d (1)

(cid:22)

(cid:21)
P (cid:3)
i , Pj

,

1
nP + nP (cid:3)
nP (cid:3)(cid:10)

+

i=1

where d (1) represents the distance between a point and the point nearest to it. Cnnd is depen-
dent on the rotation; its advantages are similar to the homothetic transformation. The cross
nearest distance measures a spatial similarity between two sets of points, which is expressed
by spatial proximity. It is computed between the nearest points Pi → P (cid:3)
j and vice versa
P (cid:3)
(cid:24)
i
(cid:24)Pi − P (cid:3)

(cid:24)
(cid:24), the cross distance of the two elements is
never greater than residual vi. Therefore, the Cnnd estimator is slightly more sensitive than
apriori variance σ0.

→ Pj (not between a corresponding pair of points Pi → P (cid:3)
Because of d (1)(Pi, P (cid:3)

i for both data sets.

j ) ≤ vi, vi =

i

Geoinformatica (2014) 18:621–669

645

6.2 Detection methods based on the shape preservation

They represent a descriptor taking into account the spatial distribution of points, and better
reflect the shape of the graticule. Residuals between P , P (cid:3) do not play such a significant
role. Compared to the geometric accuracy approach, the objective function φ is more com-
plex, and it is more difficult to minimize. In general, it is possible to use some advantageous
properties of the Voronoi diagram.

There are many ways to measure the similarity between two sets using their Voronoi dia-
grams. These include a direct approach, assessing the features of the Voronoi cells using the
simple criteria (area, perimeter), or an indirect approach (entropy statistic); further details
can be found in [38]. Due to the lack of appropriate cells, the Voronoi criteria are not suitable
for smaller sets.

The proposed indirect approach is based on the computation of the objective function
value between auxiliary planar geometric structures constructed over sets P , P (cid:3). Sets of
which the planar structures are matching, are similar.

In comparison with the transformation methods, the solution has some advantages (better
ability to assess the real spatial distribution of points) and disadvantages (lower sensitivity,
noise effect, time complexity, degenerative cases).

Voronoi diagrams of the analyzed sets Let us state only the short and the formal def-
(cid:30)
(cid:29)
inition of the Voronoi diagram. We call the set of regions V (P )=
V (P1), ..., V (Pn)
n)} the planar Voronoi diagrams generated by P , P (cid:3); regions
1), ..., V (P (cid:3)
and V (P (cid:3))={V (P (cid:3)
(cid:24)
(cid:24)
(cid:24)
(cid:24)X − Pj
(cid:24) ≤
(cid:24)X − P (cid:3)
V (Pi) = {X (cid:17)X − Pi(cid:17) ≤
(cid:24)
(cid:24)
i
(cid:24)
(cid:24)
(cid:24)X − P (cid:3)
(cid:24) for j (cid:13)= i} are Voronoi polygons (i.e., Voronoi cells) associated with Pi, P (cid:3)
i , and
j
∂V (Pi), ∂V (P (cid:3)

i ) are boundaries of Voronoi polygons.

(cid:13)= i} and V (P (cid:3)

i ) = {X

(cid:24)
(cid:24) for j

Analyzed structures The similarity assessment between V (Pi) and V (P (cid:3)
i ) represents a key
step in the detection process. Due to the fact that a Voronoi diagram is sensitive to the
locus of generators, the change of positions of a few of them can cause significant changes
in its shape. Presented detection algorithm is based on the following assumption: V (P ) is
similar to V (P (cid:3)) if, and only if, P is similar to P (cid:3), and vice versa. As mentioned above,
only bounded pairs V(Pi) and V (P (cid:3)
i ) are subject to further analysis, and bounded cells of
an inappropriate shape have been removed from the analysis. If there are not at least three
appropriate bounded pairs of Voronoi cells in P , P (cid:3), φ(Xj ) is penalized φ(Xj ) = ∞. It is
obvious that both P , P (cid:3) must contain a sufficient amount of points, and analysis should be
performed for sets above 15 points. The following planar data structures could be analyzed
further:

–

Voronoi diagrams V (P ), V (P (cid:3))

Direct analysis of the corresponding Voronoi cells V (Pi) ∈ V (P ), V (P (cid:3)

i ) ∈ V (P (cid:3))
is less sensitive than the second method, but has a better time complexity O(N 3 log(N))
(including O(N 2) analysis).
– Merged faces F (P ), F (P (cid:3))

The direct analysis of the corresponding merged Voronoi faces F (Pi), F (P (cid:3)

i ). We

consider

F (Pi ) =

[[V (Pi ) ∪ V (Pj )] ∩ [V (Pi ) ∩ V (Pj ) (cid:13)= ∅]]

k(cid:31)

j =1

646

Geoinformatica (2014) 18:621–669

!

m2

=

 
V (cid:3)
i,1

as a face with m1 vertices formed by all k merged Voronoi faces V (Pj ) adjacent
to V (Pi) merged with V (Pi), and analogously for F (P (cid:3)
i=1 and
V (cid:3)
, be sets of F (Pi) and F (P (cid:3)
i ) vertices. This approach, set as the primary
i
analysis tool, is based on the extended assumption: F (P ) is similar to F (P (cid:3)), if and
only if, P is similar to P (cid:3), and vice versa. It is more sensitive and has higher time com-
plexity O(kN 4 log2(N)) and noise resistance. For the Boolean operation on polygons,
a modified algorithm described by [33] was implemented.

i ). Let Vi = {Vi,1}m1

i=1

Before the analysis, the faces F (Pi), F (P (cid:3)
by the face perimeter.

i ) are rescaled, where each segment is normalized

6.3 Measuring similarity using the turning function

Without a loss of generality, we can say that a turning function (cid:5) transforms the j − th
vertex Vi,j ∈ F (Pi), j = 1, ..., m to the pair of parameters

(cid:5)(Vi,j ) : Vi,j → θi,j = [si,j , αi,j ],

where si,j represents the cumulative length of Vi,j measured along the boundary of ∂F (Pi)
from the start vertex O, and αi,j

αi,j = αi,j −1 + π − (σi,j − σi,j −1),

a cumulative angle of Vi,j , σi,j is the polar angle of the segment Vi,j , Vi,j +1 and the x
axis; see Fig. 8. According to the requirements, the turning function can be defined as
rotation-dependent or rotation-invariant. Unlike the original method described in [1], where
no distinction between two states has been realized, and the angle of rotation of both ana-
lyzed features was determined as the unknown parameter, we simply change the definition
of the descriptor for the first polar angle. For a rotation-dependent case

for a rotation-invariant case,

αi,1 = σi,1,

αi,1 = π − (σi,1 − σi,m),

If the polygon was rescaled and its perimeter length is 1, then si,1 = 0, si,m1

= 1, and

αi,m = αi,1 + 2π.
i ) be turning functions and θi, θ (cid:3)

Let (cid:5)F (Pi ) and (cid:5)F (P (cid:3)
corresponding faces F (Pi), F (P (cid:3)
i ).

i are ordered sets of m1, m2 pairs of

Distance of turning functions In accordance with [1], let us denote t, t ∈ (cid:5)0, 1(cid:6) as a shift of
the reference point O along the face boundary F (P (cid:3)

i ), written as (cid:5)F (P (cid:3)

i )(s + t).

A distance d2 between F (Pi), F (P (cid:3)

i ) could be determined as the minimum over all

possible shifts t

where

d2(F (P i), F (P

(cid:3)
i )) = ( min
t∈(cid:5)0,1(cid:6)

(D2(F (P i), F (P

(cid:3)
i ))))

1
2

(15)

D2(F (P i), F (P

(cid:3)
i )) =

(cid:23)
(cid:23)
(cid:23)
(cid:23)(cid:5)F (Pi )(s + t) − (cid:5)F (P (cid:3)

(cid:23)
(cid:23)
2
(cid:23)

.

i )(s)

(cid:7)

1

0

Geoinformatica (2014) 18:621–669

647

α,

i,1

D2(F(Pi),F(Pi))

d2(F(Pi),F(Pi))

α

i,1

3pi

2pi

α

pi

3pi

2pi

α

α,

i,1

pi

α

i,1

0

0.5

s

1.0

0

1.0

0.5

s

i ) b belonging to points Pi and P (cid:3)
Fig. 8 Corresponding merged Voronoi faces F (Pi ) a, F (P (cid:3)
turning functions with broken rectangular strips. The highlighted areas represent D2(F (Pi ), F (P (cid:3)
d2(F (Pi ), F (P (cid:3)

i and their
i )) c and

i )) d

It is apparent that d2 represents the sum of the highlighted areas between turning func-
tions; see Fig. 8. Hence, in the new algorithm based on dynamic programming, we find t
minimizing this equation.

Algorithm description The proposed algorithm with O(m1(m2 + m2) time complexity
solves both rotation-dependent and invariant cases by using dynamic programming. First,
the turning functions (cid:5)F (Pi )(s) and (cid:5)F (P (cid:3)
i ) are
i )(s + t) is realized by m2 − 1 cyclic rotations of θ (cid:3)
computed. A shift t
i,j
elements.

i )(s) for the analyzed faces F (Pi), F (P (cid:3)

in (cid:5)F (P (cid:3)

During the cyclic rotation, each vertex becomes a new start vertex; its cumulative length
must be set to zero and the turning angle must be corrected. For the rotation dependent case,
where the polar angles relate to the x axis, they needn’t to be recalculated. The actual shift
t is realized by updating s(cid:3)

i,k values. The following steps are to be performed:

i,k, α(cid:3)

1. The actual distance D2 is computed and compared to Dmin

. Then a new minimum is

2

actualized, if necessary.
2. First, the turning angle α(cid:3)
1
i,2 are stored.

vertex) s(cid:3)
2

= s(cid:3)

= α(cid:3)

i,1 and the distance of the vertex Vi,2 (next to the start

3. To achieve the new cumulative length for a vertex Vi,j , the cumulative length of
i,j , are given by

the second vertex is subtracted from Vi,j , the successor. All new s(cid:3)
subtracting

4. Analogously, a turning angle is replaced by its successor, α(cid:3)
i,j

= α(cid:3)

i+1,j .

(cid:3)
i,j

s

= s

(cid:3)
i,j +1

− s

(cid:3)
2.

648

Geoinformatica (2014) 18:621–669

5. For a rotation-invariant case, all turning angles must be recalculated. For a new starting

vertex and its successors, the turning angle α(cid:3)
= α(cid:3)
i,j
= α(cid:3)
i,1

α(cid:3)
i,j
6. Finally, the values of the last pair: α(cid:3)

i,m2

1 must be subtracted
− α(cid:3)
1.
+ 2π and s(cid:3)

i,m2

= 1 are updated.

It is noticeable that D2 represents the sum of the unsigned area differences between
strips (or their parts) belonging to both turning functions. Each turning function has a set
of rectangular strips (m1 strips for (cid:5)F (Pi ) and m2 strips for (cid:5)F (P (cid:3)
i )) of various widths and
heights. The vertical edges of the strips are formed by the ordinates of their turning function
adjacent vertices; the horizontal edges are formed by the x axis and the “graph”. It is obvious
that only intersecting strips of both turning functions should be processed. It is not necessary
to compute the area of each strip. Rather, the area differences of intersected strip parts, are
sufficient.

Breaking rectangular strips Let us do a simple trick and break the strips of both turning
functions. All vertical edges (i.e., ordinates) of the first turning function are extended to the
graph of the second turning function and vice versa. Old strips are broken into new m ≤
m1 + m2 pairs of strips; see Fig. 8. One pair of broken strips shares a lower horizontal edge
on the x−axis. Broken strips are processed pair by pair in the ascending order according to
the s values.

This step is represented by a procedure analogous to two-way merging (see below).
The required rectangle representing the result of the difference, is formed by the horizontal
i,l, and area Ai,l. The L2 distance D2(F (P i), F (P (cid:3)
edge si,l, sold
i ))
corresponding with the sum of areas of m1 + m2 strip differences, is given by

i,l , vertical edge αi,l, α(cid:3)

D2(F (P i), F (P

(cid:3)
i )) =

Ai,l(F (P i), F (P

(cid:3)
i ))

=

(si,l − sold
i,l )

(cid:23)
(cid:23)αi,l − α

(cid:23)
(cid:23) .

(cid:3)
i,l

(16)

m1+m2(cid:10)

l=1
m1+m2(cid:10)

l=1

si,1 = sold
i,1

= 0,

(cid:3)
i,k < si,j ,

s

si,j < s

(cid:3)
i,k,

The algorithm is easy, we initialize

If

then

then

sold
i,l
Analogously, if

= si,l,

si,l = s

(cid:3)
i,k,

αi,l = αi,j −1

α

(cid:3)
i,l

= α

(cid:3)
i,k−1.

sold
i,l

= si,l,

si,l = si,j ,

αi,l = αi,j −1

α

(cid:3)
i,l

= α

(cid:3)
i,k−1.

Inappropriately rotated faces How can one avoid the situation in which both faces are light-
lyrotated in different directions, so their polar angles α, αold belong to the first and fourth
quadrants, and vice versa? In such cases, the (cid:12)α values are greater than if both values

Geoinformatica (2014) 18:621–669

649

α, αold belonged to the first-second, second-third or third-fourth quadrants (compare the (cid:12)α
values for α = 23/24π, αold = 1/24π to α = 5/24π, αold = 7/24π). This is important for
the rotation-dependent variant, when both turning functions will be classified, incorrectly,
as dissimilar. There is a simple heuristic avoidance of this problem, by minimizing the angle
difference (cid:12)α and adding or subtracting the period of 2π

(cid:12)α = min(min(|(cid:12)α| , |(cid:12)α − 2π|), |(cid:12)α + 2π|).

Those steps (with reindexing starting from 0) are formally rewritten in Algorithm 1 which
has O(m1 + m2) time complexity. The dynamic approach is analogous to the simplified
two-way merging procedure used in the merge sort algorithm. The simplification is given
by the fact that the last elements of both turning functions are equal

si,m1

= s

(cid:3)
i,m2

= 1.

The resulting criterion based on the average dissimilarity d 2(F (P i), F (P (cid:3)

i )), measured

between P and P (cid:3), is given by

φ(P , P (cid:3)) = d2(F (P ), F (P (cid:3))) = 1
n

d2(F (P i), F (P (cid:3)

i )),

nf(cid:10)

i=1

where nf represent the amount of the analyzed faces.

7 Detection methods for line and polygon features

As mentioned above, both line and polygonal features allow for the continuous analysis
of maps. They represent the best source material for the assessment process. Because the
acquisition of 1D and 2D features represents a time-consuming process, such a complex
data structure is available only in rare cases. Therefore, the vast majority of analyses is
based on point sets. If input data sets contain no line segments, the detected meridians and
parallels are analyzed.

650

Geoinformatica (2014) 18:621–669

Due to its versatility, the turning function was selected as a shape descriptor. An appro-
priate parametrization for 1D-2D elements is available. The final criterion for assessing
detected meridians, parallels and all line segments
(cid:8)

φ(P , P (cid:3)) = d2(P , P (cid:3)) =

+

+

(P , P (cid:3))

(P , P (cid:3))

nmer
i=1 d mer
2
nmer
(cid:8)npar
i=1 d par
2
npar
2 (P , P (cid:3))
nlin
i=1 d lin
nlin

(cid:8)

corresponds to Eq. 11, where n represents the number of analyzed polygons.

8 Experiments and results

The proposed method was tested extensively; the results were compared to MapAnalyst
software, version 1.4 pre-release, which has a similar functionality. We bring results for 8
early maps created since the 18th century and published in the David Rumsay Map Collec-
tion. Maps 1-3, 4, and 8 are world atlas maps, and maps 2, 5, 6, and 7 are national maps. Map
projections were apriori unknown. Recall that it is not recommended to select the analyzed
area around the prime meridian, true parallel, equator, or poles, where most map projec-
tions have similar properties. For all the tests, the same values of parameters have been
set. Analyses were performed for all aspects (normal, transverse, oblique) with the disabled
heuristics.

8.1 Test of early maps

The following characteristics were measured: RES (sum of residuals), N IT (number of
iterations). However, the second criterion cannot be acquired for MapAnalyst. The analyzed
features, whose amount decreased approximately 50 percent in each step, were chosen in
accordance with the above-mentioned principles.

The identical points both on the analyzed and Open Street maps (OSM) have been
collected in MapAnalyst. First, the Cartesian coordinates x, y of identical points in
OSM were reprojected from the Mercator projection (WGS-84, ϕ0 = 0◦) to the geo-
graphical coordinates ϕ, λ using the inverse formulas. For λ, the following formula was
used

where a represents the semi-major axis of the WGS-84 ellipsoid (analogously b the semi-
minor axis). Then

λ = x/a,

e2 = 1 − b2/a2,
−y/a,
t = e
χ = π/2 − 2 arctan t

and

.= χ + J1 sin 2χ + J2 sin 4χ + J3 sin 6χ + J4 sin 8χ ,

ϕ

Geoinformatica (2014) 18:621–669

651

where

J1 = 2e2 + 5e22/24 + e23/12 + 13e24/360,
J2 = 7e22/48 + 29e23/240 + 811e24/11520,
J3 = 7e23/120 + 81e24/1120,
J4 = 4279e24/161280.

Further details can be found in [46]. All algorithms have been implemented in C++ (VS
2010 compiler); our testing PC had the following hardware specification: Intel Core E4500
processor, 2.2 GHz with 2GB RAM running on Win7 32-bit Professional The following 8
maps from David Rumsey Map Collection were analyzed, see Table 2.

Map 1 “Carte generale de l’Afrique, Adrien Hubert, Atlas universel de geographie
physique, politique, ancienne & moderne”, 1828, 28 identical points. Estimated projec-
tion: sinusoidal, ϕk = 90◦N, λk = 0◦E, ϕ0 = 0◦N, λ0 = 16.4◦E. The estimated results
are almost independent of the amount of analyzed points. Both programs achieved similar
results, but detectproj has slightly smaller residuals.

Map 2 “Europe Politique”, Atlas St. Cyr. Furne, Jouvet et Cie, Paris, 1885, 28 identical
points. Estimated projection: Bonne, ϕk = 90◦N, λk = 0◦E, ϕ0 = 57.7◦N, λ0 = 20.2◦E.
The presented solution brings much better results (more reliable parameters); the residuals
are significantly lower. Because the area covered by the map in the longitude direction is
λ ∈ (cid:5)15◦W, 45◦E(cid:6), the central meridian λ0 = 42.14◦E determined by MapAnalyst looks
like a mistake.

Map 3 “Western Hemisphere”, Faden W., General Atlas, 1811, 29 identical points. Esti-
mated projection: Nicolosi, ϕk = 90◦N, λk = 0◦E, ϕ0 = 0◦N, λ0 = 110.7◦W . Somewhat
more difficult test due to the confusion with an azimuthal projection in the transverse aspect.
Both programs were successful; the results are comparable.

Map 4 “Eastern Hemisphere”, Faden W., General Atlas, 1811, 31 identical points. Esti-
mated projection: ϕk = 90◦N, λk = 0◦E, ϕ0 = 0◦N, λ0 = 72.4◦. The same situation and
similar results.

Map 5 “Composite of Carte de France, Levee par ordre du Roy”, Cassini, Cesar-Francois,
1750, 28 identical points. Estimated projection: Lambert conformal conic, ϕk = 90◦N,
λk = 0◦N, ϕ0 = 39.2◦N, λ0 = 2.1◦E. The large-scale map (one sheet) projection,
which covers a small territory (cid:12)ϕ = 4◦, (cid:12)λ = 7◦, was surprisingly not detected as
the Cassini-Soldner. The presented solution has slightly smaller residuals compared to
MapAnalyst.

Map 6 “Denmark, Sleswig, Holstein, with Iceland, with Bornholm”. London atlas series,
Stanford’s Geographical, 1901, 34 identical points. Estimated projection: equidistant conic,
North Pole projected as point, ϕk = 90◦N, λk = 0◦E, ϕ0 = 61.3◦N, λ0 = 10.8◦E. Both
results are comparable. The graticule reconstructed from the determined parameters can be
found in Fig. 9.

652

Geoinformatica (2014) 18:621–669

Table 2 Analyzed maps from David Rumsay Map Collection and estimated parameters for both programs
and decreasing amount of analyzed features

Map

detectproj

MapAnalyst

ϕq

λq

ϕ0

λ0

RES

N IT Proj ϕq

λq ϕ0

λ0

RES

2

28 bonne

90.0 0.0

54.7 20.2

14 bonne

90.0 0.0

58.2 20.1

lcc

40.0 152.1 13.4 0.0

bonne

90.0 0.0

57.7 20.3

90.0 0.0

90.0 0.0

90.0 0.0

90.0 0.0

90.0 0.0

90.0 0.0

90.0 0.0

90.0 0.0

90.0 0.0

90.0 0.0

90.0 0.0

90.0 0.0

0.0

0.0

0.0

5.0

0.0

0.0

0.0

0.0

0.0

0.0

0.0

0.0

#

1

3

4

5

n Proj

28 sinu

14 sinu

sinu

bonne

29 nicol

15 nicol

nicol

nicol

31 nicol

15 nicol

nicol

nicol

28 lcc

14 lcc

lcc

lcc

8

5

8

5

8

5

8

5

8

5

9

5

8

5

8

5

52.2 2.9

80.0 0.0

90.0 0.0

39.2 2.1

90.0 0.0

40.2 2.0

90.0 0.0

36.4 1.7

6

34 eqdc2

90.0 0.0

60.9 10.8

17 eqdc2

90.0 0.0

61.3 10.8

eqdc2

eqdc2

90.0 0.0

61.1 10.8

90.0 0.0

60.7 10.7

7

30 eqdc2

90.0 0.0

57.0 -2.9

15 eqdc2

90.0 0.0

55.3 -3.0

eqdc2

leac

90.0 0.0

53.0 -3.2

30.0 4.5

69.0 0.0

8

29 stereo

14 stereo

stereo

stereo

-1.0 73.1

-1.9 73.4

-0.9 72.2

-1.4 72.6

0.0

0.0

0.0

0.0

71.4

71.5

71.5

15.9

16.5

17.1

16.4

1.74−3 85
6.69−4 83
4.96−4 102
2.13−4 97
1.67−3 100
4.67−4 91
5.90−5 263
1.91−5 98
-110.7 2.23−3 122
-110.3 9.45−4 157
-110.3 3.74−4 124
-110.1 1.80−4 123
3.05−3 310
72.4
9.19−4 294
6.11−4 500
4.95−4 255
9.95−4 231
6.04−4 132
1.19−4 154
6.95−5 107
1.89−3 102
8.34−4 106
5.94−4 94
3.76−4 89
8.73−4 112
4.06−4 98
1.02−4 90
5.88−5 170
8.19−3 119
1.38−3 109
1.30−4 144
8.02−6 89

0.0

0.0

0.0

0.0

90.0 0.0 0.0

90.0 0.0 0.0

90.0 0.0 0.0

90.0 0.0 0.0

sinu

sinu

sinu

sinu

lcc

90.0 0.0 40.0 -2.6

eqdc 90.0 0.0 40.0 42.1

eqdc 90.0 0.0 40.0 41.0

lcc

90.0 0.0 40.0 26.7

nicol 90.0 0.0 0.0

nicol 90.0 0.0 0.0

nicol 90.0 0.0 0.0

four

90.0 0.0 0.0

nicol 90.0 0.0 0.0

nicol 90.0 0.0 0.0

nicol 90.0 0.0 0.0

nicol 90.0 0.0 0.0

lcc

lcc

lcc

lcc

lcc

90.0 0.0 40.0 7.7

90.0 0.0 40.0 1.2

90.0 0.0 40.0 5.6

90.0 0.0 40.0 3.2

90.0 0.0 40.0 9.4

eqdc 90.0 0.0 40.0 13.2

eqdc 90.0 0.0 40.0 10.2

eqdc 90.0 0.0 40.0 9.7

eqdc 90.0 0.0 40.0 -9.2

sinu

sinu

sinu

90.0 0.0 0.0

90.0 0.0 0.0

90.0 0.0 0.0

nicol 90.0 0.0 0.0

nicol 90.0 0.0 0.0

nicol 90.0 0.0 0.0

nicol 90.0 0.0 0.0

69.5

69.5

70.3

70.1

20.0

17.8

17.4

16.3

-77.0

1.74−3
6.71−4
5.18−4
4.89−4
7.76−1
3.79−1
1.76−1
1.00−2
-110.5 2.24−3
-110.7 9.52−4
4.53−4
-99.1
not. impl.
3.83−3
1.21−4
7.81−4
6.16−4
1.08−1
2.29−3
1.06−2
9.36−4
9.4−3
1.03−2
2.56−3
9.43−3
2.72−2
5.90−4
2.51−4
1.07−4
9.61−3
2.69−3
1.71−3
1.08−2

70.3

70.1

71.8

-3.1

-3.6

-3.1

9.0

Map 7 “British Islands”, World Atlas, A. Arrowsmith, 1817, David Rumsay Map Collec-
tion, 30 identical points. Estimated projection: equidistant conic, North Pole projected as
point, ϕk = 90◦N, λk = 0◦E, ϕ0 = 57.0◦N, λ0 = 2.9◦E. The presented solution brings
lower residuals and better resistance to the amount of analyzed points.

Map 8 “A general map of the world or terraqueous globe”, S. Dunn, 1787. David Rumsay
Map Collection, 29 identical points. Estimated projection: stereographic projection,

Geoinformatica (2014) 18:621–669

653

Fig. 9 Map 6: a graticule of the equidistant conic projection, reconstruction from the estimated parameters

ϕk = 1.0◦S, λk = 73.1◦E, ϕ0 = 0◦N, λ0 = 0◦E. A difficult test; the analyzed map
was probably created in a stereographic projection (transverse aspect). Its graticule is sim-
ilar to the globular projections. Unlike MapAnalyst, the developed software detects the
oblique aspect very close to the transverse aspect. Here, the lack of ability of MapAnalyst
to determine anything other than the normal aspect appeared. However, the solution found
by MapAnalyst is not strictly imprecise, but has a larger residuals. The graticule recon-
structed from determined parameters can be found in Fig. 10. While the parallels fit well,
the meridians are shifted (prime meridian centered on Paris).

654

Geoinformatica (2014) 18:621–669

Fig. 10 Map 8: a graticule of the stereographic projection (close to the transverse aspect); a reconstruction
from the estimated parameters, detail of France and China

The proposed algorithm achieved better results in all cases; the estimated parameters are
more natural and have better objective function value, which decreases with the amount
analyzed features. In all test, the global minimum of the objective function φ have been
found.

However, only the normal aspect of the projection is detected by MapAnalyst. Nonethe-
less, it supports more map projections (compromise, unclassified projections), and the
analysis is much faster (about 10 % of detectproj time). Recall that both programs are
still in development.

The results also indicate that for a reliable analysis, a set of approximately 10 features is
required. The analysis of 5 features is vague and we can determine a category, rather than a
specific projection. Instead of an oblique projection aspect (used primarily for larger scale
maps), for atlas maps, both normal and transverse aspects are more common.

8.2 Test of robustness

The second test measures both the robustness and efficiency of the Nelder-Mead algorithm,
depending on the simplex size and position under all maps. The new simplex intervals with
the size ψ = 0.1 and ψ = 0.01 of the original interval were set randomly as follows:

(ϕk, λk , ϕ0, λ0)

(ϕk, λk, ϕ0, λ0)

(cid:3)
min

(cid:3)
max

= (ϕk, λk, ϕ0, λ0)min + rnd(0, 1) ·
(1 − ψ)((cid:12)ϕk, (cid:12)λk, (cid:12)ϕ0, (cid:12)λ0),
(cid:3)
+ rnd(0, 1) ·
min

= (ϕk, λk, ϕ0, λ0)

ψ((cid:12)ϕk, (cid:12)λk, (cid:12)ϕ0, (cid:12)λ0).

Geoinformatica (2014) 18:621–669

655

The test was repeated 300 times for n = 15, where the following characteristics have have
been measured: global minimum efficiency (EFF) in %, number of iterations (N IT), the
objective function value φ of correctly detected samples given by residuals (RES C), the
objective function value φ of all tests (RES A) and the time (TIME) in sec.; see Table 3.
A test is successful if φ < 3φ, where φ represents the objective function value determined
with the Mathematica optimizer (differential evolution algorithm). The arithmetic expres-
sion parser was enabled; the analyzed projection equations were loaded from a txt file. This
allows the user to enlarge the amount of analyzed map projections, but also increases the
computational times significantly (approximately 10x).

The Nelder-Mead algorithm efficiency depends on the simplex size, but not significantly.
Minimum efficiency occurs, when the estimated (cid:9)X is far outside the initial simplex and is
unable to expand (map 3:λ0, map 7: ϕ0). In such cases, the iteration process may become
stuck in a local minimum. We do not recommend reducing the simplex size and initializing
the simplex over the whole domain ϕ, λ.

The average amount of iterations per sample is approximately 145; and the average time
per sample 3s (with a parser), 0.4s (without a parser), the overall efficiency for the largest
simplex is higher than 97 %. The proposed algorithm can be considered as efficient and
robust to the initial simplex guess.

Table 3 Results of 300 tests with a random initialization for maps 1-8 and three sizes of intervals ψ

Map

RES C

RES A

TIME

ψ

1

0.1

0.01

1

0.1

0.01

1

0.1

0.01

1

0.1

0.01

1

0.1

0.01

1

0.1

0.01

1

0.1

0.01

1

0.1

0.01

EFF

100

100

98

99

97

97

98

82

74

100

100

96

97

94

87

100

96

88

100

97

87

100

96

93

N IT

29765

26020

31419

46728

50837

48089

43914

49509

50934

39828

34896

36415

55362

59931

7353

52092

51145

53621

49071

47555

52330

43647

39826

42719

4.91−1
4.91−1
4.80−2
3.42−1
3.39−1
3.40−1
6.78−1
5.67−1
5.01−1
6.75−1
6.75−1
6.48−1
4.30−1
4.22−1
4.60−1
6.13−1
6.53−1
8.70−1
2.97−1
3.13−1
3.17−1
6.04−1
5.76−1
5.59−1

4.91−1
4.91−1
9.052
4.67−1
1.341
1.601
1.073
4.113
4.172
6.75−1
6.75−1
9.542
5.24−1
5.99−1
6.791
6.13−1
9.090
1.072
3.88−1
1.220
1.330
6.04−1
2.192
3.001

425

432

535

628

554

539

1869

1325

1648

2682

2316

2309

916

619

280

1009

592

683

570

421

501

576

121

445

1

2

3

4

5

6

7

8

656

Geoinformatica (2014) 18:621–669

8.3 Test of the variability of features

To illustrate the properties and behavior of detection algorithms over of the variability of
the user entered point features, the following characteristics

–
–

impact of errors on one set of the input features P (test T1),
impact of errors on both sets of the input features P , Q (test T2),

have been measured for six different sets of points: grid, random distribution, cluster, ran-
dom meridian, random parallel, circle. The T1 test simulates the error-free reference map,
the T2 test simulates both maps with errors. All the testing sets have been proportionally
decreased from the map covering the whole world to the large-scale map, and concurrently
moved around the central meridian of the map. Therefore, the dependence of the effi-
ciency on several factors from Section 4, was investigated. Let us take a closer look at the
methodology of both synthetic tests.

For simplicity, only one projection (sinusoidal) has been involved in the testing. Due to
the similarity of the projection graticule to other pseudo-cylindrical projections, it seems an
appropriate choice. A set of 0D features has been generated, where n = 20.

The distribution of input features The six types of sets, representing the typical input data
acquired from different maps, were involved in the tests. Hence, their simple geometric
simulation has been proposed. Analyzed graticule points are expressed by the grid. The
random set implies a case, when a cartographer may choose any element on the map. Due
to the lack of the analyzed features, when not all parts of the map sheet are available for the
analysis, the clustered data is used (4 clusters by 5 points). The radius of the cluster was set
to

max(ϕmax − ϕmin, λmax − λmin).

A typical example are territories covered by the sea, where numerous islands are present.
Portolan charts, where the coastline and ports are drawn, but the interior of the continents is
missing, are simulated by points placed on the circle of the radius

max(ϕmax − ϕmin, λmax − λmin).

Wide or narrow areas are represented by points on the meridian or pa rallel, randomly
generated.

Dimensions of territory and map scale Our testing starts from the optimistic case, when
all testing features are distributed over the hemisphere, and continues with a proportionally
decreasing set, both latitudinally and longitudinally. We set a simplified dependence of the
projected territory size and the map scale S, given by the condition that the Earth of the
.= 40, 000 km fits on the A3 format paper. This requirement corresponds to the
perimeter d
approximate scale S = 1 : 100, 000, 000 for the world map, and half of the value for the
hemisphere. The following scale series

r = 1
10

r = 2
5

S = {50, 000, 000; 40, 000, 000; 30, 000, 000;
20, 000, 000; 10, 000, 000; 5, 000, 000;
1, 000, 000; 500, 000; 100, 000}

Geoinformatica (2014) 18:621–669

657

involving the range from the small-scale to the large-scale maps, was tested. In Tables 4
and 5, only the scales 50,000,000; 10,000,000; 5,000,000; 1,000,000; 500,000; 100,000,
labeled S1-6, are listed. In accordance with the above-mentioned condition, the initial size
of the territory for the map scale S = 1 : 100, 000, 000, was set to the whole domain
(cid:5)−90◦, 90◦(cid:6) × (cid:5)−180◦, 180◦(cid:6), and decreases linearly, depending on the map scale.

Position of the territory Of the many options, the difficult, but the most commonly used
variant - when the analyzed territory of the rectangular shape is located along the central
meridian - was chosen. The central meridian was set to pass through the middle part of the
map, which is obvious. Both the negligible values of distortions, and the analogous shape of
the graticule, hindering the projection detection, are typical for these territories. The testing
territory moves north, along the central meridian of the map, with the latitude increment
(cid:12)ϕ = 10◦ so the latitude of its center ϕc changes in the range of (cid:5)0◦, 70◦(cid:6). Tests for scales
S1, S2, for some sets, and all values of ϕc could not be performed; they are crossed out in
the tables.

Adding errors For the T1 test, all P sets have been intentionally contaminated by additional
errors of a random character simulating the lack of a solid geometric basis or the imprecision
input from the user. The error ε lies on a circle of the fixed radius rε for all points, taking
values (cid:5)1, 2, 3, 4, 5(cid:6) mm on the map. Its components can be expressed as

εx = rε cos α,
εy = rε sin α,
where α = rand(0, 2π), are added to both coordinates of the testing set P . The seconds
test, T2, brings the uncertainty ε also to the reference set Q

εϕ =

ελ =

rεS
R
rεS
R

cos α,

sin α,

in a similar manner.

Results of the tests Both tests (see Tables 4, 5) were carried out for six different distribu-
tions of the analyzed features, variable map scale, variable position on the central parallel,
and increasing error. The sinusoidal projection was compared to other 60 map projec-
tions, the simplified objective function was given by Eq. 8. Overall, 100 random samples
have been generated for each variant, so the total amount of testing sets was 313,320; the
computational time reached 348 hours.

Let us take a closer look at the tables. The first column contains information about the
central latitude ϕc of the set Q. For this position, six sets of different scales S have been
generated (column two). The remaining column headings represent the additional errors
belonging to rε, in millimeters. Each cell of the table contains the percentage efficiency of
the detection for six different sets, in the aforementioned order, delimited with a slash. If
the efficiency is higher than 50 %, the detection process is classified as successful.

From the perspective of the sets, one meridian or one parallel is entirely inappropriate.
They cover a small territory (long and narrow), where many projections may have the anal-
ogous shape of the meridian/parallel. Worse results were also obtained for the cluster. This
is due to the set not covering the whole territory uniformly; the spatial distribution of the
features is variable. A circle is more reliable, but the empty part without points decreases

658

Geoinformatica (2014) 18:621–669

0
.
5

0
.
4

0
.
3

0
.
2

7
3
/
0
/
0
/
6
2
/
8
8
/
0
0
1

9
6
/
0
/
1
/
2
2
/
0
0
1
/
0
0
1

)
1
e
l
b
a
T

t
s
e
t
(

s
r
o
r
r
e
l
a
n
o
i
t
i
d
d
a
y
b
d
e
t
a
n
i
m
a
t
n
o
c
s
i

t
e
s
p
a
m
y
l
r
a
e

e
h
t

;
e
l
a
c
s
p
a
m
e
h
t
d
n
a

,
s
r
o
r
r
e

l
a
n
o
i
t
i
d
d
a
,
n
o
i
t
i
s
o
p
l
a
c
i
h
p
a
r
g
o
e
g
e
h
t
n
o
y
c
n
e
i
c
i
f
f
e
n
o
i
t
c
e
t
e
d
e
h
t

f
o
t
s
e
t

A

4
e
l
b
a
T

6
/
0
/
0
/
6
/
6
3
/
0
7

0
/
0
/
0
/
0
/
0
/
4

3
/
0
/
0
/
0
/
3
/
3

0
/
0
/
1
/
2
/
2
/
2

0
/
0
/
1
/
0
/
2
/
1

0
/
0
/
1
/
0
/
0
/
1

5
1
/
0
/
1
/
6
/
4
4
/
6
8

3
/
0
/
7
/
0
/
9
/
8
2

0
/
0
/
4
/
0
/
4
/
6
1

6
/
0
/
1
/
0
/
6
/
6

2
/
0
/
0
/
0
/
5
/
8

3
/
0
/
0
/
0
/
6
/
1
1

4
2
/
0
/
3
/
6
/
5
5
/
4
8

0
1
/
0
/
9
/
4
/
9
2
/
4
4

5
/
0
/
9
/
0
/
5
1
/
0
3

5
/
0
/
1
/
0
/
2
1
/
4
1

4
/
0
/
2
/
2
/
6
/
6
1

0
/
0
/
0
/
4
/
7
/
7

4
2
/
0
/
6
/
8
/
0
6
/
3
8

8
/
0
/
2
2
/
6
/
9
2
/
0
4

7
/
0
/
0
/
2
/
2
2
/
3
4

1
1
/
0
/
0
/
2
/
4
5
/
9
8

0
/
0
/
0
/
0
/
1
/
0
1

1
/
0
/
0
/
0
/
3
/
7

1
/
0
/
1
/
4
/
1
/
1

1
/
0
/
0
/
0
/
0
/
2

1
/
0
/
0
/
2
/
1
/
0

8
1
/
0
/
2
/
6
/
3
6
/
0
9

3
/
0
/
0
1
/
0
/
3
1
/
5
2

2
/
0
/
7
/
0
/
6
/
9
1

2
/
0
/
1
/
0
/
2
/
1
1

2
/
0
/
0
/
0
/
3
/
1
1

4
/
0
/
1
/
0
/
2
/
8

8
1
/
0
/
1
/
0
1
/
9
6
/
3
9

0
1
/
0
/
7
1
/
2
/
8
2
/
3
5

8
/
0
/
0
1
/
8
/
6
2
/
8
3

1
/
0
/
1
/
8
/
1
1
/
5
1

1
2
/
0
/
0
/
8
1
/
7
6
/
3
9

8
/
0
/
0
/
2
/
8
2
/
3
6

6
/
0
/
0
/
6
/
6
1
/
5
3

4
/
0
/
0
/
0
/
8
/
4
1

5
/
0
/
3
/
6
/
5
/
6

8
1
/
0
/
0
/
8
1
/
8
6
/
5
9

0
/
0
/
0
/
0
/
0
/
3
1

2
/
0
/
0
/
0
/
0
/
5

0
/
0
/
4
/
0
/
1
/
1

1
/
0
/
2
/
0
/
1
/
2

0
/
0
/
0
/
0
/
0
/
0

4
2
/
0
/
1
/
4
1
/
1
8
/
6
9

4
/
0
/
1
1
/
0
/
6
1
/
6
4

5
/
0
/
9
/
0
/
2
1
/
0
2

5
/
0
/
4
/
2
/
4
/
1
1

5
/
0
/
0
/
2
/
4
/
3
1

3
/
0
/
0
/
0
/
1
/
5

1
3
/
0
/
1
/
0
1
/
9
7
/
0
0
1

9
1
/
0
/
1
1
/
2
/
3
4
/
3
6

7
/
0
/
2
1
/
8
/
1
2
/
4
4

3
/
0
/
4
/
4
/
1
1
/
2
1

3
/
0
/
1
/
0
/
7
/
1
1

2
/
0
/
0
/
2
/
8
/
0
1

9
3
/
0
/
9
/
4
2
/
2
9
/
8
9

5
1
/
0
/
0
/
8
/
9
3
/
2
6

0
1
/
0
/
0
/
6
/
3
3
/
7
4

6
3
/
0
/
3
/
8
1
/
1
9
/
0
0
1

6
/
0
/
5
1
/
0
/
0
3
/
1
6

8
/
0
/
7
/
0
/
6
1
/
2
3

3
/
0
/
1
/
0
/
7
/
4
1

7
/
0
/
0
/
2
/
6
/
5
1

4
/
0
/
0
/
6
/
5
/
7

5
5
/
0
/
4
/
6
2
/
0
0
1
/
0
0
1

3
2
/
0
/
7
1
/
8
/
3
6
/
9
7

3
1
/
0
/
7
/
2
1
/
5
3
/
7
6

0
1
/
0
/
1
/
6
/
0
1
/
1
2

6
/
0
/
1
/
6
/
0
2
/
6
2

4
/
0
/
0
/
2
/
9
/
0
1

4
6
/
0
/
6
/
4
3
/
9
9
/
0
0
1

7
3
/
0
/
0
/
8
2
/
1
6
/
2
8

7
1
/
0
/
0
/
0
2
/
4
4
/
0
6

0
/
0
/
0
/
0
/
2
/
0
2

0
/
0
/
0
/
0
/
0
/
0
1

1
/
0
/
1
/
0
/
1
/
3

0
/
0
/
3
/
4
/
0
/
3

1
/
0
/
0
/
0
/
1
/
0

0
/
0
/
0
/
0
/
5
/
7
2

0
/
0
/
0
/
0
/
0
/
5
1

1
/
0
/
0
/
0
/
0
/
2

0
/
0
/
1
/
2
/
1
/
1

0
/
0
/
1
/
2
/
1
/
0

]

m
m
[
ε

0
.
1

2
6
/
0
/
3
/
6
2
/
0
0
1
/
0
0
1

4
1
/
0
/
2
2
/
6
/
4
6
/
3
9

9
/
0
/
3
1
/
4
1
/
3
3
/
1
7

5
/
0
/
0
/
2
/
9
/
4
2

5
/
0
/
1
/
2
/
6
/
0
2

3
/
0
/
0
/
0
/
5
/
3
1

3
8
/
0
/
6
/
2
3
/
0
0
1
/
0
0
1

2
5
/
0
/
4
1
/
0
4
/
4
9
/
0
0
1

5
2
/
0
/
7
1
/
6
1
/
6
7
/
9
8

6
/
0
/
6
/
0
1
/
9
2
/
6
4

8
/
0
/
2
/
4
/
7
1
/
7
2

6
/
0
/
0
/
0
/
7
/
3
1

7
7
/
1
/
9
1
/
0
5
/
0
0
1
/
0
0
1

5
5
/
0
/
2
/
8
5
/
5
9
/
0
0
1

9
3
/
0
/
0
/
4
3
/
5
7
/
5
8

S

1

2

3

4

5

6

1

2

3

4

5

6

1

2

3

4

5

6

1

2

3

c
ϕ

0

0
1

0
2

0
3

Geoinformatica (2014) 18:621–669

659

4
3
/
0
/
1
2
/
4
2
/
1
7
/
5
7

6
/
0
/
3
/
2
/
3
1
/
9
1

6
/
0
/
5
/
0
/
9
/
0
1

4
/
0
/
0
/
2
/
1
/
0
1

9
/
0
/
3
1
/
4
/
2
2
/
1
5

8
/
0
/
0
/
8
/
1
3
/
1
5

4
/
0
/
5
/
0
/
3
1
/
6
1

9
/
0
/
8
/
8
/
0
1
/
5
1

4
/
0
/
1
/
6
/
4
/
7
1

4
1
/
0
/
0
/
0
1
/
5
3
/
4
6

9
3
/
0
/
8
/
6
2
/
9
6
/
-

5
/
0
/
2
1
/
6
/
4
1
/
8
1

6
/
0
/
3
1
/
4
/
4
1
/
1
1

5
/
0
/
1
/
4
/
0
1
/
2
1

7
/
0
/
0
/
4
/
7
1
/
2
4

5
/
0
/
2
/
5
3
/
-
/
-

3
1
/
0
/
8
1
/
1
1
/
6
3
/
7
5

2
1
/
0
/
1
1
/
8
/
4
1
/
0
2

1
1
/
0
/
0
/
7
1
/
3
3
/
2
6

6
/
0
/
4
/
4
/
1
1
/
3
1

4
/
0
/
4
/
9
/
6
/
7
1

0
/
0
/
0
/
3
2
/
-
/
-

4
4
/
0
/
0
2
/
4
2
/
4
8
/
7
9

2
1
/
0
/
5
1
/
6
/
0
3
/
0
5

8
/
0
/
0
/
6
1
/
5
3
/
2
5

3
/
0
/
6
/
6
/
3
1
/
0
2

8
/
0
/
8
/
0
/
7
/
1
2

1
/
0
/
1
/
4
/
4
/
8

8
4
/
0
/
4
1
/
8
2
/
1
8
/
-

4
1
/
0
/
0
/
8
1
/
7
3
/
2
7

9
/
0
/
0
/
6
1
/
2
2
/
9
5

5
/
0
/
7
/
8
/
1
1
/
1
2

5
/
0
/
1
/
6
/
1
1
/
3
1

6
/
0
/
1
/
8
/
5
/
7
1

5
/
0
/
0
/
6
/
0
1
/
7
2

7
/
0
/
8
/
2
1
/
4
/
6
1

2
/
0
/
2
/
2
/
6
/
7
1

2
/
0
/
1
/
9
3
/
-
/
-

6
1
/
0
/
0
/
5
1
/
4
5
/
7
6

3
1
/
0
/
4
1
/
4
/
1
3
/
1
6

6
/
0
/
9
/
1
1
/
4
1
/
8
2

0
1
/
0
/
8
/
4
/
2
1
/
5
1

3
/
0
/
3
/
6
/
7
/
5
1

0
/
0
/
0
/
8
2
/
-
/
-

4
/
0
/
3
1
/
8
/
1
1
/
6
2

6
/
0
/
6
/
2
/
0
1
/
6
1

4
/
0
/
1
/
2
/
6
/
8
1

8
5
/
1
/
8
1
/
2
3
/
3
9
/
7
9

3
1
/
0
/
4
1
/
0
1
/
0
4
/
9
5

9
1
/
0
/
0
/
4
1
/
2
4
/
2
6

6
/
0
/
5
1
/
6
/
0
2
/
9
2

6
/
0
/
6
/
2
/
5
1
/
1
2

5
/
0
/
2
/
2
/
4
/
2
1

6
5
/
1
/
7
1
/
6
4
/
2
9
/
-

8
1
/
0
/
0
/
0
2
/
4
5
/
6
7

6
1
/
0
/
0
/
2
1
/
2
3
/
8
6

4
/
0
/
0
/
0
1
/
6
1
/
8
2

1
1
/
0
/
9
/
2
/
2
1
/
2
1

9
/
0
/
3
/
8
/
5
/
0
2

4
/
0
/
1
/
7
4
/
-
/
-

9
1
/
0
/
2
1
/
8
1
/
0
3
/
8
6

6
/
0
/
3
1
/
1
1
/
7
1
/
3
4

8
1
/
0
/
0
/
2
1
/
9
4
/
6
6

8
/
0
/
8
/
0
1
/
0
1
/
2
2

2
/
0
/
0
/
0
1
/
7
/
1
1

0
/
0
/
0
/
2
3
/
-
/
-

6
/
0
/
7
/
2
/
9
1
/
9
3

7
/
0
/
3
/
4
/
0
1
/
5
2

6
/
0
/
0
/
2
/
9
/
1
1

9
1
/
0
/
6
1
/
4
2
/
2
5
/
6
6

7
/
0
/
3
1
/
0
1
/
2
2
/
2
4

1
2
/
0
/
0
/
0
2
/
8
5
/
2
8

3
6
/
2
/
6
2
/
3
5
/
8
9
/
-

8
3
/
0
/
0
/
0
3
/
4
6
/
8
7

7
2
/
0
/
0
/
8
1
/
6
5
/
4
7

1
/
0
/
0
/
0
1
/
8
1
/
8
2

8
/
0
/
5
/
0
1
/
5
1
/
4
2

5
/
0
/
8
/
2
1
/
7
/
7
2

4
/
0
/
0
/
0
/
3
/
7
1

2
/
0
/
2
/
6
/
4
/
4
1

1
/
0
/
0
/
4
5
/
-
/
-

3
2
/
0
/
7
1
/
4
2
/
4
5
/
0
7

0
3
/
0
/
0
/
7
2
/
8
5
/
1
7

5
/
0
/
5
1
/
3
1
/
7
1
/
9
4

3
/
0
/
5
1
/
3
1
/
6
1
/
2
3

2
/
0
/
0
/
9
/
9
/
0
1

0
/
0
/
0
/
2
3
/
-
/
-

0
.
5

0
.
4

0
.
3

0
.
2

7
/
0
/
3
/
0
2
/
0
2
/
6
3

2
/
0
/
1
/
2
/
0
1
/
3
1

6
/
0
/
6
/
8
/
9
2
/
4
5

0
5
/
0
/
2
/
2
4
/
4
8
/
9
9

8
3
/
0
/
9
/
0
2
/
9
5
/
7
8

2
1
/
0
/
5
1
/
8
1
/
0
4
/
2
5

5
7
/
2
/
7
2
/
5
6
/
9
9
/
-

3
5
/
0
/
1
/
8
5
/
3
8
/
5
9

2
3
/
0
/
0
/
8
2
/
4
6
/
7
7

3
1
/
0
/
0
/
2
1
/
4
3
/
0
6

5
/
0
/
8
/
0
1
/
8
1
/
6
3

6
/
0
/
4
/
2
/
9
1
/
3
4

3
/
0
/
2
/
6
/
7
/
0
1

5
/
0
/
1
/
4
/
3
1
/
7

0
1
/
0
/
2
/
2
5
/
-
/
-

8
3
/
0
/
2
1
/
1
4
/
2
6
/
2
7

5
1
/
0
/
3
1
/
7
1
/
1
4
/
5
5

1
4
/
0
/
0
/
0
5
/
9
6
/
3
8

7
/
0
/
9
/
0
1
/
3
2
/
8
3

6
/
0
/
0
/
5
/
9
/
5
2

0
/
0
/
0
/
6
3
/
-
/
-

]

m
m
[
ε

0
.
1

)
d
e
u
n
i
t
n
o
c
(

4
e
l
b
a
T

S

4

5

6

1

2

3

4

5

6

1

2

3

4

5

6

1

2

3

4

5

6

1

c
ϕ

0
4

0
5

0
6

0
7

7
6
/
3
/
4
2
/
5
4
/
9
9
/
0
0
1

8
7
/
4
/
9
2
/
1
6
/
0
0
1
/
0
0
1

660

Geoinformatica (2014) 18:621–669

1
1
/
0
/
0
/
4
1
/
4
3
/
5
6

7
1
/
0
/
4
1
/
6
/
7
3
/
3
6

0
1
/
0
/
7
1
/
6
/
2
2
/
7
1

9
/
0
/
8
/
6
/
0
1
/
5
1

6
/
0
/
2
/
0
/
7
/
1
1

6
1
/
0
/
3
1
/
6
2
/
1
5
/
6
6

5
1
/
0
/
0
/
2
1
/
4
5
/
5
6

1
1
/
0
/
4
1
/
2
/
5
2
/
8
2

7
/
0
/
2
1
/
2
/
7
1
/
0
1

3
/
0
/
3
/
0
/
3
1
/
5
1

0
1
/
0
/
4
1
/
0
2
/
3
5
/
1
6

0
1
/
0
/
8
1
/
0
1
/
1
2
/
8
2

9
/
0
/
1
2
/
2
1
/
0
2
/
5
2

4
1
/
0
/
0
/
6
3
/
0
4
/
1
6

2
/
0
/
1
/
0
/
6
1
/
0
1

4
2
/
0
/
1
1
/
6
3
/
2
7
/
3
6

0
1
/
0
/
9
1
/
8
1
/
4
2
/
8
4

1
1
/
0
/
7
1
/
4
1
/
8
1
/
6
2

1
2
/
0
/
0
/
6
3
/
3
5
/
1
7

8
/
0
/
1
/
6
/
8
/
0
2

0
.
5

0
.
4

0
.
3

0
.
2

3
2
/
0
/
2
1
/
2
5
/
4
6
/
5
6

9
3
/
0
/
0
/
0
5
/
9
6
/
2
7

8
/
0
/
6
1
/
8
1
/
1
5
/
4
6

8
/
0
/
4
1
/
2
2
/
8
1
/
8
3

2
1
/
0
/
4
/
2
1
/
0
1
/
6
1

]

m
m
[
ε

0
.
1

S

2

3

4

5

6

)
d
e
u
n
i
t
n
o
c
(

4
e
l
b
a
T

c
ϕ

Geoinformatica (2014) 18:621–669

661

0
1
/
0
/
0
/
6
/
6
4
/
0
6

2
/
0
/
0
/
2
/
4
/
6

2
/
0
/
1
/
1
/
1
/
2

1
/
0
/
1
/
2
/
0
/
0

1
/
0
/
0
/
0
/
0
/
1

0
/
0
/
0
/
0
/
0
/
0

0
1
/
0
/
2
/
6
/
0
5
/
8
5

5
/
0
/
4
1
/
5
/
1
1
/
2
2

1
/
0
/
8
/
5
/
3
/
9

3
/
0
/
0
/
4
/
3
/
8

7
/
0
/
1
/
6
/
5
/
9

2
/
0
/
0
/
8
/
7
/
8

6
1
/
0
/
2
/
3
/
1
5
/
4
6

4
/
0
/
8
/
5
/
1
2
/
9
2

8
/
0
/
8
/
2
1
/
6
2
/
7
1

5
/
0
/
2
/
0
1
/
1
1
/
6
1

1
1
/
0
/
2
/
5
/
3
/
9

4
/
0
/
0
/
7
/
8
/
9

3
1
/
0
/
7
1
/
1
1
/
8
3
/
2
3

2
1
/
0
/
7
1
/
3
1
/
9
1
/
8
2

2
2
/
0
/
0
/
1
1
/
4
5
/
2
6

8
/
0
/
0
/
0
1
/
6
5
/
9
6

2
/
0
/
0
/
1
/
8
/
3
1

1
/
0
/
0
/
2
/
3
/
5

1
/
0
/
1
/
1
/
1
/
0

1
/
0
/
0
/
1
/
2
/
1

0
/
0
/
0
/
1
/
0
/
0

0
1
/
0
/
0
/
0
1
/
0
5
/
0
7

5
/
0
/
7
1
/
2
/
0
1
/
1
2

6
/
0
/
8
/
4
/
4
1
/
6
1

9
1
/
0
/
4
/
9
/
3
7
/
4
7

4
/
0
/
0
/
1
1
/
6
/
2
1

5
/
0
/
2
/
7
/
9
/
1
1

5
/
0
/
1
/
8
/
6
/
5

1
1
/
0
/
5
1
/
5
1
/
5
2
/
9
3

8
/
0
/
6
/
6
1
/
0
2
/
6
2

2
/
0
/
1
/
1
1
/
1
1
/
7

8
/
0
/
3
/
8
/
6
1
/
3
1

4
/
0
/
0
/
4
1
/
0
1
/
8

4
2
/
0
/
3
/
0
1
/
2
7
/
7
7

5
/
0
/
6
1
/
6
1
/
9
2
/
7
3

4
1
/
0
/
0
/
8
/
8
2
/
7
4

2
1
/
0
/
0
/
5
1
/
7
6
/
0
9

0
/
0
/
0
/
0
/
0
/
6

3
/
0
/
0
/
2
/
4
/
6

1
/
0
/
2
/
3
/
0
/
3

0
/
0
/
1
/
1
/
1
/
3

0
/
0
/
0
/
1
/
0
/
1

3
2
/
0
/
1
/
5
1
/
6
7
/
7
8

3
/
0
/
1
1
/
3
/
4
1
/
0
2

3
/
0
/
9
/
4
/
3
2
/
6
3

4
/
0
/
1
/
6
/
6
/
2
1

6
/
0
/
1
/
8
/
8
/
1
1

7
/
0
/
1
/
5
/
4
/
7

0
1
/
0
/
5
1
/
6
1
/
1
4
/
4
5

9
3
/
0
/
6
/
8
1
/
3
8
/
3
8

7
/
0
/
7
/
3
1
/
2
3
/
2
3

0
1
/
0
/
0
/
0
1
/
3
1
/
1
1

1
4
/
0
/
8
/
0
2
/
3
8
/
5
8

6
1
/
0
/
0
/
2
1
/
9
3
/
6
4

2
1
/
0
/
6
1
/
6
1
/
3
4
/
2
4

7
/
0
/
2
/
5
/
7
/
0
2

7
/
0
/
2
/
9
/
7
/
3
1

0
3
/
0
/
2
/
8
1
/
0
9
/
9
9

0
/
0
/
0
/
0
/
3
/
8
1

1
/
0
/
0
/
4
/
2
/
5

0
/
0
/
1
/
1
/
1
/
2

1
/
0
/
0
/
2
/
2
/
0

0
/
0
/
0
/
2
/
0
/
0

5
4
/
0
/
4
/
2
2
/
0
9
/
8
9

8
/
0
/
7
1
/
1
1
/
9
1
/
6
2

6
/
0
/
3
1
/
9
/
5
3
/
8
4

2
/
0
/
3
/
5
/
3
1
/
2
1

4
/
0
/
0
/
5
/
7
/
3
1

6
/
0
/
0
/
7
/
5
/
1
1

5
2
/
0
/
2
1
/
7
1
/
2
7
/
2
7

8
4
/
1
/
4
/
6
2
/
7
9
/
6
9

4
1
/
0
/
9
/
8
1
/
9
3
/
2
5

1
6
/
0
/
9
/
9
2
/
4
9
/
8
9

4
2
/
0
/
0
/
7
1
/
6
6
/
5
6

9
1
/
0
/
1
1
/
6
2
/
9
5
/
0
6

9
/
0
/
4
/
8
/
9
1
/
9
1

4
/
0
/
0
/
7
/
0
2
/
7
1

0
/
0
/
1
/
8
/
6
/
9

0
.
5

0
.
4

0
.
3

0
.
2

7
6
/
0
/
3
/
6
3
/
9
9
/
0
0
1

1
/
0
/
0
/
0
/
4
/
1
3

0
/
0
/
0
/
4
/
5
/
6

1
/
0
/
0
/
0
/
3
/
4

4
/
0
/
3
/
2
/
4
/
3

0
/
0
/
1
/
0
/
1
/
1

4
8
/
0
/
6
/
5
3
/
0
0
1
/
0
0
1

5
1
/
0
/
3
1
/
6
1
/
2
7
/
8
7

1
1
/
0
/
4
1
/
8
/
8
3
/
0
5

7
/
0
/
4
/
0
1
/
6
1
/
5
1

3
/
0
/
0
/
0
1
/
1
1
/
3
1

6
/
0
/
0
/
7
/
4
/
2
1

9
7
/
0
/
4
/
1
4
/
9
9
/
0
0
1

0
4
/
0
/
5
1
/
6
4
/
3
9
/
6
9

4
2
/
0
/
1
1
/
5
2
/
9
7
/
3
7

3
1
/
0
/
4
/
0
2
/
7
2
/
5
3

5
/
0
/
1
/
6
1
/
4
1
/
2
2

8
/
0
/
2
/
6
/
4
1
/
8
1

8
8
/
0
/
3
1
/
9
5
/
0
0
1
/
0
0
1

8
2
/
0
/
2
1
/
0
4
/
1
8
/
7
7

4
5
/
0
/
0
/
8
5
/
4
9
/
5
9

]

m
m
[
ε

0
.
1

S

1

2

3

4

5

6

1

2

3

4

5

6

1

2

3

4

5

6

1

2

3

c
ϕ

0

0
1

0
2

0
3

)
2
e
l
b
a
T

t
s
e
t
(

s
r
o
r
r
e

l
a
n
o
i
t
i
d
d
a
y
b
d
e
t
a
n
i
m
a
t
n
o
c

e
r
a

s
p
a
m
h
t
o
b
;
e
l
a
c
s
p
a
m
e
h
t
d
n
a

,
s
r
o
r
r
e

l
a
n
o
i
t
i
d
d
a

,
n
o
i
t
i
s
o
p
l
a
c
i
h
p
a
r
g
o
e
g
e
h
t
n
o
y
c
n
e
i
c
i
f
f
e
n
o
i
t
c
e
t
e
d
e
h
t

f
o
t
s
e
t

A

5
e
l
b
a
T

662

Geoinformatica (2014) 18:621–669

1
1
/
0
/
6
/
9
/
9
/
3
1

3
1
/
0
/
2
/
9
/
8
1
/
5

9
/
0
/
1
/
5
/
1
1
/
9

2
3
/
0
/
3
1
/
1
2
/
6
6
/
5
6

2
1
/
0
/
4
1
/
9
/
0
3
/
9
3

4
1
/
0
/
0
/
9
/
0
2
/
5
3

2
1
/
0
/
5
/
5
/
0
1
/
6
1

4
1
/
0
/
8
/
0
1
/
0
2
/
9

6
/
0
/
1
/
2
1
/
0
1
/
5
1

6
4
/
0
/
4
1
/
0
3
/
9
5
/
-

7
1
/
0
/
0
/
6
/
4
3
/
6
5

9
/
0
/
3
1
/
5
1
/
8
2
/
8
3

5
/
0
/
6
1
/
1
1
/
8
/
9
1

9
/
0
/
7
/
6
1
/
0
1
/
6
1

8
/
0
/
1
/
9
/
3
1
/
0
1

6
/
0
/
0
/
0
2
/
-
/
-

0
1
/
0
/
4
1
/
4
2
/
8
3
/
8
4

6
/
0
/
4
1
/
2
1
/
8
1
/
0
2

3
1
/
0
/
0
/
8
/
8
2
/
8
6

0
1
/
0
/
9
/
8
/
1
1
/
6
1

2
1
/
0
/
2
/
1
1
/
1
1
/
6

7
4
/
0
/
5
1
/
9
2
/
4
8
/
8
7

1
1
/
0
/
7
1
/
2
1
/
2
4
/
3
4

1
1
/
0
/
5
1
/
1
1
/
5
1
/
9
1

3
1
/
0
/
0
/
0
1
/
1
4
/
6
4

7
/
0
/
4
/
8
/
2
1
/
5
1

3
1
/
0
/
6
/
6
/
1
1
/
9

7
/
0
/
0
/
6
/
4
1
/
1
1

5
5
/
0
/
3
2
/
7
2
/
7
8
/
-

1
2
/
0
/
0
/
4
1
/
7
3
/
2
5

7
/
0
/
1
1
/
5
1
/
5
1
/
1
2

0
1
/
0
/
0
/
5
/
1
3
/
5
4

2
1
/
0
/
5
/
0
1
/
6
/
3
1

3
/
0
/
0
/
3
1
/
9
/
4
1

7
/
0
/
0
/
8
3
/
-
/
-

3
/
0
/
7
/
6
/
0
1
/
4
1

2
/
0
/
3
/
8
/
3
1
/
2
1

3
1
/
0
/
4
1
/
4
2
/
8
3
/
6
6

8
1
/
0
/
0
/
4
1
/
7
5
/
0
7

8
/
0
/
7
1
/
0
1
/
7
1
/
1
2

9
/
0
/
7
/
1
1
/
7
1
/
5
1

6
/
0
/
0
/
1
1
/
2
1
/
1
1

8
/
0
/
2
/
1
1
/
3
1
/
2
1

8
/
0
/
4
/
9
/
9
/
8
1

5
/
0
/
1
/
6
/
4
1
/
9

2
5
/
1
/
3
2
/
2
3
/
1
9
/
5
9

6
1
/
0
/
2
1
/
9
1
/
3
4
/
9
4

3
2
/
0
/
0
/
8
1
/
4
4
/
1
5

6
/
0
/
1
1
/
7
1
/
1
1
/
9
2

9
/
0
/
7
/
3
1
/
1
1
/
1
1

1
1
/
0
/
1
/
4
1
/
3
1
/
3
1

1
6
/
0
/
4
2
/
6
3
/
3
9
/
-

0
2
/
0
/
0
/
8
2
/
3
5
/
3
7

3
1
/
0
/
0
/
0
1
/
2
4
/
3
5

8
/
0
/
2
1
/
7
/
5
1
/
9
1

2
1
/
0
/
1
1
/
2
1
/
2
1
/
8
1

9
/
0
/
1
/
0
1
/
3
1
/
8

4
/
0
/
1
/
9
3
/
-
/
-

9
1
/
0
/
3
1
/
6
1
/
0
5
/
5
6

8
2
/
0
/
0
/
9
1
/
5
5
/
0
6

6
1
/
0
/
2
1
/
6
1
/
9
1
/
9
1

9
/
0
/
3
1
/
5
1
/
7
1
/
9
2

9
/
0
/
1
/
3
1
/
3
1
/
5
1

5
/
0
/
9
/
0
1
/
1
2
/
9
2

2
1
/
0
/
3
/
9
/
3
1
/
3
2

8
/
0
/
0
/
1
1
/
0
1
/
1
1

6
6
/
1
/
4
2
/
8
4
/
7
9
/
7
9

3
2
/
0
/
0
1
/
1
2
/
2
5
/
2
6

2
2
/
0
/
0
/
3
2
/
1
6
/
6
6

8
/
0
/
0
1
/
6
1
/
3
2
/
9
2

8
6
/
0
/
0
2
/
6
5
/
0
0
1
/
-

6
3
/
0
/
0
/
6
2
/
7
6
/
2
7

9
1
/
0
/
0
/
3
2
/
8
5
/
5
6

1
1
/
0
/
1
1
/
6
1
/
5
2
/
1
3

2
1
/
0
/
8
/
0
1
/
0
1
/
3
1

5
/
0
/
0
/
0
1
/
1
1
/
2
1

0
1
/
0
/
8
/
5
1
/
9
/
9
1

6
/
0
/
0
/
2
1
/
3
1
/
5
1

2
3
/
0
/
0
/
5
2
/
4
6
/
6
7

5
2
/
0
/
9
/
9
1
/
3
5
/
7
5

5
/
1
/
1
/
1
6
/
-
/
-

4
/
0
/
9
/
3
1
/
2
2
/
9
3

9
/
0
/
1
1
/
8
/
0
2
/
4
2

2
/
0
/
0
/
6
1
/
4
1
/
4
1

0
.
5

0
.
4

0
.
3

0
.
2

1
8
/
0
/
5
2
/
5
5
/
0
0
1
/
0
0
1

2
1
/
0
/
1
/
1
1
/
9
1
/
6
2

7
/
0
/
8
/
0
2
/
2
3
/
8
4

6
/
0
/
1
/
9
/
8
/
4
1

]

m
m
[
ε

0
.
1

0
4
/
0
/
3
1
/
1
4
/
5
6
/
0
7

2
4
/
0
/
1
/
1
5
/
0
8
/
9
8

4
1
/
0
/
8
/
2
2
/
4
3
/
1
5

8
/
0
/
8
/
5
1
/
9
1
/
3
3

6
/
0
/
1
/
3
1
/
6
1
/
0
1

1
7
/
0
/
8
3
/
7
5
/
0
0
1
/
-

4
4
/
0
/
1
/
1
5
/
5
8
/
4
8

3
3
/
0
/
0
/
3
5
/
9
6
/
9
6

9
/
0
/
7
1
/
7
1
/
5
3
/
8
5

3
1
/
0
/
9
/
9
1
/
1
3
/
6
3

8
/
0
/
0
/
0
1
/
3
1
/
3
1

9
/
1
/
2
/
8
5
/
-
/
-

2
4
/
0
/
0
/
5
4
/
2
7
/
7
8

9
2
/
0
/
6
/
5
4
/
5
6
/
9
6

6
1
/
0
/
2
1
/
5
2
/
5
2
/
9
4

7
/
0
/
1
1
/
6
1
/
6
1
/
4
3

2
/
0
/
2
/
5
/
2
/
1
1

S

4

5

6

1

2

3

4

5

6

1

2

3

4

5

6

1

2

3

4

5

6

c
ϕ

0
4

0
5

0
6

)
d
e
u
n
i
t
n
o
c
(

5
e
l
b
a
T

Geoinformatica (2014) 18:621–669

663

9
1
/
0
/
0
2
/
8
1
/
5
4
/
2
4

2
1
/
0
/
0
/
5
1
/
2
4
/
6
5

2
1
/
0
/
8
/
2
2
/
4
1
/
5
2

2
1
/
0
/
7
/
5
1
/
3
1
/
0
1

5
/
0
/
6
/
0
1
/
2
1
/
8

0
/
0
/
0
/
7
2
/
-
/
-

8
1
/
0
/
7
1
/
8
1
/
0
5
/
4
5

0
2
/
0
/
7
1
/
4
1
/
1
2
/
5
2

2
1
/
0
/
0
/
0
2
/
4
4
/
9
5

0
/
0
/
0
/
5
2
/
-
/
-

3
/
0
/
4
/
6
1
/
3
1
/
4
1

7
/
0
/
7
/
8
/
4
2
/
9
1

9
1
/
0
/
9
1
/
2
3
/
8
4
/
5
6

7
1
/
0
/
0
1
/
7
1
/
2
3
/
5
3

0
1
/
0
/
2
1
/
5
1
/
6
1
/
7
2

6
1
/
0
/
0
/
2
2
/
6
4
/
0
6

8
/
0
/
1
/
3
1
/
6
1
/
1
1

0
/
0
/
0
/
7
2
/
-
/
-

8
2
/
0
/
0
/
0
3
/
8
5
/
3
6

8
1
/
0
/
9
/
1
2
/
1
6
/
4
6

0
1
/
0
/
0
2
/
9
1
/
5
3
/
4
3

0
/
0
/
0
/
1
3
/
-
/
-

7
/
0
/
6
/
8
1
/
3
2
/
5
1

3
/
0
/
1
/
3
1
/
0
1
/
6
1

0
.
5

0
.
4

0
.
3

0
.
2

3
3
/
0
/
0
/
3
4
/
3
7
/
6
6

1
3
/
0
/
9
/
3
4
/
4
6
/
2
6

9
1
/
0
/
8
1
/
2
2
/
0
5
/
5
6

2
1
/
0
/
5
1
/
0
2
/
8
2
/
2
4

1
1
/
0
/
1
/
3
1
/
6
1
/
3
1

1
/
0
/
0
/
7
3
/
-
/
-

]

m
m
[
ε

0
.
1

S

1

2

3

4

5

6

)
d
e
u
n
i
t
n
o
c
(

5
e
l
b
a
T

c
ϕ

0
7

664

Geoinformatica (2014) 18:621–669

the efficiency. Finally, a grid, or randomly spaced data, gave the best results; they represents
the most reliable input sets.

Taking into account the geographic position of the set, the increasing latitude ϕc brings
better efficiency, but in the northern and southern parts it decreases slightly. This is obvious,
because the shapes of the graticule differ more at mid-latitudes; along the equator and the
North/South poles they are similar. The interval (cid:5)20◦, 60◦(cid:6) can be considered as suitable for
analysis.

The decreasing map scale S, which is the second most important factor, significantly
affects the detection process. Up to the scale of 1:1,000,000, corresponding with the territory
.= 3◦, the results of the analysis are somewhat unreliable. This
of dimensions (cid:12)ϕ = (cid:12)λ
does not imply that the wrong projection is determined. However, projections having similar
properties, may be found; see Fig. 11. For maps up to the scale of 1:500, 000, there are
“small” differences (hundreds of meters), between the determined graticule shapes; see the
auxiliary circle of the radius of 0.5 km centered at bottom left, point Pi . However, these
discrepancies are less than the graphical accuracy of the map (1 mm on the map scale).
Concurrently, for the large-scale maps, the requirement for the precision of input features
is difficult to fulfill; it is less than 1 mm on the map. In general, it does not make sense to
put emphasis on the best-determined projection, any of the top 5 determined solutions is,
overall, acceptable. The problem with mid-scale and small-scale maps does not occur; there
is a larger spatial diversity between the determined projections. See the auxiliary circle with
a radius of 25 km (5 mm on the map scale).

Take advantage of these observations for the next criterion. Let us denote d to be an

average spatial diversity of first k samples given by the formula

"
#
#
$

(cid:24)
(cid:24)
(cid:24)Pi − P (cid:3)
i,j

(cid:24)
(cid:24)
2
(cid:24)
2

,

k

d = 1
n

n(cid:10)

k(cid:10)

i=1

j =1

where P (cid:3)
i,j represents i−th point of the j −th sample. If the spatial diversity d is less than the
graphical accuracy of the map G, the projection may not be clearly detectable. Depending
on the maps scale S and and the latitude ϕc, these areas are shown in Fig. 12. As expected,
they relate particularly to the large-scale maps.

The most important factor is represented by the geometrical accuracy of the input fea-
tures. It is obvious that the generally acceptable inaccuracy is about 3 mm on the map; see
Tables 4, 5. For world maps, the criterion is less strict; it is around 4 mm. Keep in mind,
the value represents a radius of the circle (e.g. the uncertainty region) drawn at each point
of the set. The operator should avoid placing the points outside the “error circles”. The

Fig. 11 The spatial variability of the map sheets corners for the 10 best determined projections; maps of
scales 1:500,000 a and 1:5,000,000 b, ϕc = 40◦, ε = 1 mm

Geoinformatica (2014) 18:621–669

665

Fig. 12 A spatial diversity d, depending on the map scale S and the latitude ϕc, together with the graphical
accuracy G of the map (the gray plane)

results showed that the contamination of both files by errors decreases the detection ability
by about 20 %, compared to a single file flaw. Therefore, the proposed method faster loses
its ability to clearly determine the projection. In both cases, similar behavior of the detec-
tion algorithm is noted. The bold printed values belong to the acceptable combinations of
parameters.

For the dependance of the percentage efficiency on the additional errors, the geographical
position, and the map scale, generated for tests T1 and T2, see Fig. 13. As the source data,
the randomly generated set of features (probably the most common set), has been generated.
The areas where the efficiency is over 50 %, are noticeable on both graphs; take into account
the logarithmic scale of the x axis. They preferably cover the small-scale and mid-scale
maps, located at mid-latitudes, up to 4 mm of the precision (test T1). For the second test,
T2, the efficiency is significantly less, especially at a higher noise level (> 3 mm).

Fig. 13 Efficiency of the detection algorithm for tests T1 a and T2 b, depending on the map scale,
geographical position, and the error

666

Geoinformatica (2014) 18:621–669

For maps of the world, and maps of continents, up to the scale 1:5,000,000, the mod-
erately trained end-user may work well with the tool. For mid-scale maps up to the scale
1:500,000, the requirements of the precision of the input points are stronger (

.= 1 mm).

Although it is not about accurate and exact simulation illustrating the distribution of

errors in map, perhaps it sufficiently illustrates the capability of the algorithm.

The proposed methods described in the next article have similar precision requirements,

which are insensitive to the choice of the optimizing method.

9 Conclusion

This article has introduced a new method estimating the unknown map’s projection, and
its parameters, based on the Nelder-Mead downhill simplex algorithm. Several versions of
the objective function φ were presented. The complex variant takes into account 0D-2D
elements, the simplified version, which is computationally cheaper, only 0D elements. Our
proposed solution finding arguments minimizing the objective function φ is off-line and
seems to be efficient and robust. It also achieved more accurate results than MapAnalyst.

The selected early maps, created since the 18th century, have been analyzed. For the vast
majority of them, a map projection was successfully recognized. There is an uncertainty in
the estimated parameters for Map 5, which used to be assigned with the Cassini-Soldner
projection. However, due to the large scale of the map, our results did not confirm this
assumption.

The above-mentioned techniques depend on many parameters; in particular, the analyzed
territory size, its geographical location, shape, spatial distribution, precision of selecting
points, or existence of the solid geometric basis of the analyzed map, play important roles.
Small territories, up to size (cid:12)ϕ = (cid:12)λ = 3◦ (e.g. maps up to the scale 1:1 000 000), long and
narrow territories placed around the prime meridian, equator, or poles, imprecisely selected
matching points (> 4 mm error on the map), are almost undetectable; the impact of a map
projection should not be less than the graphical accuracy of a map. Based on the analysis,
the ideal amount 10-20 of the analyzed features was found.

All algorithms were implemented in new detectproj software available from

web.natur.cuni.cz/∼bayertom/detectproj/det sw.html.

The C++ source code contains approximately 15,000 lines, supports 60 map projections,
several detection methods and operating systems. Its user interface is designed as Proj.4
library, but the cartographic computations are based on newly developed kernel.

Our software is available free of charge. It may also be applicable as a tool for improving
early map georeferencing, or may be used for semi-automatic acquisition of bibliographic
meta data related to the map’s projection.

In the next article, methods for on-line detection based on the NLSP approach will be

presented.

As mentioned above, such techniques may be applicable and helpful for many libraries
with large printed map collections. There is a need to determine the projection and its param-
eters for early maps, where the information is unknown. The next step is integration of the
selected detection algorithms into the software for on-line georeferencing of scanned maps
http://www.georeferencer.org/.

The tool, used by many famous libraries (e.g., The British Library, The National Library
of Scotland), enriched with new capabilities, may bring interesting results when studying
the national cartographic heritage.

Geoinformatica (2014) 18:621–669

667

Acknowledgments This article was supported by a grant from the Ministry of Culture of the Czech
Republic, No. DF11P01OVV003 “TEMAP - Technology for Access to Czech Map Collections: Methodol-
ogy and Software for the Protection and Re-use of the National Cartographic Heritage”.

References

1. Arkin EM, Chew LP, Huttenlocher DP, Kedem K, Mitchell JSB (1991) An efficiently computable metric

for comparing polygonal shapes. IEEE J PAMI 13(3):209–216

2. Bai X, Yang X, Latecki LJ, Liu W, Tu Z (2010) Learning context-sensitive shape similarity by graph

transduction. IEEE J PAMI 32(5):861–874

3. Balletti C, Guerra F, Monti C (2000) Venice: new life in an old map: geometrical analysis and

georeferenced visualisation of historic maps. Geoinformatica 3:40–43

4. Bertram M, Wendrock H (1996) Characterization of planar local arrangement by means of the delaunay

neighbourhood. J Microsc 181(1):45–53. doi:10.1046/j.1365-2818.1996.93374.x

5. Buchar (2009) Assessment of the map projections for world maps. 18th International Cartographic

Conference, Olomouc

6. Bugayevskiy LM, Snyder J (1995) Map projections: a reference manual. CRC Press
7. Burger G, Embury J, Wilkinson D (1990) The characterization of microstructures using tessellations and

their application to deformation processes. Simul Theory Evolving Microstruct 199–209

8. Chang SH, Cheng FH, Hsu WH, Wu GZ (1997) Fast algorithm for point pattern matching: invariant to

translations, rotations and scale changes. Pattern Recogn 30(2):311–320

9. Craciunescu V, Constantinescu S (2006) Eharta. http://earth.unibuc.ro/articole/eHarta?lang=en
10. Erle S, Krishnan S, Waters T (2009) World map warp. http://warp.worldmap.harvard.edu/
11. Esri (2003) Identify an unknown projected coordinate system using arcmap
12. Esri (2005) Identify an unknown projected coordinate system using arcmap
13. Fischler MA, Bolles RC (1981) Random sample consensus: a paradigm for model

fitting
with applications to image analysis and automated cartography. Commun ACM 24(6):381–395.
doi:10.1145/358669.358692

14. Flacke W, Kraus B, Warcup C (2005) Working with projections and datum transformations in ArcGIS:
theory and practical examples. Points Verlag. http://books.google.cz/books?id=PfEsAQAAMAAJ
15. Frank R, Ester M (2006) A quantitative similarity measure for maps. In: Riedl A, Kainz W,
Elmes GA (eds) Progress in spatial data handling. Springer, Berlin Heidelberg, pp 435–450.
doi:10.1007/3-540-35589-8 28

16. Gao F, Han L (2012) Implementing the nelder-mead simplex algorithm with adaptive parameters.

Comput Optim Appl 51(1):259–277. doi:10.1007/s10589-010-9329-3

17. Geography, Division M, H´ebert J (1974) Panoramic maps of Anglo-American cities: a checklist of maps
in the collections of the Library of Congress, Geography and Map Division, Library of Congress. http://
books.google.cz/books?id=eZ7oGwAACAAJ

18. Gkalp E, Gngr O, Boz Y (2008) Evaluation of different outlier detection methods for gps networks.

Sensors Peterboroug 8(11):7344–7358. http://www.mdpi.com/1424-8220/8/11/7344/

19. Hekimoglu S, Berber M (2003) Effectiveness of robust methods in heterogeneous linear models. J

Geodesy 76(11-12):706–713. doi:10.1007/s00190-002-0289-y

20. Huang JF, Lai SH, Cheng CM (2007) Robust fundamental matrix estimation with accurate outlier

detection. J Inf Sci Eng 23(4):1213–1225

21. Huber P (1981) Robust Statistics. Wiley series in probability and mathematical statistics. Probability and

mathematical statistics. Wiley. http://books.google.cz/books?id=HQp2BKN-qWoC

22. Itoh R, Horizoe M, Gotoh K (1995) A method for measuring two-dimensional dispersed state of parti-
cles. Adv Powder Technol 6(2):81–89. doi:10.1163/156855295X00086, http://www.sciencedirect.com/
science/article/pii/S0921883108605348

23. Jenny B, Hurni L (2011) Cultural heritage: studying cartographic heritage: analysis and visualization of

geometric distortions. Comput Graph 35(2):402–411. doi:10.1016/j.cag.2011.01.005

24. Kelley CT (1995) Iterative methods for linear and nonlinear equations. No. 16 in Frontiers in Applied

Mathematics. SIAM. http://www.siam.org/books/textbooks/fr16 book.pdf

25. Knight NL, Wang J (2009) A comparison of outlier detection procedures and robust estimation methods
in gps positioning. J Navig 62(4):699. http://www.journals.cambridge.org/abstract S0373463309990142
26. Kowal KC, P[rbreve]idal P (2012) Online georeferencing for libraries: the british library implementation
of georeferencer for spatial metadata enhancement and public engagement. J Map Geogr Libr 8(3):276–
289. doi:10.1080/15.4203532012.700914

668

Geoinformatica (2014) 18:621–669

27. Krarup T, Juhl JKK (1980) G¨otterdmmerung over least squares. In: Proceedings of international society

for photogrammetry 14th congress ISPRS Commission, vol 3. Hamburg

28. Lagarias JC, Reeds JA, Wright MH, Wright PE (1998) Convergence properties of the nelder–mead
simplex method in low dimensions. SIAM J Optim 9(1):112–147. doi:10.1137/S1052623496303470
29. Latecki LJ, Lakamper R (2000) Shape similarity measure based on correspondence of visual parts. IEEE

J PAMI 22(10):1185–1190

30. Liu YK, Wang XQ, Bao SZ, Gombosi M, Zalik B (2007) An algorithm for polygon clipping, and
for determining polygon intersections and unions. Comput Geosci 33(5):589–598. doi:10.1016/j.cageo.
2006.08.008, http://www.sciencedirect.com/science/article/pii/S0098300406001841

31. Marcelpoil R, Usson Y (1992) Methods for the study of cellular sociology: Voronoi diagrams
and parametrization of the spatial relationships. J Theor Biol 154(3):359–369. doi:10.1016/S0022-
5193(05)80176-6, http://www.sciencedirect.com/science/article/pii/S0022519305801766

32. Margalit A, Knott GD (1989) An algorithm for computing the union, intersection or difference of two
polygons. Comput Graph 13(2):167–183. doi:10.1016/j.cageo.2008.08, http://www.sciencedirect.com/
science/article/pii/0097849389900599

33. Martnez F, Rueda AJ, Feito FR (2009) A new algorithm for computing boolean operations on poly-
gons. Comput Geosci 35(6):1177–1185. doi:10.1016/j.cageo.2008.08.009, http://www.sciencedirect.
com/science/article/pii/S0098300408002793

34. Mckinnon KIM (1996) Convergence of the nelder-mead simplex method to a non-stationary point. Tech

rep. SIAM J Optim

35. MetaCarta (2009) Labs: Map rectifier. http://labs.metacarta.com/rectifier/
36. Mount DM, Netanyahu NS, Le Moigne J (1998) Improved algorithms for robust point pattern match-
ing and applications to image registration. In: Proceedings of the fourteenth annual symposium on
Computational geometry, SCG ’98, pp 155–164. ACM, New York. doi:10.1145/276884.276902

37. Nelder JA, Mead R (1965) A simplex method for function minimization. Comput J 7(4):308–313.

doi:10.1093/comjnl/7.4.308, http://comjnl.oxfordjournals.org/content/7/4/308.abstract

38. Okabe A, Boots B, Sugihara K, Chiu DSN, Chiu SN (2000) Spatial tessellations: concepts and

applications of voronoi diagrams Wiley series in probability and statistics. Wiley

39. Okabe A, Sugihara K (2012) Spatial analysis along networks: statistical and computational methods.

Statistics in practice. Wiley. http://books.google.cz/books?id=k738tgAACAAJ

40. Pham N, Wilamowski BM (2011) Improved nelder meads simplex method and applications. Electrical

and Computer Engineering, Auburn University, Alabama

41. Press WH, Teukolsky SA, Vetterling WT, Flannery BP (2007) Numerical Recipes 3rd edn. The Art of

Scientific Computing, 3 edn. Cambridge University Press, New York

42. Pridal P (2011) Georeferencer. http://www.georeferencer.org
43. Pun CM, Li C (2009) Shape classification using simplification and tangent function. In: Proceedings
of the 8th WSEAS international conference on circuits, systems, electronics, control & signal pro-
cessing, CSECS’09. World Scientific and Engineering Academy and Society (WSEAS), Stevens Point,
Wisconsin. pp 261–266. http://dl.acm.org/citation.cfm?id=1.736282.1736330

44. Reps J (1998) Bird’s eye views: historic lithographs of North American cities. Princeton Architectural

Press. http://books.google.cz/books?id=bPTFQgAACAAJ

45. Rousseeuw PJ, Leroy AM (1987) Robust regression and outlier detection. Wiley, New York
46. Snyder JP (1987) Map projections–a working manual. Tech. Rep. 1395, U.S. Geological Survey. http://

pubs.er.usgs.gov/usgspubs/pp/pp1395

47. Subbarao R, Meer P (2006) Beyond ransac: user independent robust regression. In: Proceedings of
the 2006 conference on computer vision and pattern recognition workshop, CVPRW ’06, p 101. IEEE
Computer Society, Washington DC. doi:10.1109/CVPRW.2006.43

48. Veltkamp RC, Hagedoorn M (1999) State-of-the-art in shape matching. Tech. rep., Principles of visual

information retrieval

49. Volotao CFDS, Santos RDCD, Erthal GJ, Dutra LV (2010) Shape characterization with turning functions.
In: Proceedings of the 17th international conference on systems, signals and image processing. Editora
da Universidade Federal Fluminense vol 1, pp 554–557. http://urlib.net/dpi.inpe.br/plutao/2010/11.11.
17.36.41

50. Walters FHLRJr, Morgan SL, Deming SN (1991) Sequential Simplex Optimization: a Technique for
Improving Quality and Productivity in Research, Development, and Manufacturing Chemometrics
series. CRC. http://www.worldcat.org/isbn/0849358949

51. Wamelen PBV, Li Z, Iyengar SS (1999) A fast algorithm for the point pattern matching problem
52. Wieser A, Brunner FK (2000) An extended weight model for GPS phase observations, earth, planets,

and space 53:777–882

Geoinformatica (2014) 18:621–669

669

Dr. Tomas Bayer Assistant Professor at the Department of Applied Geoinformatics and Cartography of
Charles University in Prague, is an expert in the area of geoinformatics. His research and teaching activities
are connected with the automation of cartographic processes, mathematical cartography and computational
geometry. He focuses on the development of algorithms for automated building simplification, automated
detection of the map’s projection, 2D/2.5D triangulation algorithms for large point sets.

