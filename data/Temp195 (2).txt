This article was downloaded by: [University of New Hampshire]
On: 05 October 2014, At: 04:23
Publisher: Taylor & Francis
Informa Ltd Registered in England and Wales Registered Number:
1072954 Registered office: Mortimer House, 37-41 Mortimer Street,
London W1T 3JH, UK

International Journal of
Geographical Information
Science
Publication details, including instructions for
authors and subscription information:
http://www.tandfonline.com/loi/tgis20

Utility map reconstruction
J. P. De Knecht a , J. G. M. Schavemaker b , M.
J. T. Reinders a & A. M. Vossepoel b
a Pattern Recognition Group, Department of
Applied Physics, Delft University of Technology,
P.O. Box 5046, 2600 GA Delft, The Netherlands.
b Information and Communication Theory
Group, Faculty of Information Technology and
Systems, Delft University of Technology, P.O.
Box 5046, 2600 GA Delft, The Netherlands.
Published online: 06 Aug 2010.

To cite this article: J. P. De Knecht , J. G. M. Schavemaker , M. J. T. Reinders
& A. M. Vossepoel (2001) Utility map reconstruction, International Journal of
Geographical Information Science, 15:1, 7-26, DOI: 10.1080/136588100750058670

To link to this article:  http://dx.doi.org/10.1080/136588100750058670

PLEASE SCROLL DOWN FOR ARTICLE

Taylor & Francis makes every effort to ensure the accuracy of all
the information (the “Content”) contained in the publications on our
platform. However, Taylor & Francis, our agents, and our licensors
make no representations or warranties whatsoever as to the accuracy,
completeness, or suitability for any purpose of the Content. Any opinions
and views expressed in this publication are the opinions and views of
the authors, and are not the views of or endorsed by Taylor & Francis.
The accuracy of the Content should not be relied upon and should be
independently verified with primary sources of information. Taylor and
Francis shall not be liable for any losses, actions, claims, proceedings,

demands, costs, expenses, damages, and other liabilities whatsoever
or howsoever caused arising directly or indirectly in connection with, in
relation to or arising out of the use of the Content.

This article may be used for research, teaching, and private study
purposes. Any substantial or systematic reproduction, redistribution,
reselling, loan, sub-licensing, systematic supply, or distribution in any
form to anyone is expressly forbidden. Terms & Conditions of access
and use can be found at http://www.tandfonline.com/page/terms-and-
conditions

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 int. j. geographical information science, 2001, vol. 15, no. 1, 7± 26

Research Article

Utility map reconstruction

J. P. DE KNECHT*, J. G. M. SCHAVEMAKER†,
M. J. T. REINDERS† and A. M. VOSSEPOEL*
*Pattern Recognition Group, Department of Applied Physics,
†Information and Communication Theory Group, Faculty of Information
Technology and Systems, Delft University of Technology, P.O. Box 5046,
2600 GA Delft, The Netherlands
e-mail: jurrien,albert@ph.tn.tudelft.nl, m.j.t.reinders@its.tudelft.nl

(Received 11 January 1999; accepted 7 March 2000)

In this paper we describe a new system for the reconstruction of
Abstract.
geometric map elements as developed in the Dutch TopSpin-PNEM project
‘Knowledge-based conversion of utility maps’. In the knowledge base map conver-
sion process vectorized map elements coming from an image interpretation system
must be reconstructed in a geometrically accurate topographic base map. This is
done using a map correspondence between the utility map and the base map
based on mutual topography and relational information supplied by a map
interpretation module. The map interpretation module uses geometrical inference
to deduce the relational information, while applying a novel con(cid:143) ict resolution
strategy. The map elements are accurately reconstructed, relationally and geomet-
rically, using the map correspondence, the relations and several object-speci(cid:142) c
functions.

1.

Introduction
In the industrialized world there is a large interest in the (semi-)automatic
conversion of engineering drawings (such as utility maps) to database (cid:142) les for CAD
systems or for geographic information systems (GIS). To avoid tedious conversion
by hand, research is done on automatic conversion of engineering drawings. We have
collaborated in a research project to investigate the possibility of automatic conver-
sion of Dutch utility maps. The main objective of this project is to speed up the
entire conversion process.

1.1. System overview

We have developed a semi-automati c system for the conversion of public utility
maps, in which the operator corrects and appends the results of an automatic image
interpretation process. For the system layout of the complete conversion process we
refer to Smeulders and Kate (1995 ). A simpli(cid:142) ed overview of the proposed conversion
system is shown in (cid:142) gure 1.

Scanned versions of the paper maps are input for an automatic image interpreta-
tion process, as described in den Hartog et al. (1996) and Schavemake r (1999 ). The

Internationa l Journal of Geographica l Information Science
ISSN 1365-881 6 print/ISSN 1362-308 7 online © 2001 Taylor & Francis Ltd
http://www.tandf.co.uk/journals

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 8

J. P. de Knecht et al.

Figure 1. System overview.

output of this process consists of
linear labelled map elements. Only the most
frequently present map elements are detected, such as houses, trenches and dimen-
sions. In this article we focus on the reconstruction part of this system. The public
utility maps used in this research consist of A0 sized paper maps, of which a small
detail can be seen in (cid:142) gure 2.

The houses in (cid:142) gure 2 are drawn as polylines. These polylines are often closed
and drawn with orthogonal corners. The trenches, which contain the cables of the
utility company, form the large linear structures in the map. Coupling sleeves in the
cables are depicted as black disks on the trench. Dimensions or groups of dimensions
determine the position of the trench with respect to the topography . In the maps we
are considering, dimensions can indicate a distance, a direction or both:

1. Dimensions that indicate both a distance and a direction are drawn as straight
double-headed arrows with a solid body, accompanied by a distance measure.
2. Dimensions that only specify a direction are presented as dashed lines in

the map.

3. Dimensions that determine a distance along a topography element (usually
the side of the road) often use the topography element as a dimension leader.

Other, less frequently present map elements that show, e.g. the content of a trench

or details of complex situations, can also be found in the public utility maps.

It is important to note that the shape, size and location of the map elements
does not necessarily correspond to the situation as it can be found in the terrain. At
the time the map was drawn, the draftsman, using his cartographic skills, could have
recti(cid:142) ed, enlarged or moved elements in the map to, e.g. clarify or beautify a situation.
This practice leads to local diŒerences in scale, rotation and translation.

The geometrically accurate map is the large scale base map of The Netherlands.
We use the utility version of the base map, in which not all of the topography is
present, but only the houses and road elements that are visible from the roadside.
Houses in the map are therefore usually missing their back sides.

1.2. Focus

In this paper we focus on the map reconstruction part of the system. The goal
of the reconstruction is to correctly and accurately position the dimensions and
trenches in the coordinate system of the base map. In this way the (local ) scale,

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 Utility map reconstruction

9

Figure 2. Detail of a utility map drawn on linnen. Several map elements can be found in
this detail, such as houses (a), trenches (b), road sides (c), which are partially drawn
on the back side of the linnen, dimension (d) that speci(cid:142) es both a direction and a
distance, dimension (e), the dashed line, which points in a certain direction and
dimension ( f ) with a distance along a topography element.

translation and rotation distortions will be eliminated from the utility map. In order
to reach this goal the reconstruction uses four information sources:

E a utility map consisting of vectorized map elements;
E a base map consisting solely of vector elements representing the topography ;

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 10

J. P. de Knecht et al.

E a local map correspondence between the buildings in the utility map and the

buildings in the base map, consisting of point pairs;

E geometrical relations between map elements in the utility map.

Related work can be found in § 2. The algorithm to (cid:142) nd the map correspondence
is introduced in § 3, the interpretation module producing geometrical relations is
discussed in § 4. The actual reconstruction is discussed in § 5, with experiments given
in § 6.

2. Related work

The reconstruction of map data is strongly related to the integration of geometric
data from diŒerent sources. In the past several techniques and algorithms have been
developed that provide the means to integrate geometric data. In this section we will
focus on previous work in the (cid:142) eld of geographical information systems that uses a
(semi)automatic approach to spatial data integration.

Saalfeld (1988) describes a con(cid:143) ation, or automated map compilation system in
which iteratively the position and graph structure of several map elements is used
to determine a match between the diŒerent data sources. After each iteration rubber
sheeting is used to transform the remaining map elements. With the transformed
map elements new matches can be found in the next iteration step. Other work,
studying the transformation s used in con(cid:143) ation can be found in the work of
Demirksen and SchaŒrin (1996 ). Furthermore, a patent has been awarded to
Deretsky et al. (1996) for a con(cid:143) ation system that utilizes the pairing of chains of
arcs as a basis for matching.

Gabay and Doytscher (1994 ) identify locally matching geometric structures using
a compatibility measure that is determined by the accuracy of points and lines.
Starting with matching point pairs, matching line-parts are found by sequentially
comparing a line to all non-matching lines. With this approach it is possible to
detect corresponding structures that diŒer considerably in topology.

In the context of GIS interoperability, integration issues arise at diŒerent levels
of the data description. Laurini (1998) and Devogele et al. (1998) give a general
overview of the problems and solutions that are associated with the integration
process. The former also presents several tools which aid the integration at a semantic,
topological and geometric level. The latter includes an example of the integration of
two road network databases.

Building upon the work of Vosselman (1992), Walter and Fritsch (1999) have
developed a matching algorithm that uses the information theoretic concepts of
mutual information between lines as a merit function. Candidate matching lines are
found after the application of several geometric constraints. After the evaluation of
the merit function for all candidates, matching structures are identi(cid:142) ed by evaluating
topological neighbours.

The techniques we will describe in this article are closely related to those found
in literature. However, we prefer the term reconstruction over con(cid:143) ation or integra-
tion, as we explicitly use the metric information of the dimensions to reconstruct the
position of the trench.

3. Map correspondence

Before we can reconstruct map elements we have to establish a geometric corres-
pondence between the interpreted utility map and the geometrical accurate base

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 Utility map reconstruction

11

map. As mentioned above, several approaches have been developed to achieve this
aspect of spatial data integration. Other approaches, coming from the (cid:142) eld of
computer vision and pattern recognition can be found in Wilson and Hancock
(1997) and Christmas et al. (1995) for example.

In our application we (cid:142) nd geometric correspondences with an algorithm that
matches points in the utility and base map (de Knecht and Schutte 1996). The
algorithm performs the matching by comparing polygonal objects present in both
maps, i.e. buildings. Before matching, the elements in the utility map are globally
transformed with a preliminary a(cid:141) ne transformation , determined by manually identi-
(cid:142) ed control points, to reduce the number of matching candidates. After the use of
the preliminary a(cid:141) ne tranformation, one can observe the following diŒerences
between the buildings in both maps:

E A diŒerent number of buildings in both maps, i.e. missing or extra buildings

in one or both of the maps;

E DiŒerences in local scale and translation;
E DiŒerences in the number of vertices in corresponding polygons due to a
diŒerence in abstraction (detailed description of the sides of a building vs.
square representation of a building) or a diŒerence in completeness, see (cid:142) gure 3.

We observe these diŒerences by using an inexact matching procedure, employing
the vertices of the building polygons as features. The matching procedure, described
in more detail in de Knecht and Schutte (1996 ), consists of the following steps:

E Search Candidates. Starting with a polygonal object in one of the maps,
candidate matching objects are selected within a spatial region of interest in
the other map;

E Permutate. For every candidate match we generate all cyclic permutations of
vertices of both polygons which are comparable with each other. The compatib-
ility measure is based on two measurements: the distance between vertices and
the orientation diŒerence of the corners of vertices. During the permutation,
we also allow compatible vertices to be skipped; in this way we can handle
incomplete polygons and spurious details in polygons;

E Evaluation of L ikelihood function. The generated permutations of vertices are
evaluated with a likelihood function based upon the least squares residual

Figure 3.

(a) Completeness diŒerence. (b) Abstraction diŒerence.

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 12

J. P. de Knecht et al.

error of an a(cid:141) ne transformation . The match with the maximum likelihood is
selected and establishes a local correspondence between the utility map and
the base map.

4.

Interpretation
The interpretation module takes labelled map elements as input and produces

their geometric relations, see (cid:142) gure 4.

The input map elements are typically trench pieces, sleeves, sides of buildings,
arrows, dashed lines and pieces of roadsides. All map elements are represented as a
labelled vector [x
) the end point
, y
and lambda the label, except for sleeves which are represented as a point [ x
, l].
1
There is no uncertainty concerning the label of the map elements. The output
geometrical relations between these map elements are typically: in line, perpendicular,
T-junction and within-distance-of .

) the begin point, (x

, l], with (x

, x
2

, y
2

, y

, y

, y

1

1

1

2

1

1

2

We represent the geometrical relations between map objects with two parameters.
The parameter d represents the shortest distance between the vector of two map
objects. The parameter a represents the angle between the vectors of two map objects
(c.f. (cid:142) gure 5). Notice that for geometrical relations with some map objects (e.g.
sleeves) the parameter a is super(cid:143) uous, as they only have a point attribute.

To (cid:142) nd these relations, the interpretation module groups the input map elements
into complex map objects like dimensions and groups of dimensions. A basic dimen-
sion typically consists of an arrow specifying a distance between two map objects.
The arrow has a geometric relationship between two map objects. For instance, an

Figure 4. The interpretation module takes labelled vectorized map elements as input and
produces their geometrical relationships. The symbol d stands for in line relationships,
stands for a perpendicular relationship and ) stands for T-junction.

Figure 5.

(a) Geometrical relation. (b) Examples of geometrical relations.

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 *
Utility map reconstruction

13

arrow is always drawn in line of a house side. These geometric relationships stem
from the rules by which the technical draftsmen draw utility maps. In (cid:142) gure 6 a
model of a dimension is depicted. The interpretation (cid:142) nds the required geometric
relationships automatically when the concept of a dimension is formed, by
hypothesizing and verifying its parts, such as a house side, an arrow and a trench.

The model of the dimensions and their geometric relations in our utility domain
is represented in a semantic network, as discussed in § 4.1. In § 4.2 we elaborate on
the interpretation mechanism of forming complex map objects. Section 4.3 is focused
on the judgment of instances in the interpretation mechanism and § 4.4 and § 4.5
discuss interpretation con(cid:143) icts and a new con(cid:143) ict resolution to resolve them.

4.1. Knowledge representation

In general a representation for an application-domai n model, and application-
domain knowledge can be a (syntactic) tree, a graph, a (string) grammar, (production)
rules, frames or a semantic network (Ballard and Brown 1982, Gonzalez and Woods
1992 ). Several of these representations, or combinations of them, have been used in
the (cid:142) eld of geographical information systems (Butter(cid:142) eld and McMaster 1991, Smith
and Yiang 1992, Jeansoulin and Mathiew 1995, Sester 1998, Stassopoulou et al. 1998 ).
We adopt a semantic network implementation as described by Niemann et al.
(1990) for our knowledge representation. A semantic network distinguishes between
concepts, alternatives and instances. Concepts are known beforehand and de(cid:142) ne the
domain knowledge, usually they are explicitly speci(cid:142) ed in a knowledge (cid:142) le.
Alternatives, also named modi(cid:142) ed concepts and instances are built up during inter-
pretation. Alternatives have more restrictions on attributes than concepts, imposed
by (geometrical) relations with instances during interpretation, whereas instances
actually have attribute values.

The concepts are speci(cid:142) ed by a declarative part and a procedural part. The
declarative part contains attribute descriptions (e.g. vector or point), hierarchical link
descriptions to other concepts (e.g. part-of- and/or part link) and geometrical relation
descriptions between concepts (e.g. in line, perpendicular, touching, near). The proced-
ural part describes functions for judging attributes, instances and relations and
functions specifying how attributes are to be calculated. The declarative knowledge
part of a semantic network facilitates the composition of a map object hierarchy by

Figure 6. Knowledge representation.

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 14

J. P. de Knecht et al.

means of the part and part-of link decriptions. Our view of a semantic network
diŒers from that of Niemann et al. (1990 ) in the selection of a judgment procedure
and the notion of con(cid:143) ict resolution.

Furthermore, we make a distinction between simple and complex map concepts.
Simple concepts have no parts; these are the leaves in an object hierarchy. Complex
concepts contain simple concepts. Consequently, trench pieces, house sides, dashed
lines, arrows and road pieces are simple concepts. The complex concepts in our
application domain are dimensions and groups of dimensions.

4.2. Interpretation mechanism

The interpretation mechanism uses the well-known hypothesis generation, selec-
tion and veri(cid:142) cation cycle as depicted in (cid:142) gure 7. Interpretation is initiated by
converting the input map elements to simple concepts, after which interpretation
starts with hypothesizing all possible dimensions and dimension groups. From that
point on, interpretation continues with a cycle of hypothesis generation, selection
and veri(cid:142) cation in a top-down fashion to build up and instantiate dimensions
and groups.

Hypothesis selection is performed by means of a priority queue (Stubbs and
Webre 1984). All hypothesized map objects have a priority, which corresponds with
their place in the map object hierarchy. Hypotheses are enqueued in the hypothesis
generation step and served from this priority queue in the hypothesis selection step.
If a selected hypotheses is a leaf map object, then its veri(cid:142) cation is successful when
it exists in the hypothesized search area, which in turn results in leaf map object
instances. If a selected hypothesis is a complex map object, then its veri(cid:142) cation is
successful if all the parts of the map object are instantiated, geometrical relations
ful(cid:142) lled, and the overall judgment, see § 4.3, of the complex instance satis(cid:142) es a
ground level.

The use of a priority queue ensures that lower level map objects are veri(cid:142) ed and
instantiated before higher level objects, making the instantiation strictly bottom-up.
In our application we have chosen the Splay-Queue implementation (Breen and
Monro 1994) of a priority queue. A Splay-Queue has O( log d ) complexity for both
the serve and the enqueue operation, with d the number of distinct priorities.
Furthermore, it is inherently stable and its implementation is directly available.

4.3. Judgment of instances

In our interpretation system, instances of a complex map object have to be
judged in order to choose between diŒerent instances if an interpretation con(cid:143) ict is
apparent. As suggested in Niemann et al. (1990 ) judgment of a complex instance is

Figure 7.

Interpretation cycle.

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 Utility map reconstruction

15

a combination function which takes the judgment of its parts and of its relations as
function arguments. The judgment of leaves in the map object hierarchy is set to the
highest judgment value as they are assumed correct input to the interpretation.

A geometric relation is judged by its normalized distance from the mean values
of the shortest distance d and its angle a (see (cid:142) gure 5), which are determined by
using a training set of example relations.

For the judgment of complex map object instances, we have to combine judgments
of lower level map objects and geometric relations. Notice that in this combination
all parts and relations are important. If only one of them is judged low in con(cid:142) dence
there is su(cid:141) cient reason to believe that the judgment of the complex instance should
also be judged low in con(cid:142) dence as a part may be missing, or a geometrical relation
may be unful(cid:142) lled. Therefore, in our application we have chosen the minimum
operator as the combination function. Consequently, as all map elements are given
as correct input, the judgment value of a complex instance only depends on its
relations.

4.4. Interpretatyio n con(cid:143) icts

In our proposed system, the operator has a certain (cid:143) exibility to edit and complete
the interpreted map elements. In order to do this e(cid:141) ciently, the operator has the
opportunity to position a missed map element with a certain tolerance in its position
and in the relations with other map objects. For example, the operator can append
a dimension not exactly in line and not really touching the side of a building.

Although this (cid:143) exibility facilitates the work of an operator, the use of relatively
large tolerances may lead to con(cid:143) icts between diŒerent instances of map objects
during interpretation. By interpretation con(cid:143) icts we mean the notion that instances
of map objects are shared by diŒerent map objects higher in the object hierarchy.
For instance, if one arrow is shared by two diŒerent instances of a dimension, it is
called a con(cid:143) ict.

Consider (cid:142) gure 8(a) where two instances of a dimension from dashed line to
dashed line are depicted. Dimension 1 is in con(cid:143) ict with dimension 2 as they
share the same arrow a. Both dimensions will pass the judgment function, as the
interpretation must cope with tolerances that are associated with the relations.

Due to the rules by which utility maps are drawn not all interpretation con(cid:143) icts
are con(cid:143) icts in a drawing sense. In some situations a map object is used by diŒerent

Figure 8.

(a) Examples of a drawing and interpretation con(cid:143) ict,

(b) Examples of an

interpretation con(cid:143) ict which is not a drawing con(cid:143) ict.

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 16

J. P. de Knecht et al.

instances of higher order map objects. Consider (cid:142) gure 8(b) where an instance of a
dimension from trench to building (1) and an instance of a dimension from trench
to dimension (2) is depicted. Both instances share the same arrow a but are not in
con(cid:143) ict so nothing has to be resolved in this case. In order to cope with these context
dependent con(cid:143) icts we propose the use of so called con(cid:143) ict rules which explicitly
state all possible con(cid:143) icts between map objects.

4.5. Con(cid:143) ict resolution

To resolve interpretation con(cid:143) icts we propose a con(cid:143) ict resolution strategy which

takes into account the following questions:

1. At what map object hierarchy level does the con(cid:143) ict arise?
2. At what map object hierachy level should it be resolved?
3. How should the con(cid:143) ict be resolved?

For the (cid:142) rst two questions, we propose that con(cid:143) icts are described as rules, which
specify where (i.e. at which level) a con(cid:143) ict appears and at what level the con(cid:143) ict
must be resolved. The interpretation scheme then has the opportunity to reason with
con(cid:143) icting instances until it has gathered enough information (context) to actually
decide to resolve. Tuning the second question is a knowledge engineering task. When
con(cid:143) icts are resolved at the same level as they appeared, no contextual information
is incorporated in the resolution scheme. On the other hand, resolving a con(cid:143) ict at
a high level in the map object hierarchy may give rise to a combinatorial explosion
of possibilities. Clearly, there is a trade-oŒin between the two extremes and the
speci(cid:142) cation of con(cid:143) ict rules provides us with a means of controlling con(cid:143) ict
resolution.

As for the third question, we propose to resolve interpretation con(cid:143) icts by
comparing the two instances of objects which are in con(cid:143) ict and choose the instance
which has a higher judgment value than the other, as in this case the judgment value
of an instance corresponds to the judgment value of its weakest relation as set by
the minimum operator of combining judgments.

5. Object speci(cid:142) c reconstruction

The reconstruction of the map elements to their geometrically correct positions
in the coordinate system of a base map can be handled in several ways. It is possible
to perform an integral computation of the map elements involved, or one can
partition the problem and compute each part individually.

With an integral approach it is possible to use techniques from geodetic point
positioning, where the utility network can be viewed as a geodetic network. In this
case the dimensions serve as the known directions and distances between reference
points (house corners) and unknown trench points.

Several aspects of the map reconstruction prevent the use of this kind of integral

approach.

E The computational burden of an integral solution will be high, as the number
of elements on a utility map that have to be reconstructed can be very large.
E The location of a trench point is often de(cid:142) ned implicitly by the shape of
neighbouring trench elements. From a geodetic point positioning point of view,
such a problem is ill-posed, as explicit metric information is missing.

E The scale of the map is not homogeneous. This is due to the fact that a clear
representation of the local construction of dimensions and trenches has a

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 Utility map reconstruction

17

higher priority than the geometric accuracy. This will lead to local scale
diŒerences, which should be modelled explicitly in an integral approach.

With these aspects in mind we have developed an object speci(cid:142) c reconstruction
method. In this method the results of the map correspondence and the interpretation
serve as input for the object speci(cid:142) c reconstruction. With the corresponding point
pairs, we are able to determine a reliable local transformation of the interpreted
map elements in the coordinate system of the geometrically accurate base map.
Furthermore, with the spatial relations it is possible to form groups of interrelated
objects. These groups are represented as a graph, where the spatial relations are the
edges (E) and the nodes are the dimensions (V d), the topography elements (V t) and
the trench elements (V c). Consider for example the situation in (cid:142) gure 9 and its
representation as a graph.

In the reconstruction two main types of objects can be distinguished, dimensions

and trenches.

E Dimensions. Dimensions can specify a direction, a direction and a distance or
a distance along a topography element (usually the side of a road). Dimensions
that are spatially related with each other in graph V (E) form a dimension
group. Dimension groups are spatially related to the topography and they
determine the location of trench points. Therefore, the dimension groups will
have to be computed before the trenches can be formed. Two examples of a
dimension group can be found in (cid:142) gure 9. The procedure to compute dimension
groups is outlined in § 5.1.

E T renches. The trench elements in the utility map are represented by a set of
line segments. The location of the trench in the base map is not only determined
by the location of the spatially related dimensions, but also by the shape of
the trench as it is found in the utility map. The shape preserving algorithm
used to transform the trenches is discussed in § 5.2.

After reconstruction we check the internal consistency of each newly created
graph. If an inconsistency is found, the particular subgraph is marked for further
(visual) inspection.

5.1. Dimension groups

The goal of the reconstruction of dimension groups is the placement of the
individual dimensions with their speci(cid:142) ed length in the coordinate system of the

Figure 9. Left: Two dimension groups which locate the junction of a trench. Right: Graph
structure of this situation.

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 18

J. P. de Knecht et al.

5

.

base map, while conserving the spatial relations as they were found in the utility
map. The procedure we have developed to achieve this goal follows a sequential
reconstruction approach which is based on the graph structure of a dimension group.
Formally speaking, we refer to dimension group as a subgraph of V (E) which
consists of dimensions (V d) and topography nodes (V t) as V (E )td. In (cid:142) gure 9 we can
identify two of these subgraphs. V (E )td1
contains the nodes V t1, V d1–4 and relations
E1–4. V (E)td2

is formed by nodes V t2, Vd5 and relation E

Usually the graph V (E )td is a simple tree graph with as its root a topography
node V t from the utility map. More complex graphs may contain several topography
nodes or form internal loops. The reconstruction of a dimension group is based on
the sequential computation of each node in the graph, starting at the root(s) of the
graph. A topography node V t can be compared when the topography element in the
utility map can be made in correspondence with the accurate topography in the base
map. A dimension node V d is computed using its direction and distance measure.

The basis of our procedure is formed by an ordered set P of node relation pairs
(V (E ) pairs) that have to be computed. The order of this set is based on the number
of degrees of freedom (F) of the node relation pair. The F of a V (E) pair is determined
by the F of the previously visited node and the type of relation that exists between
the two nodes in the graph. That is a node that has a connection relation with a
computed node has a lower F than a node that has an intersection relation with a
computed node. From P we compute the V (E) pair with the lowest F (cid:142) rst, which is
then removed from the set. This in turn leads to new neighbouring V (E ) pairs that
can be added to the set. These new V (E ) pairs can consist of nodes and relations
that have not been visited yet (forward propagation) or already visited nodes that
are not (cid:142) xed (F Þ 0) and violate the shared relation (back propagation) . These steps
are repeated until P is empty.

After this procedure most nodes will be (cid:142) xed (F 5 0). Nodes that are not (cid:142) xed
and share a relation with a trench will need to be recomputed after the trench node
has been computed (see § 5.2).

Branch points in a graph can lead to a situation where V (E ) pairs with equal
F ’s are added to P. The order in which these pairs are selected for computation has
no in(cid:143) uence on the (cid:142) nal result, as newly added V (E) pairs will usually belong to
diŒerent parts of V (E). When branches meet to form a loop, or when multiple
topography nodes are present, two paths of computation will meet. As we are using
forward and backward propagation of changes in V (E) this will have no eŒect on
the (cid:142) nal result, as long as the input data is consistent.

Inconsistencies in the input data (e.g. errors in the relations or changed topo-
graphy elements) lead to repeated visiting of the same nodes in the graph, as some
relations between nodes remain violated after recomputation. To overcome this
problem we count the number of visits to a node and if this number exceeds a
distinct threshold (T ) the node will not be recomputed. With this approach we can
immediately identify inconsistencies in the input data. The value of T depends on
the complexity of the dimension groups present in the map, but in general we assume
that nine visits to the same node is an indication of an internal inconsistency.

The procedure consists of the following steps:

1. Select the roots in the graph. When more than one topography node exists in
the graph we select the nodes with the lowest F: for example, a corner of a
building has a lower F than a side of a building.

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 Utility map reconstruction

19

2. Compute roots and initialize P. If a root node can be computed (i.e. a
corresponding topography element can be found in the base map)
its
neighbours in the graph and the shared relation are added to P according to
their F.

3. Repeat until P is empty:

(a) Select the V i(Ej) pair with the lowest F from P. If the number of
recomputations of V i exceeds threshold T , select the next V (E) pair.

(b) Compute the node V i according to its relation Ej.
(c) Add new V (E ) pairs to P from the neighbours of V i. New V (E) pairs
consist of nodes that need to be computed, or nodes with an F Þ 0 that
need to be recomputed due to a violation of the shared relation.

5.2. T renches

The location of the line segments of the trench in the base map is determined by
the location of the reconstructed spatially related dimensions and the shape of the
trench as it is found in the utility map. The local scale diŒerences that are associated
with the dimensions lead to the conclusion that one cannot simply use a similarity
transformation for the reconstruction of the trenches. The algorithm we have
developed uses a transformation based on the location of the connected dimensions
in the base map. The result of this transformation is then used in a minimization
technique that preserves the shape of the trench.

The shape of the trench in the utility map can be modelled by (a combination

of ) the following quantities:

E Orientation at connected dimensions;
E Relative orientation between line segments;
E Size of line segments;
E Distance between line segments;
E Scale ratio between line segments.

All these quantities can be measured from the line segments of the trenches in
the utility map. As the size of, and the scale ratio between line segments is strongly
in(cid:143) uenced by local scale diŒerences, we focus in our model on the relative orientations
between line segments. However, these parameters do not completely describe the
shape of the trench. Therefore we have to introduce extra parameters related to the
relative sizes of the line segments. One parameter is the local uniform scale ratio,
which we assume to be constant. This assumption enables individual line segments
to be extended or shortened, but within limits, as the local scale ratio is forced to
be constant. In order to preserve details in the trench we furthermore introduce
individual scale ratios for small line segments. These parameters are illustrated in
(cid:142) gure 10.

We use in our algorithm a least squares parameter estimation, where the points
in the trench are the unknowns. The input parameters of the estimation problem
are the shape preserving quantities describing the trench. The initial values for the
unknowns are determined by a similarity transform based on the new locations of
the connected dimensions.

While in principle it is possible to apply our algorithm to all trenches in the map
in one run, practical considerations force us to partition the input of the trench
elements.

In order to reduce the size of the input we (cid:142) rst reconstruct the parts of the

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 20

J. P. de Knecht et al.

Figure 10.

Illustration of the parameters used in the trench model for the situation shown
in (cid:142) gure 9. The small arrows indicate relative orientations between line segments. The
spring at the junction represents a scale ratio for small line segments.

trenches that connect to other trenches, the crossings. In the reconstruction of a
crossing, all points of the connecting trenches are considered, up to a connected
dimension with an F 5 0. This assures that a minimum number of points have to be
computed, while the shape of the crossing will be maintained.

Secondly, all trenches are reconstructed individually. In this reconstruction the
connecting points of the reconstructed dimensions and the previously computed
points are treated as (cid:142) xed points.

After the reconstruction of the trench elements the dimension nodes with an
F Þ 0 will have to be adjusted for the new locations of the trench points (e.g. V d4 in
(cid:142) gure 9).

Although this algorithm only describes shape preservation for line segments, it
can also be applied to the reconstruction of more generic curves, as their shapes can
be described with similar parameters.

6. Experiments

Our system for the reconstruction of geometric map elements has been tested on
three utility maps with varying complexity. Utility maps are typically A0 sized,
scale 151000 and contain approximatel y 750 dimensions. The error measures applied
are the percentage of correctly reconstructed dimension groups and correctly posi-
tioned trench points. We use two maps (r1272w and r1318a) as training set and one
map as test set (r1272z). Section 6.1 discusses the results for dimension groups, § 6.2
discusses the results for trenches.

6.1. Dimensions

The reconstruction results have been visually inspected and each dimension or
dimension group has been labelled correct or incorrect depending on whether the
geometric relations are identi(cid:142) ed as in the original utility map. The interpretation
of the results is aided by visual representation of the automatically determined
internal consistency. In (cid:142) gure 11 the reconstruction results are given in case of
dimension groups for map r1272w, which produces the best results in our test set.
For the dimension groups the errors are speci(cid:142) ed to their cause:

1. Inherently impossible reconstructions. It is possible that the map elements
from a semantically impossible situation to (re)construct, e.g. drawing errors
made by a draftsman or changed topographic situations in the base map.

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 Utility map reconstruction

21

a)

b)

Figure 11.

(a) Reconstruction result for map r1272w. (b) Subdivision of the errors for the
internally inconsistent dimension groups which have not been correctly reconstructed.

Without extra information, e.g. (cid:142) eld information it
reconstruct these situations, even for the draftsman.

is not possible to

2. Incorrect matching results. The map correspondence process can generate
wrong corresponding point pairs. As a result the local transformation will not
be valid, which in turn results in incorrectly reconstructed dimension groups.
3. Input errors. Missing dimensions or trenches from the utility map or

incorrectly vectorized buildings can lead to errors in the reconstruction.

4. Falsely accepted (false positive) and missed (false negative) relations in the

interpretation.

5. Errors made by the reconstruction algorithm. This type of error can occur
when loops in dimension groups become too complex for the reconstruction
algorithm to handle.

Furthermore, we have divided the x-axis of (cid:142) gure 11 in intervals that represent
the number of dimensions that are present in a dimension group. With this representa-
tion we are able to identify characteristics that depend on the size of a dimension
group.

The bars in (cid:142) gure 11(a) are paired. The left bar of a pair shows the dimension
groups that are internally consistent, while the right bar illustrates the internally

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 22

J. P. de Knecht et al.

inconsistent groups. The subdivision of the bars signi(cid:142) es the number of dimensions
that, after visual inspection, have been classi(cid:142) ed as ‘error in reconstruction’ or ‘correct
reconstruction’.

Figure 11(b) shows the type of error made for the internally inconsistent dimen-
sion groups. This graph shows that most errors are made due to an inherently
impossible reconstruction. Figure 11 clearly shows that as the number of dimensions
per group rises, more internal inconsistencies are found. Groups with three dimen-
sions or less belong to the best reconstructed groups, as the number of errors in
these categories is signi(cid:142) cantly lower.

With this in mind, we have divided the reconstruction results of all three maps
in table 1 in two parts, results for dimension groups with less than or equal to three
and with more than three dimensions.

The three utility maps are of diŒerent complexity. This is clearly visible in the
percentage of currently reconstructed dimension groups, the correctly positioned
trench points in § 6.2 and the inherently impossible reconstruction. From the results
we may conclude that the map correspondence performs satisfactorily. The enormous
number of inherently impossible reconstructions for the utility maps r1318a and
r1272z with high complexity is troublesome as these can not be resolved; either
automatically or by the operator. Furthermore, it is clear that the size of a dimension
group increases the probability of an error made in its reconstruction.

6.2. T renches

In table 2 the results are presented for reconstruction of trenches. All results are
obtained with a visual inspection of the trenches before and after reconstruction. We
have divided the results in two parts:

1. Relative performance. This is the performance of the algorithm when we
assume that the spatially related dimension groups are correctly reconstructed.
Therefore it is focused on the shape preservation of the reconstructed trench;

Table 1. Reconstruction results

for

three utility maps. The percentage of correctly

reconstructed dimension groups and the percentage of the cause of errors are shown.

Map

r1272w

r1318a

r1272z

Number of dimensions in group
Number of dimensions in category
Correctly reconstructed (%)
Correspondence error (%)
Input error (%)
Interpretation error (%)
Reconstruction error (%)
Inherent error (%)

< 3
167
89
2
1
0
0
8

> 3
479
79
0
1
3
1
16

< 3
299
76
0
1
5
0
18

> 3
614
47
2
8
6
2
35

< 3
248
84
1
1
6
0
8

> 3
500
43
0
1
7
1
48

Table 2. Reconstruction results for three utility maps. The relative and absolute percentage
of correctly positioned trench points are shown.

Map

r1272w

r1272z

r1318a

Relative performance (%)
Absolute performance (%)

98
81

99
61

99
56

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 Utility map reconstruction

23

2. Absolute performance. This is the percentage of correctly positioned trench
points. The absolute performance is an indication of how well the trench
shapes are preserved and how much work is left for the operator after the
reconstruction process.

From the results we may conclude that the reconstruction of the trench depends

heavily on the success of the reconstruction of the dimensions.

7. Reconstruction example

An example of utility map reconstruction is illustrated in (cid:142) gure 12, where a small
part of a utility map is shown before and after reconstruction. Figure 12(a) shows
the utility map, (cid:142) gure 12(b) shows the corresponding part of the base map with the
in black and the utility map in grey and
accurate topography (i.e. buildings)
(cid:142) gure 12(c) shows the utility map in grey on top of which the recognized map
elements have been plotted in black. The trench appears as a thick line, whereas
dimensions can be recognized by their associated dimension number, with the excep-
tion of dimension leaders (dashed lines). The building is located in the upper right
part. Figure 12(d ) shows the reconstruction result.

As stated above the goal of map reconstruction is to calculate the new locations
of the map elements in the coordinate system of the base map. The output of the
reconstruction process in (cid:142) gure 12(d ) shows the reconstructed map elements. All
map elements are now represented in the coordinate system of the base map.

8. Discussion

The results in tables 1 and 2 give insight in the type and number of errors that
will be made during an automatic reconstruction process. The errors that are made
due to inherently impossible situations indicate that the success of a completely
automatic reconstruction will be limited. We can think of several reconstruction
procedures in which the techniques developed can be useful:

E The dimension groups that are automatically reconstructed are limited to
groups with three dimensions or less. Other groups can then be reconstructed
manually.

E With specialized interactive tools an operator can adjust small parts of an
incorrectly reconstructed dimension group, instead of reconstructing a whole
group.
Interactive reconstruction. Instead of relying on a fully automated process,
interaction can be introduced in the process. This way an operator has the
possibility to accept or reject a proposed solution.

In an interactive environment, automatic trench reconstruction can start when
the related dimension groups have been placed in the base map. The procedure as
described in § 5.2 can be used in this situation.

9. Summary and conclusions

In this paper we have presented a new system for the reconstruction of geometric
map elements. The reconstruction module uses a local transformation as determined
by a map correspondence module and relational information from an interpretation
module. The map correspondence module can handle diŒerences in local scale,
translation, abstraction, completeness and number of buildings by applying an
inexact matching procedure. The interpretation module can handle context

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 E
24

J. P. de Knecht et al.

Figure 12.

(a) Utility map,

(b) Utility map and base map,
interpretation results, (d) Reconstructed utility map.

(c) Utility map and image

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 Utility map reconstruction

25

dependent interpretation con(cid:143) icts by utilizing a new explicitly speci(cid:142) ed con(cid:143) ict
resolution strategy. The object speci(cid:142) c reconstruction focuses on dimensions and
trenches. The proposed reconstruction procedure preserves the shape of the elements,
local scale diŒerences. Experiments show satisfying results for small
in spite of
dimension groups.

Acknowledgments

This work is sponsored by TopSpin in the project ‘Knowledge-based conversion
of utility maps ( for the Provinciale Noord-brabants e Energie Maatschappij PNEM)’.

References
Ballard, D., and Brown, C., 1982, Computer V ision (Englewood CliŒs: Prentice Hall).
Breen, E., and Monro, D., 1994, An evaluation of priority queues for mathematical morpho-
logy. In Mathematical morphology and its applications to image processing (Dordrecht:
Kluwer Academic Publishers), pp. 249–256.

Buttenfield, B. P., and McMaster, R. B., editors, 1991, Map Generalization: Making Rules

for Knowledge Representation (London: Longman).

Christmas, W., Kittler, J., and Petrou, M., 1995, Structural matching in computer vision
using probabilistic relaxation. IEEE T ransactions on Pattern Analysis and Machine
Intelligence, 17, 749–764.

Demirksen, A. C., and Schaffrin, B., 1996, Map con(cid:143) ation: spatial point data merging and

transformation. In GIS/L IS Proceedings ’96 (Denver, Colorado: WS), pp. 393–404.

Deretsky, Z. Y., Rodny, U., Marvin, S., and White, J., 1996, Automatic chain-based

con(cid:143) ation of digital maps. US Patent 5,546,107.

Devogele, T., Parent, C., and Spaccapietra, S., 1998, On spatial database integration.

International Journal of Geographical Information Science, 12, 335–352.

Gabay, Y., and Doytsher, Y., 1994, Adjustment of line maps. In GIS/L IS Proceedings ’94

Gonzalez, R., and Woods, R., 1992, Digital Image Processing (Addison Wesley Publishing

(Phoenix, Arizona), pp. 333–341.

Company).

Den Hartog, J., ten Kate, T., and Gerbrands, J., 1996, Knowledge-based interpretation of
public utility maps. Computer V ision and Image Understanding, 63, 105– 117.
Jeansoulin, R., and Mathiew, C., 1995, A model logic for spatial knowledge and hypotheses.
In Proceedings of the Second Joint European Conference on Geographical Information
(The Hague, The Netherlands), pp. 163–168.

de Knecht, J., and Schutte, K., 1996, Finding map correspondence using geometric models.
In Proceedings 13th International Conference on Pattern Recognition (Los Alamitos:
IEEE computer society press), pp. 755–759.

Laurini, R., 1998, Spatial multi-database topological continuity and indexing: a step toward
seamless gis data interoperability. International Journal of Geographical Information
Science, 12, 373–402.

Niemann, H., Sagerer, G., Schroder, S., and Kummert, F., 1990, ERNEST: a Semantic
Network System for Pattern Understanding. IEEE T ransactions on Pattern Analysis
and Machine Intelligence, 12, 883–905.

Saalfeld, A., 1998, Con(cid:143) ation: automated map compilation. International Journal of

Geographical Information Systems, 2, 217–228.

Schavemaker, J. G. M., 1999, Document interpretation applied to public-utility maps. Ph.D.

thesis, Delft University of Technology.

Sester, M., 1998, Interpretation of spatial databases using machine learning techniques. In
Proceedings of 8th International Symposium on Spatial Data Handling ( Vancouver:
Simon Fraser University), pp. 88–97.

Smeulders, A., and Kate, T. ten, 1995, Systems for map interpretation: methods engineering.
In International Workshop on Graphics Recognition (University Park, PA: IAPR),
pp. 110–115.

Smith, T. R., and Yiang, J. E., 1992, Knowledge-based approaches in Geographic Information

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 26

Utility map reconstruction

Systems. In Geographical Information Systems: Principles and Applications, edited by
D. J. Maguire, M. F. Goodchild and D. W. Rhind (London: Longman), pp. 413–425.
Stassopoulou, A., Petrou, M., and Kittler, J., 1998, Application of a Baysian network in
a GIS based decision making system. International Journal of Geographical Information
Science, 12, 23–45.

Stubbs, D., and Webre, N., 1984, Data structures with abstract data and pascal (Montery,

Canada: Brooks/Cole publishing company).

Vosselman, G., 1992, Relational matching (Berlin: Springer Verlag).
Walter, V., and Fritsch, D., 1999, Matching spatial data sets: a statistical approach.

International Journal of Geographical Information Science, 13, 445–473.

Wilson, R., and Hancock, E., 1997, Structural matching by discrete relaxation. IEEE

T ransactions on Pattern Analysis and Machine Intelligence, 19, 634–648.

Downloaded by [University of New Hampshire] at 04:23 05 October 2014 