INT. J. GEOGRAPHICAL INFORMATION SCIENCE
VOL. 18, NO. 7, OCTOBER-NOVEMBER 2004, 709–718

Research Article

K-guarding of polyhedral terrain

BRANKO KAUCˇ ICˇ
University of Maribor, Faculty of Education, Department of Mathematics,
Korosˇka c. 160, SI 2000 Maribor, Slovenia

and BORUT Zˇ ALIK
University of Maribor, Faculty of Electrical Engineering & Computer
Sciences, Department of Computer Science, Korosˇka c. 160, SI 2000 Maribor,
Slovenia

(Received 3 January 2003; accepted 20 December 2003 )

Abstract. Site visibility analysis is an important research topic with many
applications in Geographical Information Systems. This paper introduces a new
paradigm in terrain guarding, called k-guarding. K-guarding is a generalization
of the classic guarding problem where, instead of only one guard, each surface
patch is guarded by at least k guards. Afterwards, two optimization problems
based on k-guarding are deﬁned: an optimum k-guarding, and a constrained
k-guarding. There are three heuristic approaches—k-greedy add, k-stingy drop,
and k-reverse greedy—that are proposed as a solution to the above-mentioned
optimization problems. The ﬁrst
two are known approaches adapted to
k-guarding, while k-reverse greedy is a new, original heuristic. The heuristics
are compared using actual topographic surfaces. It is shown that our approach
(k-reverse greedy) gives on average the best near optimum solutions. The most
surprising ﬁnding of the experiments is that the combination of heuristics
introduced here yields even better results.

1.

Introduction
During the last 20 years, researchers have explored several aspects of the
visibility analysis problem (Nagy 1994) yielding many practical applications. The
applications involve computation of optimum observation points,
location of
transmitters/receivers for line-of-sight communications, surveillance systems such as
radars, ﬁre and watch towers (De Floriani et al. 1986, 1992, Cole and Sharir 1989,
Goodchild and Lee 1989, Lee 1991, Cazzanti et al. 1992, Franklin 2002),
orientation and navigation (Garvey 1986), and the extraction of signiﬁcant
topological features (De Floriani et al. 1988). De Floriani et al. (1988) give an
extensive survey on this subject.

In this paper, a new method of computing an optimum number and location of
observers called k-guarding is considered. A terrain is guarded if each surface patch
is visible by at least one observer (Goodchild and Lee 1989, Lee 1991) and is

International Journal of Geographical Information Science
ISSN 1365-8816 print/ISSN 1362-3087 online # 2004 Taylor & Francis Ltd
http://www.tandf.co.uk/journals
DOI: 10.1080/13658810410001705299

710

B. Kaucˇicˇ and B. Zˇ alik

k-guarded if each patch is visible by at least k observers. Of course, it is desirable to
place the minimum number of observers. K-guarding is applied when a permanent
terrain guarding has to be assured. Typical applications include radar systems, and
military and civil surveillance.

The paper is organized as follows. In Section 2, the terrain model in use and
terrain guarding are explained. A special subsection is devoted to k-guarding.
Section 3 gives three heuristics for k-guarding: k-greedy add, k-stingy drop, and a
new approach called k-reverse greedy. In total, ﬁve algorithms are presented to be
experimentally compared on actual topographic surfaces in Section 4. It is shown
that our approach is on average the best for kw2. The most surprising ﬁnding of
the experiments is that the combination of mentioned heuristics on average yields
even better results. Section 5 concludes the paper.

2. Terrain guarding

A polyhedral terrain is described by a piecewise linear continuous function
z~f(x, y) deﬁned over a connected domain in the XY plane. In the paper, the
terrain is approximated by a digital terrain model T with triangular faces called a
triangulated irregular network (TIN). Let a TIN model describe a surface with nv
vertices, Pi~(xi, yi, zi), i~1, ..., nv, and triangles tj, j~1, ..., nt. Given a viewpoint v
above T, and a generic point p on T, the straight-line segment connecting p to v is
called the line of sight to p. Point p is visible from v iff the line-of-sight to p does
not intersect the surface except at p. Let us call a triangle t to be guarded from a
viewpoint v if all of its edges are visible from v. In such a way, a visibility function
V over the terrain is deﬁned as a Boolean function, Vab~1 if a point Pa sees the
triangle tb, otherwise Vab~0.

The problem of terrain guarding is to ﬁnd the minimum possible set of
viewpoints called observers to see/guard the whole terrain. It is usually addressed in
a discrete version, by allowing observers to be located only on the vertices (vertex-
guards), or on the edges (edge-guards) of the terrain model. In both cases, the
complexity of the problem is NP-hard (Cole and Sharir 1989, Bose et al. 1997), and
thus, approximative solutions are used. Several approximative algorithms are
discussed by Goodchild and Lee (1989), Lee (1991) and Franklin (2002). In special
cases, algorithms running in a polynomial time are known. If the height of an
observer is ﬁxed, the observer that guards the whole surface (if one exists) can be
determined in O(n log n) time. Similarly, the observer with the lowest elevation,
from which the entire terrain is guarded, can be determined in O(n log2 n) time on a
TIN model with n vertices (Cole and Sharir 1989). From the theoretical point of
view, important work has been done by Bose et al. (1997), who treated the problem
of guarding from the worst-case optimal point of view.

An exhaustive survey of approximation algorithms for different kinds of terrain

guarding was completed recently by Eidenbenz (2002).

2.1. K-guarding

Let the presence of an observer at vertex vi be denoted by a Boolean function c,
ci~1 if the observer is present, otherwise ci~0. Then, two visibility analysis
problems regarding k-guarding can be deﬁned.

K-guarding of polyhedral terrain

711

Problem 1 (optimum k-guarding): Minimize the number of observers required to
guard the entire surface, where each surface patch is guarded from at least k
observers, that is to:

minimize

subject to

minimize

subject to

X

ci

i

g; for all i,

ci~ 0, 1
f
ci~1; i [ S,
P
i

Vijci¢k for all j

X

ci

i

g; for all i,

ci~ 0, 1
f
ci~1; i [ S,
P
i

Vijci¢k for all j

This is a generalized watchtower problem, i.e. determining a minimum set of
observers from which the entire surface is visible from at least k observers. The ﬁrst
constraint assures an integer solution, and the second constraint ensures that all
triangles of the TIN model are guarded. Because the emphasis is on minimizing the
number of observers, the trivial solution, i.e. placing observers on all vertices, is not
appropriate.

Note that k%nv, and by having k~1, we have the classic watchtower problem.

Problem 2 (constrained k-guarding): Let S represent
the preselected set of
observers. Find the minimum number of additional observers to guard the entire
surface, where each surface patch is guarded from at least k observers, that
is to:

The additional constraint ensures that the solution contains the preselected set

S.

3. Heuristic algorithms

Heuristic approaches can be used to solve both problems. In the paper, three
classes of heuristics are used to solve Problems 1 and 2—a k-greedy add, a k-stingy
drop and our approach, a k-reverse greedy. In addition, assume that the result of
the visibility function V (Section 2) is given as the following two lists:

. ListV: a list of vertices; each vertex has a link to the list of triangles guarded

. ListT: a list of triangles; each triangle has a link to the list of vertices guarding

by that vertex.

that triangle.

712

B. Kaucˇicˇ and B. Zˇ alik

3.1. k-Greedy add algorithm (kGA)

The algorithm is an adaptation of the algorithm given by Goodchild and Lee
(1989) and Lee (1991) and starts with an empty solution. Afterwards, the algorithm
adds, one at a time, the ‘best’ observer. The ‘best’ observer is the observer that
guards the most triangles, which are not yet k-guarded. After the new observer has
been selected, its vertex in ListV and all links to it in ListT are erased. In addition,
each triangle has a counter representing how many times it is guarded by the
observers in the actual solution. When the counter reaches k, the corresponding
triangle in ListT and all links to it in ListV are removed. The process continues
until the observers in the solution k-guard all triangles of the TIN model. In the
original version, k equals 1, and no such counter mechanism is needed.

3.2. k-Stingy drop algorithm (kSD)

The kSD algorithm initially selects all vertices in the solution. After that, in each
iteration, the algorithm removes the ‘worst’ observer from the solution. The ‘worst’
observer is the vertex that guards the smallest number of triangles, and by its
elimination from the solution, the surface remains k-guarded. The process continues
until no further observer can be eliminated. More details of the algorithm for
1-guarding can be found in Goodchild and Lee (1989) and Lee (1991). Again, no
counter mechanism was needed.

3.3. k-Reverse greedy algorithm (kRG)

The algorithm is a generalization of the ‘smart greedy’ approach given by
Kaucˇicˇ and Zˇ alik (2002), and as kGA algorithm starts with an empty solution. In
each iteration, the algorithm performs two actions:

1. Finds a triangle guarded by the smallest number of observers, denoted as

MinT.

2. Selects the vertex that guards MinT and the largest number of the remaining
triangles, which are not yet k-guarded. That vertex is denoted as MaxG and
added into the solution.

Lists ListV and ListT have to be updated appropriately. The same counting
mechanism as in kGA algorithm is used. The process continues until the observers
in the solution k-guard all the triangles of the TIN model.

In addition, kGA and kRG algorithms can be equipped with the process of
searching and removing redundant observers. Namely, earlier selected observers
may no longer be needed because of the later selected observers. As stated by
Goodchild and Lee (1989) and Lee (1991), this process is applied after each
iteration of the greedy add algorithm. They conclude that expensive additional
computational time is spent. On the contrary, we applied this process to the ﬁnal
obtained solution. Redundant observers are removed, one at a time, as the ‘worst’
observers in the solution. The ‘worst’ observer is the observer guarding the smallest
number of triangles, and despite its removal from the solution, the surface remains
k-guarded. Our experiments showed that less computational time is spent, and a
larger number of redundant observers are removed. Applying this process to the
kGA and kRG algorithms is reﬂected in two additional algorithms, kGAR and
kRGR.

K-guarding of polyhedral terrain

713

The use of the algorithms presented here for solving Problem 2 is quite
straightforward. All of these algorithms, before they proceed, remove preselected
set S from lists ListV and ListT and update the counters where necessary.

4. Experimental results

topographic surfaces,

The algorithms presented here have been implemented in Czz and tested on
seven actual
randomly taken from the USGS DEM
repository (USGS 2004). From 120161201 regular gridded elevations, TIN
models with 3000 vertices were constructed using the drop heuristics method (Lee
1989). Their basic terrain characteristics are shown in table 1. Visibility from all
vertices was computed using the algorithm given in Lee (1991). It was assumed that
observers were placed 1.8 m above terrain points. The maximal possible k-guarding
of all TIN models was k~3.

4.1. Solving Problem 1

Table 2 shows the number of guards obtained for different TIN models for
k~1, 2, and 3. The results present the solutions obtained without and with the
process of removing redundant guards (columns * and *R, respectively). The best
results of ‘without-algorithms’ are shown in italics, and the best results of ‘with-
algorithms’ are shown in bold. Graphical presentations of these results are shown in
ﬁgures 1–3.

As expected from the results in Lee (1991), for k~1, the kGAR algorithm has
produced on average solutions with the smallest number of guards, while the kSD
algorithm has given the worst solutions for any k. It can also be seen that by
increasing k, kRG and kRGR algorithms have computed on average better
solutions than kGA and kGAR algorithms, respectively.

Table 3 shows the average spent CPU time in seconds for all algorithms. A
Pentium II 300 MHz with 64 MB and the MS Windows operating system was used.
Although applying the process of
should use
substantial computational time (Lee 1991), the experiments have shown on average
only a 7.6% increase in computational time.

removing redundant guards

4.2. Solving Problem 2

Table 4 shows the number of guards obtained for different k~2 and 3 with
preselected sets of observers obtained from 1-guarding by the same algorithms. As
expected, the results are worse than direct solving of Problem 1 (table 2). Again, the

Table 1. Basic elevation statistics of tested TIN models.

Surface name

Min (m)

Max (m)

Mean (m)

caliente-e
caliente-w
canton-e
lake-champlain-w
mariposa-w
ogden-w
okanogan-w

678
809
213
90
95
1267
293

Height

2784
2734
426
1470
3858
2861
2315

1597.7
1840.8
286.6
896.9
1867.7
1956.5
1053.7

S.D.

314.02
319.51
38.34
203.87
553.08
271.23
492.16

714

B. Kaucˇicˇ and B. Zˇ alik

Table 2. Number of obtained guards in solutions (Problem 1).

k~1

k~2

k~3

Surface name

Algorithm

caliente-e

caliente-w

canton-e

lake-champlain-w

mariposa-w

ogden-w

okanogan-w

kGA
kSD
kRG
kGA
kSD
kRG
kGA
kSD
kRG
kGA
kSD
kRG
kGA
kSD
kRG
kGA
kSD
kRG
kGA
kSD
kRG

*

461
482
461
475
495
483
502
527
512
454
464
454
410
427
410
428
454
438
398
417
412

*R

457

452
468

473
492

505
443

447
403

405
423

426
387

396

*

920
944
922
949
967
951
1003
1006
1000
912
920
892
791
821
806
852
879
859
784
792
788

*R

901

905
935

942
986

990
890

882
787

796
843

848
771

769

*

1451
1461
1432
1492
1506
1481
1596
1597
1572
1432
1414
1402
1270
1265
1248
1358
1368
1346
1235
1239
1219

*R

1426

1417
1467

1470
1560

1559
1395

1395
1248

1241
1338

1328
1208

1210

best results are shown in bold, and it can be seen that our approach (kRGR) on
average has produced the best solutions for k~2 and always the best for k~3. An
additional analysis is shown in table 5 using preselected sets of 1-guarding obtained
from different algorithms (column from).

The best results for the same preselected sets are shown in bold, and the overall

Figure 1. Number of guards obtained for k~1.

K-guarding of polyhedral terrain

715

Figure 2. Number of guards obtained for k~2.

best results for different preselected sets on the same TIN model are shown in
italics. Surprisingly, although the solutions obtained by the kSD algorithm have
always given the largest number of observers, in some combinations, 1-guarding
from kSD gave the best result when applying kRG for k~2 and 3. Again, it can be
seen that the best solutions are on average obtained by our approach.

Table 6 summarizes the best obtained number of guards for k~2 and 3. The
results, obtained from direct problem solving (table 4), are shown in italics.
Surprisingly, the direct solving of Problem 1 produced the best results only three
times.

Figure 3. Number of guards obtained for k~3.

k~1

0.24
0.25
0.76
0.31
0.32

k~2

kSD

1231
1213
1315
1178
1071
1167
1052

716

B. Kaucˇicˇ and B. Zˇ alik

Table 3. Average CPU time (s) spent.

Algorithm

kGA
kGAR
kSD
kRG
kRGR

k~2

0.33
0.36
0.94
0.46
0.49

k~3

0.41
0.47
1.07
0.62
0.67

kRGR

1426
1469
1559
1393
1249
1331
1207

1429
1413
1426
1464
1465
1469
1561
1556
1559
1390
1388
1393
1244
1250
1249
1334
1323
1331
1211
1212
1207

k~3

kSD

1755
1768
1870
1721
1553
1698
1553

k~3

kSD

1677
1755
1702
1737
1768
1727
1830
1870
1831
1677
1721
1690
1466
1553
1489
1645
1698
1640
1501
1553
1506

Table 4. Number of obtained guards with preselected sets from 1-guarding of the same
algorithms (Problem 2).

Surface name

kGAR

kRGR

kGAR

caliente-e
caliente-w
canton-e
lake-champlain-w
mariposa-w
ogden-w
okanogan-w

912
929
991
881
806
843
766

898
935
989
874
794
843
774

1429
1473
1570
1395
1254
1332
1213

Table 5. Number of obtained guards from different preselected sets (Problem 2).

kGAR

kRGR

kGAR

kRGR

Surface name

caliente-e

caliente-w

canton-e

lake-champlain-w

mariposa-w

ogden-w

okanogan-w

From

kGAR
kSD
kRGR
kGAR
kSD
kRGR
kGAR
kSD
kRGR
kGAR
kSD
kRGR
kGAR
kSD
kRGR
kGAR
kSD
kRGR
kGAR
kSD
kRGR

912
900
900
929
945
940
991
988
992
881
889
882
806
799
795
843
850
850
766
776
775

k~2

kSD

1171
1231
1185
1199
1213
1186
1270
1315
1274
1155
1178
1159
1017
1071
1021
1120
1167
1119
1018
1052
1018

913
902
898
933
929
935
985
984
989
882
889
874
796
795
794
833
850
843
764
766
774

1429
1423
1427
1473
1471
1473
1570
1561
1560
1395
1393
1398
1254
1253
1248
1332
1329
1336
1213
1207
1212

K-guarding of polyhedral terrain

Table 6. Best obtained results (Problems 1 and 2).

Surface name

caliente-e
caliente-w
canton-e
lake-champlain-w
mariposa-w
ogden-w
okanogan-w

5. Conclusion

k~2

898
929
984
874
787
833
764

717

k~3

1413
1464
1556
1388
1244
1331
1207

simulation, navigation,

terrain exploration, military and civil

Visibility analysis is an important area with many applications. Typical
scenic and hidden landscape
applications are ﬂight
assessment,
locations of
receiver/transmission facilities, and many other similar problems. In this paper,
a new paradigm in terrain guarding called k-guarding has been introduced.
K-guarding is a generalization of the classic guarding problem where, instead of
only one guard, each surface patch is guarded by at least k guards. At k-guarding,
at least k21 failures of observing facilities are allowed, and the surface still remains
guarded. One such typical application of this is radar coverage, where it is desirable
that the same surface is still covered even when any radar stops working.

surveillance,

In this paper, two problems based on k-guarding have been deﬁned: optimum
k-guarding and constrained k-guarding. Possible solutions are the three approaches
discussed here—k-greedy add, k-stingy drop, and k-reverse greedy. The ﬁrst two are
known approaches adapted to k-guarding, while the reverse greedy is a new
approach. All approaches are approximate. However, the savings in computational
time are often sufﬁciently signiﬁcant to compensate for the loss of a guaranteed
optimum solution.

The algorithms have been tested; the results have been compared on actual
topographic surfaces using the triangulated irregular network model as an
approximation model. The experiments have shown that with increasing k, our
approach on average has produced solutions with the smallest number of observers.
It has also been shown that for a higher k, the combination of these heuristics on
average has yielded better results than using only one algorithm.

References
BOSE, P., SHERMER, T., TOUSSAINT, G., and ZHU, B., 1997, Guarding polyhedral terrain.

Computational Geometry: Theory and Applications 6(3), 173–185.

CAZZANTI, M., DE FLORIANI, L., PUPPO, E., and NAGY, G., 1992, Visibility computation
on a triangulated terrain. In Progress in Image Analysis and Processing II, edited by
V. Cantoni, M. Ferretti, S. Levialdi, R. Negrini, R. Stefanelli (Singapore: World
Scientiﬁc), pp. 721–728.

COLE, R., and SHARIR, M., 1989, Visibility problems for polyhedral terrains. Journal of

Symbolic Computation, 7, 11–30.

DE FLORIANI, L., FALCIDIENO, B., PIENOVI, C., ALLEN, D., and NAGY, G., 1986, A
In Proceedings 2nd International
terrain features.

visibility-based model
Symposium on Spatial Data Handling, Seattle, WA, pp. 235–250.

for

DE FLORIANI, L., NAGY, G., and HAIR, N., 1988, Visibility-Oriented Criteria for Surface
Characterization, ECSE Department, Rensselaer Polytechnic Institute, Technical
Report No. 88–824.

718

K-guarding of polyhedral terrain

DE FLORIANI, L., NAGY, G., and PUPPO, E., 1992, Computing a line-of-sight network on a
terrain model. In Proceedings 5th International Symposium on Spatial Data Handling,
Volume 2, August 3–7, Charleston, SC, pp. 672–681.

DE FLORIANI, L., PUPPO, E., and MAGILLO, P., 1999, Applications of computational
geometry to Geographic Information Systems. In Handbook of Computational
Geometry, edited by J. R. Sack and J. Urrutia (Oxford: Elsevier Science),
pp. 333–388.

EIDENBENZ, S., 2002, Approximation algorithms for terrain guarding. Information Processing

Letters, 82, 99–105.

FRANKLIN, W. M. R., 2002, Siting observers on terrain. In Joint International Symposium on
Geospatial Theory, Processing and Applications—Spatial Data Handling 2002
Symposium, Ottawa, Canada.

GARVEY, T. D., 1986, Evidential reasoning for land-use classiﬁcation. In Proceedings
Workshop on Analytical Methods in Remote Sensing for Geographic Information
Systems, Paris, pp. 171–202.

GOODCHILD, M. F., and LEE, J., 1989, Coverage problems and visibility regions on

topographic surfaces. Annals of Operations Research, 18, 175–186.

KAUCˇ ICˇ , B., and Zˇ ALIK, B., 2002, A new approach for vertex guarding of planar graphs.

Journal of Computing and Information Technology 10(3), 221–226.

LEE, J., 1989, A drop heuristic conversion method for extracting irregular network for digital
elevation models. In Proceedings GIS/LIS’89, Vol. 1, Orlando, FL, pp. 30–39.
LEE, J., 1991, Analyses of visibility sites on topographic surfaces. International Journal of

Geographical Information Systems 5(4), 413–429.

NAGY, G., 1994, Terrain visibility. Computers and Graphics 18(6), 763–773.
USGS 2004, ftp://edcftp.cr.usgs.gov/pub/data/DEM/250/ [last visit: 28/01/2004].

