Encoding and compressing hexagonal raster data 
by the Gosper curve

Rui Xin1 |   Tinghua Ai1  |   Bo Ai2

DOI: 10.1111/tgis.12569  

R E S E A R C H   A R T I C L E

1School of Resource and Environment 
Sciences, Wuhan University, Wuhan, P. R. 
China

2College of Geomatics, Shandong University 
of Science and Technology, Qingdao, P. R. 
China

Correspondence
Tinghua Ai, School of Resource and 
Environment Sciences, Wuhan University, 
129 Luoyu Road, Wuhan, Hubei 430072, P. 
R. China.
Email: tinghuaai@whu.edu.cn

Abstract

This article mainly introduces a class of encoding and com‐

pression methods for hexagonal raster data. A new encod‐

ing mode is established with the introduction of the Gosper 

curve,  which  has  good  spatial  aggregation.  On  this  basis, 

straightforward encoding, lossless coding compression, and 

lossy coding compression can be carried out. First, the bi‐

directional  correlation  between  the  Gosper  curve  and  the 

hexagonal  grid  data  is  established,  and  the  Gosper  coding 

value  of  each  raster  unit  is  determined.  Then,  the  lossless 

compression  of  the  data  is  completed  by  performing  run‐

length  encoding  on  the  coding  set.  Following  the  Gosper 

curve trend, partial grid units are semantically changed via 

adjacent  fusion  under  certain  threshold  constraints.  The 

run‐length  encoding  is  carried  out  again  to  complete  the 

lossy  compression  and  further  reduce  the  amount  of  en‐

coding required. A break‐detection step is added during the 

process to avoid regional breaks. The experimental results 

show  that  the  proposed  method  can  efficiently  compress 

data. Additionally, data compression of multi‐resolution and 

varying fusion thresholds is explored to summarize general 

patterns.  Finally,  the  method  proposed  is  compared  with 

traditional row‐coding compression in hexagonal and quad‐

rilateral grids to highlight its advantages for hexagonal ras‐

ter data.

Transactions in GIS. 2019;00:1–28. 

wileyonlinelibrary.com/journal/tgis 

  |  1

© 2019 John Wiley & Sons Ltd2  |    

1 |  I NTRO D U C TI O N

Raster data are a common type of data in the GIS field. Compared with vector data recorded through spatial co‐

ordinates, raster data are usually organized and managed in the form of raster coding. Depending on whether the 

data are compressed during the encoding process, the encoding can be divided into straightforward encoding and 

compression encoding. The principle of straightforward encoding is simple, and it is usually a direct record of cell 

coding. In practice, data are often recorded in a specific encoding mode that can achieve the purpose of express‐

ing a large amount of information with less data through compression encoding. Classic encoding methods include 

run‐length encoding, block coding, and chain coding (Heywood, Cornelius, & Carver, 2010).

Current studies on raster data focus mainly on regular quadrilateral grids (Carr, Olsen, & White, 1992), and 

various encoding methods are also focused on regular quadrilateral grids. The raster data process and encoding 

method have theoretical support from spatial field modeling (Ai, Zhang, Zhou, & Yang, 2015) and map algebra 

computation (Yang, Ai, Yan, Chen, & Zhang, 2018). There has been a large amount of theoretical study on regular 

quadrilateral grids, which have good agreement with the Cartesian orthogonal coordinate system and provide a 

degree of computational convenience, as many commonly used raster data products in the industry are quadri‐

lateral grids, such as those used for remote‐sensing data. However, the quadrilateral grid is not the only form of 

raster data; regular hexagonal grids also exist. The regular hexagonal grid also uses regular polygons for space 

mosaics, and it has many advantages over the regular quadrilateral grid.

The advantages of the hexagonal grid, compared to the quadrilateral grid, are reflected in visual expression 

and data analysis. In terms of visual expression, human beings are naturally sensitive to horizontal and vertical 

orthogonal  lines  (Coppola,  Purves,  McCoy,  &  Purves,  1998),  and  quadrilateral  grid  structures  tend  to  produce 

such orthogonal lines. However, the regular hexagonal grid structure can effectively avoid such orthogonal lines, 

thereby reducing visual interference (Carr, 1990; Carr, Littlefield, Nicholson, & Littlefield, 1987). Compared with 

the regular quadrilateral grid, the hexagonal grid has higher compactness (Carr et al., 1992) and the advantage of 

accuracy in data representation (Scott, 1998). Thus, regular hexagonal grids are often used to display aggregated 

spatial data (Battersby, Strebe, & Finn, 2017). In terms of data analysis and processing, due to the difference in the 

basic unit between the hexagonal grid and the quadrilateral grid, essential differences exist in their morphological 

structures. The quadrilateral grid has two forms of adjacency relations: four shared edge adjacency units and four 

shared point adjacency units. Shared point adjacency often leads to discontinuities in the region. In simulation 

analyses, it is often necessary to set different weights for the two adjacency relations (Birch, 2006; Kreft, Booth, 

& Wimpenny, 1998). In contrast, the hexagonal grid has a clear adjacency relationship, in which each unit and its 

six adjacent units are connected in the form of shared edges. In addition, the center points of the neighboring units 

are all equidistant. Therefore, hexagonal grids are isotropic and suitable for the simulation analysis of spatial data 

and processes (Birch, Oom, & Beecham, 2007; Hofmann & Tiede, 2014).

Replacing  the  quadrilateral  grid  with  a  hexagonal  grid  has  been  discussed  in  many  studies  (e.g.,  Middleton  & 

Sivaswamy, 2006). In practice, the hexagonal grid has a wide range of applications. For example, the field of gaming 

has long used hexagons to make gaming maps (Dunnigan, 1997). In global discrete grid research, hexagonal grids are 

often used in global grid construction (Sahr, White, & Kimerling, 2003). In addition, hexagonal grids play an import‐

ant role in the analysis of natural research fields, such as seismic data analysis (Dharmawan & Farda, 2017), hurricane 

data analysis (Shelton, Poorthuis, Graham, & Zook, 2014), social research fields such as store retail data analysis 

(Polisciuc, Maçãs, Assunção, & Macado, 2016), and crime data analysis (Roth, Ross, & MacEachren, 2015). Although 

the Cartesian orthogonal coordinate system cannot be used as widely in a hexagonal grid as in a quadrilateral grid, 

there are also specific coordinate systems in a hexagonal grid that support spatial operations and transformations 

(Her, 1993, 1995), thereby building the mathematical foundation in a hexagonal grid and promoting its application.

When raster data are organized in a regular hexagonal grid,  both the shape and the structure are changed 

compared with those of a regular quadrilateral grid. Therefore, many existing raster encoding methods (such as 

XIN et al.    |  3

F I G U R E   1  Bidirectional correlation between the hexagonal grid and the Gosper curve

quadtree encoding) are difficult to apply directly when studying hexagonal grid coding. Some tools in quadrilat‐

eral grids—such as the orthogonal coordinate system—can be applied to hexagonal grids after modification, but a 

series of problems often arise after that (de Sousa & Leitão, 2018). For instance, when quadtree encoding, such as 

Morton encoding, is carried out, the row and column coordinate information of the grid cells is needed, meaning 

that a coordinate system should be introduced. However, as described by de Sousa and Leitão (2018), the applica‐

tion of a modified orthogonal coordinate system to a hexagonal grid will lead to a waste of storage space and other 

problems. This observation constitutes the basic motivation for this study, which uses hexagonal grid data as the 

research object. By introducing the Gosper curve, which has good consideration of spatial aggregation and hexag‐

onal grid patterns, a bidirectional correlation between the Gosper curve and the hexagonal grid is established (Xin, 

Ai, & Ai, 2018). Then, a new framework is constructed to study the encoding and compression of hexagonal grid 

data. We carried out experiments on coding compression under various resolutions and precision losses to verify 

the proposed method and compared the results based on this method with those of other encoding methods. The 

remainder of this article is organized as follows. Section 2 introduces the method design of the study. In Section 

3, real data are used to verify the proposed method experimentally. Finally, conclusions are provided in Section 4.

2 |  M E TH O DS

2.1 | Encoding tool: The Gosper curve

2.1.1 | Motivation

Some space‐filling curves have good spatial aggregation and take Tobler’s first law of geography (Tobler, 1970) into 

account well, making them suitable for manipulating geographic data. In this respect, using space‐filling curves 

XIN et al.4  |    

TA B L E   1  Gosper character codes of different iterations

Iteration

Drawing code

A−B−−B + A++AA + B−

1

2

3

…

A

…

A−B−−B + A++AA + B−−+A−BB−−B−A++A + B−−+A−BB−−B−A++A + B+A−B−−B + A++AA + B−++A−

B−−B + A++AA + B−A−B−−B + A++AA + B−++A−BB‐‐B−A++A + B−

to encode raster data describing geographical objects or phenomena is a good choice. Many studies use space‐

filling curves to encode regular quadrilateral grids (Pajarola & Widmayer, 2000; Pinto, Seco, & Gutiérrez, 2017). 

However, there is no relevant research on encoding regular hexagonal grids using space‐filling curves. This study 

found that the Gosper curve is very suitable for encoding regular hexagonal grids. The Gosper curve is a space‐

filling curve with fractal characteristics (Mandelbrot & Aizenman, 1979). There are two reasons for choosing the 

Gosper curve as the encoding tool for the hexagonal grid in this study. First, the Gosper curve has good spatial 

aggregation (Auber et al., 2013), and its superiority is reflected in its consideration of the linear sequence distance 

and the planar distance. The Gosper curve can connect adjacent points on a plane to a one‐dimensional linear 

sequence to obtain the reduced dimensional expression of two‐dimensional spatial data. If the linear sequences 

of two objects are close, they are often close in terms of planar position. The linear sequence after dimension re‐

duction may simplify the algorithm and could be used for spatial data operations (e.g., overlaying and smoothing) 

(Abel & Mark, 1990).

Second, for the hexagonal raster data in this study, the Gosper curve has an appropriate structure. As shown 

in Figure 1a–c, if the Gosper curve nodes are used as the generating elements to construct Thiessen polygons, 

then a series of seamless hexagonal units with the same shape and area are obtained. In contrast, as shown in 

Figure 1d,e, each node on the curve can coincide with the center point of a hexagon in a hexagonal grid of any 

size by adjusting the parameters of the Gosper curve. For instance, as Figure 1d shows, for a grid constructed by 

hexagons (with an apothem equal to V), where the center point of one hexagon is selected as the starting node, 

and the step length of the Gosper curve is set to 2V, a corresponding relationship between the curve and the grid 

can be established. That is, a one‐to‐one correspondence between the curve node and the hexagon is established, 

by which the Gosper curve can be used to index the hexagonal unit (Xin et al., 2018).

2.1.2 | Construction of bidirectional correlation

To describe the establishment of the bidirectional correlation between the Gosper curve and the regular hexago‐

nal grid, it is necessary to explain the construction principle of the Gosper curve. The Gosper curve in this study is 

constructed based on the L system (Lindenmayer, 1968), which is essentially a rewriting system. By providing the 

initial state and description rules, the character codes are generated by finite iterations. The target geometry can 

then be constructed by geometrically interpreting the character codes.

The initial character code of the Gosper curve in the L system is “A.” The substitution rule is to replace “A” in 

the character codes with “A−B−−B + A++AA + B−” and “B” with “+A−BB−−B−A++A + B.” As Table 1 shows, the 

character codes can be generated by continuously replacing the above character codes based on the substitution 

rule.  In  geometric  interpretation  of  character  codes,  A  and  B  represent  a  line  segment  drawing  with  one  step 

length, “+” represents 60° of clockwise rotation, and “−“ represents 60° of anticlockwise rotation.

The starting node and initial forward angle are first determined when generating the curve according to the 

character codes. As shown in Figure 2, the forward angle here refers to the angle from the right horizontal direc‐

tion to the forward direction of the curve. The clockwise angle is positive, and the anticlockwise angle is negative. 

The  mathematical  calculation  can  be  performed  to  determine  the  position  of  the  next  node  according  to  the 

XIN et al.    |  5

F I G U R E   2  Forward angle illustration

current node and forward angle. Given the coordinates (X1, Y1) of a node on the Gosper curve, the coordinates 
(X2, Y2) of the next node in the forward direction can be calculated by Equations (1) and (2). In Equations (1) and 
(2), S represents one step length of the curve, and θ is the current forward angle. In this way, we can obtain the 

coordinates of all nodes by calculating the next node through the current node. The result curve can be obtained 

by connecting the nodes in sequence. For instance, Figure 3a is the curve corresponding to character codes “A−

B−−B + A++AA + B” and a starting forward angle of 90°. As shown in Figure 3b, the shape of the curve becomes 

more complex when the character codes are replaced by several iterations.

X2 = X1 + S × cos (𝜃)

Y2 = Y1 − S × sin (𝜃)

(1)

(2)

In addition, the character codes have the characteristics of a reverse derivation. On the one hand, starting 

from the first node, the coordinates of the last node and all the intermediate nodes can be calculated according 

to the character codes. On the other hand, when the coordinates of the last node are known, the coordinates of 

the first node and all the intermediate nodes can be calculated by transformed character codes. The transform 

processing  of  the  character  codes  includes  two  steps:  character  inversion  and  symbol  substitution.  Character 

inversion adjusts the order of the characters in codes so that the characters that were originally ranked in the 

front are arranged in the back. After that, the turning symbols are replaced: the “+” is replaced by “−” and the “−” is 

replaced by “+,” so that the original clockwise (anticlockwise) turning angle is changed to anticlockwise (clockwise). 

In Figure 3a, node 1 is chosen as the starting node. The coordinates of node 2 and all intermediate nodes along the 

way can be calculated according to the character codes “B−−B + A.” When node 2 is chosen as the starting node, 

the character codes are transformed into “A−B++B.” Based on the transformed character codes, the coordinates 

of node 1 and all intermediate points along the way can be calculated. According to the above characteristics of 

the character codes, the coordinates of all nodes can be calculated by choosing any node on the curve as the 

starting node.

To avoid the influence of real‐time coordinate calculation on the performance of the algorithm, the strategy of 

space for time is adopted in this study when indexing a hexagonal grid by the Gosper curve. As the Gosper curve 

has  excellent  adaptive  characteristics  in  the  hexagonal  grid,  a  one‐to‐one  correspondence  between  the  curve 

nodes and the center points of the hexagons can be achieved by adjusting the construction parameters of the 

Gosper curve. We store the calculated coordinates of the Gosper nodes and their corresponding sequence codes 

in a lookup table. The lookup table consists of triple objects (x, y, GosperId), where x and y are coordinate data 

and GosperId is the sequence code. The encode of each hexagonal unit can be determined from this lookup table.

XIN et al.6  |    

F I G U R E   3  Illustration of Gosper curve construction: (a) Gosper curve corresponding to drawing codes  
“A−B−−B + A++AA + B”; and (b) Gosper curve after three iterations

The above encode indexing process can be expressed by the function f(H) = G about the hexagonal grid unit 

H and the Gosper curve node coding G. For any element h (h ∈ H) in the grid, the Gosper coding value g can be 
determined by f(h) = g. In contrast, for each node coding g (g ∈ G) of the Gosper curve, the hexagon unit h corre‐
sponding to the node coding can be obtained using the inverse function f‐1(g) = h. When performing hexagonal 
raster data compression, the function f and its inverse function f‐1 can be applied to the encoding and decoding 

processes, respectively.

2.2 | Encoding method

2.2.1 | Gosper straightforward encoding

Straightforward encoding is usually a direct record of the raster coding without compression, which is a logical 

prototype of coding compression. In Gosper straightforward encoding, the Gosper curve is constructed based on 

the hexagonal grid parameters to complete the filling of the plane space. The target region is covered with the 

Gosper curve, which ensures that the curve nodes coincide with the center points of the hexagonal units in the 

target region (Figure 4a). On this basis, as shown in Figure 4b, by the mapping function f(h) = g, the Gosper code of 

each grid unit in the target region can be determined. The straightforward encoding can be completed by record‐

ing the coding of the target region sequentially. The structure of the straightforward encoding is represented by 

(g1, g2, g3,…, gn), where gn (n = 1, 2, 3, …) represents the coding value of each unit. The straightforward encoding of 
the target region in Figure 4 is recorded in Table 2.

Through the above operation, a one‐dimensional linear expression of the two‐dimensional plane region can 

be completed. There is a substantial amount of data redundancy, because straightforward encoding encodes each 

raster unit. In particular, when pursuing the high‐precision display of data, a higher resolution certainly increases 

the amount of data. Moreover, neighboring units generally have the same attribute values, which causes a large 

amount of data redundancy. With the combination of spatial data and Big Data, it is necessary to study the data 

compression methods to express more information with less data.

XIN et al.    |  7

F I G U R E   4  Gosper straightforward encoding process: (a) constructing the Gosper curve; and (b) encoding the 
target region with a sequence number of curve nodes

TA B L E   2  Gosper straightforward encoding result of the target region

(1616,1620,1621,1622,1623,1624,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,16

40,1641,1646,1647,1652,1653,

…

140,2141,2142,2145,2146,2147)

2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2118,2119,2120,2121,2127,2133,2134,2137,2138,2139,2

In the compression rate calculation of the compression methods proposed in this study, the amount of Gosper 

straightforward encoding is used as a benchmark. Equation (3) is used to calculate the compression rate. Qc rep‐
resents the amount of coding processed by the compression method, and Qd represents the amount of straight‐
forward coding.

C = Qc/

Qd

(3)

2.2.2 | Lossless compression Gosper coding

For  the  target  region  in  Figure  4,  the  coding  set  that  encodes  adjacent  grids  and  has  no  spacing  is  defined  as 

an adjacency sequence. The length of the adjacency sequence is the number of elements in the coding set. An 

adjacency sequence can be formalized as N(g1, g2, g3, …, gn), where gn (n = 1, 2, 3, …) represents the coding in the 
adjacency sequence and satisfies gn + 1 = gn + 1. Each adjacency sequence corresponds to a fragment of the Gosper 
curve that is cut by the target region. The target region in Figure 5 shows that the fragments of the Gosper curve 

are the dominant expression for the adjacency sequences.

There is data redundancy because the adjacency sequence uses continuous coding to record the element informa‐

tion. Therefore, this study chooses run‐length encoding to compress the adjacency sequence through (g, l), in which 

XIN et al.8  |    

F I G U R E   5  Correspondence between the Gosper curve segments and the color band of the adjacency 
sequences

g represents the coding value of the initiating unit of the adjacency sequence and l represents the length of the adja‐

cency sequence. As shown in Table 3, the lossless compression Gosper coding of the target region is achieved by se‐

quentially integrating the run‐length encodings of the adjacency sequences. During data decompression and recovery, 

the coding set in each adjacency sequence can be obtained via starting unit coding and the corresponding run length 
of the run‐length encoding. Combined with the inverse function f‐1, the conversion of the coding set to the hexagon set 

can be achieved, thereby completing the lossless decompression of the data and restoring the target region.

The adjacency sequences are mapped to the color band and length ratio to facilitate the observation of the 

one‐dimensional coding characteristics. As shown in Figure 5, the colored fragments in the color band represent 

the adjacency sequences of the target region, and the white fragments represent the non‐self‐adjacent sequences 

connected to the adjacent sequences. The broken Gosper segments also correspond to the colored fragments. 

However, compared with the Gosper segments, the color band can more intuitively reflect the order and length 

of the adjacency sequence. The existence of many short white fragments blocks the connection of these colored 

fragments and causes a large number of adjacency sequences in the target region. At the same time, there are 

many short colored fragments in the color band. One short adjacency sequence occupies the same coding amount 

as one long adjacency sequence. These factors all affect the encoding efficiency, but also help reduce the amount 

of encoding required.

2.2.3 | Lossy compression Gosper coding

Lossy  compression  is  aimed  at  adjacency  sequences  corresponding  to  the  short  fragments  mentioned  above. 

In this study, these short adjacency sequences are fused nearby to reduce the number of adjacency sequences, 

thereby reducing the coding amount. The above adjacent fusion is achieved by changing the attribution of the 

hexagons corresponding to the adjacency sequence. Because the adjacency relation of the two‐dimensional space 

XIN et al.    |  9

TA B L E   3  Lossless compression Gosper coding for the target region

(1616,1,1620,5,1626,16,1646,2,1652,4,1659,15,1675,1,1677,4,1685,3,1691,1,1693,

18,1713,2,1718,3,1726,34,1763,1,1767,4,1773,3,

…

2082,1,2087,2,2093,4,2100,15,2118,4,2127,1,2133,2,2137,6,2145,3)

of the Gosper curve has a good consideration of the adjacency relation of the one‐dimensional linear sequence, 

adjacent hexagons in the one‐dimensional sequence still maintain adjacency in two‐dimensional space. This prop‐

erty enables the fusion operation to be carried out in the peripheral neighborhood of the element region, which 

ensures the continuity of the elements in the space after fusion and avoids the generation of multi‐component 

polygons.

The  above  fusion  of  the  adjacency  sequence  is  the  root  cause  of  the  accuracy  loss,  and  the  fusion  length 

affects the degree of the accuracy loss. The fusion length threshold is defined as t, which represents the length 

of the adjacency sequence, and any adjacency sequence less than t will be judged to be a short adjacency se‐

quence for the fusion. From the perspective of the target region currently being processed, fusion can be divided 

into two forms according to the effect: absorption fusion and release fusion. The former type of fusion absorbs 

the  non‐self‐adjacency  sequences  and  reintegrates  them,  and  the  latter  type  of  fusion  removes  its  own  short 

adjacency sequences. Additionally, fusion can be divided into intermediate and terminal fusion according to the 

location. Intermediate fusion acts on three adjacency sequences that are close to each other in terms of position; 

the adjacency sequences at both ends belong to the same element, while the intermediate adjacency sequence 

has different attributes. The three adjacency sequences are merged into one by changing the attribution of the 

intermediate adjacency sequence. Terminal fusion acts on two adjacency sequences with different attributes by 

changing the attributes of one of them to merge them into one adjacency sequence.

The combination of the several fusion forms above produces four types of fusion in the target region: inter‐

mediate absorption, intermediate release, terminal absorption, and terminal release fusion. The target region per‐

forms intermediate absorption and terminal release fusion, and the remaining two types of fusion are the effects 

of the other regions on the target region when they carry out intermediate absorption and terminal release fusion. 

During the fusion operation, intermediate fusion is performed on all element regions sequentially until there is no 

short adjacency sequence satisfying the execution condition of the intermediate fusion; then, terminal fusion is 

performed.

With the aid of the simple form of the adjacency sequence color band, we explain the principle of the four 

fusion  types  occurring  in  the  target  region.  First,  intermediate  absorption  fusion  is  performed.  As  shown  in 

Figure 6a, two adjacency sequences in the target region are blocked by a short non‐self‐adjacency sequence that 

cannot  be  connected.  The  non‐self‐adjacency  sequence  is  absorbed,  allowing  the  three  adjacency  sequences 

to become one. The newly formed adjacency sequence continues to participate in the subsequent fusion until 

there is no adjacency sequence that satisfies the intermediate absorption fusion condition in the target region. As 

shown in Figure 6b, the two non‐self‐adjacency sequences blocked by the short adjacency sequence of the target 

region belong to the same element region A. When A performs intermediate absorption fusion to absorb the short 

adjacency sequence, intermediate release fusion occurs in the target region. After completing intermediate fusion 

in  all  element  regions,  the  short  adjacency  sequences  that  still  exist  in  the  element  regions  are  fused  through 

terminal fusion. As shown in Figure 6c, the two adjacency sequences blocked by the short adjacency sequence of 

the target region belong to two different elements (A and B). Under such circumstances, the short adjacency se‐

quence is randomly divided to complete terminal release fusion. When the target region is the receiver of a short 

adjacency sequence during terminal fusion, as shown in Figure 6d, the terminal absorption fusion is complete. 

Overall, the target region achieves the effective elimination of the short adjacency sequences by the two fusion 

processes of absorbing and releasing.

XIN et al.10  |    

F I G U R E   6  Four fusion types expressed by color bands

The difference in the t value has an effect on the number of adjacency sequences in the fusion result. The 

fusion operation of the target region in Figure 5 is carried out under the following threshold limits: t = 1, t = 2, and 

t = 3. Through the corresponding color bands of the adjacency sequences in Figure 7, the colored fragments are 

observed to decrease as the t value increases. The larger t is, the lower the number of adjacency sequences after 

fusion. Figure 8 shows the corresponding fusion results on the plane regions. The solid black regions and regions 

with black borders in Figure 8b–d represent the units with semantic changes. The solid black regions represent 

units that are absorbed by the target region, and the regions with black borders represent units that are eliminated 

by the target region. Lossy compression Gosper coding can be completed by operating run‐length encoding on the 

adjacency sequences of the newly formed regions. Figure 8 also shows that, as t increases, the number of Gosper 

segments corresponding to the adjacency sequences decreases.

The value of t also affects the data accuracy. A larger t value leads to a greater accuracy loss, including geomet‐

ric accuracy loss and semantic accuracy loss. To quantitatively evaluate the compression experimental results and 

to facilitate the comparison between different experiments, some evaluation formulas need to be constructed. 

One goal is to fuse as many adjacency sequences as possible to reduce the data amount. Thereby, we focus on how 

many adjacency sequences are effectively fused and choose the fusion rate in Equation (4) as the evaluating indi‐

cator. In Equation (4), the numerator Lafter represents the total number of adjacency sequences after fusion, and 
the denominator Lbefore represents the total number of adjacency sequences before fusion. The greater the fusion 
rate L is, the more adjacency sequences are fused, and the greater the extent to which the data have been simpli‐

fied by the fusion operation. On the contrary, we also want the accuracy loss caused by the fusion to be as small 

as possible. The area change is the obvious geometric change caused by the fusion process, because the fusion 

process will result in the increase or decrease of the regional scope of the elements. At the same time, because 

of the convenience of area measurement, this study chooses the area change rate in Equation (5) as the measure‐

ment index to evaluate the loss of geometric accuracy. Mbefore and Mafter in Equation (5) represent the areas of the 
element region before and after fusion. The larger the area change rate, the greater the loss of geometric accuracy 

caused by the fusion. The fusion process will also bring about the semantic change of the elements. The semantic 

change here refers to the change of ownership, that is, the units originally belonging to one element belong to 

another element after fusion. This study uses Equation (6) to measure the semantic accuracy loss during the fusion 

process. In the process of fusion, the initial attribution of the units which the region has acquired or lost has all 

changed. Thus, we measure the loss of semantic accuracy by investigating the overall proportion of these parts 

that have changed semantically. In Equation (6), the numerator represents the total number of units with semantic 

changes in the element region, where Hin represents the number of absorbed units, Hout represents the number of 
released units, and the denominator Hsum represents the total number of units in the element region before fusion. 
A large H value in Equation (6) means that the loss of semantic accuracy caused by the fusion is large.

L = 1 − Lafter/

Lbefore

M =

Mbefore − Mafter

Mbefore

/

|
|
|

|
|
|

(4)

(5)

XIN et al.    |  11

F I G U R E   7  Color bands of the adjacency sequences at different thresholds

H =

Hin + Hout)/

(

Hsum

(6)

Note that the process of fusion represents a change in the attribution of hexagonal units. Fusion often leads to 

regional breaks in some element regions because of the existence of narrow neck regions. To avoid this situation, a 

regional break‐detection step is added during the fusion process. As shown in Figure 9, when the region performs 

fusion at different thresholds, it may result in different degrees of disintegration. The principle of regional break 

detection  investigates  whether  the  number  of  polygon  rings  in  the  element  region  changes  after  fusion.  For  a 

simple example, the number of polygon rings before fusion is 1; if the number is greater than 1 after fusion, then 

the region has been broken. In particular, when the number of rings after fusion is 0, this means that the element 

region was swallowed by other elements because its area was too small, which is regarded as a special regional 

break condition. During an intermediate fusion process, for the set of element regions to which the intermediate 

coding sets originally belong, each element region is identified according to whether it was broken after fusion. As 

long as one region is broken, the fusion process needs to be revoked to recover the original attribution of each ad‐

jacency sequence whose attribution has changed. In the process of terminal fusion, the regional break detection is 

similar. This process also contains break detection and recovers the original data for the element regions to which 

the adjacency sequences with semantic changes originally belonged.

3 |  E X PE R I M E NT S A N D A N A LYS I S

To verify the above method, this section selects hexagonal raster data at multiple resolutions for the experiments. 
The apothems of the raster units are 100, 50 ×
2 (m) at the different resolutions. The smaller the 

2, 50, and 50∕

√

√

apothem is, the higher the resolution and the more hexagons are needed to construct the same element, which 

leads to a growth in the amount of data. Each resolution is numbered sequentially from low to high.

3.1 | Lossless compression

To facilitate the comparative analysis, row encoding is introduced here. Then, the same data are compressed in 

two different forms. Row encoding is often used in traditional run‐length encoding and its principle is very sim‐

ple. As shown in Figure 10, every hexagon in the vertical direction is encoded in order from bottom to top. The 

XIN et al.12  |    

F I G U R E   8  Fusion results on plane regions. The solid black regions represent the absorbed parts, and the 
regions with black borders represent the released parts: (a) t = 0; (b) t = 1; (c) t = 2; and (d) t = 3

F I G U R E   9  Degrees of disintegration by threshold

XIN et al.    |  13

straightforward  encoding  of  the  row  coding  is  the  coding  set  of  all  hexagonal  units  in  the  element  region.  For 

instance, the straightforward encoding of the target region in Figure 10 is recorded in Table 4. The definition of 

the adjacency sequence of row encoding is consistent with that of Gosper encoding. During lossless compression, 

the adjacency sequences in the element region are also simplified by run‐length encoding. The result obtained by 

the lossless compression of the target region in Figure 10 is recorded in Table 5.

As  shown  in  Figure  11,  this  experiment  was  carried  out  on  administrative  data  belonging  to  a  categorical 

raster with 57 element regions. The numbers of hexagonal units occupied at the different resolutions are 11,767, 

23,513, 47,037, and 94,072. The amount of coding needed for straightforward encoding is taken as the reference 

and is divided by the amount of coding needed for lossless compression to obtain the compression rate. First, the 

experimental results are analyzed from the perspective of the overall compression rate. As shown in Table 6, as 

the resolution increases, the compression rate decreases for both methods. At the highest resolution, the com‐

pression rate reaches a minimum.

F I G U R E   1 0  Row encoding illustration of target region

TA B L E   4  Row straightforward encoding results of the target region

(21,24,33,34,35,36,37,43,46,47,48,49,50,55,56,58,59,60,61,62,69,70,71,72,

73,74,75,80,

…

160,173)

112,113,114,115,121,122,123,127,128,133,134,135,136,147,148,149,159,

XIN et al.14  |    

TA B L E   5  Lossless compression results of row coding of the target region

(21,1,24,1,33,5,43,1,46,5,55,2,58,5,69,7,80,10,94,10,106,4,112,4,121,3,127,2,133,

4,147,3,159,2,173,1)

F I G U R E   1 1  Multi‐resolution hexagonal grid of administrative area data

The compression rate of the individual element regions under different resolutions is also analyzed. The ele‐

ment area is selected to observe the change in the compression rate. As shown in Figure 12, the horizontal axis 

represents the elements arranged in ascending order by area from left to right, and the vertical axis represents 

the compression rate. The stacking order of the line diagrams also reflects the change in the compression rate 

between the resolutions discussed above. In addition, with the growth of the element area, the compression rate 

presents a decreasing trend. This pattern exists in the four resolution experiments of the two encoding methods.

There are many abnormal peak and valley points in Figure 12. Some abnormal points are consistent at each 

resolution,  indicating  that  they  are  universal.  For  the  row  encoding  method,  as  shown  in  the  fifth  element  in 

Figure 12a, the compression rate is extremely large compared to that of the surrounding elements with similar 

areas. When observing the corresponding region in Figure 13b, compared to the adjacent elements 4 (Figure 13a) 

and 6 (Figure 13c), the lateral extent of the geometry is large, which leads to a large number of adjacency se‐

quences generated by vertical scanning with the row encoding method. As a result, the amount of coding after 

compression is large, and this is the numerator of the compression rate calculation formula. However, the small 

area results in a small number of hexagonal units (i.e., the amount of straightforward coding), which is the de‐

nominator of the compression rate calculation formula. These two factors lead to a higher compression rate. In 

contrast, for the 21st element in Figure 12a (Figure 13f), the overall vertical direction of its shape can effectively 

reduce the number of adjacency sequences in the row encoding, thus resulting in a lower compression rate.

For Gosper encoding, the rounded geometry of the sixth element in Figure 12b (Figure 13c) can better con‐

form to the Gosper curve trend than elements 5 (Figure 13b) and 7 (Figure 13d) adjacent to the area, which allows 

fewer  adjacency  sequences  to  be  used  to  express  the  element  region,  thereby  attaining  a  lower  compression 

rate. The narrow geometries of the other two elements cut the Gosper curve too much and increase the number 

of adjacency sequences, thus negatively impacting the compression rate. Another example is the 19th element 

(Figure  13e):  compared  to  the  previous  element  5,  whose  geometry  is  narrow  in  the  vertical  direction,  and  el‐

ement 7, whose geometry is narrow in the horizontal direction, the geometry of element 19 is narrow in both 

directions. This result undoubtedly has an adverse effect on the compression rate in the elements close to the 

XIN et al.    |  15

TA B L E   6  Lossless compression experimental results of Gosper coding in hexagonal grids

Resolution

Row encoding compression rate (%)

Gosper encoding compression rate (%)

1

2

3

4

22.45

16.13

11.86

8.67

21.89

15.8

11.52

8.59

F I G U R E   1 2  Line charts of the element compression rates: (a) row encoding; and (b) Gosper encoding

area. In addition, the advantage of the compression rate brought by the area is offset, and a large peak occurs in 

the line diagram.

Overall, only when the geometry of the element is simple and consistent with the encoding direction is the 

compression  rate  small.  However,  the  above  conditions  are  too  harsh  for  geographical  elements  of  different 

shapes.  Often,  the  shapes  of  geographical  elements  are  distorted  and  complex.  Under  normal  circumstances, 

these geometries may lead to a large number of shattered adjacency sequences and thus increase the amount of 

coding in both methods.

To further explore the experimental data, an analysis is performed on the number of adjacency sequences at 

each length in the two encoding methods. In Figure 14, the horizontal axis represents the length of the adjacency 

sequence, and the vertical axis represents the number of adjacency sequences. The Gosper encoding method has 

an obvious quantitative advantage over the two length extremes at all resolutions. It has many long adjacency 

sequences that can connect a large number of adjacency codings with a high encoding efficiency. In contrast, a 

large number of short adjacency sequences provides rich material for fusion in this study. These short adjacency 

sequences can effectively be eliminated through the fusion method described above, which can further improve 

the encoding efficiency and reduce the compression rate. However, in row encoding, the length distribution of 

the adjacency sequences is more aggregated. There is a lack of long adjacency sequences with high encoding ef‐

ficiency. At the same time, the number of short adjacency sequences is relatively small, which means that the row 

encoding method does not have good operating conditions for adjacency sequence fusion.

XIN et al.16  |    

F I G U R E   1 3  Element regions selected from the experimental data

The proportion of each length adjacency sequence in the Gosper encoding can be understood more clearly 

through the pie charts in Figure 15. There are a large number of short adjacency sequences at every resolution. 

For instance, the adjacency sequences with lengths from 1 to 3 occupy the largest proportion. However, upon 

using Table 7 to count the grid units described by these short adjacency sequences, they account for only a small 

proportion of the total units. While there are a large number of short adjacency sequences in the data, these short 

adjacency sequences only partially describe the details, which negatively impacts the encoding efficiency. This 

provides powerful motivation for lossy compression.

3.2 | Lossy compression

3.2.1 | Lossy compression experiments

The following Gosper lossy compression experiment is carried out. Three fusion thresholds of t = 1, t = 2, and t = 3 

are set to fuse the adjacency sequences at four resolutions. First, the data are used to carry out a group of con‐

trol experiments. One group does not contain regional break‐detection operations in the fusion process, and the 

other group carries out regional break‐detection operations. Figure 16 shows a comparison of some regions under 

different resolutions and fusion thresholds. Group a shows many regional break cases, while the corresponding 

regions in group b have avoided such cases because of the regional break‐detection operations. The regional break 

detection in this experiment could help ensure the integrity of the region.

XIN et al.    |  17

F I G U R E   1 4  Scatterplot diagrams of the adjacency sequences (blue, row encoding; red, Gosper encoding)

Next, the results of the fusion with regional break detection are analyzed. Table 8 shows the experimental 

results  for  different  resolutions  and  fusion  thresholds.  At  various  resolutions,  as  the  accuracy  requirement  is 

continuously reduced (i.e., a larger t value is selected), the fusion rate is increased. However, as the resolution in‐

creases, the fusion rate has a general downward trend. Because many longer adjacency sequences appear at high 

resolution, the proportion of adjacency sequences for the above thresholds decreases. The fusion rate is closely 

related to the compression rate. A larger fusion rate indicates that the amount of data is effectively reduced and 

that the compression rate is smaller. As the resolution increases, the data compression rate decreases, and a better 

compression effect can be achieved by using high‐precision data. The experiment shows that increases in both the 

resolution and the fusion threshold can have positive effects on reducing the compression rate. The lossy com‐

pression can even complete the fusion of most adjacency sequences, and only a few main adjacency sequences 

are used to represent the elements.

Table  8  also  records  the  total  accuracy  loss  caused  by  different  t  values  at  different  resolutions.  The  area 

change rate and the semantic loss rate are obtained by calculating the average value of all elements. In the data 

fusion process with the same resolution, the area change rate and the semantic loss rate increase as t increases. 

However, the increase in the resolution makes the precision loss value continuously decrease. Taking the result of 

t = 1 as an example, the area change rate decreases from 1.22% at resolution 1 to 0.4% at resolution 4, and the se‐

mantic loss rate decreases from 6.05% at resolution 1 to 2.12% at resolution 4. A comprehensive analysis revealed 

XIN et al.18  |    

F I G U R E   1 5  Pie charts of the lengths of the adjacency sequences at different resolutions

TA B L E   7  The number and rate of units corresponding to the short adjacency sequences (length from 1 to 3)

Resolution

1

2

3

4

No.

1,282

1,952

2,671

3,831

Ratio (%)

10.89

8.3

5.68

4.07

that lossy compression can result in a high fusion rate through low accuracy loss. Especially at high resolutions, 

the cost of achieving an approximate level fusion rate is low.

3.2.2 | Lossy compression contrast experiment

To further reflect the advantages of Gosper encoding in compressing hexagonal raster data, we analyzed lossy 

compression experiments of hexagonal raster data in row encoding. For fairness of comparison, the hexagonal 

raster data with row encoding is processed in the same way as the Gosper encoding data, including the compres‐

sion theory and the statistical method. In compression theory, the fusion of adjacency sequences is also used. The 

four types of fusion introduced in Section 2.2.3 (intermediate absorption, intermediate release, terminal absorp‐

tion, and terminal release fusion) are used to complete the fusion under the constraints of  different  threshold 

values to achieve data reduction. As shown in Figure 17, the fusion results of the element region in Figure 10 

are obtained under different fusion thresholds. Although row encoding is different from Gosper encoding in its 

XIN et al.    |  19

F I G U R E   1 6  Contrast in the effects of the break detection. Group a performs break detection and group 
b does not perform break detection [a1 and b1, resolution 1 (t = 1); a2 and b2, resolution 1 (t = 2); a3 and 
b3, resolution 1 (t = 3); a4 and b4, resolution 2 (t = 1); a5 and b5, resolution 2 (t = 2); a6 and b6, resolution 2 
(t = 3); a7 and b7, resolution 3 (t = 1); a8 and b8, resolution 3 (t = 2); a9 and b9, resolution 3 (t = 3); a10 and b10, 
resolution 4 (t = 1); a11 and b11, resolution 4 (t = 2); a12 and b12, resolution 4 (t = 3)]

encoding rules, the fusion method is essentially the same. In addition, to avoid the regional break, break‐detection 

and ‐restoration operations are added to the fusion process.

The lossy compression results of the hexagonal grid in row encoding are shown in Table 9. Compared with the 

fusion rate of most Gosper encoding data (over 55%), the fusion rate of the row encoding data in lossy compres‐

sion is very low, generally below 15%. The vertical direction of the row encoding makes the corresponding arcs 

of the adjacency sequences in the element region appear as straight lines, as shown in Figure 17. Although the 

arcs are close in spatial position, the coding distance between the adjacency sequences is very great. Therefore, 

it is difficult to connect adjacent arcs through a middle arc, which is easy to implement using Gosper encoding. 

In the element region using Gosper encoding, the arcs are not only close in spatial position but also close in the 

coding  distance  of  the  corresponding  adjacency  sequences.  The  arcs  can  be  connected  easily  by  middle  arcs, 

effectively reducing the number of arcs and achieving a higher fusion rate. In terms of compression rate, the re‐

sult of the Gosper encoding data is mostly below 10%, while the result of the row encoding data is almost twice 

that. Moreover, with the increase in resolution, the decline ratio of the compression rate of row encoding is much 

smaller than that of Gosper encoding. That is, the improvement in the resolution is more effective in reducing the 

compression rate of Gosper encoding data.

XIN et al.20  |    

 
s
s
o

l
 
c
i
t
n
a
m
e
S

 

e
g
n
a
h
c
 
a
e
r
A

 

n
o
i
s
s
e
r
p
m
o
C

-
e
s
 
y
c
n
e
c
a
j

d
a
 
f
o

 
.

o
N

 
s
e
c
n
e
u
q
e
s
 
y
c
n
e
c
a
j

d
a
 
f
o

 
.

o
N

)

%

(
 
e
t
a
r

)

%

(
 
e
t
a
r

)

%

(
 
e
t
a
r

)

%

(
 
e
t
a
r
 
n
o
i
s
u
F

n
o
i
s
u
f
 
r
e
t
f
a
 
s
e
c
n
e
u
q

d

l

o
h
s
e
r
h
t
 
n
o
i
s
u
F

n
o
i
s
u
f
 
e
r
o
f
e
b

n
o
i
t
u
o
s
e
R

l

s
d
i
r
g

 
l

a
n
o
g
a
x
e
h
n

 

i
 

i

g
n
d
o
c
 
r
e
p
s
o
G

 
f
o
 
s
t
l
u
s
e
r
 
l

a
t
n
e
m

 

i
r
e
p
x
e
n
o
i
s
s
e
r
p
m
o
c
 
y
s
s
o
L
 
8

 

E
L
B
A
T

5
0
6

.

2
2
1
1

.

6
8
5
1

.

4
2
4

.

4
3

.

8

.

4
1
1
1

9
1
3

.

8
8
5

.

6
0
8

.

2
1
2

.

7
2
4

.

4
8
5

.

2
2
1

.

8
0
3

.

6
8
4

.

4
1
1

.

6
1
2

.

5
0
3

.

6
5
0

.

2
2
1

.

4
9
1

.

.

4
0

6
1
1

.

3
1
2

.

7
8

.

8

2
2
7

.

2
8
9

.

7
6
6

.

5
5
5

.

9
8
6

.

7
8
4

.

7
0
4

.

2
1
5

.

9
5
3

.

4
9
2

.

.

8
7
2
1

4
6
2
4

.

.

8
1
0
6

8
5
7
6

.

.

6
5
0
4

5
6
9
5

.

4
4
6
6

.

.

5
4
2
4

3
3
9
5

.

6
6

4
6
0
4

.

2
3

.

8
5

9
8
5
6

.

2
5
7

2
2
5

5
2
4

5
5
1
1

,

4
8
7

2
5
6

0
2
6
1

,

5
4
1
1

,

7
5
9

7
0
4
2

,

0
9
6
1

,

3
8
3
1

,

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

1
1
3
1

,

3
4
9
1

,

5
1
8
2

,

5
5
0
4

,

1

2

3

4

XIN et al.    |  21

F I G U R E   1 7  Fusion results of target region. The solid black regions represent the absorbed parts, and the 
regions with black borders represent the released parts: (a) t = 0; (b) t = 1; (c) t = 2; and (d) t = 3

In addition, a similar row encoding lossy compression experiment is carried out on quadrilateral raster data for 

comparison. As shown in Figure 18, quadrilateral rasterization is accomplished using the same experimental data 

at four resolutions. The area of the quadrilateral grid unit is the same as that of the hexagonal grid unit at each 

resolution. Assuming that the apothem of a regular hexagon is h, the apothem of a regular quadrilateral of the 

same area is √

. Thus, the apothems of a regular quadrilateral at the four resolutions are 50�2

3
3, 50�√

√

3h

2
√
2

, 25�2
11,760,  23,508,  47,023,  and  94,053.  As  shown  in  Table  10,  the  quadrilateral  row  encoding  lossy  compression 

3(m). The numbers of regular quadrilateral units occupied at the different resolutions are 

3, and 25�√

√

results are generally similar to the hexagonal row encoding lossy compression results in terms of the fusion rate 

and compression rate. Relatively speaking, Gosper encoding still has a great advantage in the compression rate.

Under the four resolutions, the fusion rate and compression rate of each element region of the three encoding 

methods are made into line charts, as shown in Figures 19 and 20. In terms of the fusion rate described in Figure 19, 

XIN et al.22  |    

 

e
t
a
r
 
n
o
i
s
s
e
r
p
m
o
C

 
s
e
c
n
e
u
q
e
s
 
y
c
n
e
c
a
j

d
a
 
f
o

 
.

o
N

 

e
r
o
f
e
b
 
s
e
c
n
e
u
q
e
s
 
y
c
n
e
c
a
j

d
a
 
f
o

 
.

o
N

)

%

(
 
e
t
a
r
 
n
o
i
s
u
F

n
o
i
s
u
f
 
r
e
t
f
a

d

l

o
h
s
e
r
h
t
 
n
o
i
s
u
F

n
o
i
t
u
o
s
e
R

l

s
d
i
r
g

 
l

a
n
o
g
a
x
e
h
n

 

i
 

i

g
n
d
o
c
 
w
o
r
 
f
o
 
s
t
l
u
s
e
r
 
l

a
t
n
e
m

 

i
r
e
p
x
e
n
o
i
s
s
e
r
p
m
o
c
 
y
s
s
o
L
 
9

 

E
L
B
A
T

6
3
0
2

.

4
2
9
1

.

3
2

.

8
1

2
9
4
1

.

3
2
4
1

.

7
7
3
1

.

9
8
0
1

.

5
4
0
1

.

.

7
1
0
1

)

%

(

2
0
8

.

1
6
7

.

4
7

.

1
3
9

.

.

3
4
1

.

7
7
8
1

3
4
7

.

.

7
1
1

5
5
4
1

.

3
1
8

.

2
8
1
1

.

6
2
4
1

.

2
4
7

.

3
2

.

2
1

3
6
4
1

.

8
9
1
1

,

2
3
1
1

,

3
7
0
1

,

5
5
7
1

,

4
7
6
1

,

0
2
6
1

,

3
6
5
2

,

0
6
4
2

,

2
9
3
2

,

6
7
7
3

,

0
8
5
3

,

2
8
4
3

,

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

n
o
i
s
u
f

1
2
3
1

,

6
9
8
1

,

0
9
7
2

,

9
7
0
4

,

1

2

3

4

XIN et al.    |  23

F I G U R E   1 8  Multi‐resolution quadrilateral grid of administrative area data

there are many elements with a fusion rate of 0 in both row encoding methods under the four resolutions. That is, 

no fusion occurs in the corresponding regions under a particular fusion threshold. In the above case, lossy com‐

pression has no effect on these regions. However, the regions of the Gosper encoding maintain a relatively high 

fusion rate under each resolution and fusion threshold. Basically, in each region, the Gosper encoding fusion rate 

is higher than the row encoding fusion rate. Only a small number of regions have higher row encoding fusion rate 

than Gosper encoding fusion rate of other regions (e.g., elements 13 and 54 in a1). This phenomenon only exists 

in experiments with low resolution and fusion threshold. With the increase of resolution and fusion threshold, the 

above phenomena gradually decrease and disappear. As shown in Figure 20, in terms of the compression rate, the 

line charts of the three methods have certain similarities in the trend. In particular, the line charts of the two row 

encoding methods have a high coincidence for various resolutions and fusion thresholds. That is, the compression 

rates of the two row encoding methods are similar in many regions. Although the line charts of Gosper encoding 

have  very  few  intersections  with  those  of  the  other  two  methods  at  low  resolution,  the  line  charts  of  Gosper 

encoding maintain a clear distance from them in most cases. In the compression rate of most regions, the Gosper 

encoding method maintains obvious advantages.

4 |  CO N C LU S I O N S

In the GIS data model, field representation is an important model for describing continuous spatial phenomena. 

To meet field model requirements, different spatial tessellation methods can be used, including regular grid and ir‐

regular tessellation. No matter what tessellation is used, efficient data organization and encoding is an interesting 

question, because field data organization usually has the large volume problem.

In this study, a new type of encoding for hexagonal raster data and a compression method are proposed. The 

Gosper curve helps determine the encoding sequence and compresses data using its good aggregation ability to 

reduce the amount of encoding necessary. Experiments show that this method can achieve good compression 

results, especially for lossy compression, which can simplify a significant portion of the data. This type of compres‐

sion method is suitable for the compression of high‐resolution data. The compression rate can be reduced further 

by increasing the fusion threshold during lossy compression. The advantage of Gosper encoding is further demon‐

strated  by  comparison  with  row  encoding  in  regular  hexagonal  grids  and  regular  quadrilateral  grids.  However, 

there are also problems in this study that need to be addressed. For instance, a method of selecting an appropriate 

XIN et al.24  |    

 

e
t
a
r
 
n
o
i
s
s
e
r
p
m
o
C

 
s
e
c
n
e
u
q
e
s
 
y
c
n
e
c
a
j

d
a
 
f
o

 
.

o
N

 

e
r
o
f
e
b
 
s
e
c
n
e
u
q
e
s
 
y
c
n
e
c
a
j

d
a
 
f
o

 
.

o
N

)

%

(

)

%

(
 
e
t
a
r
 
n
o
i
s
u
F

n
o
i
s
u
f
 
r
e
t
f
a

d

l

o
h
s
e
r
h
t
 
n
o
i
s
u
F

n
o
i
t
u
o
s
e
R

l

s
d
i
r
g

 
l

a
r
e
t
a

l
i
r
d
a
u
q
n

 

i
 

i

g
n
d
o
c
 
w
o
r
 
f
o
 
s
t
l
u
s
e
r
 
l

a
t
n
e
m

 

i
r
e
p
x
e
n
o
i
s
s
e
r
p
m
o
c
 
y
s
s
o
L
 
0
1

 

E
L
B
A
T

3
1
9
1

.

3
2

.

8
1

.

5
7
1

4
1

.

2
4
3
1

.

9
9
2
1

7
2

.

0
1

6
7
9

.

2
5
9

.

7
5
7

.

9
1
7

.

7

3
3
7

.

9
6
1
1

.

3
2
5
1

.

4
0
8

.

4
8
1
1

.

9
6
4
1

.

9
3
7

.

9
9
1
1

.

.

4
1
4
1

6
9
5

.

9
6
0
1

.

.

8
9
2
1

5
2
1
1

,

2
7
0
1

,

9
2
0
1

,

6
4
6
1

,

8
7
5
1

,

7
2
5
1

,

6
1
4
2

,

6
9
2

,

2

0
4
2

,

2

2
6
5
3

,

3
8
3
3

,

6
9
2

,

3

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

 

1
=
 
t

 

2
=
 
t

 

3
=
 
t

n
o
i
s
u
f

4
1
2
1

,

0
9
7
1

,

9
0
6
2

,

8
8
7
3

,

1

2

3

4

XIN et al.    |  25

F I G U R E   1 9  Fusion rate line charts of three encoding methods [a1, resolution 1 ( t = 1); a2, resolution 1 (t = 2); 
a3, resolution 1 (t = 3); b1, resolution 2 (t = 1); b2, resolution 2 (t = 2); b3, resolution 2 (t = 3); c1, resolution 3 
(t = 1); c2, resolution 3 (t = 2); c3, resolution 3 (t = 3); d1, resolution 4 (t = 1); d2, resolution 4 (t = 2); d3, resolution 
4 (t = 3)]

XIN et al.26  |    

F I G U R E   2 0  Compression rate line charts of three encoding methods [a1, resolution 1 (t = 1); a2, resolution 1 (t = 2); 
a3, resolution 1 (t = 3); b1, resolution 2 (t = 1); b2, resolution 2 (t = 2); b3, resolution 2 (t = 3); c1, resolution 3 (t = 1);  
c2, resolution 3 (t = 2); c3, resolution 3 (t = 3); d1, resolution 4 (t = 1); d2, resolution 4 (t = 2); d3, resolution 4 (t = 3)]

XIN et al.threshold for data fusion in lossy compression must be determined. This problem is related to data resolution, 

element geometry, and compression quality requirements. In the future, we will conduct more in‐depth research 

on hexagonal raster data and focus on solving these problems.

    |  27

The source code and example data of this research are available at https ://github.com/BoAi‐GIS/Encod ing‐and‐

We are grateful to the editor and anonymous reviewers for their constructive feedback, which provided inspira‐

S U P P O R T I N G  I N FO R M AT I O N

compr essing‐hexag onal‐raster‐data.

AC K N OW L E D G M E N T S

tion for our research.

O R C I D

R E F E R E N C E S

Tinghua Ai 

 https://orcid.org/0000‐0002‐6581‐9872 

Abel,  D.  J.,  &  Mark,  D.  M.  (1990).  A  comparative  analysis  of  some  two‐dimensional  orderings.  International  Journal  of 

Geographical Information Systems, 4(1), 21–31.

Ai, T., Zhang, X., Zhou, Q., & Yang, M. (2015). A vector field model to handle the displacement of multiple conflicts in 

building generalization. International Journal of Geographical Information Science, 29(8), 1310–1331.

Auber, D., Huet, C., Lambert, A., Renoust, B., Sallaberry, A., & Saulnier, A. (2013). GosperMap: Using a Gosper curve for 

laying out hierarchical data. IEEE Transactions on Visualization & Computer Graphics, 19(11), 1820–1832.

Battersby, S. E., Strebe, D., & Finn, M. P. (2017). Shapes on a plane: Evaluating the impact of projection distortion on 

spatial binning. Cartography & Geographic Information Science, 44(5), 410–421.

Birch,  C.  P.  D.  (2006).  Diagonal  and  orthogonal  neighbours  in  grid‐based  simulations:  Buffon's  stick  after  200  years. 

Ecological Modelling, 192(3&4), 637–644.

Birch, C. P. D., Oom, S. P., & Beecham, J. A. (2007). Rectangular and hexagonal grids used for observation, experiment and 

simulation in ecology. Ecological Modelling, 206(3&4), 347–359.

Carr, D. B. (1990). Looking at large data sets using binned data plots. Richland, WA: Pacific Northwest Laboratory.
Carr, D. B., Littlefield, R. J., Nicholson, W. L., & Littlefield, J. S. (1987). Scatterplot matrix techniques for large N. Journal of 

the American Statistical Association, 82(398), 424–436.

Carr, D. B., Olsen, A. R., & White, D. (1992). Hexagon mosaic maps for display of univariate and bivariate geographical 

data. Cartography & Geographic Information Systems, 19(4), 228–236.

Coppola, D. M., Purves, H. R., McCoy, A. N., & Purves, D. (1998). The distribution of oriented contours in the real world. 

Proceedings of the National Academy of Sciences of the USA, 95(7), 4002–4006.

de Sousa, L. M., & Leitão, J. P. (2018). HexASCII: A file format for cartographical hexagonal rasters. Transactions in GIS, 

22(1), 217–232.

Dharmawan,  R.  D.,  &  Farda,  N.  M.  (2017).  Geovisualization  using  hexagonal  tessellation  for  spatiotemporal  earth‐
quake  data  analysis  in  Indonesia.  In  A.  Mohamed,  M.  W.  Berry,  &  B.  W.  Yap  (Eds.),  Soft computing in data science: 
Third  International  Conference,  SCDS  2017  Yogyakarta,  Indonesia,  November  27–28,  2017,  Proceedings  (pp.  177–187). 
Singapore: Springer.

Dunnigan, J. F. (1997). The complete war games handbook (Unpublished manuscript).
Her,  I.  (1993).  A  symmetrical  coordinate  frame  on  the  hexagonal  grid  for  computer  graphics  and  vision.  Journal  of 

Mechanical Design, 115(3), 447–449.

Her, I. (1995). Geometric transformations on the hexagonal grid. IEEE Transactions on Image Processing, 4(9), 1213–1222.
Heywood, I., Cornelius, S., & Carver, S. (2010). An introduction to geographical information systems. Mumbai, India: Pearson 

Education India.

XIN et al.28  |    

Hofmann, P., & Tiede, D. (2014). Image segmentation based on hexagonal sampling grids. Southeastern European Journal 

Kreft, J. U., Booth, G., & Wimpenny, J. W. T. (1998). BacSim, a simulator for individual‐based modelling of bacterial colony 

Lindenmayer,  A.  (1968).  Mathematical  models  for  cellular  interactions  in  development.  Journal  of  Theoretical  Biology, 

of Earth Observation & Geomatics, 3, 173–177.

growth. Microbiology, 144(12), 3275–3287.

18(3), 280–299.

Mandelbrot, B. B., & Aizenman, M. (1979). Fractals: Form, chance, and dimension. Physics Today, 32(5), 65–66.
Middleton, L., & Sivaswamy, J. (2006). Hexagonal image processing: A practical approach. Berlin, Germany: Springer.
Pajarola,  R.,  &  Widmayer,  P.  (2000).  An  image  compression  method  for  spatial  search.  IEEE  Transactions  on  Image 

Processing, 9(3), 357–365.

Pinto, A., Seco, D., & Gutiérrez, G. (2017). Improved queryable representations of rasters. In Proceedings of the 2017 Data 

Compression Conference (pp. 320–329). Snowbird, UT: IEEE.

Polisciuc, E., Maçãs, C., Assunção, F., & Macado, P. (2016). Hexagonal gridded maps and information layers: A novel ap‐
proach for the exploration and analysis of retail data. In Proceedings of the 2016 ACM SIGGRAPH Asia Symposium on 
Visualization. Keio, Japan: ACM.

Roth, R. E., Ross, K. S., & MacEachren, A. M. (2015). User‐centered design for interactive maps: A case study in crime 

analysis. ISPRS International Journal of Geo‐Information, 4(1), 262–301.

Sahr, K., White, D., & Kimerling, A. J. (2003). Geodesic discrete global grid systems. Cartography & Geographic Information 

Science, 30(2), 121–134.

Scott, D. W. (1998). A note on choice of bivariate histogram bin shape. Journal of Official Statistics, 4(1), 47–51.
Shelton, T., Poorthuis, A., Graham, M., & Zook, M. (2014). Mapping the data shadows of Hurricane Sandy: Uncovering the 

sociospatial dimensions of ‘big data’. Geoforum, 52, 167–179.

Tobler, W. R. (1970). A computer movie simulating urban growth in the Detroit region. Economic Geography, 46(Suppl. 1), 

234–240.

Xin, R., Ai, T., & Ai, B. (2018). Metaphor representation and analysis of non‐spatial data in map like visualizations. ISPRS 

International Journal of Geo‐Information, 7(6), 225–245.

Yang, M., Ai, T., Yan, X., Chen, Y., & Zhang, X. (2018). A map‐algebra‐based method for automatic change detection and 

spatial data updating across multiple scales. Transactions in GIS, 22(2), 435–454.

How to cite this article: Xin R, Ai T, Ai B. Encoding and compressing hexagonal raster data by the Gosper 

curve. Transactions in GIS. 2019;00:1–28. https ://doi.org/10.1111/tgis.12569 

XIN et al.