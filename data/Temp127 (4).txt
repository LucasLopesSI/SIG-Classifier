This article was downloaded by: [University of Guelph]
On: 03 June 2012, At: 16:35
Publisher: Taylor & Francis
Informa Ltd Registered in England and Wales Registered Number:
1072954 Registered office: Mortimer House, 37-41 Mortimer Street,
London W1T 3JH, UK

International Journal of
Geographical Information
Science
Publication details, including instructions for
authors and subscription information:
http://www.tandfonline.com/loi/tgis20

A direction dependent least-
cost-path algorithm for
roads and canals
Walter Collischonn & Jorge Victor Pilar

Available online: 06 Aug 2010

To cite this article: Walter Collischonn & Jorge Victor Pilar (2000): A direction
dependent least-cost-path algorithm for roads and canals, International Journal
of Geographical Information Science, 14:4, 397-406

To link to this article:  http://dx.doi.org/10.1080/13658810050024304

PLEASE SCROLL DOWN FOR ARTICLE

Full terms and conditions of use: http://www.tandfonline.com/page/
terms-and-conditions

This article may be used for research, teaching, and private study
purposes. Any substantial or systematic reproduction, redistribution,
reselling, loan, sub-licensing, systematic supply, or distribution in any
form to anyone is expressly forbidden.

The publisher does not give any warranty express or implied or make
any representation that the contents will be complete or accurate or
up to date. The accuracy of any instructions, formulae, and drug doses
should be independently verified with primary sources. The publisher
shall not be liable for any loss, actions, claims, proceedings, demand, or

costs or damages whatsoever or howsoever caused arising directly or
indirectly in connection with or arising out of the use of this material.

Downloaded by [University of Guelph] at 16:35 03 June 2012 int. j. geographical information science, 2000, vol. 14, no. 4, 397± 406

Research Article

A direction dependent least-cost-path algorithm for roads and canals

WALTER COLLISCHONN1 and JORGE VICTOR PILAR2
1Instituto de Pesquisas Hidra´ulicas, Universidade Federal do Rio Grande do
Sul, Porto Alegre RS, Brasil; e-mail: cllschnn@vortex.ufrgs.br
2Escola de Egenharia, Universidade Nacional del Nordeste, Resisteˆncia,
Argentina; e-mail: ivpilar@if.ufrgs.br

(Received 18 April 1999; accepted 14 October 1999)

Abstract.
In planning routes for roads and canals, topography is often a signi(cid:142) c-
ant constraint. Among the in(cid:142) nite number of possible trajectories between two
points, the selected path should be a good approximation to the one with the
least cost, and should avoid extremes of slopes. In the case of a canal, the number
of uphill reaches of the trajectory should be minimised. This paper presents a
least-cost-path algorithm developed to (cid:142) nd the best path given the topography,
the start and end-points of the linear feature (canal or road) and a function
relating slope, distance and cost. The algorithm is based on dynamic programming
techniques adapted to solve problems on the grid, or raster structure usually used
in Geographical Information Systems. The algorithm was programmed and used
to solve hypothetical problems. Although real cost functions were not used, the
results were coherent and showed the algorithm’s capabilities.

1.

Introduction
The computation of

least-cost-path s is a useful application of geographical
information systems (GIS). There are two aspects to (cid:142) nding a minimum path over
a surface partitioned into regions of diŒerent resistances to movement:

1. Creation of an accumulated-cost-surface from a cost-of -passage surface (where

the resistance, or friction values are stored);

2. Tracing a slope line down the accumulated-cost-surface from a departure point

to a destination (Douglas 1994).

In a GIS environment the cost-of -passage surface is a grid where the values
associated with the cells are used as weights to calculate the least-cost-paths . These
weights represent the resistance, friction or di(cid:141) culty in crossing the cell, and may
be expressed in terms of cost, time, distance or risk.

Integration of a cost-of -passage surface to obtain an accumulated-cost surface
requires a spreading function that begins at the previously-de(cid:142) ned end-point of the
path. When the procedure is initiated only the cell containing the end-point has a
de(cid:142) ned value of accumulated cost, and the spreading algorithm searches the eight

Internationa l Journal of Geographica l Information Science
ISSN 1365-881 6 print/ISSN 1362-308 7 online © 2000 Taylor & Francis Ltd
http://www.tandf.co.uk/journals

Downloaded by [University of Guelph] at 16:35 03 June 2012 398

W. Collischonn and J. V. Pilar

neighbouring cells, stopping on the (cid:142) rst that has no previously assigned accumulated
cost value. From this cell, the algorithm begins another search of its eight neighbours
to (cid:142) nd those with de(cid:142) ned values of accumulated cost. For each of them the cost-of-
passage of the cell is added, and the smallest is recorded as the accumulated cost of
the cell. This procedure is repeated until every cell has been assigned a cumulative
cost value (Douglas 1994).

Once a cumulative cost surface is established a new surface can be created,
assigning to each cell a number that indicates the least-cost direction to the end-
point, following slope lines over the cumulative cost surface. This best-direction
surface is used to draw the least-cost-pat h from the start point to the end-point (Lee
and Stucky 1998).

This procedure is an adaptation of algorithms, such as that of Dijkstra, that are
traditionally applied to solve network problems, like the one depicted in (cid:142) gure 1(a)
(Taha 1996). Using a raster data structure, each cell may be seen as a node linked
to its eight neighbours, and the resulting network over the raster surface is depicted
in (cid:142) gure 1(b).

This ‘network view of a surface’ has some shortcomings, because to link distant
nodes the possible paths are frequently zigzag paths that are longer than a direct
link. Douglas (1995 ) and Xu and Lathrop (1995) showed the errors produced by
this simpli(cid:142) cation and proposed algorithms to (cid:142) nd more realistic least-cost paths
and spread surfaces. Our concern, however, is over another question, related to the
algorithm.

There are three main network problem types, related to the weights, or resistances
to each link can be assigned. These problem types are shown in (cid:142) gures 2 to 4, and
network alghorithms adapted to the raster data structure may be applied to solve
all of them. The (cid:142) rst is the simplest, where costs are related to the node location,
but are the same for all directions ((cid:142) gure 2). Douglas (1995 ) discussed this type of
problem, here called isotropic. Although many route-(cid:142) nding problems can be solved
by the procedure described above (Lee and Stucky 1998, Weber and Hasenack 1999 ),
it is limited to situations where the cost of passage or friction is the same for all
directions of movement (Stefanakis and Kavouras 1995 ).

In the second type of problem, costs may be related to direction, but this
anisotropy has one prevailing direction over the whole surface. Xu and Lathrop

Figure 1.

(a) Classical network with weighted links connecting nodes;

(b) Network
representation of raster data structure with eight links entering and eight links leaving
each cell.

Downloaded by [University of Guelph] at 16:35 03 June 2012 A least-cost-pat h algorithm for roads and canals

399

Figure 2.

Isotropic least-cost-path problem: cost of passage dependent on location only

(darker tones show higher costs-of-passage).

(1995) adapted the algorithm to simulate the spread of (cid:142) re in(cid:143) uenced by wind
direction. Fire spreading in the prevailing wind direction is naturally faster, and the
resistance to spread (the `cost-of -passage’) related to this direction should be lower
((cid:142) gure 3).

Network problems that can be solved by Dijkstra’s algorithm may be of a third
type, where costs of passage are really anisotropic ((cid:142) gure 4). In this type of problem,
costs are variable over the surface and are direction dependent, but without any one
prevailing direction.

We think that potential route planning for structures that are strongly in(cid:143) uenced

Figure 3. Partially anisotropic least-cost-path problem: cost of passage dependent on location
and direction, but with one direction prevailing over the whole surface (passages to
left, and vertically upwards, are easier—darker tones for higher costs-of-passage).

Downloaded by [University of Guelph] at 16:35 03 June 2012 400

W. Collischonn and J. V. Pilar

Figure 4. Full anisotropic least-cost-path problem: cost of passage dependent on both
location and direction (it is not possible to use colours or tones to represent
cost-of-passage).

by topography should be analysed by a least-cost-pat h algorithm that maintains the
capability of Dijkstra’s algorithm to solve anisotropic problems such as the one in
(cid:142) gure 4. Indeed, there are many problems where the cost of passage is related to
direction, such as road and canal routing, that exemplify the third type of problem.
Initially, structures such as roads and canals are constructed through routes with
limited slope, and the slope depends on route direction. Roads with slopes exceeding
certain limits are di(cid:141) cult to construct, maintain and use. Canals have slope restric-
tions related to maximum (cid:143) ow velocities and have routes that never go uphill, except
if additional expenditures on pumping stations are provided.

Secondly, the cost of construction of such structures may be related to slope.
Large irrigation canals, for example, require complex and expensive gates along
steep reaches. A 100 m reach of canal over a steep reach may need one or more such
gates, and will be more costly than a 100 m reach over mild slopes.

Unlike the constant anisotropy of waves, wind and spread of (cid:142) re analysed by
Xu and Lathrop (1995), where a single prevailing direction is valid for the whole
surface, the anisotropy of travel costs related to slope varies over the surface according
to local terrain and travel direction.

It is clear that slope, regarded as the inclination in the direction of steepest
descent, diŒers from slope in the direction of the path taken: a path taken transversely
across a steep gradient may itself have a gradient that is relatively gentle. A least-
cost-path analysis performed by Jaga et al. (1993) considered steep slope areas as
absolute barriers to road passage, by attributing very high values of friction. They
considered slope in the direction of steepest descent as an attribute, and the problem
was solved by isotropic analysis. But, in our opinion, slope is important as a direction-
dependent variable. This can often be seen in highway construction, where a sinuous,
long but less steep path, is preferred to one that is shorter and steeper.

Since the direction of travel for each cell is not de(cid:142) ned when the process of
(cid:142) nding the best route is initiated, the cost-of-passag e surface is also not de(cid:142) ned, and

Downloaded by [University of Guelph] at 16:35 03 June 2012 A least-cost-pat h algorithm for roads and canals

401

the traditional procedures for (cid:142) nding a least-cost-path , such as described by Douglas
(1994), cannot be applied to solve problems with direction dependent costs. For
each cell there are eight possible cost-of-passag e values, each related to one direction.
An alternative algorithm is presented in this paper, which can de(cid:142) ne the best
path for a canal or road over a digital elevation model (DEM) representing the
topography . The cost-of-passag e is related to the direction-dependent slope through
a pre-de(cid:142) ned function. The algorithm is iterative, making it possible to solve the
problem even when the best path is very complex, such as a spiral.

2. The algorithm

The algorithm uses a digital elevation model and the starting and end-points of
the path as input data. Accumulated cost is calculated spreading from the cell
containing the end-point to its 8 neighbours, using search techniques similar to those
commonly used to identify drainage basin characteristics (Jensen and Domingue
1988 ). The spreading is iterative and at the kth iteration three accumulated cost
surfaces are stored; the kth iteration surface, which is the most up-to-date; the k-1th
and the k-2th iteration surfaces.

A nine-cell window (3Ö 3 cells) moves over the surface, from the upper left to
the lower right, searching for a cell with a recently de(cid:142) ned or altered accumulated
cost ((cid:142) gure 5(a)). Since the procedure is iterative, recently de(cid:142) ned means that at this
cell accumulated cost values for iterations k-1 and k-2 are diŒerent. The search stops
when one of the eight border cells has its accumulated cost value attributed or
revised during the last iteration. The recent change in this value is a sign that the
accumulated cost value of the central cell must be either calculated for the (cid:142) rst time
or revised, since a new path may be created by the change of the accumulated cost
value of its neighbour. Figure 5(b) shows this step for the (cid:142) rst iteration.

If one of the neighbours has had its accumulated cost recently altered, the
algorithm searches all of the neigbours whose accumulated cost is already de(cid:142) ned
for iteration k. These neighbours are marked as potential links to the central cell
((cid:142) gure 5(c)). The accumulated costs of the central cell for paths coming from each

Figure 5.

(a) The moving window starts the search; (b) the destination point is found,
for the next position
an accumulated cost is calculated for the central cell;
two directions are possible—the one with least accumulated cost is chosen; (d) at the
end of the iteration the eight cells around the destination point have de(cid:142) ned
accumulated costs.

(c)

Downloaded by [University of Guelph] at 16:35 03 June 2012 402

W. Collischonn and J. V. Pilar

of them are calculated and the lowest is recorded as the new value for the central
cell. The chosen direction is also recorded in a ‘best direction’ surface, for reasons
to be explained below. The accumulated value is calculated adding up the accumu-
lated value of the neighbour plus the cost of passage from the central cell to the
neighbour.

Cost-of-passage from the considered cell to each of the eight neighbouring cells
is calculated as a function of slope and distance between these cells. Slope is calculated
simply as the diŒerence in elevation divided by the distance between them. Cost-of-
passage is obtained from a pre-de(cid:142) ned function relating cost to slope. Hypothetical
forms of these functions are given in (cid:142) gure 6. In the case of canals, a negative slope
would represent uphill movement, and should be avoided by imposing a cost penalty.
At the beginning of the (cid:142) rst iteration, the only cell having a recently de(cid:142) ned
accumulated cost is the end-point cell. At the end of each iteration, in the lower
right corner, the algorithm veri(cid:142) es if at least one cell has changed its accumulated
cost value. If so, the window moves to the upper-left corner of the surface and a
new iteration begins. The algorithm stops if no cell has its accumulated cost changed
during that iteration.

Neither of the cells is considered to have a de(cid:142) nite accumulated cost value until
the whole surface is calculated. Every time that the accumulated cost value of a cell
is revised, because an alternative, cheaper path from it is found, all eight neighbours
have to be revised in the next iteration, to check whether the new possible paths are
better than the previous one.

After the accumulated cost has been spread, the usual procedure for determining
the best path traversing the accumulated cost surface down to the lowest neighbour
(Douglas 1994 ) is not applicable to the type of problem discussed here. A neighbour
with a low accumulated cost value could be on a mountain top whence it is cheaper
to get to the destination, but the cost of passage to this neighbour could be more
expensive than a long path circumventing the mountain, because of an obstacle such
as a cliŒ. Recording the best direction to follow for each cell on a surface makes
de(cid:142) ning the path the easier step of the procedure, since this surface is simply traversed
from the initial to the end-point. This could be repeated for any cell considered as
the initial point, since the best directions to the end were recorded for all cells.

Figure 6. Proposed general forms of function relating cost to slope for roads (continuous)
and canals (dashed).

Downloaded by [University of Guelph] at 16:35 03 June 2012 A least-cost-pat h algorithm for roads and canals

403

The structure of the alghorithm can be described as follows:

1. Input:

2. Initialisation:

E DEM surface;
E departure and destination points of the path;

function relating cost and slope;

E accumulated cost surfaces are created for kth, k-1th and k-2th iterations—each

cell is given a very high value of accumulated cost;
the accumulated cost at the destination point for k-1th iteration is changed in
relation to k-2th—it is set to zero;

E a best direction code surface is created;

3. Iteration:

E a 3Ö 3 cell window moves over the DEM and the kth to k-2th surfaces from

the left higher to the right lower corner;
each time one of the border cells of the window has diŒerent values for k-1th
and k-2th iteration accumulated-cost surfaces;

select the border cells where the accumulated cost has already been de(cid:142) ned;
for each selected neighbouring cell, calculate the slope between it and the
central cell;
for each selected neighbour, calculate the cost of passage (CP) from the
slope using the slope vs. cost function;
for each selected neighbour, calculate the accumulated cost for the central
cell: AcCost (central cell) 5 AcCost (neighbour) 1 CP
record the lowest of the above accumulated-costs to the current cell for
the kth accumulated cost surface
record the direction associated to the lowest accumulated-cost to the
current cell in the best direction surface;

if neither of the cells has recently changed neighbours at the end of the surfaces
(lower right corner), quit the iteration otherwise start it again;

4. Output:

Follow the directions given by the best direction surface from the departure to

the destination of the path, creating the least-cost-path .

In its present form, the algorithm is ready to (cid:142) nd best paths from a starting
point to either (a) a single end-point, or (b) an end-point on a speci(cid:142) ed line, or (c) an
end-point lying on the perimeter of a speci(cid:142) ed polygon.

3.

Implementation
After programming the algorithm on a computer, two tests were made. In one,
a route for a typical irrigation canal was calculated; the other application tested the
ability of the algorithm to (cid:142) nd complex and sinuous, but less-inclined paths, such
as might be used for routing highways.

For the (cid:142) rst test, the best route should be short with almost constant slope and
should never be uphill. The start and end-points were located at places intended to
complicate the route (cid:142) nding. The end-point is in a valley, separated from the start
point by a region of high relief ((cid:142) gure 7). The 60 columns by 70 lines sample DEM
was extracted from an arbitrary area of the 1 kmÖ 1 km DEM of South America

Downloaded by [University of Guelph] at 16:35 03 June 2012 E
E
E
E
E
E
E
E
E
E
404

W. Collischonn and J. V. Pilar

Figure 7. Best route of an irrigation canal.

(Bliss and Olsen 1999 ). The cost-slope function is hypothetical , and similar to those
shown in (cid:142) gure 5.

The result is shown in (cid:142) gure 7, where the darker tones correspond to lower

terrain and lighter tones represent higher terrain.

Figure 7 shows that the calculated path is sinuous, because it always progresses
downhill, almost following the contour lines. Although the shortest path would be
a straight line crossing the high point between the two points, this path is avoided.
Near the end-point the path enters the valley gradually, avoiding steep slopes. The
high point is avoided not because high elevations are associated with high costs of
passage (they are not), but because travel to the top would be uphill, and high costs
are associated with uphill movement.

The second test used an arti(cid:142) cial DEM, generated as a volcanic cone with a
distance measuring function of IDRISI (Eastman 1995). A random surface was
generated and added to the original cone, in order to generate a more natural cone.
The random elevations lie between Õ 5 and 1 5% of the cone elevations. A cost–slope
function was generated, where the minimum cost-related slope was lower than the
slope of a straight line linking the start and end-points.

The result is shown in (cid:142) gure 8, where the lighter tones represent high regions.
The calculated best route climbs the cone following a spiral path. Before the spiral
completes a full turn, the direction of travel is altered, but the spiral form remains.
This test shows that the algorithm is able to (cid:142) nd a route with a limited slope
climbing a steep mountain. The in(cid:143) exion of the path where the direction of the spiral
is altered could be avoided if the cost function incorporates a ‘turning cost’ or
‘turning penalty’, which would be proportional to the change in direction from one
cell to another.

4. Concluding remarks

This paper presents a novel least-cost-pat h algorithm developed to (cid:142) nd the best
path given the topography , the starting and end-points of the linear feature (canal

Downloaded by [University of Guelph] at 16:35 03 June 2012 A least-cost-pat h algorithm for roads and canals

405

Figure 8. Best route of a road up a conical mountain.

or road) and a function relating slope, distance and cost. To our knowledge neither
has a similar algorithm been implemented in commercially available GIS software,
nor was any found in scienti(cid:142) c papers. The algorithm has applications in canal and
highway design.

To test the capabilities of the algorithm, two problems were posed, partially using
arti(cid:142) cially-constructe d data sets, since no real data sets and cost-slope functions were
available. The algorithm performed well, resulting in paths that were consistent with
our models. The iterative technique provides the algorithm with the ability to
calculate very complex paths, such as a spiral. We observed that the number of
iterations is proportional to the path complexity.

The algorithm may obtain complete spirals if a ‘turning cost’ is included in the
cost function. The algorithm can also be easily altered to take into account other
variables such as land use, geology and vegetation.

Acknowledgments

We would like to thank David Douglas (University of Ottawa), E. Stefanakis
(the University of Athens), Robin T. Clarke (Universidade Federal do Rio Grande
do Sul), and CNPq the Brazilian research sponsoring agency.

References
Bliss, N. and Olsen, L. M., 1999, Development of a 30 ARC–second digital elevation model of
South America. http://edewww.cr.usgs.gov/landaac/gtopo30/papers/olsen.html.
Douglas, D. H., 1994, Least-cost-path in GIS using an accumulated cost surface and slope

lines. Cartographica, 31, 37–51.

Eastman, J. R., 1995, Idrisi for W indows users guide (Worcester: Clark University).
Jaga, R. M. N., Sundaram, A. and Natarajan, T., 1993, Wasteland development using
geographic information system techniques. International Journal of Remote Sensing,
14, 3249–3257.

Jensen, S. and Domingue, J., 1988, Extracting topographic structure from digital elevation
data for geographic information system analysis. Photogrammetric Engineering and
Remote Sensing, 54, 1593–1600.

Downloaded by [University of Guelph] at 16:35 03 June 2012 406

A least-cost-pat h algorithm for roads and canals

Lee, J. and Stucky, D., 1998, On applying viewshed analysis for determining least-cost paths
on Digital Elevation Models. International Journal of Geographical Information Science,
12, 891–905.

Stefanakis, E. and Kavouras, M., 1995, On the determination of the optimum path in space.
In Proceedings of the European Conference on Spatial Information T heory, COSIT 95,
Lecture Notes in Computer Science (Berlin: Springer-Verlag).

Taha, H. A., 1996, Operations research: an introduction (Englewood CliŒs: Prentice Hall ).
Weber, E. and Hasenack, H., 1998, Ana´lise de alternativas de trac¸ado de um gasoduto

utilizando rotinas de apoio a` decisa˜o em SIG. GIS-Brasil-98.

Xu, J. and Lathrop, R. G., 1995, Improving simulation accuracy of spread phenomena in a
raster-based Geographic Information System. International Journal of Geographical
Information Systems, 9, 153–168.

Downloaded by [University of Guelph] at 16:35 03 June 2012 