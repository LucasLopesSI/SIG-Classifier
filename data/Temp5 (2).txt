Geoinformatica
DOI 10.1007/s10707-014-0202-x

Improving geographic information retrieval in spatial
data infrastructures

Fabio Gomes de Andrade & Cláudio de Souza Baptista &
Clodoveu Augusto Davis Jr.

Received: 27 May 2013 / Revised: 19 December 2013
Accepted: 2 January 2014
# Springer Science+Business Media New York 2014

Abstract In recent years, spatial data infrastructures (SDIs) have gained great popularity as a
solution to facilitate interoperable access to geospatial data offered by different agencies. In
order to enhance the data retrieval process, current infrastructures usually offer a catalog
service. Nevertheless, such catalog services still have important limitations that make it
difficult for users to find the geospatial data that they are interested in. Some current catalog
drawbacks include the use of a single record to describe all the feature types offered by a
service, the lack of formal means to describe the semantics of the underlying data, and the lack
of an effective ranking metric to organize the results retrieved from a query. Aiming to
overcome these limitations, this article proposes SESDI (Semantically-Enabled Spatial Data
Infrastructures), which is framework that reuses techniques of classic information retrieval to
improve geographic data retrieval in a SDI. Moreover, the framework proposes several ranking
metrics to solve spatial, semantic, temporal and multidimensional queries.

Keywords Spatial data infrastructures . Ranking . Geospatial data retrieval . Ontology

1 Introduction

In recent years, spatial data infrastructures (SDIs) [26] have become an attractive solution to
overcome the challenges of interoperability between geospatial data offered by different

F. G. de Andrade (*)
Instituto Federal de Educação, Ciência e Tecnologia da Paraíba, José Antônio da Silva 300, Jardim Oásis,
58900000 Cajazeiras, Paraíba, Brazil
e-mail: fabio@ifpb.edu.br

C. de Souza Baptista
Universidade Federal de Campina Grande, Rua Aprígio Veloso, 882, Bodocongó, 58109970 Campina
Grande, Paraíba, Brazil
e-mail: baptista@dsc.ufcg.edu.br

C. A. Davis Jr.
Universidade Federal de Minas Gerais, Avenida Presidente Antônio Carlos, 6627, 31270010 Belo
Horizonte, Minas Gerais, Brazil
e-mail: clodoveu@dcc.ufmg.br

Geoinformatica

organizations. To achieve interoperability, many geospatial data providers offer access to their
datasets via standardized services specified by the Open Geospatial Consortium (OGC), such
as Web Map Service (WMS) [7] and Web Feature Service (WFS) [34]. In these services, each
layer available in a dataset is offered as a feature type.

To make information retrieval easier, current SDIs often offer a catalog service, which is
usually implemented by using the OGC Catalog Service for the Web (CSW) [27] standard. In a
SDI, the catalog service is used by both geospatial data providers and clients. The data
providers use the catalog to announce their services. For this, they must provide metadata
that describes various characteristics of the dataset provided by the service, such as the
bounding box of the geographic region covered by the data, the data’s temporal extent, a set
of thematic keywords that describe the meaning of the data, information about data quality and
provenance, and the URL from which the service can be invoked.

On the other hand, clients use the catalog service to find out geospatial datasets of their
interest. In the CSW service, the client can query the catalog by invoking the GetRecords
operation. As the result for that operation, the service returns a document containing the
metadata records that satisfy the search constraints defined in the users’ request. In turn, the
client can evaluate the information contained in each returned record in order to locate the
services that may offer the feature type he/she is interested in.

After selecting the service of his/her interest, the client obtains more information about it by
invoking the GetCapabilities operation [35]. When that operation is invoked, the service
returns a document describing the information content and the means available to access it.
Moreover, this document provides a more detailed description about the feature types offered
by the service. For each feature type, it provides information such as name, title, bounding box,
abstract and a set of keywords. The client uses the information provided by that document to
select, among all the feature types offered by the service, the ones that supply the data he/she is
interested in.

Once the client selected the feature types of his/her interest, he/she must invoke another
operation to retrieve the selected data. The operation that must be invoked to retrieve the data
depends on the type of the service that is being accessed. It is important to take in mind that
this entire process can be quite tedious for the clients, since a query can return a large number
of metadata records and the services can offer a large number of feature types. Moreover,
additional limitations in feature type retrieval include the lack of ranking measurements and
mechanisms to formally describe the semantics of the available resources.

SDIs aim to facilitate the access to geographic data provided by various providers.
Nowadays, when providers register services in a SDI catalog service, they normally create a
single record to describe their dataset as a whole. This characteristic causes some limitations
that reduce the probability of success in the discovery of relevant geospatial data sources
within a SDI, considering the three dimensions that characterize such data: space, theme and
time.

To understand some of these limitations, let us consider the situation depicted in Fig. 1. The
figure shows two metadata records called MR1 and MR2. MR1 describes a hydrographic
WMS service, while MR2 describes a WMS service related to disaster management. These
records contain the metadata provided by the catalog service. For the sake of simplicity, in this
example each service is described by five attributes: the metadata record identifier, the service
title, the geographic extension covered by the service, the temporal extent and the set of
keywords that describe its dataset. The boxes on the right side represent the feature types
provided by each service, showing metadata that are provided by the service’s capabilities
document. The relationships between the bounding boxes cited in this figure are depicted in
Fig. 2. Notice the apparent inconsistency between the geographic extent of the catalog entry

Geoinformatica

MR2 and the extents of data on fires. Catalog services are only aware of the overall geographic
extents, usually informed manually along with other metadata, and eventual discrepancies with
the underlying features can go by undetected.

Queries in this situation present various retrieval problems, according to the dimensions

(spatial, thematic and temporal) involved in the query specification, as exemplified next.

Spatial queries. When a single record is used to describe a service, one single geographic
extent is normally used to represent its dataset. To understand the problems caused by that
feature, suppose a query in which the user is looking for maps that cover region B4. In this
case, record MR1 is retrieved by the catalog, even though its service has no layer that intersects
that region. This problem occurs because the service provider used for a geographic extent the
bounding box that covers all the regions covered by its feature types. In turn, record MR2 is
not retrieved, even offering a layer that covers the requested region. This problem occurs
because the service provider used for a geographic extent the region covered by most of the
feature types.

Thematic queries. Regarding thematic queries, the main limitation of current catalogs is that
they usually solve this type of query solely using keywords. To understand the problems
caused by this characteristic, consider a query in which the user is looking for maps about
bodies of water. In this case, record MR1 is discarded by the catalog, even though its service
provides several layers about the requested theme. This problem occurs because the query
terms are not present in the keyword set that describes the service. Moreover, the lack of an
instrument to formally describe the semantics of the theme defined in the query imposes
limitations to the formulation of this type of query. Due to the same problems, if the user looks

Metadata Record
M t d t R
d
Identifier: MR1
Id
ifi MR1

Title:
g p
Hydrographic WMS

y

g p

Geographic Extent:
B5
B5
Keywords:
Keywords:
Rivers
Rivers
Dams
Dams
Lakes
Lakes

Metadata Record
Metadata Record
Identifier: MR2
Identifier: MR2

Titl
Title:
Disaster  WMS
Di
t WMS

Geographic Extent:
B2
p
Temporal Extent:
2000-2012
Keywords:
Keywords:
Disasters
Disasters

Catalog
Service

Fig. 1 Example of metadata records

Title: Rivers
Title: Rivers
BoundingBox: B1
BoundingBox: B1

Title: Dams
BoundingBox: B2
g

Title: Lakes
BoundingBox: B3

Title: Hurricanes 2000
Title: Hurricanes - 2000
BoundingBox: B2
B2
di B
B

Title: Disasters (2012)
Title: Disasters (2012)
BoundingBox: B2
BoundingBox: B2

Title: Fires
BoundingBox: B4
g

Geoinformatica

Fig. 2 Topologic relationships between bounding boxes

for maps about fires, record MR2 is not retrieved, even though it includes a layer about the
requested theme.

Temporal queries. When a single record is used to describe a service, one single temporal
extent is normally used to describe its dataset. Hence, this type of query suffers the same kind
of limitations observed in spatial queries. In addition, many providers do not supply informa-
tion on the temporal extent of their services (as record MR1), thus increasing the difficulty to
solve this type of query.

Multidimensional queries. In this article, we use the term multidimensional query to refer to
queries that have constraints concerning more than one dimension. Examples of multidimen-
sional queries may include “Find maps about water bodies in New Jersey” and “Find maps
about fires in the United States during the 1990s”. These queries are even more difficult to
solve by using the current metadata catalogs, since they combine limitations regarding all the
dimensions involved in the query.

We observe that, ideally, queries on SDI metadata catalogs must be able to go further than
performing a simple keyword matching procedure. Furthermore, such queries must be able to
involve the spatial, temporal and thematic dimensions of data, otherwise the potential for the
discovery of relevant services and datasets is significantly reduced. Our solution combines the
possibility of expanding the query by using semantic annotations with the more advanced
selection and ranking techniques usually associated with information retrieval. Thus, this
article offers two contributions. First, it proposes a new model for describing and finding
geographic feature types in metadata catalogs. Second, it describes a set of ranking metrics,
which are based on the proposed model.

The remainder of the article is organized as follows. Section 2 describes related work.
Section 3 presents the overall architecture of our proposed framework and highlights our
feature type discovery model. Section 4 addresses the metadata acquisition process. Section 5
describes the information retrieval process. Section 6 addresses the experimental evaluation.
Finally, Section 7 concludes the paper and describes further research directions.

Geoinformatica

2 Related work

One of the most important aspects of current SDI architecture is the organization of the data
and service offerings in a metadata catalog. Users are expected to search this catalog for data
and services of their interest, while at the same time verifying various parameters (thematic
coverage, reference date, updating procedures, provenance and others). However, as the
volume and diversity of available data grows, it becomes increasingly difficult for users to
query the catalog using only thematic, spatial or temporal keywords, due to a combination of
factors: terminological diversity, language support, inadequate or low-quality metadata, among
many others.

As a consequence, this problem has been the target of recent research, and several works
proposed to improve the retrieval of geospatial data and services organized in SDIs and
geoportals based on Semantic Web tools and resources, such as ontologies and thesauri. An
important work regarding this research topic was proposed by Lutz and Klien [22]. In that
work, authors use a shared ontology in order to describe the semantics of the feature types
provided by a SDI, showing the problems caused by semantic heterogeneity issues within the
catalog. In another work proposed by the same research group [14], the output parameters of
each service were associated with concepts defined in ontologies, demonstrating a way to
overcome the problems caused by synonyms and homonyms in keyword-based search of
catalogs for an application in disaster management. Lutz et al. [24] use ontologies and logical
reasoning to associate feature types offered by WFS services with concepts defined in
ontologies using record mappings. Wiegand and Garcia [36] take a different direction, using
ontologies to describe several tasks that demand data from a SDI, and linking each task to the
set of feature types required for its execution. Reasoning is used to infer the association
between data sources and tasks. Molina e Bayarri [25] defined a set of ontology-based tasks to
create an infrastructure to facilitate information retrieval regarding disaster management in the
Andean region. Lutz and Kolas [23] pointed out the limitations for querying the catalog
services and proposed a solution based on rules to describe and discover geographic data
provided by SDIs. Smits and Friis-Christensen [31] proposed using a thesaurus to improve the
description and discovery of the resources offered by an SDI, and also implemented a
multilingual support and an integrated gazetteer. The authors considered the use of a single
common ontology for resource discovery in catalogs to be impractical. They indicated that a
possible alternative, i.e., the centralization of metadata, would pose additional architectural
consequences.

Athanasis et al. [2] used multiple ontologies to improve resource discovery in geoportals,
using RDF to describe the geoportal’s information with ontology-based metadata. Chen et al.
[9] developed an approach that uses OWL-S (Ontology Web Language for Services), which is
an ontology to create semantic annotations to web services, to describe the semantics of
geographic web services and their respective feature types. The disadvantage of all these
aforementioned studies is that their information discovery processes are not based on ranking,
and thus, there are no means to assess the relevance of each retrieved result. Moreover, these
works do not support temporal queries.

Some proposed methods are related to services retrieval. The work proposed by Stock et al.
[32] retrieved geographic information based on a feature type catalog describing all of the
properties and operations related to each feature type offered by the SDI. Each operation is
linked to a set of available implementations that can be invoked by users. In the approach
proposed by Lemmens et al. [15], services and their compositions could be discovered out of
an ontology that categorized geographical services. In another study, Lutz [21] used first-order
logic and ontologies to create a semantic signature for geospatial web services and improve the

Geoinformatica

retrieval of geographic services. A similar study was developed by Bai et al. [6], where
geographic web services were classified and categorized according to a set of ontologies that
organize services according to their functionalities. On the other hand, Yue et al. [37] proposed
a new method that extends the elements defined in the metadata model used for catalog
services in order to describe the semantics of geographic web services and improve informa-
tion retrieval. Li et al. [17] used ontologies in order to expand the terms defined in user’s
queries and improve the discovery of geographic web services that provide data about the
Arctic region. All of these works attempt to improve the discovery of geospatial web services.
However, unlike the approach proposed in this article, they do not allow for the retrieval of
feature types. Li et al. [19] developed a solution that caches information about feature types to
improve geographic information retrieval. Nevertheless, their approach solves thematic queries
based solely on keywords.

Some research works focuses on discovery of feature types. Zhang et al. [38] proposed a
measure to allow the ranking of feature types, considering location, theme, the geometry and
properties. Their solution uses specific ontologies for each one of these dimensions. Only the
feature types retrieved from the ontology reasoning process are ranked and presented to users.
Janowicz et al. [13] proposed another solution based on ranking, where feature type retrieval
was performed based on a framework that evaluates the similarity between concepts in
ontologies defined using Description Logic [4]. The search engine used in this work retrieves
all the feature types that are related to concepts that are similar to the concept defined in the
user’s query. Liu et al. [20] developed a geospatial data search engine that harvests spatial
metadata provided in many different formats, including WMS and WFS services. Their search
engine uses two indices to enhance information retrieval. The first one is based on keywords
and is used to select records according to thematic and temporal constraints. On the other hand,
the second keeps information about the geographic region covered for each record, and is used
to solve spatial constraints. However, those works do not take into account the relationship
between feature types of the same service to evaluate similarities.

An analysis of the previously discussed works shows that the information retrieval in SDIs
still requires further investigation. The lack of tools that enable users to properly find feature
types limits the retrieval of geographic data. In the next section, we present the overall structure
of our proposed solution, in the form of a framework that aims to semantically enable searches
in SDI. We call it SESDI, from Semantically-Enabled Spatial Data Infrastructures.

3 A framework to improve information retrieval in SDI catalogs

In our research work, we realized that, as the terms that compose a document, the feature types
offered by an OGC service are usually related among themselves. Those relationships may
concern location, theme, time or, sometimes, more than one dimension. Hence, we decided to
apply some measures used in information retrieval (IR) [5] in order to explore these
relationships.

Figure 3 shows the correspondence between IR and SDI concepts. SDI comprises a
collection of services, whereas the Web is usually seen as a collection of documents. In a
SDI, each service reflects a collection of feature types, while a Web document is seen as a
collection of terms.

However, there are dissimilar structures. For example, unlike terms, which represent a
simple string, feature types are complex structures, characterized by location, theme and time.
In addition, IR tools only retrieve complete documents, while in a SDI, users are in general
interested only in one or more data layers offered by a service.

Geoinformatica

Fig. 3 Correspondence between IR and geographic data in SDIs

Adapting the definition of IR models given by Baeza-Yates and Ribeiro-Neto [5], we

describe next our model for establishing geographic information retrieval in SDIs.

Definition 1: The model for geospatial information retrieval in SDI is a quadruple {S, T, Q,

R (Qi, Tj)}, where:

&

S is the collection of all services (WMS and WFS) offered by the infrastructure. Si denotes
each element in this collection;

& T is the collection of all feature types provided by the SDI, where each element Tj
represents a feature type present in T and is offered by some service Si∈S. For each Tj,
there is information about its geographic region, theme and time;

& Q is the representation of a user’s query;
& R (Qi, Tj) is a function that determines how relevant a feature type, Tj, is for a query, Qi.

Figure 4 shows how the approach proposed in this article works together with current SDIs.
Our idea consists of generating more detailed metadata about the feature types supplied by the
services registered in the catalog service. These metadata are produced during the tagging
process, which is able to identify information about the space, theme and time related to each
feature type offered by a service. Moreover, aiming to overcome the limitations of the queries
based on keywords, we associate feature types to concepts defined in ontologies [12]. All the
metadata generated during the tagging process are stored in a relational database with support
to geographic data. Then, we have implemented a ranking-based search engine that uses the
produced metadata to answer queries posed by the users.

SESDI, our proposed framework, implements the approach depicted in Fig. 4. Before
showing experimental results on its effectiveness, we next describe the process by which the
database on SDI contents is populated, and then present retrieval techniques.

4 Collecting and organizing metadata

In order to be able to answer queries, our framework needs to gather information about the
services and feature types available from the infrastructure. This process is called metadata
acquisition. As in the approach proposed in [16], this process must be executed periodically,

Spatial Data Infrastrcuture

Geoinformatica

SESDI User

SESDI

Ontology

Fig. 4 Interaction between SESDI and current SDIs

aiming to keep the database of existing services and feature types always up-to-date. The
metadata acquisition process is accomplished in three stages: service crawling, feature type
crawling and feature type tagging.

In the service crawling, the framework identifies the services (WMS and WFS) offered by
the infrastructure. It executes this task by querying the infrastructure’s catalog service (by
invoking the GetRecords operation), requesting all the metadata records that have been added
or updated since the contents of its database have been last updated. During this stage, all the
metadata records describing the new services that have been added (or recently updated) to the
catalog service are collected.

In the feature type crawling, the framework identifies the feature types provided by each
service identified during the previous stage. For this, it invokes the GetCapabilities operation
of each service to retrieve their capabilities documents. After that, it parses the retrieved
documents in order to collect metadata describing the feature types offered by each service.

In the feature type tagging stage, the framework processes each feature type identified
during feature type crawling. In this stage, the framework tries to identify the spatial, thematic
and temporal characteristics of the feature type. It carries out this task by processing the
information obtained from the service’s metadata record and the capabilities document, during
the two previous stages. Moreover, feature type tagging is split into three subtasks: spatial,
thematic and temporal tagging.

In the spatial tagging, the framework identifies the geographic region covered by the
feature type that is being analyzed. That information, which is represented as a bounding box,
is obtained from the service’s capabilities document instead of the metadata record. We opted
for using the information contained in that document because it supplies a bounding box
specific to each feature type offered by the service, while the metadata record generally uses a
single bounding box for the service as a whole.

Figure 5 shows the results of spatial tagging. In that figure, the boxes at the right side
represent the metadata generated during the feature type tagging process. The boxes at the

Geoinformatica

center represent the feature types, while the box at the left side represents the metadata record
that describes the service. An example of the spatial tagging process can be observed for the
feature type Fires. The metadata record that describes its service has the value B2 for the
geographic extent, which is the bounding-box that covers most of the feature types provided
by the service. Nevertheless, by looking the information provided for the feature type, we can
notice that this feature type covers the region B4, which is chosen as the bounding box for this
feature type.

In the thematic tagging, the framework tries to identify the themes that represent the
semantics of the data provided by the feature type. In our work, these themes correspond to
the URIs of concepts defined in the ontologies used by the framework (see Fig. 4). We opted
for using ontologies because they enable us to retrieve, during the searching process, both the
feature types that are tagged exactly with the theme requested in the user’s query and the ones
tagged with themes which are semantically related to it. Furthermore, ontologies allow us to
identify the semantic relationship that exists between the requested theme and the one used to
tag a feature type under evaluation. The framework uses that information to evaluate the
relevance of that feature type to the query, improving the ranking of the results retrieved from
the query.

To accomplish the thematic tagging, the framework uses the service’s capabilities document
to retrieve keywords defined to the feature type. If no keywords are provided to the feature
type, its title is used. Then, it matches each keyword (or the title) to the names of the concepts
defined in its ontologies. For each identified matching, the framework associates a thematic tag
to the feature type, containing the URI of the concept.

Sometimes, the framework cannot identify any hit to the keyword. In these cases, it uses
Wikipedia as an alternative to accomplish the thematic tagging process. We chose Wikipedia as
the support tool because it is able to automatically solve some problems regarding text queries.
Examples of problems handled by this encyclopedia include searching for synonyms, acro-
nyms and related terms. Moreover, in that encyclopedia, each page is classified in one or more
categories, which helps the framework to identify the theme of the feature type. This

Metadata Record
Identifier: MR2

Title:
Disaster  WMS
S

saste

Geographic Extent:
Geographic Extent:
B2
B2
Temporal Extent:
Temporal Extent:
2000 2012
2000-2012
Keywords:
Keywords:
Disasters
Disasters

Title: Hurricanes - 2000
BoundingBox: B2
BoundingBox: B2

Title: Disasters (2012)
Title: Disasters (2012)
BoundingBox: B2
B2
di B
B

Title: Fires
g
BoundingBox: B4

BoundingBox:
B2
Thematic Tags:
Disaster.owl#Hurricane
Time Period:
e e od
01/01/2000  12/31/2000
01/01/2000 – 12/31/2000

g

BoundingBox:
BoundingBox:
B2
B2
Thematic Tags
Thematic Tags:
Disaster.owl#Disaster
l#Di
t
Di
Time Period:
P i d
Ti
01/01/2012 - 12/31/2012

t

BoundingBox:
BoundingBox:
B4B4
Thematic Tags:
Thematic Tags:
Disaster owl#Fire
Disaster.owl#Fire
Time Period:
Time Period
01/01/2000 – 12/31/2012
12/31/2012
01/01/2000

Fig. 5 Examples of results of feature type tagging

Geoinformatica

characteristic is especially useful in cases where the name of the page does not match any
concept covered by the ontologies used by the framework.

Thematic tagging based on Wikipedia is accomplished in two steps. Firstly, the framework
poses a query to Wikipedia by passing the feature type’s keyword (or title) as the search
parameter, aiming to get a page that represents the semantics of the keyword. If no pages are
returned, the tagging for the keyword under evaluation is finalized without generating tags. If a
single page is returned, it is selected and used in the next step. Sometimes, the encyclopedia
returns more than one page for the query. When this happens, the framework processes the
the one that will be used for the tagging process. To
received pages to select
accomplish that task, the framework uses a set of keywords containing the keywords
defined for the feature type in the service’s capabilities document along with the
keywords defined for the whole service in the metadata record. Then, for each page,
it executes a query looking for the keywords in the keywords set. This query, which
is based on the classic vector model [5], generates a ranking value for each page.
Once the ranking values are calculated, the framework selects the pages that got the
highest value for the ranking.

In the second step, the framework matches the title and the names of the categories of each
page selected in the previous step to the concepts defined in its ontologies. If no matches are
found, the framework does not generate any tag to the keyword that is being processed. If the
title of the feature type is being used for the tagging process, the framework also does not
generate any tag for the feature type. Figure 5 shows the results obtained after the thematic
tagging process. It shows that the tags generated for each feature type are concepts defined in
an ontology called Disaster.owl.

In the temporal tagging, the framework tries to identify the temporal extent covered by the
feature type. That extent is represented as a time interval. To obtain that information, the
framework first processes the metadata record to get the time interval covered by the service.
For this, the framework gets the value of the temporal extent attribute. If such value is missing
in the metadata record, it tries to extract this information by identifying temporal expressions
contained in text attributes, such as title and text description. If is not possible, then it uses the
record’s creation date.

After this processing, the information provided by the service’s capabilities document to
identify the temporal extent for each feature type is processed and stored. If there are no
attributes to describe the temporal characteristics of each feature type, the framework tries to
identify this information by searching for temporal expressions contained in attributes such as
title, abstract and keywords. If the framework still cannot identify the temporal extent for the
feature type, then it assumes the same time period identified for the corresponding service.

Examples of results obtained from the temporal tagging process are depicted in Fig. 5.
When the framework processes the information of the metadata record, it gets the period from
2000 to 2012 for the service’s temporal extent. Nevertheless, when it processes the title of the
feature type “Hurricanes – 2000”, it realizes that the feature type covers just the year
2000. On the other hand, when it processes the feature type “Fires”, it cannot identify
a time interval specific to the feature type, thus it uses the same interval identified for
the service.

After the tagging stage, the framework stores the metadata in its database. According to the
model presented in the previous section, the framework stores information about services and
feature types. For each service, it stores some metadata obtained from the metadata record,
such as the title, the access URL, the publisher name, the abstract and the metadata identifier.
For each feature type, besides the data generated from the feature type tagging process, it stores
some metadata found in the service’s capabilities document, such as the name, the title, the

Geoinformatica

abstract and the keywords. Figure 5 shows the results obtained from the tagging of the feature
types offered by the service described by the record MR1 presented in Fig. 1.

5 The information retrieval process

This section describes how the metadata collected during the gathering process can be used for
searching and ranking services and feature types offered by SDI catalogs in response to a user
query. Our framework supports four types of queries: spatial, thematic, temporal and multidi-
mensional. Next subsections address each of these query types. The method used to solve
spatial queries is discussed in more detail, as for the other types a similar approach is used. It is
important to notice that the formulas presented in this section are executed on demand for each
user query.

5.1 Spatial queries

When searching for geographic data, users normally define a geographical region of interest.
In our framework, this constraint is specified through the bounding box that covers that region.
During the searching process, all feature types whose bounding box intersects the region
defined in the user’s query are selected. After that, a spatial ranking process is used to evaluate
the relevance of each selected feature type. This ranking is calculated considering only the
spatial dimension of the feature type, based on two measures: the overlap degree and the
degree of spatial relevance.

5.1.1 The overlap degree

The overlap degree measures the similarity between two bounding boxes. Greater relevance is
given to feature types whose bounding box is closer in appearance to the region defined in the
query. Examples of overlaps between bounding boxes are shown in Fig. 6. The dotted white
rectangles represent the query’s bounding box, while the gray rectangles denote the region
covered by the feature type. In situation A, the regions are disjoint, and there is no similarity
between the regions. In case B, the regions intersect. In cases C and D, one of the regions
covers the other region. Finally, in case E, the regions are equivalent and entirely similar. An
important feature of this metric is its asymmetry, i.e., the similarity between two regions
depends on the order of comparison. This feature is illustrated by cases C and D. In both cases,
the overlap area between the rectangles is the same. However, in case C, the requested region
is partially resolved. In case D, the region is completely resolved, and thus, it has a higher
similarity value. Furthermore, the overlap degree also considers the similarity between the two
regions. In situations as case D, as the area covered by the feature type increases, their
similarity diminishes. To understand that, let us suppose a query involving a given city, where
there are different feature types that cover, respectively, just the requested city, the
entire country and the continent. In this case, all the feature types cover entirely the
the
region defined in the query. Nevertheless,
is more
requested city are presented first
similar to the requested area.

to user, since they cover a region that

the feature types that cover just

The overlap degree between two bounding boxes, A and B, is calculated using Eq. (1),
where A is the region defined by the query and B is the region of the feature type
being evaluated. This equation is an adaptation of the equation proposed by Tversky
[33] to evaluate the similarity between two objects. In such equation, the similarity

Geoinformatica

Fig. 6 Examples of relationships between bounding boxes

between two objects is calculated by considering the features they have in common as
well as their differences.

overlap A; Bð

Þ ¼

ð
area Α∩Β

Þ þ α

*area Α−Βð

Þ
Þ þ 1−αð
*area Β−Αð

Þ

ð1Þ

ð
area Α∩Β

Þ

Because the overlap degree is asymmetric and the area of the query complement determines
lower similarity, we set α to 0.84. The value of this coefficient was determined using
weighting [10], a technique that evaluates the best weight given a certain criteria in a decision
making process. To obtain the weights, we generated a training set from the results of many
spatial queries. The training set has a set of triples (a, b, c), where a represents the value for α,
b represents the α complement (1- α) and c represents the expected overlap degree. For each
triple, a and b were obtained by sampling the results of several spatial queries, while values for
c were determined manually.

Once the training set was generated, we calculated the weight for each variable (a, b) with
respect to the overlap degree. Each weight was calculated using the Pearson correlation
coefficient, obtained according to Eq. (2). This coefficient estimates how much one variable
affects the other. In this equation, x represents the variable that is being weighted, and y
represents the overlap degree.

Pearson x; yð

Þ ¼

r

ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
(cid:3)
(cid:3)
X
2
2

X

(cid:3)

(cid:2)

(cid:3)

(cid:2)
x −x
(cid:2)
x −x

y − y
(cid:2)
y− y

ð2Þ

In the last step, the weight for each variable is normalized to a value between 0 and 1. The
normalized values of all coefficients are used as weights in Eq. (1). Note that all the weights
used in the subsequent equations were estimated using this method.

Geoinformatica

5.1.2 The spatial relevance degree

We propose a variation of the term frequency-inverse document frequency (TF-IDF)
statistic [30] to determine the relevance of a candidate response to the query. TF-IDF is
extensively used in IR and text mining as a weighting factor or a ranking measurement.
It includes two components. The first, term frequency (TF), is calculated as the raw
frequency of a term in a document, i.e., the number of occurrences divided by the
number of words in the document. The second, inverse document frequency (IDF),
determines whether a term is rare in a collection of documents, which constitute the
universe for the search. IDF is calculated as the logarithm of the quotient between the
total number of documents in the collection and the number of documents in which the
term is present. Then, the TF-IDF of a term is given by the product of TF and IDF.

We propose an analogy between the TF, which is a measure of the importance of the term in
a document, and the importance of the geographical region defined in the user’s query for each
feature type in each service in a SDI, in an effort to define a spatial ranking of the query results.
The goal of this measure (denoted sp_TF) is to prioritize data offered by services in which the
requested region has a greater relative relevance.

To calculate sp_TF, the importance of a geographic region, G, for a service, S, we sum up
the overlap degree between G and the bounding box corresponding to each feature type offered
by S, normalized by the number of feature types included in S, as shown in Eq. (3).

ð
sp TF G; S

overlap G; bbox FT i

ð

ð

Þ
Þ

ð3Þ

Þ ¼ 1
n

X
n
i¼1

Similarly, we propose a measure (sp_IDF) that is analogous to IDF, and determines the
importance of the query region in relation to the space covered by the set of services and
feature types offered by the SDI. The sp_IDF determines the importance of the geographic
query region, G, for the infrastructure. We define it as the logarithm of the ratio between the
number of services offered by the infrastructure (N) and the number of services that offer at
least one feature type that covers entirely the region G (nG), as demonstrated in Eq. (4).

sp IDF Gð Þ ¼ log

N
nG

Finally, the inverse frequency value is combined with the normalized frequency to obtain
the spatial relevance, analogous to the TF-IDF statistic. Thus, given a bounding box (G), its
relevance to a service (S) is the product of these frequencies (Eq. 5):

spatialRelevance G; S

ð

Þ ¼ sp TF G; S

ð

Þ*sp IDF Gð Þ

5.1.3 Evaluating the spatial ranking

The values obtained for the overlap and spatial relevance degrees are combined in a weighted
sum to determine the spatial ranking of a feature type. The spatial ranking of the feature type,
T, considering the bounding box defined in the query, G, is determined by Eq. (6). In that
equation, bbox represents the bounding box covered by T. In turn, w1 and w2 represent the

ð4Þ

ð5Þ

Geoinformatica

weights defined for each measure. We set their values to 0.82 and 0.18, respectively. These
values were determined using the method described in Section 5.1.1.

spaRank G; T

ð

Þ ¼ w1*overlap G; bbox Tð Þ

ð

Þ þ w2*spatialRelevance G; S

ð

Þ

ð6Þ

5.2 Thematic queries

In order to perform thematic queries, the user must choose a concept defined in one of the
ontologies used by the framework. That concept is called search concept. During the
information retrieval process,
the feature types that are
associated to the search concept or one of its related concepts. After that, the thematic
ranking assesses the relevance of each retrieved feature type, considering only the
theme dimension.

the framework selects all

In the thematic ranking, the overlap degree is calculated by the similarity between the
search concept and the concept related to the feature type. The goal of that metric is to
prioritize feature types that are associated to concepts that are more similar to the search
concept. If the feature type is associated to more than one concept, we choose the one that is
more similar to the search concept. The evaluation of the similarity between concepts is a
problem that has been the focus of much research [11, 18, 28, 29]. In our work, to accomplish
that task, we use the approach proposed in [1], in which the similarity is calculated based on
three metrics: the type of relationship, the distance between the concepts and the ordering of
the concepts. The similarity between two concepts is calculated by using a function sim(Q, D),
where Q represents the concept requested in the query and D represents the concept used to tag
a feature type under evaluation.

The first metric is the type of relationship, which can be either generalization or compo-
sition. To understand that metric, consider the ontology depicted in Fig. 7. In that ontology,
generalizations are represented as an “is-a” arc from the more specific concept to the one that
is more general, while compositions are represent as an “part_of” arc from the concept that
represents the part to the one that represents the whole. The approach used in our framework
considers that the similarity between concepts related by generalization is higher than
the similarity between concepts related by composition. It happens because generali-
zation is a stronger relationship, where the more specific concept inherits the type and
the properties of the concept that is more general. Then, in the ontology showed in

Fig. 7 Example of ontology

Geoinformatica

the similarity between BodyOfWater and River is higher than the similarity

Fig. 7,
between River and Channel.

The second metric is the distance between the concepts, whose value is obtained from
the number of arcs that exist between the two concepts. In our work, the similarity
between two concepts reduces as the distance between them increases. To understand
that metric, consider the ontology depicted in Fig. 7 again and suppose a query in which
a user searches for the theme BodyOfWater. Then, consider three different feature types,
tagged with the concepts BodyOfWater, Lake and FreshwaterLake, respectively. In the
first case, the value of similarity is 1, as the concept related to the feature type is the
same used in the query. In the second case, the concept related to the feature type is a
subclass of the concept defined in the query. Hence, that feature type provides just a
subset of the data requested in the query. For that, the value of the similarity between the
two concepts (BodyOfWater and Lake) is lower than the one obtained in the first case. In
the third case, the feature type is related to a concept that is even more specific, which
means that its data represent a smaller subset of the data requested by the user. For that,
the similarity between the two concepts (BodyOfWater and FreshwaterLake) is lower
than in the second case.

Finally we also consider the order in which the concepts are compared. Then, given two
concepts Q and D, the value of sim(Q,D) can be different of sim(D,Q). To understand that
metric, consider the concepts BodyOfWater and River in Fig. 7. If a user poses a query for the
theme BodyOfWater and a feature type is tagged with the concept River, then all the objects
provided for the feature type are relevant to the user. On the other hand, if the user poses a
query for the theme River and a feature type is tagged with the concepts BodyOfWater, then not
all the objects provided for the feature type are relevant to the user. Then, in the second case,
the similarity is lower than in the first case.

As in the spatial ranking, our framework prioritizes feature types offered by services
where the theme requested in the user’s query has a higher relevance. That relevance is
assessed using the same method that performs the spatial ranking. Nevertheless, in this
case, the raw frequency of a theme C in a service S is calculated by using the sum of the
degree of similarity between the search concept and the concept used to annotate each
feature type offered by the service. The inverse frequency is calculated through the
number of services that offer at least one feature type related to either the search concept
or to a concept that is subsumed by it. As in the spatial ranking, the overlap degree
between the concepts and the thematic relevance are combined to determine the thematic
ranking value, by using a weighted sum. Thus, the thematic ranking is calculated by
using an equation similar to Eq. 6.

5.3 Temporal queries

Time represents a key role in many queries concerning geographic data, such as the
retrieval of historical and disaster management data. In our framework, users are able
to pose queries with temporal constraints, which are represented as a time interval.
During the searching process, all feature types whose temporal extent intersects the
interval defined in the query are selected. After that, a temporal ranking is used to
assess the relevance of each retrieved feature type, considering only their time
dimension.

In the temporal ranking, in order to calculate the overlap degree, we evaluate the similarity
between the interval defined in the user’s query (t) and the temporal extent covered by a feature
type (T). This similarity is calculated based on the duration (in days) of these intervals. As in

Geoinformatica

the spatial ranking, the value of this measure is calculated by using an adaptation of Tversky’s
equation, as shown in Eq. (7).

overlap t; Tð

Þ ¼

duration t∩Tð

Þ þ α

*duation t−Tð

duration t∩Tð

Þ
*duration T −t
Þ
Þ þ 1−αð

ð

Þ

ð7Þ

To calculate the temporal relevance degree, we use the same method used in the other
ranking metrics. The raw frequency of an interval t in a service S is calculated by the sum of
the overlap degree between the requested interval and the interval covered by each feature type
offered by the service. In turn, the inverse frequency of an interval t is calculated through the
number of services that offer at least one feature type whose temporal extent covers entirely
that interval. Once calculated, the overlap and the temporal relevance degrees are combined in
a weighted sum to determinate the value of the temporal ranking.

5.4 Multidimensional queries

A multidimensional query has constraints concerning two or three dimensions. During the
searching process, our framework firstly selects the feature types that satisfy all the constraints
(spatial, thematic and temporal) defined in the user’s query. Then, the ranking measures
presented previously are used to determinate the multidimensional ranking value. This mea-
sure assesses how much a feature type, T, is relevant to a query, Q, considering all the
dimensions concerning the query (see Eq. 8).

multiRank T ; Qð

Þ ¼ w1 (cid:2) spaRank B; Tð

Þ þ w2 (cid:2) themRank C; T

ð

Þ þ w3*tempRank t; Tð

Þð8Þ

where:

&

&

&

spaRank is the value of the spatial ranking between the query bounding box, B, and the
feature type, T;
themRank is the semantic ranking between the theme required in the query and the feature
type, T;
tempRank is the temporal ranking between the time required in the query and the feature
type, T;

& w1, w2 and w3 represent the weights of these ranking measures. We set the weights to 0.08,
0.83 and 0.09 in this study. We determined these values by using the method described in
Section 5.1.1.

6 Experimental evaluation

To evaluate the performance of our framework, we implemented a prototype and conducted a
variety of experiments using a case study database. We used the catalog service formerly
provided in the Geospatial One-Stop web site, created by the United States National Spatial
Data Infrastructure (NSDI), as a case study. Firstly, we accessed the catalog service provided
by NSDI to collect data about services and feature types. Our database currently has 12,914
feature types from 109 services (WMS and WFS). Furthermore, we used the NASA SWEET
ontologies1 in order to support thematic queries. All the queries used to evaluate the frame-
work are executed in less than 3 s, but the average time to solve queries is 1 s.

1 http://sweet.jpl.nasa.gov/ontology/

Geoinformatica

Figure 8 presents the interface from which clients can pose queries to the framework. So far,
our work just targets maps as results. The interface enables clients to define spatial, thematic
and temporal constraints. In the query presented in the figure, the client looks for maps about
the land use in the region close to San Diego during 2008. Figure 9 shows the feature types
retrieved for the query. For each feature type, the service name, the publisher, and the ranking
value are displayed. If no abstract is provided for the feature type, the search engine presents
the description defined for the service.

During the evaluation process, we validated the four query types provided by our frame-
work (spatial, thematic, temporal and multidimensional). For each query used in this process, a
similar request was put forward to the NSDI catalog service by using the GetRecords
operation. After each query, the two approaches were compared by using two parameters:
recall, which is the ratio between the number of relevant results retrieved and the number of
relevant results, and precision, which is the ratio between the number of relevant results
retrieved and the total number of results retrieved. Besides, results were evaluated regarding
the number of services and feature types retrieved for each query. This evaluation enabled us to
verify the limitations caused by the use of a single metadata record to describe a service.

Before each query used for validation, we generated two baselines. The first one contained
all the feature types that were relevant to the query. To generate this baseline, we analyzed
manually the information in metadata records and service’s capabilities documents. The
second one was composed of all the services that offered at least one layer in the feature type
baseline.

First, we validate the spatial queries, by posing queries concerning bounding boxes of
various scopes, such as cities, states, regions and countries. To accomplish this task, we
prioritized regions that occurred more frequently in the services provided by the SDI. Table 1
shows the queries used to evaluate the performance of spatial query. It is important to notice

Fig. 8 Interface to pose queries to the framework search engine

Geoinformatica

Query

Find maps about San Francisco.

Find maps about San Diego.

Find maps about Oak Ridge.

Find maps about Washington County.

Find maps about Allen County.

Find maps about Ashland County.
Find maps about Caribe.

Find maps about Rhode Island.

Find maps about Boston.

Find maps about Massachusetts.

Find maps about New York.

Find maps about Maine.

Find maps about Idaho.

Find maps about Ohio.
Find maps about New Jersey.

Find maps about California.

Find maps about Hawaii.

Find maps about Alaska.

Find maps about United States.

Find maps about Canada.

Fig. 9 Results obtained from a query solved by the framework search engine

that our framework solves spatial queries based on a bounding box provided by the user. The
queries in Table 1 are described using name places just to make them easier to understand.

Figure 10 shows the results obtained for that validation. The experiments confirmed that
our framework produced a better recall and precision than the catalog service, also achieving

Table 1 Queries used to validate the spatial queries

ID

Q1

Q2

Q3

Q4

Q5

Q6
Q7

Q8

Q9

Q10

Q11

Q12

Q13

Q14
Q15

Q16

Q17

Q18

Q19

Q20

Geoinformatica

Fig. 10 Spatial queries validation results

perfect recall and precision (100 %). This result occurred because the bounding boxes used to
generate the baselines were obtained from the service’s capabilities document, which is the
same source used during the spatial tagging.

In turn, querying the NSDI catalog we obtained an average recall of 66.64 % and an
average precision of 99.29 % at the level of services, and 49.34 % and 75.60 %, respectively, at
the level of feature types. We observed that direct queries to the NSDI catalog were not able to
retrieve many feature types because of inconsistencies in the metadata, as discussed in
Section 2. We also observed that the average precision of querying the catalog always
decreased at the level of feature types, because results always include the whole service.
Hence, many irrelevant layers are returned to the user. That limitation occurred for all the types
of queries evaluated during the validation process.

To evaluate the thematic queries, we posed queries concerning concepts defined in the
ontology used for our framework. For this type of query, we used concepts of different levels
of generalization. The queries used to validate thematic dimension are depicted in Table 2.

Figure 11 shows the results that we obtained from these experiments. SESDI obtained an
average recall of 69.80 % at the level of services and 68.17 % at the level of feature types. In
turn, the NSDI catalog queries obtained 25.87 % and 34.88 %, respectively, for these
measures. The main factor that leads to this difference is that queries to the NSDI catalog
are not able to retrieve records described with terms that are related to the search concept, since
only exact matches are retrieved. With respect to precision, SESDI obtained an average recall
of 75.70 % at level of services and 69.89 % at level of feature types, while the NSDI catalog
obtained 38.92 % and 14.86 %, respectively, for these measures. We observed that the
performance of SESDI decreases in the case of queries concerning more specific concepts.
This occurs because our framework also retrieves feature types associated with concepts that
are not subsumed by the search concept, which are considered to be irrelevant to the user’s
query. However, these feature types rank lower, and are shown only at the end of the query
result. Nevertheless, this feature is useful for queries that return empty results, because feature
types associated with concepts related to (but not subsumed by) the search concept may be
recommended. Moreover, some mistakes generated by the automatic tagging process contrib-
ute to decrease SESDI’s precision.

To evaluate the temporal queries, we posed queries concerning time intervals of different
granularities, such as years, decades and centuries, as depicted in Table 3. The results obtained

Geoinformatica

Fig. 11 Thematic queries validation results

for this validation are presented in the Fig. 12. The results showed that SESDI increased the
average recall. SESDI had an average recall of 72.77 % at the level of services and 81.90 % at
the level of feature types. In turn, the NSDI catalog queries had the values 54.57 % and
55.97 %, respectively, for these measures. As in the spatial queries, that difference occurs due
to consistency problems on the temporal extent defined in the metadata record. Furthermore,
we observed that many records do not provide information about the temporal extent, which
makes them unreachable to the catalog service when it is solving this type of query. On the
other hand, the NSDI catalog queries obtained a better precision. While SESDI had an average
precision of 88.55 %, the NSDI catalog queries obtained the value 90.03 % for this measure.
At the level of feature types, these values were 83.51 % and 76.69 %, respectively. This
difference is justified by the automatic temporal tagging. During this process, a few temporal
expressions neither can be identified nor are interpreted correctly.

Table 2 Queries used to validate the thematic queries

ID

Q1
Q2

Q3

Q4

Q5

Q6

Q7

Q8

Q9
Q10

Q11

Q12

Q13

Q14

Q15

Find maps about environment conservation.

Thematic query

Find maps about coastal zones.
Find maps about hydrology.

Find maps about water bodies.

Find maps about geomorphology.

Find maps about urban areas.

Find maps about storms.

Find maps about boundaries.

Find maps about beaches.
Find maps about water pollution.

Find maps about drainage basin.

Find maps about watersheds.

Find maps about rivers.

Find maps about lakes.

Find maps about land cover.

Geoinformatica

Table 3 Queries used to validate the temporal queries

ID

Q1

Q2

Q3

Q4
Q5

Q6

Q7

Q8

Q9

Q10

Q11

Q12
Q13

Q14

Q15

Temporal query

Find maps in 1935.

Find maps in 1964.

Find maps in 1997.

Find maps in 1999.
Find maps in 2000.

Find maps in 2005.

Find maps in 2008.

Find maps in 2009.

Find maps during 2002 and 2004.

Find maps during 2006 and 2008.

Find maps in the 1980s.

Find maps in the 1990s.
Find maps in the 2000s.

Find maps since 2012.

Find maps during 1800 and 1899.

Finally, we validated the multidimensional queries, by using queries that combined the
constraints used in the other query types, as depicted in Table 4. In turn, Fig. 13 shows the
results obtained for the validation of multidimensional queries. SESDI had an average recall of
80.24 % at the level of services and 72 % at the level of feature types, while the NSDI catalog
obtained 21.35 % and 22.96 %, respectively, for these measures. Regarding precision, SESDI
had an average precision of 78.89 % at the level of services and 76.17 % at the level of feature
types, while the NSDI catalog had 27.78 % and 8.56 % respectively, for these measures. The
combination of the factors that influence the performance of spatial, thematic and temporal
queries explains these differences.

Fig. 12 Temporal queries validation results

Table 4 Queries used to validate multidimensional queries

Global query

Geoinformatica

Find maps about the water bodies of New Jersey in 2000.

Find maps about the geomorphology of Alaska in 2001.

Find maps about the geomorphology of California in 2000.

Find maps about the rivers of Idaho between 2002 and 2004.
Find maps about the urban areas of the United States in 2002.

Find maps about the hydrology of Boston in 2001.

Find maps about the water pollution of Massachusetts in 1964.

Find maps about the lakes of New Jersey between 2001 and 2003.

Find maps about the watersheds of Boston in 1964.

Find maps about the land use in San Diego in 2008.

Find maps about the coastal region of the United States in the 1980s.

Find maps about the land cover of California in the 1970s.
Find maps about the land cover of the United States between 2000 and 2009.

Find maps about the coastal zone of New Jersey between 1900 and 1950.

Find maps about conservation areas of the United States in 2010.

ID

Q1

Q2

Q3

Q4
Q5

Q6

Q7

Q8

Q9

Q10

Q11

Q12
Q13

Q14

Q15

7 Conclusion and future work

Spatial data infrastructures have gained increasing popularity throughout the world as the
solution to enable the interoperability of geospatial data provided by different sources. To
achieve such interoperability, many current infrastructures have been developed based on a set
of standards. Important examples of these patterns include the use of OGC web services,
which enable clients to access geospatial data provided by different providers by using a
standardized interface.

One important challenge that needs to be overcome for the SDIs consists of allowing their
the geospatial data they are interested in. In order to
clients to easily find out
accomplish that task, many current infrastructures offer a catalog service. Even though

Fig. 13 Multidimensional queries validation results

Geoinformatica

they have improved the geospatial data retrieval capabilities, current catalog services
limitations. The use of a single record to describe the entire
still have important
dataset provided by a service,
the lack of means to describe the semantics of the
available data and the lack of an effective ranking to organize the results retrieved
from a user’s request are some of the limitations that reduce the quality of the queries
offered by these services.

Aiming to solve these limitations, this article presented SESDI, which is a new framework
to enhance the quality of geospatial data retrieval in SDIs. The article offers two contributions.
The first one is the proposition of a new model that reuses ideas from classic information
retrieval to improve the description and retrieval of feature types. The second one is the
development of a set of metrics, based on the proposed model, to rank the results retrieved
from user queries. The framework presented in this article was evaluated based on
geospatial data described in the catalog service formerly provided by the North
American Spatial Data Infrastructure, as part of the Geospatial One-Stop portal. The
results obtained from experimental evaluation showed that the approach proposed in
this article improved recall and precision for most of spatial, thematic, temporal and
multidimensional queries.

In spite of its contributions, the current version of this work has some limitations that must be
overcome with future research. Firstly, it is necessary to improve the thematic tagging process.
Nowadays, the association between the elements found in the Wikipedia pages and the concepts
defined in the ontologies used by the framework is achieved by using a string matching
technique. In some situations, differences between the text found in the page and the terminol-
ogy defined in the ontology prevents the generation of some relevant annotations. In the case of
homonyms, some undesirable tags can be generated. We think that the use of DBPedia [3] as an
additional support tool can help to overcome this limitation. DBPedia, which is based on the
Open Linked Data project [8], provides links that relates Wikipedia pages and their respective
categories to data offered by other open databases available on the Web.

Another limitation of our work concerns thematic queries. In the current version, the theme
used in a query must be a concept defined in the ontologies used by the framework, which
limits the range of queries available for the users. To overcome this limitation, an additional
index based on keywords could be used as a support tool. The search engine would use that
index whenever there are no concepts in the framework’s ontologies to represent the theme
requested by the user. Moreover, the index would enable feature types that have no thematic
tags to be retrieved during thematic queries.

Regarding client access, our framework has been implemented as a prototype and currently
is able to handle only queries posed through its graphical interface, thus requiring human
interaction. To evolve from this point, we plan to integrate our framework with an
open source tool
implements the OGC CSW standard. Such integration will
enable the framework to be used to handle queries posed by other software applica-
tions, through a standardized web service. GeoNetwork2 is a likely candidate for such
an integration tool, since it has been adopted to implement
the catalog service of
many current spatial data infrastructures.

that

Acknowledgments The authors acknowledge the support provided by Instituto Federal de Educação, Ciência
e Tecnologia da Paraíba (IFPB), Conselho Nacional de Desenvolvimento Científico e Tecnológico (CNPq) and
Fundação de Amparo à Pesquisa do Estado de Minas Gerais (FAPEMIG), Brazilian agencies in charge of
fostering research and development.

2 http://geonetwork-opensource.org/

References

Geoinformatica

1. Andrade FG, Baptista CS (2011) Using semantic similarity to improve information discovery in spatial data

infrastructures. J Inf Data Manag 2(2):301–308

2. Athanasis N, Kalabokidis K, Vaitis M, Soulakellis N (2009) Towards a semantics-based approach in the
development of geographic portals. Comput Geosci 35(2):301–308. doi:10.1016/j.cageo.2008.01.
014

3. Auer S, Bizer C, Kobilarov G, Lehmann J, Cyganiak R, Ives Z (2007) DBpedia: a nucleus for a
Web of open data. The 6th International Semantic Web Conference. doi:10.1007/978-3-540-76298-
0_52.

4. Baader F, Calvanese D, McGuinness D, Nardi D, Patel-Schneider P (2003) The Description Logic hand-

book: theory, implementation, applications. Cambridge University Press, Cambridge

5. Baeza-Yates R, Ribeiro-Neto B (1999) Modern information retrieval. Addison Wesley, London
6. Bai Y, Di L, Wei Y (2009) A taxonomy of geospatial services for global service discovery and interoper-

ability. Comput Geosci 35(4):783–790. doi:10.1016/j.cageo.2007.12.018

7. [7] Beaujardiere J (2004) OGC Web Map Service Interface v1.3.0. Open Geospatial Consortium. http://

portal.opengeospatial.org/files/?artifact_id=14416. Accessed 28 September 2013

8. Bizer C, Heath T, Berners-Lee T (2009) Linked Data - the story so far. Int J Semant Web Inf Syst 5(3):1–22.

doi:10.4018/jswis.2009081901

9. Chen N, Chen Z, Hu C, Di L (2011) A capability matching and ontology reasoning method for high
precision OGC web service discovery. Int J Digit Earth 4(6):449–470. doi:10.1080/17538947.2011.
553688

10. Fox EA, Shaw, JA (1994). Combination of multiple searches. Second Text Retrieval Conference (TREC-2),

11. Ge J, Qiu Y (2008) Concept similarity matching based on semantic distance. Int Conf Semant Knowl Grid.

1994, 243–252.

doi:10.1109/SKG.2008.24

12. Guarino N (1995) Formal ontology, conceptual analysis and knowledge representation. Int J Hum Comput

Stud 43(5–6):625–640. doi:10.1006/ijhc.1995.1066

13. Janowicz K, Wilkes M, Lutz M (2008) Similarity-based information retrieval and its role within spatial data

infrastructures. Int Conf Geogr Inf Sci. doi:10.1007/978-3-540-87473-7_10

14. Klien E, Lutz M, Kuhn W (2006) Ontology-based discovery of geographic information services - an
application in disaster management. Comput Environ Urban Syst 30:102–123. doi:10.1016/j.
compenvurbsys.2005.04.002

15. Lemmens R, de By R, Gould M, Wytzisk A, Granell C, Van Oosterom P (2007) Enhancing geo-service
chaining through deep service descriptions. Trans GIS 11(6):849–871. doi:10.1111/j.1467-9671.2007.01079.x
16. Li W, Yang C, Yang C (2010) An active crawler for discovering geospatial web services and their

distribution pattern. Int J Geogr Inf Sci 24(8):1127–1147. doi:10.1080/13658810903514172

17. Li W, Yang C, Nebert D, Raskin R, Houser P, Wu H, Li Z (2011) Semantic-based web service discovery and
chaining for building an Arctic spatial data infrastructure. Comput Geosci 37(11):1752–1762. doi:10.1016/j.
cageo.2011.06.024

18. Li W, Raskin R, Goodchild MF (2012) Semantic similarity measurement based on knowledge mining: an
artificial neural network approach. Int J Geogr Inf Sci 26(8):1415–1435. doi:10.1080/13658816.2011.
635595

19. Li Z, Yang CP, Wu H, Li W, Miao L (2011) An optimized framework for seamlessly integrating OGC Web
Services to support geospatial sciences. Int J Geogr Inf Sci 25(4):595–613. doi:10.1080/13658816.2010.
484811

20. Liu K, Yang C, Li W, Li Z, Wu H, Rezgui A, Xia J (2011) The GEOSS clearinghouse high performance
search engine. The 19th International Conference on Geoinformatics. doi:10.1109/GeoInformatics.2011.
5981077.

21. Lutz M (2007) Ontology-based descriptions for semantic discovery and composition of geoprocessing

services. GeoInformatica 11:1–36. doi:10.1111/j.1467-9671.2007.01079.x

22. Lutz M, Klien E (2006) Ontology-based retrieval of geographic information. Int J Geogr Inf Sci 20(3):233–

23. Lutz M, Kolas D (2007) Rule-based discovery in spatial data infrastructure. Trans GIS 11(3):317–336. doi:

260. doi:10.1080/13658810500287107

10.1111/j.1467-9671.2007.01048.x

24. Lutz M, Witte J, Klien E, Schubert C, Christ I (2009) Overcoming semantic heterogeneity in spatial data

infrastructures. Comput Geosci 35(4):739–752. doi:10.1016/j.cageo.2007.09.017

Geoinformatica

25. Molina M, Bayarri S (2011) A multinational SDI-based system to facilitate disaster risk management in the

Andean Community. Comput Geosci 37(9):1501–1510. doi:10.1016/j.cageo.2011.01.015

26. [26] Nebert D (2004) Developing spatial data infrastructures: The SDI Cookbook v2.0. Global Spatial Data
Infrastructure. http://www.gsdi.org/docs2004/Cookbook/cookbookV2.0.pdf. Accessed 29 September
2013

27. [27] Nebert D, Whiteside A, Vretanos P (2007) OpenGIS® Catalogue Services Specification v2.0.2. Open
Geospatial Consortium. http://portal.opengeospatial.org/files/?artifact_id=20555. Accessed 29 September
2013

28. Resnik P (1999) Semantic similarity in a taxonomy: an information-based measure and its
application to problems of ambiguity in natural language. J Artif Intell Res 11:95–130. doi:10.
1613/jair.514

29. Rodriguez A, Egenhofer M (2003) Determining semantic similarity among entity classes from
IEEE Trans Knowl Data Eng 15(2):442–456. doi:10.1109/TKDE.2003.

different ontologies.
1185844

30. Salton G, Buckley C (1988) Term-weighting approaches in automatic text retrieval. Inf Process Manag

24(5):513–523. doi:10.1016/0306-4573(88)90021-0

31. Smits P, Friis-Christensen A (2007) Resource discovery in a European spatial data infrastructure. IEEE Trans

Knowl Data Eng 1(19):85–95. doi:10.1109/TKDE.2007.250587

32. Stock K, Atkinson R, Higgins C, Small M, Woolf A, Millard K, Arctur D (2010) A semantic registry using a
feature type catalogue instead of ontologies to support spatial data infrastructures. Int J Geogr Inf Sci 24(2):
231–252. doi:10.1080/13658810802570291

33. Tversky A (1977) Features of similarity. Psychol Rev 84(4):327–352. doi:10.1037/0033-295X.84.4.327
34. [34] Vretanos PA (2005) Web Feature Service Implementation Specification v.1.1.0. Open
Geospatial Consortium. http://portal.opengeospatial.org/files/?artifact_id=8339. Accessed 29
September 2013

35. [35] Whiteside A, Greenwood J (2007) OGC Web Services Common Standard v2.0.0. Open
Geospatial Consortium. http://portal.opengeospatial.org/files/?artifact_id=38867. Accessed 29
September 2013

36. Wiegand N, Garcia C (2007) A task-based ontology approach to automate geospatial data retrieval. Trans

GIS 11(3):355–376. doi:10.1111/j.1467-9671.2007.01050.x

37. Yue P, Di L, Yang W, Yu G, Zhao P (2007) Semantics-based automatic composition of geospatial Web

service chains. Comput Geosci 33(5):649–665. doi:10.1016/j.cageo.2006.09.003

38. Zhang C, Zhao T, Li W, Osleeb JP (2010) Towards logic-based geospatial feature discovery and integration
using web feature service and geospatial semantic web. Int J Geogr Inf Sci 24(6):903–923. doi:10.1080/
13658810903240687

Fabio Gomes de Andrade is a professor at the Computer Science Department of the Instituto Federal de
Educação, Ciência e Tecnologia da Paraíba, Brazil, where he has been since 2002. He received his Ph. D.
degree in Computer Science from Universidade Federal de Campina Grande, Brazil, in 2012, and has authored
papers in international conferences, book chapters and journals. His research interests include spatial data
infrastructures, geographic information retrieval, semantic web, distributed databases and open linked data.

Geoinformatica

Cláudio de Souza Baptista is an Associate Professor at the Computer Science Department and Director of the
Information Systems Laboratory at the Universidade Federal de Campina Grande, Brazil. He received a PhD
degree in Computer Science from University of Kent at Canterbury, United Kingdom, in 2000. His research
interests include geographical information systems, database, and information retrieval.-

Clodoveu Augusto Davis Jr. is a professor at the Computer Science Department of the Universidade Federal de
Minas Gerais (UFMG), in Belo Horizonte, Brazil. He holds a PhD (2000) and a MSc (1992) in Computer
Science from UFMG, and is also a civil engineer (UFMG, 1985). Current research areas are mostly on
geoinformatics, including geographic information systems (GIS), spatial databases, spatial data infrastructures,
geographic data modeling, geocoding, and geographic information retrieval.

