This article was downloaded by: [Florida Atlantic University]
On: 01 September 2013, At: 11:41
Publisher: Taylor & Francis
Informa Ltd Registered in England and Wales Registered Number: 1072954 Registered office: Mortimer
House, 37-41 Mortimer Street, London W1T 3JH, UK

International Journal of Geographical Information
Science
Publication details, including instructions for authors and subscription information:
http://www.tandfonline.com/loi/tgis20

Agent-based modelling environment for spatial
decision support
Raja R. Sengupta a & David A. Bennett b
a Department of Geography, 4438 Faner Hall, Southern Illinois University, Carbondale, IL
62901-4514, USA; e-mail: rajasen@siu.edu
b Department of Geography, 316 Jessup Hall, The University of Iowa, Iowa City, IA 52252,
USA; e-mail: david-bennett@uiowa.edu
Published online: 03 Dec 2010.

To cite this article: Raja R. Sengupta & David A. Bennett (2003) Agent-based modelling environment for spatial decision
support, International Journal of Geographical Information Science, 17:2, 157-180, DOI: 10.1080/713811747

To link to this article:  http://dx.doi.org/10.1080/713811747

PLEASE SCROLL DOWN FOR ARTICLE

Taylor & Francis makes every effort to ensure the accuracy of all the information (the “Content”) contained
in the publications on our platform. However, Taylor & Francis, our agents, and our licensors make no
representations or warranties whatsoever as to the accuracy, completeness, or suitability for any purpose of
the Content. Any opinions and views expressed in this publication are the opinions and views of the authors,
and are not the views of or endorsed by Taylor & Francis. The accuracy of the Content should not be relied
upon and should be independently verified with primary sources of information. Taylor and Francis shall
not be liable for any losses, actions, claims, proceedings, demands, costs, expenses, damages, and other
liabilities whatsoever or howsoever caused arising directly or indirectly in connection with, in relation to or
arising out of the use of the Content.

This article may be used for research, teaching, and private study purposes. Any substantial or systematic
reproduction, redistribution, reselling, loan, sub-licensing, systematic supply, or distribution in any
form to anyone is expressly forbidden. Terms & Conditions of access and use can be found at http://
www.tandfonline.com/page/terms-and-conditions

. .   , 2003
. 17, . 2, 157–180

Research Article

Agent-based modelling environment for spatial decision support

RAJA R. SENGUPTA
Department of Geography, 4438 Faner Hall, Southern Illinois University,
Carbondale, IL 62901-4514, USA; e-mail: rajasen@siu.edu

and DAVID A. BENNETT
Department of Geography, 316 Jessup Hall, The University of Iowa, Iowa City,
IA 52252, USA; e-mail: david-bennett@uiowa.edu

(Received 27 July 2001; accepted 22 May 2002)

Abstract. The goal of Spatial Decision Support Systems (SDSS) is to assist
decision-makers as they generate alternative solutions to a variety of semi-
structured geographical problems, and to evaluate these solutions with the help
of applicable data and analytical models. Most existing SDSS, however, support
only a limited number of decision-making environments, and are not designed to
utilize web-accessible repositories of spatial data and models. These limitations
are overcome through the use of
‘software agents’ within an agent-oriented
modelling framework, called ‘Distributed Intelligent Geographical Modelling
Environment (DIGME)’. The utility of this framework is demonstrated through
the development of an SDSS to evaluate the ecological and economic impacts of
agricultural policy for the Cache River watershed of southern Illinois.

1.

Introduction
Sprague (1980) deﬁned Decision Support Systems (DSS) as computer systems
that are: (i) designed to solve semi- and un-structured problems that upper level
managers often face; (ii) able to combine analytical models with traditional data
storage and retrieval functions; (iii) user-friendly and accessible by decision makers
with minimal computer experience; and (iv) ﬂexible and adaptable to diﬀerent
decision-making approaches. Extending this deﬁnition, Armstrong et al. (1986) used
the term Spatial Decision Support Systems (SDSS) to refer to computer programs
that assist decision-makers generate and evaluate alternative solutions to semi-
structured spatial problems through the integration of analytical models, spatial data
and traditional geoprocessing software (such as GIS). While the potential utility of
SDSS technologies is well recognized, two problems have historically impeded the
development of such systems: (i) geographically referenced data capable of supporting
(ii) the
desired analyses often did not exist and was too expensive to acquire;
integration of modelling software and data from disparate sources was beyond the
technological capabilities of many potential users. While the availability of a large

International Journal of Geographical Information Science
ISSN 1365-8816 print/ISSN 1362-3087 online © 2003 Taylor & Francis Ltd
http://www.tandf.co.uk/journals
DOI: 10.1080/1365881022000015990

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 158

R. R. Sengupta and D. A. Bennett

number of spatial datasets on the Internet has helped to alleviate the ﬁrst problem,
the second remains a signiﬁcant challenge.

Nijkamp and Scholten (1993) suggest that most decision-makers want an SDSS
to provide them with strategic information without having to learn the technical
details of the system. Building an SDSS, however, often requires the integration of
disparate models and data by individuals possessing considerable technical expertise.
Decision-makers, who are typically infrequent users of GIS software, often lack the
skills necessary to integrate web-accessible analytical models, GIS and spatial data
(Davies and Medyckyj-Scott 1996). The result is a ‘GIS bottleneck’, where they have
to rely on a GIS analyst for generating and evaluating solutions (Armstrong 1994).
Further, even after an analyst has integrated the components for decision-makers,
there may be a ‘conceptual access barrier’ that limits the utility of the newly created
SDSS (Armstrong and Densham 1995). The conceptual access barrier arises from
a lack of understanding of the sequence of map-algebraic operations necessary to
perform spatial analysis, and is complicated further by requiring the user to move
back-and-forth between GIS software and an external analytical model.

An agent-based approach can be used to help ameliorate the issues discussed

above, by emulating the behaviour of GIS analysts. These agents:

(i) assist users locate and retrieve spatial data and analytical models distributed

(ii) automatically transform spatial data for input into analytical models through

on the Internet

the use of GIS software.

The prototype SDSS framework, called the ‘Distributed Intelligent Geographical
Modelling Environment (DIGME)’, described in this paper illustrates the utility of
this approach. DIGME is tested through the creation of an SDSS for the Cache
River watershed of southern Illinois. This SDSS is designed to help evaluate the
impacts of alternative agricultural policies using
ecological and economic
data and analytical models located on an intranet at Southern Illinois University
at Carbondale.

2. Background

To meet the objectives of this study we rely on a variety of established and
emerging technologies. System integration using information stored in digital spatial
data repositories provides the overarching motivation for this work. Software agents
are the primary tools that support software development and data integration.

2.1. Integration strategies for SDSS

SDSS software is often created by coupling several disparate software modules
into a common computing framework. For example, an SDSS designed to support
watershed management might be comprised of: (i) hydrological and economic models
that simulate the impact of alternative regulatory strategies on stakeholders; (ii) GIS
software for the manipulation of needed spatial data; (iii) and spatial data. Three
basic forms of coupling (loose, tight and full) have been identiﬁed in the literature
(Goodchild 1992, Nyerges 1993), all of which possess limitations (Bennett 1997).

In loose coupling, spatial data is reformatted to meet the input data requirements
of speciﬁc models (Goodchild 1992, Nyerges 1993). While loosely coupled systems
are very ﬂexible, users of such ‘systems’ must contend with multiple user interfaces
and a myriad of underlying data formats. In contrast, tightly coupled systems use

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Agent-based modelling environment for spatial decision support

159

wizards to automate the process of data conversion and provide links to analytical
models from within a GIS software interface. This approach simpliﬁes the user
interface, but forfeits some of the ﬂexibility associated with loosely coupled systems.
Furthermore, users must still work with multiple data formats. In fully coupled
systems, GIS capabilities and spatial models are integrated into a single software
package. User interaction with these systems is relatively straightforward and data
are stored in a common format. There is concern, however, that fully coupled systems
lack the ﬂexibility needed to adapt to changing decision-making environments.

The DIGME framework utilizes software agents to capture the ﬂexibility of
loosely coupled architectures, while maintaining the integrated appearance and ease
of use associated with tight and fully coupled systems.

2.2. Digital repositories of spatial data

With the advent of the Internet, various data producers are making large amounts
of geographical data and models available for download by users. Currently, this
information is disseminated either through the website of the agency responsible for
producing the data, or as part of a digital library. Access to these resources often
requires the services of an Internet search engine. Most search engines use ‘web-
crawling’ software that scan frequently visited pages and create indexes of their
contents. These indexes form the information backbone for the search engines, and
are often categorized by subject matter to facilitate fast retrieval.

The National Spatial Data Infrastructure (NSDI) was created in 1984 (Ward 1995)
to develop a ‘consistent means to share geographical data’ (http://www.fgdc.gov/nsdi).
Producers of data provide metadata (or data about the datasets) to NSDI on a
voluntary basis. A geospatial data clearinghouse node, which acts as a point of entry
to the NSDI, provides a spatially indexed search engine to peruse the metadata ﬁles
stored on a decentralized system of servers. The results of the search are subsequently
relayed to the end user. The FGDC Clearinghouse Registry currently lists over 300
participating clearinghouse nodes from around the world (http://registry.gsdi.org/
registry/).

Concurrent with the growth of the Internet, there has also been a signiﬁcant
increase in the amount of material released on electronic media. This has led to the
development of digital libraries that provide user-friendly mechanisms for storing
and organizing large amounts of digital information. These data are often available
for query, retrieval, and processing via the Internet. In some cases, it is not nec-
essary for the documents to be located at the same place as the search engine or
digital library portal. Rather, the contents of a digital library may be distributed
over several machines at diﬀerent locations, and searchable via a common interface.
The Alexandria Digital Library project is one example of a data depository for
spatial data (Buttenﬁeld and Goodchild 1996). While digital libraries and on-line
resources are producing a data rich environment for potential users of geographically
references data, the integration of these data with analytical software remains a
challenging task for many.

2.3. Software agents

The term ‘software agent’ is used to describe computer programs that (Woolridge
and Jennings 1995): (i) can function autonomously without human intervention;
(ii) interact with one another and with humans via an agent-communication language;

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 160

R. R. Sengupta and D. A. Bennett

(iii) respond to changes in their environment; and (iv) exhibit goal-directed behaviour.
Further, some artiﬁcial intelligence researchers suggest that humanistic characteristics
such as beliefs, desires, intentions, (Shoham 1993) and even emotions (Maes 1995)
should be a part of agent behaviour. Other attributes that are at times used to
describe agent behaviour include: (i) mobility, where the agents have the ability to
transport themselves at will between various computers on a network (Kotz and
Gray 1999); (ii) veracity, the assumption that agents will not knowingly communicate
false information; (iii) benevolence, the assumption that agents do not have conﬂicting
goals; and (iv) rationality, the assumption that an agent will act in a manner that it
sees ﬁt in order to solve a problem at hand.

Agents achieve autonomy by sensing activity (through sensors) and modifying
their environment (through eﬀectors) (ﬁgure 1). The collective action and reaction
of multiple agents responding to events cause changes to cascade through the system
and modify the state of the environment in which they operate (Russell and
Norvig 1995). Within the framework of spatial modelling, autonomous agents have
been used to: (i) simulate the interactions among users of recreational facilities
(Deadman and Gimblett 1994, Gimblett et al. 2000); (ii) model the ‘actor-institution-
environment’ linkages that cause tropical deforestation and subsequent cultivation
in the southern Yucatan peninsula of Mexico (Manson 2000); and (iii) model animal
populations and behaviour in areas with very low population densities and a large,
diverse, and fragmented terrain (Westervelt and Hopkins 1996). Within the frame-
work of decision-support, autonomous agents have been written to facilitate interop-
eration of diﬀerent software products (Genesereth and Ketchpel 1994), and promote
the fair representation of stakeholders within a group decision-making scenario
(Edmonds et al. 1994).

While agent technology has been applied to a variety of tasks, the agents utilized
here are a form of ‘autonomous personal agent’ (Maes 1995). In this context, personal
agents cooperate with inexperienced users to initiate and manage complex computer
tasks (Hewitt 1986). Personal agents can therefore: (i) hide the complexity of diﬃcult

Figure 1. An Agent’s interactions with its environment.

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Agent-based modelling environment for spatial decision support

161

tasks from the user; (ii) perform tasks on the users’ behalf; (iii) train/teach users;
(iv) help multiple users share information; (v) monitor events; and (vi) interact with
a changing operating environment on behalf of the user. Personal agents may also
be capable of learning through repeated interaction with the user (see for example
Kautz et al. 1997). An example of this kind of application is an agent that learns to
automatically sort through a user’s electronic mail by observing repeated patterns
in the user’s behaviour (Maes 1995). In DIGME, personal agents collaborate with
users and assist them as they manipulate complex datasets and geoprocessing
software.

3. Components of the DIGME architecture

Software agents within DIGME are supported by three key components (i.e. met-
adata, Geographic Data Deﬁnition Language, and blackboard architecture) that
impart the desired characteristics of ﬂexibility and ease of use. Agents use metadata
to search for both models and data. The Geographic Data Deﬁnition Language
(GDDL) serves as an inter-agent communication language to specify the parameters
of the search process. The blackboard architecture is used as an inference mechanism
to develop transformation plans that integrate models and data into a spatial decision
support system.

3.1. Metadata

Metadata is usually deﬁned as ‘data about the content, quality, condition, and
other characteristics of data’ (Federal Geographic Data Committee 1994, 1). Here
we extend this deﬁnition to include information about models and analytical tools.
We contend that model metadata is required to index and categorize the growing
number of spatial models available for download from the Internet. Using model
metadata, it would also be possible to build an indexing structure similar to NSDI
to facilitate the search and retrieval of these resources. Further, we propose that
model metadata consists of the following elements: category (e.g. economic farm
model), name (e.g. GEOLP), input ﬁle format requirements, output ﬁle format(s),
an assessment of reliability and accuracy, assumptions related to proper use and
application, and a brief description of the model itself. A sample metadata ﬁle used
within DIGME for the documentation of a farm-based economic model (GEOLP)
is shown in ﬁgure 2. The input and output ﬁle format speciﬁcation is documented
using the Geographic Data Deﬁnition Language.

Figure 3 illustrates a metadata ﬁle for the documentation of data characteristics.
This ﬁle utilizes components of the content standards recommended by the FGDC
for geospatial data (Federal Geographic Data Committee 1994).

3.2. Geographic Data Deﬁnition L anguage (GDDL)

In multi-agent systems, software agents often need to communicate task-related
information with peers in an expressive agent communication language (Woolridge
and Jennings 1995). GDDL is a prototype query language that supports a range of
geographic queries (Sengupta et al. 1996). Within the DIGME framework, it is used
by agents to specify input data requirements for various models. GDDL operators
were developed from Egenhofer and Franzosa’s (1991) 4-intersection model of
topological relationships, Tomlin’s (1990) Map Algebra, the Lisp programming

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 162

R. R. Sengupta and D. A. Bennett

Figure 2. Sample model metadata ﬁle.

Figure 3. Sample data metadata ﬁle.

language, and GIS software packages. More speciﬁcally the following operators were
implemented:

(i) Disjoint, Meet, Equal, Inside, Contains, Covers, CoveredBy, and Overlap,

derived from the 4-intersection model.

(ii) Arithmetic operators, +, −, * and / derived from Map Algebra.

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Agent-based modelling environment for spatial decision support

163

(iii) Relational (>, <, >=, <=), equality (equal), negation (not), assignment
(let, setf ), logical (and, or), conditional (if ), and iterative (loop, dolist); these
operators were derived from LISP

(iv) Proximity operators from commercial GIS software (e.g. Buﬀer).

A hierarchical categorization scheme for geographic objects, called the Geographical
Name System or GNS (e.g. manmade.roads.interstate), was also developed as part
of GDDL, and is described in Sengupta et al. (1996). The GNS can be used to
specify the thematic properties of a dataset. A sample GDDL query requesting soils
data for a speciﬁc region (i.e. the Big Creek subwatershed of the Cache River in
southern Illinois) is shown in ﬁgure 4.

3.3. Blackboard systems

Imagine a group of individuals sitting in front of a blackboard, each individual
possesses expertise in a diﬀerent topical area. Someone writes a problem on the
blackboard. No individual expert can solve the complete problem independently
and, thus, collaboration is required. One expert posts a partial solution on the
blackboard. Starting from that partial solution, another expert is able to move one
step closer to a complete solution. Several threads of inquiry may begin to evolve,
some leading to dead ends, others progressing incrementally closer to a solution.
This process of parallel, stepwise progress continues until the problem is solved or
declared to be unsolvable with available resources.

Electronic blackboards attempt to emulate this collaborative problem solving
process through logical inferencing and rational action. Blackboard systems are
comprised of three basic components (Corkill 1991) (ﬁgure 5): (i) knowledge sources
(KSs); (ii) electronic blackboards; and (iii) control components. The blackboard is
a global database to which problems and partial solutions are posted. A KS stores
a discrete element of knowledge required to solve a partial problem, or perform a
particular function (the electronic equivalent of an expert). It is also able to estimate
the value of its contribution during various stages of problem solving. These two

Figure 4. Sample GDDL Query for soils data.

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 164

R. R. Sengupta and D. A. Bennett

Figure 5. Components of a blackboard architecture (from Corkill 1991).

functions of the KS constitute an inference mechanism. The inferencing process is
orchestrated by the control component (the electronic equivalent of a facilitator).

The blackboard model of problem solving is unique because of the incremental
and opportunistic nature of the partial solutions being generated (Nii 1986). It is
incremental because the ﬁnal solution is generated in stepwise fashion- one KS
linking to the next. It is opportunistic because KSs respond instantly and autonom-
ously when making relevant contributions to the development of partial solutions.
Incremental and opportunistic contributions to problem resolution results in an
inference mechanism that is highly ﬂexible and able to help agents reason within
environments where the knowledge is incomplete or uncertain, such as the Internet.
Because of their ﬂexibility, blackboard systems have been used for a variety of
tasks including speech recognition (Hearsay II), identiﬁcation of protein crystal
structures (CRYSALIS),
interpretation of Sonar Signals (HASP/SIAP), and to
develop interoperability between legacy software (Erman et al. 1990, Carver and
Lesser 1994, Lander 1995).

In DIGME, agents utilize blackboard architecture to develop a set of data
transformations that match geographic data to the input requirements of selected
models located in network-accessible repositories. Without the ﬂexibility aﬀorded
by blackboard architectures, this process has signiﬁcant combinatorial complexity.
For example, a typical GIS software package may have 1000 commands. Suppose
that for a particular problem the transformation of raw data into usable form
requires the use of just four commands. For this problem, the number of options
that must be evaluated (consisting of the commands and possible sequences) is 10004.
A brute force approach is clearly not the best alternative. Blackboard architecture
provides the heuristic search mechanism needed to identify the relevant set of
transformations that convert available data into formats required by speciﬁc models.
Three electronic blackboards (i.e. database blackboard, transformation black-
board and aspatial blackboard) and three types of KSs (i.e. database KSs, transforma-
tion KSs, and aspatial KSs) are available within the DIGME framework. Problem
solving activities are distributed among these three types of KSs and blackboards
to increase the response eﬃciency of DIGME. The database KSs contain information

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Agent-based modelling environment for spatial decision support

165

about spatial datasets available in various digital repositories, and are used in
conjunction with the database blackboard to identify relevant data. The transforma-
tion KSs, along with the transformation blackboard, contain information about
possible data transformations (including transferring data between computers), and
are used by the agents to convert spatial data into the format required by a speciﬁc
model. The aspatial blackboard and aspatial KSs perform a function similar to the
transformation blackboard and KSs, but deal with transformations relating to
aspatial databases, such as DbaseB ﬁles.

4. The DIGME architecture

Five classes of agents have been implemented to help users ﬁnd, access and use
spatial data and models (ﬁgure 6). ‘Model search’ and ‘data search’ agents help users
search for and select a spatial model and associated geographical data from network
accessible repositories. Transformation agents formulate a plan (using the blackboard
architecture) to convert the network accessible data into the format required by a
selected model. Execution agents retrieve both the model and data by executing the
plan developed by the transformation agents. Model agents facilitate the execution
of models, and visualization of the results. A combination of ESRI© Avenue scripting
language (to provide access to GIS functionality), a Lisp software development
environment (i.e. Allegro Common Lisp), and a commercially available blackboard
architecture (GBB) was used to create DIGME agents.

4.1. Model search agent

Within the DIGME framework, SDSS development begins with a user interacting
with a model search agent (ﬁgure 7). This agent searches model metadata ﬁles to

Figure 6. Overall agent architecture of DIGME.

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 166

R. R. Sengupta and D. A. Bennett

Figure 7.

Interaction of the user with the model search agent.

determine the kinds of models that are available in network accessible repositories
and presents a compiled list to the user. If desired, the user can also request more
detailed information about particular models once they are located (e.g. its outputs,
and a general model description). Control is passed onto the model agent when the
user selects a speciﬁc model.

4.2. Model agent

The model agent reads the model metadata ﬁle for the selected model to determine
input data requirements. These requirements are bundled into search requests sent
to data search agents. Users can add additional constraints to this request that
specify,
for example, needed accuracy, projection, and temporal extent. This
information is speciﬁed as a GDDL query.

4.3. Data search agents

Data search agents use the GDDL query generated by the model agent to initiate
a search of network accessible metadata to locate thematically suitable datasets for
model input (ﬁgure 8). The GNS information stored in metadata ﬁles is used to
compare the thematic content of accessible data to model needs (ﬁgures 2 and 3).
Relevant metadata are retrieved and users are then prompted to select desired data.
The selected datasets are subject to further scrutiny to determine if characteristics
other than thematic content (e.g. format and data location) match model require-
ments. If required, transformation agents can create transformation plans to convert
these datasets into the necessary format.

4.4. T ransformation agent and the blackboard architecture

The transformation agent instantiates the blackboard architecture by creating
a database KS that represents the user-selected dataset. This database KS then
compares its own characteristics to those required by the model, and posts un-
matched characteristics to the transformation blackboard as a ‘Request For
(ﬁgure 9). An RFDT posting consists of three
Data Transformation’
sections: wanted-characteristics, available-characteristics, and change-characteristics
(ﬁgure 10). The change-characteristics section represents the unmatched character-
istics of the selected dataset. The goal of the blackboard architecture is to ﬁnd the
sequence of transformation KSs that ‘empties’ this section.

(RFDT)

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Agent-based modelling environment for spatial decision support

167

Figure 8. Presentation to and selection of datasets by users; and use of blackboard
architecture (GBB) to determine compatibility of selected data with models.

Figure 9. Database KS compare available data characteristics to model requirements, and
posts unmatched data characteristics on transformation blackboard as an RFDT.

Transformation KSs deﬁne single functions (i.e. they are atomic). Atomic deﬁni-
tions provide the ﬂexibility needed to adapt to unexpected circumstances. Each
transformation KS is comprised of three elements: a pre-condition clause, a post-
condition clause, and an action function. The pre-condition clause documents the

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 168

R. R. Sengupta and D. A. Bennett

Figure 10. A Sample Request For Data Transformation (RFDT).

characteristics required of a dataset before it can be transformed (e.g. a reprojection
tool may operate only on data with the following three characteristics: (i) format:
vendor A; (ii) data structure: vector; (iii) input coordinate system: latitude and
longitude). Post-condition clauses document the output state of the data (e.g. output
coordinate system- UTM). Change-characteristics listed within the RFDT are com-
pared to the pre- and post-condition clauses of each transformation KS. By compar-
ing what is needed to what it can do, KSs estimate their potential contribution to
the solution of a problem. This estimate is noted as a ‘rating’ score. Consider, for
example, the problem where a vector dataset in vendor A’s proprietary ﬁle format
must be projected from geographical to UTM coordinates. If a KS can accomplish
this task, it assigns itself a high rating. If it can accomplish the general task (e.g. project
from geographical to UTM) but only a subset of the preconditions are met, it will
assign itself a somewhat lower rating. Figure 11 shows the structure (including the
precondition function) of such a KS. It represents an Arcview 3.2©-based projection
tool called Projector! located on a machine with IP address 131.230.146.138 that
works with ESRI shapeﬁles in geographic co-ordinates.

Since the control mechanism of the blackboard architecture selects KSs for
execution based on rating scores, a high rating increases the probability that the
action function of this KS will post a partial solution to the blackboard (in the form
of a new RFDT). The change in the RFDT corresponds to the actual change that
the dataset will undergo if a human operator successfully carried out this transforma-
tion. The new RFDT triggers similar action by other relevant KSs. In this manner,
KSs work collaboratively and incrementally to solve the problem of transforming
data into the desired format.

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Agent-based modelling environment for spatial decision support

169

Figure 11. Pseudo-code for a KS that represents the re-projection of ESRI shapeﬁles from
latitude-longitude to UTM.

Note that since KSs are atomic and transformation plans are constructed in
incremental fashion, it is possible that a speciﬁc action will lead to a computational
dead end. When this happens the system backtracks, instantiates lower rated KSs
and re-initiates the search process.

Further, while some transformation plans (or some portions of it) require the
data transformations to be applied in a particular sequence, there are others for
which the sequence makes no diﬀerence. For example, before reprojecting a dataset
it may be necessary to convert the dataset to the format required by a particular
reprojection tool. It may not matter, however, whether a vector dataset is projected
before or after the creation of its topology. Plans where the sequence of some, but
not all operations have to occur in a particular order, are called Partial Order Plans
(POPs). The advantage of using blackboard architectures to develop POPs is two-
fold: while the precondition functions of the various transformation KSs ensure that
there are no incorrectly ordered transformations, the incremental approach in build-
ing the POP ensures that combinatorial complexities that arise as a result of simple
re-orderings of unrelated transformations are avoided.

4.5. Handling attribute data

A sub-class of transformation KSs were speciﬁcally deﬁned to recognize the need
to integrate aspatial attribute information with spatial data. Aspatial KSs represent
the possible transformations of aspatial data (e.g. relational join, select, and project).
They operate in a manner similar to transformation KSs. These KSs post requests
for attribute data (e.g. relational databases)
to the aspatial blackboard, and
integrate the solutions developed on this blackboard with those generated on the
transformation blackboard.

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 170

R. R. Sengupta and D. A. Bennett

4.6. T erminating the Blackboard Process

The emptying of the change-characteristics section of the RFDT, and a match
between attributes in the wanted-characteristics section with those in the available-
characteristics section, signals a solution. A transformation KS (called the ‘stop-ks’)
watches for this state, and pauses the search process when one is found. The ﬁnal
posting also contains the complete transformation plan (i.e. a POP) designed to
convert data from its existing form into a format required by the selected model.

4.7. Execution agents

The transformation plan is provided to the execution agents by the data search
agent. The execution agents implement the POP and monitor its success. Execution
agents are developed as atomic modules of Avenue scripts and/or operating system
commands, and represent individual transformation KSs in the blackboard architec-
ture. For example, an execution agent that projects a shapeﬁle from latitude-longitude
to UTM co-ordinates is represented by the KS illustrated in ﬁgure 11.

Note that some part of the POP may fail due to unforeseen circumstances
(e.g. network disruptions). If a particular script or command fails to execute, the
failure point is noted and the plan is returned to the blackboard architecture for
re-evaluation. Failure is handled by disabling the oﬀending KS and the plan develop-
ment process is resumed (using the blackboard architecture) in an eﬀort to ﬁnd
alternate solutions.

4.8. Combining multiple models

The development of an SDSS often requires that a problem be decomposed into
several sub-problems, with diﬀerent models being used to evaluate each sub-problem
(Taylor et al. 1999). For example, in modelling groundwater contamination, the
amount of contaminant that reaches an aquifer can be modelled using model A, and
the rate at which it moves through this aquifer determined using model B. However,
this adds a level of complexity to SDSS development, as the results generated by
diﬀerent models (representing sub-problems) must be combined by users to determine
how well competing solutions solve the overall problem. In addition to providing
automated data transformations, DIGME also assists users in linking together
several models through the creation of new metadata documenting model output.
The creation of new metadata ﬁles ensures that the output from one model can be
selected as input data for another model. Therefore, users can focus on the overall
model structure and allow the software to deal with the more technical issues of
model coupling.

5. An application of DIGME

To illustrate the utility of the DIGME framework, a working prototype was
created utilizing several computers connected to the Spatial and Environmental
Analysis Laboratory (SEAL) intranet at Southern Illinois University, Carbondale.
A test problem was set-up that required DIGME to implement an SDSS for the
Cache River Watershed in southern Illinois.

The form and structure of this SDSS is patterned after earlier SDSS work in the
region (Sengupta et al. 2000). It is designed to assist decision-makers ascertain the
impact of federal and state conservation policies on non-point source pollution and
the economy. This traditionally built SDSS is comprised of two analytical modelling
software packages, GEOLP and AGNPS, tightly coupled with a GIS software

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Agent-based modelling environment for spatial decision support

171

package (ArcView© 3.2). GEOLP is a spatially-enhanced linear programming model
that identiﬁes the set of cropping and tillage practices that maximize economic
returns for all farms in the watershed subject to user-deﬁned constraints (such as the
total amount of soil loss). The cropping and tillage practices generated by GEOLP
are then used as the landcover input ﬁle for the sediment erosion and transport
model AGNPS (Young et al. 1989).

While the help of a GIS analyst was required to create the original SDSS, the
integration of GEOLP and AGNPS with spatial data can be automated by using
the DIGME framework. Additionally, the existing SDSS utilized the tight coupling
strategy, thereby sacriﬁcing ﬂexibility. The use of agents and metadata within
DIGME attempt to circumvent this issue by:

(i) performing a real-time search for available data and models, and
(ii) dynamically transforming spatial data needed by AGNPS and GEOLP into

the requisite ﬁle formats.

Seventeen datasets and the two models were distributed on the SEAL intranet.
A brief overview of the seventeen datasets is provided in table 1. Each dataset and
model available for retrieval by the agents on the intranet was represented by
appropriate metadata. Twenty-seven knowledge sources (KSs), representing an equal
number of possible data transformations, were created and stored within the
Blackboard Architecture (see Appendix A). Execution agents were developed to
implement these twenty-seven transformations over the intranet.

During the testing phase, the DIGME prototype successfully transformed avail-
able data into the format required by the models. First, model search and data
search agents searched the intranet for model and data metadata. Then the model
agent translated metadata information into a GDDL query for the transformation
agent, which utilized the KSs within the Blackboard Architecture to develop POPs
for data transformations. The results presented in ﬁgure 12 illustrate a sample of the
transformation plans suggested by the KSs. Execution agents implemented these
transformation plans over the intranet. To test the eﬃcacy of this system in a real-
world environment, network failures were simulated during execution by discon-
necting machines from the intranet. Successful alternative strategies (or POPs) were
developed by the agents in this situation.

This demonstration highlighted two key features of DIGME: autonomy and
ﬂexibility. The success of the prototype in autonomously developing and executing
transformation plans indicates that agents can emulate the behavior of GIS analysts
as they search for raw data and transform it into useful information. This conclusion
was supported by a survey given to eight advanced GIS students at the University
of Kansas who were asked to develop transformation plans for the scenario depicted
above. In all cases, students suggested transformations that were identical to the
ones developed by the transformation agents. The ability of DIGME to develop
alternate strategies (or POPs) to circumvent network failures, and to recognize new
data and models through metadata search, emphasize the ability of DIGME in
sensing its dynamic environment.

6.

Impediments to the development of an Internet-based DIGME
As an Internet-based data transformation engine, the DIGME framework can
support decision-making for various resource management problems by taking
advantage of the large number of spatial models and data available on the world

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Table 1. Overview of available datasets on the Intranet.

Brief description

Location

File name

File type

Illinois Soil Associations Map
Soils data for Big and Cypress creek subwatersheds
Attributes for soil types
Contains additional attributes for soil types
Watershed boundary of the big and cypress creeks
Hydrologic Catalog-Units for Illinois
DEM for misc IL quadrangles
Farms coverage for misc IL Counties
Illinois Landcover data
GEOLP output

computer2.geography.siu.edu
computer3.geography.siu.edu
computer3.geography.siu.edu
computer2.geography.siu.edu
computer3.geography.siu.edu
computer2.geography.siu.edu
computer2.geography.siu.edu
computer2.geography.siu.edu
computer2.geography.siu.edu
computer3.geography.siu.edu

soilassoc.e00
cachesoils.shp
soilattributes1.dbf
soilattributes2.wq1
bigcypwshed
catunits.e00
*dem
*farms.e00
landcov.e00
Geolpout.shp

Vector, export
Vector, shape
Relational Database
Relational Database
Vector, coverage
Vector, export
GRID ASCII
Vector, export
Vector, export
Vector, shape

1
7
2

R

.

R

.

S
e
n
g
u
p
t
a

a
n
d
D

.

A

.

B
e
n
n
e
t
t

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Agent-based modelling environment for spatial decision support

173

Figure 12. Data transformations suggested by blackboard architecture for GEOLP data
requirements.

wide web. Three technical issues may, however, impact the ready adoption of these
kinds of Internet-based solutions: (i) availability of bandwidth; (ii) accessibility to
computing resources; and (iii) scalability.

The availability of adequate bandwidth is critical to the success of an Internet-
based DIGME as data transfer among computers can take signiﬁcant amounts of
time. While this may not be a major problem for servers and desktop computers
connected to the Internet via broadband technologies (i.e. high-speed connections),
it can hamper the performance of DIGME for devices that rely on slower wireless
or telephone network connections (Kotz and Gray 1999). A simple solution to this
problem is to monitor and manage the size of ﬁles being transferred among machines.
In the existing version of DIGME, this is achieved by assigning ratings to the ﬁle
transfer process that are inversely related to ﬁle size. Another solution would be to
use Remote Method Invocation (RMI) and Object Request Broker (ORB) technolo-
gies to allow temporary ﬁle and directory sharing among computers (Wade et al.
1997). This would also reduce the computing resources required by the end user by
capturing the processing and storage power of several computers.

Issues associated with access to computing resources include security permissions,
adequate disk space on servers for remote processing, and alternative locations for
the retrieval of data (mirror sites) in case of network failure. Implicit in the creation
of DIGME is the assumption that mobile agents will have access to adequate
computing resources (such as disk space and CPU time for executing models) on
remote servers. While issues of adequate disk space and CPU time can be viewed
simply as resource constraints, the real challenge is to provide DIGME agents with
full access to these computing resources without being hampered by security designed
to prevent attacks by malicious agents (Kotz and Gray 1999). Research designed
to address the security problem while maintaining agent operability in an open
environment is being conducted (Vigna 1998).

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 174

R. R. Sengupta and D. A. Bennett

A ﬁnal issue impacting the viability of DIGME is scalability. In the DIGME
prototype, the number of postings on the transformation blackboard for two diﬀerent
solutions ranged from a low of 170 to a high of 1194. These translated to approxi-
mately 57 seconds to 20 minutes of processing time on a Pentium 225 Mhz MMX
CPU. Further, it took between 5 to 35 minutes to execute the POPs. These numbers
indicate that the time required to transform data increases exponentially with the
complexity of the environment. In an open environment, where potential data
transformations number in the thousands, the only viable option is to use a distrib-
uted architecture for the development of data transformation plans. This could be
achieved by placing components of the blackboard architecture on several machines
(instead of just at the portal machine), and assigning sub-tasks to each based, for
example, on a taxonomy of geoprocessing functions (i.e. simple heuristics to ‘divide
and conquer’ the solution space could be implemented). A hierarchical blackboard
architecture could be used to maintain the overall control of such a distributed
problem-solving environment. While a discussion of such a system is outside the
scope of this paper, planning systems that use hierarchical blackboard architecture
have been discussed extensively by Carver and Lesser (1994).

7. Discussion and conclusions

The potential beneﬁt of SDSS technology is evidenced by the large investment
individuals have placed in the development of such systems (Armstrong et al. 1991,
Peterson 1993, Watson and Wadsworth 1996). We argue here, however, that this
technology has not matured into its full potential because these systems are typically
diﬃcult to construct, understand, and use. Furthermore, most systems lack the
ﬂexibility needed to adapt to new situations. That is, most spatial decision making
environments still suﬀer from a ‘GIS bottleneck’ (Armstrong, 1994) that limits types
of problems that can be addressed and the number of alternative solutions that can
be evaluated.

Here we develop an agent-based framework, termed DIGME, for integrating
analytical models and spatial data into an SDSS. DIGME helps to overcome the
GIS bottleneck by emulating the search and transformation activities of a GIS
analyst. In the process, it provides decision-makers with direct access to the large
number of online models and data. Examples of models currently available on the
Internet include those designed to identify patterns of criminal activity, erosion hot
spots, and habitat fragmentation (i.e. CRIMESTAT, SWAT, FRAGSTAT). The over-
all result is choice and ﬂexibility in developing tools that provide strategic information
for decision-making.

This framework uses agents to search distributed repositories of data and models
connected to a network, and transform available data for input into models. Metadata
about data and models, the Geographic Data Deﬁnition Language, and a blackboard
architecture-based reasoning mechanism provide agents with the ability to work
autonomously in an open and uncertain environment (i.e. the Internet). While a
few technical hurdles to the development of an Internet-based DIGME remain,
the advantages of an agent-based architecture, i.e. autonomy and ﬂexibility, are
demonstrated through the use of an intranet-based prototype to re-create an SDSS
incorporating two models, GEOLP and AGNPS.

In general, this research illustrates the potential of DIGME to support decision
making for environmental management. It is expected that DIGME will be most
useful to those decision-makers who do not have the technical skills necessary to

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Agent-based modelling environment for spatial decision support

175

create an SDSS on their own by utilizing model and data sources downloaded from
Internet-based repositories. According to Nijkamp and Scholten (1993), most upper
level managers and concerned citizens fall into this category. One concern is that
DIGME makes it easy for uninformed decision-makers to run models without
understanding the assumptions and errors that modelling entails. However, this
danger is not limited to DIGME alone. Watson and Wadsworth (1996) mention
that users of the NELUP DSS designed to model rural land use change often did
not question the results generated by the models. A potential workaround is to
present model assumptions to users and to warn users when violations of these
assumptions occur.

Despite its shortcomings, DIGME is a promising technology that utilizes agents
and metadata to provide decision-makers with greater choice and ﬂexibility in
integrating models and data into decision support technologies. In this sense,
DIGME acts as a ‘DSS generator’ originally envisioned by Sprague (1980).

Acknowledgments

The authors would like to thank Dr Norman Carver of the Computer Science
department at Southern Illinois University for ideas and discussions related to
blackboard system design and implementation. Financial support for this research
was provided by grants from the Illinois Council for Food and Agriculture, and the
Pontikes Center for Management of Information, Southern Illinois University,
Carbondale.

Appendix A: Overview of KSs in the DIGME prototype

Action

Precondition

KS

Start-KS

Stop-KS

ESRIRtoV-KS

Starts the search for
transformations
Stops the search when a
solution is found

Converts an ESRI Raster
dataset into an ESRI Vector
dataset

FTPGen-KS

Helps to move ﬁles from one
directory to another on the
same computer

ESRITopo-KS

Builds topology and objects as
polygons

FTPShp-KS

FTPESRI-KS

FTP KS for Arcview shape
ﬁles—copies .dbf, .shp and .shx
ﬁles
FTP KS for ESRI Vector and
Raster ﬁles—converts the ﬁles
to .e00 format before FTP

No other transformation KS
should have executed
All the desired characteristics
must match available
characteristics of the dataset
A datatype conversion must be
requested and data to be
converted must be located on
computer2 in ESRI’s Raster
Format
A change of host or directory
must be requested. Does not
handle ESRI raster, vector or
shape ﬁles
A datatype conversion must be
requested. Data must be in
ESRI Vector Format, and
located on computer2
A change of host or directory
must be requested. Data must
be in ESRI’s shape ﬁle format
A change of host or directory
must be requested. Data must
in ESRI’s vector or raster ﬁle
format

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 176

R. R. Sengupta and D. A. Bennett

ESRIVtoShp-KS

Converts ESRI vector ﬁles to
ESRI shape ﬁle format

ChkDt-KS

Checks Date

ChkScale-KS

Checks Scale

ChkResV-KS

Checks the Resolution Value

ChkResU-KS

Checks, and changes the
Resolution-unit ﬁeld

ChkAcuV-KS

Checks the Accuracy values

ChkAcuU-KS

Checks, and changes the
Accuracy-unit ﬁeld

A datatype conversion must be
requested. Data must be located
on computer3 and in ESRI
vector ﬁle format
The available-date and wanted-
date ﬁelds must be diﬀerent.
This diﬀerence could be a result
of a complex query posted in
the wanted date ﬁeld, which
could be speciﬁed as a range
with the help of boolean and
comparison operators (e.g. (and
(>19800101)(<19990101))).
ChkDt-KS is designed to
handle such complex queries
The wanted-scale and available-
scale ﬁelds must be diﬀerent. As
with ChkDt-KS, the diﬀerence
could be a result of the
speciﬁcation of wanted-scale as
a complex query (e.g. (>12000))
The wanted-resolution-value
and available-resolution-value
ﬁelds must be diﬀerent. As with
ChkDt-KS, fulﬁllment of
complex queries (consisting of
boolean and comparison
operators) in the wanted-
resolution-value ﬁeld are the
responsibility of this KS
If the units of the resolution
value (as speciﬁed in the
wanted-resolution-unit and
available-resolution-unit ﬁelds)
is diﬀerent, then this KS is
responsible for conversion of
the available units into the
desired units. Only conversions
to/from meters, feet, miles and
kilometers are handled
If the wanted-accuracy and
available-accuracy values are
diﬀerent as a result of complex
queries (consisting of Boolean
and comparison operators),
then this KS is responsible for
determining if the query can be
satisﬁed
If the units of accuracy ﬁeld (as
speciﬁed in the wanted-
accuracy-units and available-
accuracy-unit ﬁelds) is diﬀerent,
then this KS is responsible for
conversion of the available units
into the desired units. Only
conversions to/from meters, feet,
miles and kilometers are handled

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Agent-based modelling environment for spatial decision support

177

PrjGU-KS

Changes the projection from
Geographic to UTM

Covers-KS

Implements the Covers operator
of GDDL. A dataset A covers
dataset B if all spatial objects of
B are completely covered by A’s
objects. Checks the covers
relationship between the spatial
extents of two datasets using
their minimum bounding
rectangles. Similar KSs can be
developed to check other spatial
relationships Disjoint, Meet,
Equal, Inside, Contains,
CoveredBy, and Overlap
developed by Egenhofer and
Franzosa (1991)

RelJnA-KS

Triggers the search for aspatial
datasets with a posting on the
aspatial blackboard

RelJnB-KS

Performs the relational join
with the dataset that started
RelJnA’s search for aspatial
data

The preconditions are the same
as for RelJnA-KS. In addition,
a solution must be available on
the aspatial blackboard

ESRIImp-KS

Imports ArcInfo’s export (.e00)
ﬁles

ShpMrg-KS

If an individual dataset cannot
provide complete coverage for
the requested spatial extent, this
KS searches for other datasets
with similar GNS and suggests
merging the datasets to provide
a single dataset with greater
spatial coverage

A change in projection must be
requested. In addition, the data
must be in ESRI’s format
(vector, raster or shape ﬁle) and
located on computer3

The geographical-search-criteria
request must be unsatisﬁed
(i.e. the change-geogsrchcriteria
ﬁeld is not NIL). In addition,
for the execution stage (where
actual spatial objects rather
than the minimum bounding
rectangles are compared), the
KS ensures that the datasets
being compared have the same
projection, vendor (ESRI), and
host (computer3). It also
ensures that dataset A consists
of polygons. To implement the
Covers operator, objects from A
are combined together and the
resultant super-object used to
clip B. If the result is a dataset
with no spatial objects, then A
covers B

The attribute names in the
available dataset must not
match those desired by the
model. In addition, the spatial
database that prompts
RelJnA-KS to start searching
for aspatial data should be in
ESRI shape ﬁle format on
computer3

A change in datatype must be
requested. In addition, the data
must be on computer2 in
ESRI’s export (.e00) ﬁle format

Either the change-
geogsrchcriteria or the change-
extent categories must be
unsatisﬁed. In addition, all data
to be merged must have the
same host (computer3), vendor
(ESRI), datatype (shape ﬁle),
and objects. Also, the selected
datasets must have met the
standards of accuracy and
resolution speciﬁed at the start
of the search process

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 178

R. R. Sengupta and D. A. Bennett

PrjLCCU-KS

Converts the projection of a
dataset from Lambert
Conformal Conic to UTM

ChkTMatch-KS

Checks for equivalency of GNS

ESRIRtoShp-KS

Converts ESRI Raster ﬁles into
shape ﬁles containing polygons

Restart-KS

ESRIShptoV-KS

ChkSpatialEx-KS

ASCtoESRIR-KS

ESRIRMrg-KS

Restarts the search process.
Sometimes, the search may not
cause any new KS to respond
because local goals may have
been met, leaving the overall
goal unsolved. This KS is
programmed to seek out such
situations and restart the search
for the overall goal
Converts ESRI’s shape ﬁles to
vector ﬁles

Checks the spatial extent of
available datasets against the
requested spatial extent
Converts ASCII raster ﬁles to
ESRI raster ﬁles
If an individual dataset cannot
provide complete coverage for
the requested spatial extent, this
KS searches for other datasets
with similar GNS and suggests
merging the datasets to provide
a single dataset with greater
spatial coverage

A change in projection must be
requested. In addition, the data
must be kept on computer2 in
ESRI’s raster, vector, or
shapeﬁle formats
If the requested GNS does not
match the GNS ﬁelds of
available datasets, it attempts to
match the two using its internal
library of synonymous GNS
A change in datatype must be
requested. In addition, the data
must be in ESRI’s raster format
and located on computer2
This KS reacts if there seems to
be nothing left to change
(change-characteristics are all
NIL), yet the available-
characteristics do not match
wanted-characteristics

A change in datatype must be
requested. In addition, the data
must be in ESRI’s shape ﬁle
format and located on
computer2
The extent requested must be
diﬀerent from the available
extent
Data to be converted must be
located on computer2
Either the change-
geogsrchcriteria or the change-
extent categories must be
unsatisﬁed. In addition, all data
to be merged must have the
same host (computer2), vendor
(ESRI), datatype (raster), and
objects(cell). Also, the selected
datasets must have met the
standards of accuracy and
resolution speciﬁed at the start
of the search process

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 Agent-based modelling environment for spatial decision support

179

References
A, M. P., 1994, Requirements for the development of GIS-based group decision
support systems. Journal of the American Society for Information Science, 45, 669–677.
A, M. P., D, P. J., and R, G., 1986, Architecture for a microcomputer
Based Spatial Decision Support System. In Proceedings of the 2nd International
Symposium on Spatial Data Handling (Williamsville: International Geographical
Union), pp. 120–131.

A, M. P., and D, P. J., 1995, GIS and group decision-making: a look at the
dark side. In Proceedings of GIS/L IS ’95 (Washington, DC: American Congress on
Surveying and Mapping), pp. 11–19.

A, M. P., R, G., H, R., D, B. T., L, P., D, S., and
D, P. J., 1991, Decision Support for Regionalization: A Spatial Decision
Support System for Regionalizing Service Delivery Systems. Computers, Environment
and Urban Systems, 15, 37–53.

B, D., 1997, A framework for the integration of geographic information systems and
modelbase management. International Journal of Geographical Information Science,
11, 337–357.

B, B. P., and G, M. F., 1996, The Alexandria digital library project:
distributed library services for spatially referenced data. In Proceedings of GIS/L IS ’96
(Washington, DC: American Congress on Surveying and Mapping), pp.76–84.
C, N., and L, V., 1994, The evolution of blackboard control. Expert Systems with

Applications, 7, 1–30.

C, D. D., 1991, Blackboard systems. AI Expert, 6, 40–47.
D, C., and M-S, D., 1996, GIS users observed. International Journal of

Geographical Information Systems, 10, 363–384.

D, P., and G, H. R., 1994, The role of goal-oriented autonomous agents in
modelling people-environment interactions in forest recreation. Mathematical and
Computer Modelling, 20, 121–131.

E, E. A., C, L., J, R., and S, B., 1994, Support for collaborative design:

agents and emergence. Communications of the ACM, 37, 41–47.

E, M. D., and F, R. D., 1991, Point set topological spatial relations.

International Journal of Geographical Information Systems, 5, 160–174.

E, L., H-R, F., L, V., and R, D. R., 1990, The hearsay-II speech
understanding system: Integrating knowledge to resolve uncertainty. Computing
Surveys, 12, 213–253.

F G D C, 1994, Content Standards for digital spatial metadata

(8 June draft). http://www.fgdc.gov/metadata/contstan.html

G, M. R., and K, S. P., 1994, Software agents. Communications of the ACM,

37, 48–53.

G, H. R., R, C., and D, T. C., 2000, Intelligent agent modelling for
simulating and evaluating river trip scheduling scenarios for the Grand Canyon
National Park. In Integrating GIS and Agent based modelling techniques for
Understanding Social and Ecological Processes, edited by H. R. Gimblett (Oxford:
Oxford University Press), pp. 245–275.

G, M. F., 1992, Integrating GIS and spatial data analysis: problems and possibilities.

International Journal of Geographical Information Systems, 6, 407–423.

H, C., 1986, Oﬃces are open systems. ACM T ransactions on OYce Information Systems,

4, 271–287.

K, H., S, B., C, M., and K, S., 1997, An experiment in the design of
software agents. In Readings in Agents, edited by M. N. Huhns and M. P. Singh (San
Francisco: Morgan Kaufmann Publishers), pp. 125–130.

K, D., and G, R. S., 1999, Mobile agents and the future of the Internet. ACM Operating

Systems Review, 33, 7–13.

L, S. E., 1995, Blackboard-Based Integration of Legacy and Reusable Software
Systems. NSF SBIR Final Report Contract No. 94-45, National Science Foundation,
Washington, D.C.

M, P., 1995, Intelligent software. Scientiﬁc American, 273, 84–86.

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 180

Agent-based modelling environment for spatial decision support

M, S. M., 2000, Agent-based dynamic spatial simulation of land-use/cover change in
the Yucata´n peninsula, Mexico. In Proceedings of the 4th International Conference on
Integrating GIS and Environmental Modelling (GIS/EM), http://www.colorado.edu/
research/cires/banﬀ/upload/51/.

N, P. H., 1986, The blackboard model of problem solving. AI Magazine, 7, 38–53.
N, P., and S, H. J., 1993, Spatial information systems: design, modelling, and
use in planning. International Journal of Geographical Information Systems, 7, 85–96.
N, T. L., 1993, Understanding the scope of GIS: Its relationship to environmental
modelling. In Environmental Modelling with GIS, edited by M. F. Goodchild,
B. O. Parks and T. Steyaert (New York: Oxford University Press), pp. 75–93.
P, K., 1993, Spatial decision support systems for real estate investment analysis.

International Journal of Geographical Information Systems, 7, 379–392.

R, S. J., and N, P., 1995, Artiﬁcial Intelligence: A modern approach (Englewood

Cliﬀs: Prentice Hall).

S, R., B, D., and W, G., 1996, Agent mediated links between GIS and
spatial modelling software using a model deﬁnition language. In Proceedings of
GIS/L IS ’96 (Washington, DC: American Congress on Surveying and Mapping),
pp. 295–309.

S, R., B, D. A., K, S. E., and B, J. E., 2000, Evaluating the impact
of policy-induced landuse management practices on non-point source pollution using
a spatial decision support system: a simulation of the Big Creek Basin. Water
International, 25, 437–445.

S, Y., 1993, Agent-oriented programming. Artiﬁcial Intelligence, 60, 51–92.
S, R. H., 1980, A framework for the development of decision support systems. MIS

Quarterly, 4, 1–25.

T, K., W, G., and A, D., 1999, A framework for model integration in spatial
decision support systems. International Journal of Geographical Information Science,
13, 533–555.

T, C. D., 1990, Geographic Information Systems and Cartographic Modelling (Englewood

V, G., 1998, Mobile Agents and Security: L ecture Notes in Computer Science Volume 1419

Cliﬀs: Prentice Hall).

(Berlin: Springer-Verlag).

W, G. A., B, D. A., and S, R., 1997, An interactive distributed architecture
for geographical modelling. In Proceedings of Auto-Carto 13 Volume 5 (Bethesda:
American Congress on Surveying and Mapping), pp. 307–316.

W, J., 1995, NSDI program oﬀers grants for local technology. American City and County,

110 (January 1995), 18–19.

W, P. M., and W, R. A., 1996, A computerized decision support system for
rural policy formulation. International Journal of Geographical Information Systems,
10, 425–440.

W, J. D., and H, L. D., 1996, Facilitating mobile objects within the
landscape processes. In Proceedings of the T hird International
context of spatial
Conference on Integrating GIS and Environmental Modelling (Santa Barbara: National
Center for Geographic Information and Analysis), http://www.ncgia.ucsb.edu/conf/
SANTA_FE_CD-ROM/sf_papers/westervelt_jim/paper.html.

W, M., and J, N. R., 1995, Intelligent agents: theory and practice. Knowledge

Engineering Review, 10, 115–152.

Y, R. A., O, C. A., B, D. D., and A, W. P., 1989, AGNPS: A non-
point source pollution model for evaluating agricultural watersheds. Journal of Soil
and Water Conservation, 44, 168–173.

Downloaded by [Florida Atlantic University] at 11:41 01 September 2013 