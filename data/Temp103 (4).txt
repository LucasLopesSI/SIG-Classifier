International Journal of Geographical Information Science
Vol. 25, No. 11, November 2011, 1849–1864

Finding moving ﬂock patterns among pedestrians through
collective coherence

Monica Wachowicza*, Rebecca Ongb, Chiara Rensoc and Mirco Nannic

aDepartment of Geodesy and Geomatics Engineering, University of New Brunswick, Fredericton,
NB, Canada; bKnowledge Discovery and Data Mining Laboratory, Department of Computer
Science, University of Pisa, Pisa, Italy; cKnowledge Discovery and Data Mining Laboratory,
ISTI-CNR, Pisa, Italy

(Received 30 June 2010; ﬁnal version received 3 February 2011)

Tracking technologies are able to provide high-resolution movement data that can
advance research in different ﬁelds, such as tourism management. In this speciﬁc ﬁeld,
developing methods to extract moving ﬂock patterns from such data are particularly
relevant to enable us to improve our knowledge of the nature of recreational use
interactions, which is crucial for a good management of attractions and for design-
ing sustainable development policies. However, ‘ﬂocking’ has been usually associated
with the form of collective movement of a large group of birds, ﬁsh, insects and certain
mammals as well. Very few research efforts have been devoted in ﬁnding ﬂock patterns
associated with pedestrian movement. In this work, we propose a moving ﬂock pattern
deﬁnition and a corresponding extraction algorithm based on the notion of collective
coherence. We use the term collective coherence to refer to the spatial closeness over
some time duration with a minimum number of members. Furthermore, we evaluate
the proposed algorithm by applying it to two different pedestrian movement datasets,
which have been gathered from visitors of two recreational parks. The results show that
the algorithm is capable of extracting moving ﬂock patterns, disqualifying the patterns
with ﬂock members that remain stationary in a common place during the considered
time interval.

Keywords: ﬂock patterns; pedestrian dynamics; ﬂock algorithm; ﬂock discovery;
moving ﬂock

1.

Introduction

‘Flocking’ is usually associated to a form of collective movement of a large group of birds,
ﬁsh, insects and certain mammals as well (May and McLean 2007). Very few research
efforts have been devoted in studying ﬂocking associated to pedestrian movement, most
of which were related to the simulation of interactions in panic and evacuation situa-
tions (Schreckenberg and Sharma 2002, Galea 2003, Helbing et al. 2005, Zheng et al.
2009) and in disease dispersion and epidemic studies (Bian 2004, Colizza et al. 2007).
In fact, no research effort has been found in the tourism management ﬁeld despite the
fact that it could enhance the management of a recreational area in terms of improving
access to attractions by identifying the occurrence of bottlenecks or motion transitions in a

*Corresponding author. Email: monicaw@unb.ca

ISSN 1365-8816 print/ISSN 1362-3087 online
© 2011 Taylor & Francis
http://dx.doi.org/10.1080/13658816.2011.561209
http://www.tandfonline.com

1850

M. Wachowicz et al.

pedestrian crowd that is affected by pedestrian ﬂocking. Moreover, recreational stakehold-
ers will beneﬁt from identifying the possible social interactions in pedestrian ﬂocking that
can lead to improved marketing strategies in destinations.

The main contribution of this article is the introduction of a deﬁnition for a moving
ﬂock pattern and its corresponding extraction algorithm. We use the notion of collective
coherence previously proposed by Wood and Galton (2009) for ensuring that all ﬂock mem-
bers are moving together for a certain period of time. This is important to allow us to
make a distinction between stationary and moving ﬂocks. Stationary ﬂocks may be inter-
preted as a group of pedestrians simply gathering at an attraction site of a recreational park.
Conversely, moving ﬂocks are groups of pedestrians (i.e. collectives) moving together as
a result of interactions such as walking forward at a given speed. In this case, pedestrians
tend to calculate the trajectory of their current target and turn to face the direction of the
target, hence tending towards the shortest path from origin to destination by simply follow-
ing certain paths or heading for a similar feature of the landscape. Helbing et al. (2001)
provided several examples of interesting interactions that can lead to the occurrence of
moving ﬂock patterns. An example of such interaction is the lane formation among crowds
of oppositely moving pedestrians or oscillations of the passing direction at bottlenecks.
If pedestrians leave footprints on deformable ground (e.g. in green spaces, such as recre-
ational parks), this may also cause ﬂocking, which is mediated by modiﬁcations of the
landscape. Finally, pedestrian ﬂocks may emerge from social interactions as seen with the
example of a group of friends moving around a shopping area or sharing a common interest
in hiking by showing a speciﬁc intention of moving together (van Kooten 1993, Bierlaire
et al. 2003).

It is in this context of both increasing complexity of interactions that might take place
when a moving ﬂock occurs and rapidly evolving awareness of the importance of under-
standing pedestrian ﬂocking in recreational areas that we see a substantial challenge for
research in methods for ﬁnding moving ﬂock patterns in pedestrian dynamics. The remain-
ing sections of this article are organised as follows: Section 2 describes the previous
approaches developed for ﬂock pattern extraction; Section 3 introduces the deﬁnition of
moving ﬂock patterns, followed by the description of the developed algorithm in Section 4;
Section 5 discusses the two experiments performed to evaluate the algorithm results; and
Section 6 summarises the ﬁndings in the conclusion.

2. Related work

A pioneering work in ﬂock pattern extraction is the data mining approach based on the
concept of relative motion (i.e. REMO) proposed by (Laube and Imfeld 2002, Laube et al.
2004). In this work, the motion pattern of an object is formalised in terms of motion
attributes such as speed, change in speed and azimuth vector (i.e. bearing or direction).
Furthermore, a ﬂock is deﬁned as a set of objects exhibiting similar properties in terms
of the motion attributes and staying spatially close at some time instance. This approach,
however, can be used to ﬁnd ﬂocks that only last for one time instance, and consequently
without taking into account the collective coherence of their members as a group of objects
moving together over a period of time.

The work by Gudmundsson et al. (2004) provides a computational algorithm for ﬁnding
ﬂocks and other related patterns. This algorithm utilises a set of compressed quadtree data
structures for measuring spatial closeness of objects by using each quadtree to store point
coordinates for a speciﬁc time instance. An arrangement is built based on each quadtree
and a disk is rotated around the arrangement. Any disk containing the minimum number

International Journal of Geographical Information Science

1851

of objects is considered as a ﬂock. But then again, this approach only considers a ﬂock as a
single group that occurs for only one time instance rather than a collective moving together.
Benkert et al. (2008) extended the ﬂock deﬁnition in the previously described works
by emphasising that the objects should stay together for a period of time, say k, rather than
for a single time instance. First, the given 2-D points are transformed to 2k-D points (i.e.
from <(xi, yi), (xi+1, yi+1), . . . , (xj, yj)> to (xi, yi, xi+1, yi+1, . . . , xj, yj). Second, the 2k-D
points that are close to an (x, y) pair are determined when a pipe consisting of 2k-D points
is constructed for each time instance such that each pipe contains the 2k-D points that
are close to the (x, y) pair at a speciﬁc time instance. A ﬂock is found if the intersection
of k pipes that corresponds to k adjacent time instances contains the minimum number
of objects. Moreover, they have proposed three approaches to minimise the number of
extracted ﬂocks. Our approach for handling redundancy can be considered as an adaptation
of one of these approaches, which disregards the entire trajectories as base if they were
already included in some ﬂock. This is still quite restrictive. Therefore, we have modiﬁed
it in such a way that only the line segments of a trajectory belonging to some ﬂock are
disregarded as base, and not the whole trajectory.

In applications where a ﬁxed time interval k is not required, ﬂocks can be deﬁned as
having an m number of objects staying close together for the longest possible time interval.
Gudmundsson and van Kreveld (2006) proposed ﬁnding longest duration ﬂocks by build-
ing a cylindrical volume for each object. Every volume is built by considering every point
in the object’s trajectory and computing the objects that are spatially close to it for each
time instance. Subsequently, the time interval for which other objects are inside the vol-
ume is computed, sorted by time and then by their ending points in order to ﬁnd the longest
duration ﬂock starting at each time instance.

Kalnis et al. (2005) presented an algorithm for ﬁnding moving clusters, which can be
considered as closely associated to ﬁnding ﬂock patterns. A moving cluster is a group of
objects that move close together for a long time period. The objects composing the moving
cluster may change over time. DBSCAN (Ester et al. 1996) is used to cluster the points for
each time slice. Similar clusters in adjacent time slices are then combined by checking the
intersection of object clusters.

In Andersson et al. (2008), the leader in a ﬂock pattern is determined by manipulating a
set of arrays that describe whether each object follows any other objects for the considered
time interval and other related information. They deﬁne a leader as an object moving in
front of a sufﬁcient number of objects for a long time period.

A most recent work by Vieira et al. (2009) describes a set of algorithms for ﬁnding ﬂock
patterns in an online setting (i.e. when data are not archived but streamed part by part). The
basic algorithm computes the disks that determine all the possible groupings of objects
for each time instance, and then merges the disks in adjacent time slices if they have the
minimum number of objects in common. This is based on the previously described work
by Kalnis et al. (2005). Additional ﬁltering algorithms are proposed in order to shorten
execution time.

Our proposed algorithm for the purpose of ﬁnding moving ﬂock patterns has been
mainly inspired by the works of Gudmundsson and van Kreveld (2006) and Kalnis et al.
(2005), and it is further described in the next sections.

3. The conceptualisation of a moving ﬂock pattern
The movement of an object has been generally represented as a sequence of points over
time, which can be denoted as geospatial lifelines (Hornsby and Egenhofer 2002) and

1852

M. Wachowicz et al.

trajectories (Güting and Schneider 2005). We have adopted the concept of trajectories as
described below.

Deﬁnition 1 (Trajectory and sub-trajectory): A trajectory of a moving object is a
polyline in the 3-D space, where two dimensions refer to space and the third dimension
refers to time. It is represented as a sequence of points <(x1, y1, t1), . . . , (xn, yn, tn)> with
t1 < . . . < tn.

Usually, the points (xi, yi, ti) are referred to as sample points. Also, some linear interpo-
lation function is used to approximate the unknown points between successive time points
ti and tj. As a result, trajectories can also be described as a sequence of contiguous line
segments (i.e. sub-trajectories). More formally, a trajectory T = <LS1, . . . , LSn–1> where
each LSi is the line segment that connects the points (xi, yi, ti) and (xi+1, yi+1, ti+1), and
1 ≤ i ≤ n −1. We also, in turn, deﬁne a sub-trajectory of T over a time interval I, denoted by
TI, as TI = <LSs, LSs+1, . . . , LSe–1> where I = [ts, te] (i.e. TI is composed of a non-empty
set of connected line segments in T that correspond to the time interval I).

Aside from having this movement representation in mind, it is important to point out
the existing ﬂock deﬁnition by Benkert et al. (2008). The authors deﬁne a ﬂock as follows:

Deﬁnition 2 (Flock): Given a set of n trajectories where each trajectory consists of τ
line segments, an (m,k,r)-ﬂock in a time interval I = [ti, tj], where j = i + 1 ≥ k, consists
of at least m objects such that for every discrete time step tl ∈ I, there is a disk of radius r
that contains all the m objects.

However, this deﬁnition does not distinguish between moving ﬂocks and stationary
ﬂocks. Therefore, we have extended it to encompass the notion of coherence among moving
collectives. We must ﬁrst deﬁne the notion of a ﬂock’s spatial extent, which is used to
formally deﬁne moving ﬂocks.

Deﬁnition 3 (Spatial extent of a ﬂock): Given an (m,k,r)-ﬂock F in a time interval I,
its spatial extent, ext(F,I), is deﬁned as ext(F,I) = max{l,w} where l and w are the length
and the width, respectively, of the minimum bounding rectangle (MBR) of the set of sub-
trajectories belonging to the ﬂock. We selected MBR to compute the spatial extent since it
is a commonly used technique, but other computational techniques can be selected as well.
The same notion of extent can also be easily applied to a single trajectory and we call this
the trajectory extent.

Deﬁnition 4 (Moving ﬂock): Given a set of n trajectories consisting of line segments
(i.e. sub-trajectories) that can vary in number for different trajectories, an (m,k,r)-moving
ﬂock FM in a time interval I = [ti, tj], where j – i + 1 ≥ k, consists of at least m objects
such that for every discrete time step tl ∈ I, there is a disk of radius r that contains all the m
objects and the spatial extent ext(FM, I) ≥ r. The relation between r and the spatial extent
in a moving ﬂock FM is shown in Figure 1a, illustrating that ext(FM, I) ≥ r. Meanwhile,
Figure 1b presents a stationary ﬂock FS, illustrating that ext(FS, I) < r.

In comparison to Benkert’s deﬁnition of a ﬂock, our deﬁnition of a moving ﬂock
emphasises that ﬂock members should not solely remain close together (i.e. within a spec-
iﬁed radius), but should also move together (i.e. not remain stationary in one location)
for the time interval. Stationary ﬂock patterns are ﬁltered out by considering their spatial
extent within the time interval I. Since r is the measure used to determine spatial closeness
among a group of objects (i.e. the distances among these objects are very small if they are
at most equal to r), it can also be used as a coverage measure of the spatial extent. If a ﬂock
covers an extent smaller than r, this means that over several time steps in time interval I,
the ﬂock is ‘moving’ at short distances (i.e. ‘moving’ to positions that are very close). Due

International Journal of Geographical Information Science

1853

ti

r

Moving Flock FM

ti + 1

ti + 2

Stationary Flock FS
ti ti + 1

ti + 2

Spatial extent of FM

r

Spatial extent of FS

Points of  the Base Trajectory in FM
Points of  Trajectory A in FM
Points of  Trajectory B in FM

Points of  the Base Trajectory in FS
Points of  Trajectory A′ in FS
Points of  Trajectory B′ in FS

Figure 1. The relation between radius r and the spatial extent (a) for a moving ﬂock FM and (b) for
a stationary ﬂock FS.

to GPS error, movement at short distances can be interpreted as being stationary. Thus, we
chose r to ﬁlter out stationary ﬂocks. Instead of using r, a factor of r can be used as well.
In order to avoid an additional parameter, we chose this factor to be always equal to 1.

An alternative for ﬁltering stationary ﬂocks is to consider the speed of pedestrians
during time interval I but this requires an additional minimum speed threshold. It is also
a less reliable measure since a pedestrian’s speed may vary drastically during the time of
ﬂocking.

It is worth noting that the deﬁnition focuses on ﬁxed moving ﬂocks, which consist of
the same members over the considered time interval. As opposed to ﬂocks with varying
members, it emphasises the importance of each member’s identity, which is interesting
in the context of pedestrian movement, especially for the purpose of further analysing
extracted ﬂock patterns.

Finally, our moving ﬂock concept is based on the notion of a collective coherence,

which can be computed by the following user-deﬁned parameters:

(cid:129) min_ points refers to the minimum number of objects that are members of a moving

ﬂock.

(cid:129) radius deﬁnes the closeness of members at some time instance. The ﬂock members
are close at a time instance if they belong to some disk with a speciﬁed radius, using
one of the members to approximate the centre of the moving ﬂock at each time
instance.

(cid:129) min_time_slices is the minimum number of consecutive time instances for which the
ﬂock members are close together. Extracted patterns with shorter time instances are
not considered as ﬂocks since the members are close for only a short period of time.
(cid:129) synchronisation_rate is the ﬁxed time rate (expressed in seconds) at which observed
points (e.g. GPS recordings) are sampled for each ﬂock member. In other words, it is
the temporal gap between two sampled points. Sampling at this rate is made possible
with interpolation.

Finding the best parameter for a speciﬁc dataset is still an open issue since it depends
on several context-dependent factors, such as the topology of the area and the type of
information that the analyst would like to obtain. However, general rules can be deﬁned
for selecting these parameters’ values. For instance, the min_points parameter depends on

1854

M. Wachowicz et al.

whether the user is interested in pedestrian ﬂocking of couples, of a small group or of a
large group. On the other hand, min_time_slices depends on whether the user is interested
in short or long periods of ﬂocking. A good value for a short period of ﬂocking would
be at least 3. While 2 is also a valid value, it may be too small since this means that
the pedestrians were close for only 2 consecutive time instances. Meanwhile, the value of
synchronisation_rate can be guided by the sampling rate used in the raw tracking dataset
and by the types of ﬂocks (e.g. ﬂocking on paths or bottlenecks) that the user is interested
in. If the original sampling rate is around 5 seconds, then synchronisation rate should not
vary too much from this value. A value of around 1 minute can be a good value for the
synchronisation while a value of 2 minutes or more may be too large.

Perhaps, the most challenging parameter value to deﬁne is the radius parameter. The
user can be guided by intuition in deciding the appropriate distance between two objects
that are considered spatially close. For example, if the user is interested in ﬁnding ﬂocks
that occur in pedestrian lanes, the radius would depend on the length and width of these
lanes. However, at the same time, the user should also consider the uncertainty introduced
by the positioning technology used in collecting the tracking data. Thus, there should be
provisions for this uncertainty in the radius value.

To further guide the user in determining the radius parameter, we adapted the tech-
nique used in DBSCAN in determining its Eps parameter. Eps serves a purpose that
is comparable to that of the radius. It is used to separate core and neighbouring points
from noise points. While DBSCAN deals with 2-D data represented by (x, y) pairs, the
ﬂock algorithm deals with 3-D data represented by (x, y, t) tuples connected by object
IDs. Thus, necessary adjustments to their technique are necessary to accommodate the
time component. For each entity in the dataset, its distance from its k-th nearest neigh-
bour is computed. We will refer to this distance as the k-th distance, and k in this case
refers to min_points − 1. It is important to note that this distance is computed with
the consideration of time. That is, the x and y components of a pair of objects are only
compared if their occurrence overlaps in time. The k-th nearest neighbour is obtained by
considering an entity’s distance from all other entities over all time instances found in the
dataset. Once the k-th distance is computed for each entity, these distances are sorted in
non-decreasing order and plotted as a line graph. The point at which there is a sudden
increase in the k-th distance can be a good value for the radius parameter of the ﬂock
algorithm.

The research assumption behind this approach is that the point of sudden increase sep-
arates ﬂock members from non-ﬂock members since the radius has to be increased to a
very large value in order to ﬁnd a few more ﬂocks at this point. Figure 2 gives an example
wherein the distances of the entities from their third nearest neighbour are plotted. The
point of sudden increase, in this case, is approximately at 300 m. This implies that 300 m
can be a good radius value.

4. The moving ﬂock extraction algorithm

We propose a four-step approach, which includes synchronisation, spatial neighbour com-
putation, membership persistence analysis and pruning. The last step plays an important
role in distinguishing moving from stationary ﬂocks.

Since most tracking datasets contain trajectories whose points are recorded at different
time intervals, synchronisation is necessary to ensure that the movement of pedestrians
co-occurring in time will also have trajectory points co-occurring in time. A separate tool

International Journal of Geographical Information Science

1855

t
s
i
D

1600
1400
1200
1000
800
600
400
200
0

0

25

50

75

100 125 150 175 200

225 250 275 300 325 350 375

Index

Figure 2. Sample plot of k-th distance.

called Daedalus (Ortale et al. 2008), which provides support for moving object data min-
ing query language, is used to sample the points in each trajectory at regular time intervals.
Since point data for all the intervals may not be available, linear interpolation is employed
in order to approximate the missing data. This step generates a set of trajectories whose
points are synchronised based on the synchronisation_rate parameter. For example, a syn-
chronisation_rate of 300 seconds means that the sampled time instances are multiples of
300. Figure 3 shows how points are sampled at the same time instances when the corre-
sponding sub-trajectories co-occur. The circles depict the recorded points as found in the
raw dataset, whereas the squares represent the sampled points generated after performing
synchronisation.

The next step is spatial neighbour computation, wherein the location proximity between
points co-occurring in time is calculated. Two moving pedestrians are referred to as spatial
neighbours for a speciﬁc time instance if their locations for this time instance are close.
Each trajectory derived from the synchronisation step is considered at a time, and the cur-
rently considered trajectory is called the base. It is important to point out that each base
trajectory consists of points sampled at several time instances. These time instances are
considered one at a time in order to check which other sub-trajectories are close to the
base at each time instance. Closeness is determined by having the base point as the centre
of a disk whose radius is user-deﬁned (i.e. the radius parameter), and the extent of this
disk is computed using the Euclidean distance measure. Points from other sub-trajectories
within the extent of the disk for the current time instance are considered as the base’s

Points from the raw dataset

Sampled points with synchronization

Sampled time instances

Figure 3. Trajectory points as recorded from the raw dataset are represented by circles while those
that are sampled for the purpose of synchronisation are represented by squares.

1856

M. Wachowicz et al.

neighbouring points. Thus, t disks are extracted from a base trajectory with t time instances,
each disk representing the trajectory’s neighbours at each time instance.

In this step, each trajectory in the dataset is considered as a base and the lower part of
Figure 4 illustrates how disks are computed for each time instance of a speciﬁc base. The
neighbours of the base for each time instance are represented by the points that lie inside
the computed disk. The user-deﬁned radius is ﬁxed for each execution of the algorithm.
The area of the disks belonging to a base trajectory may also overlap.

Each disk generated in the preceding step represents a group of pedestrians that are
close to the base object and this group, including the base, can be seen as a ‘basic ﬂock’,
which refers to a candidate ﬂock that is known to exist for one time instance. The next
step, membership persistence analysis, is concerned with checking whether members of a
‘basic ﬂock’ are also found in other ‘basic ﬂocks’ of adjacent time instances. This checking
veriﬁes whether members at a speciﬁc time instance continue to be close to each other for
other adjacent time instances.

In this step, each base trajectory with its corresponding disks is considered one at a
time. Disks in adjacent time instances are merged if the number of common members in
both disks is at least equal to the user-deﬁned min_points threshold. This merging process
is performed in a recursive manner. From a pair of ‘basic ﬂocks’, a ‘composite ﬂock’ (i.e.
a candidate ﬂock occurring for more than one time instance) is formed if the members
persist over the two adjacent time instances. Once all ‘basic ﬂocks’ are processed, each
extracted ‘composite ﬂock’ is treated as a ‘basic ﬂock’, causing ‘composite ﬂocks’ that
last for at most 2 time instances each to be merged with other candidate ﬂocks in adjacent
time instances if their members persist. This merging process continues until the longest
duration ﬂocks are found.

The upper part of Figure 4 shows the order of merging ‘basic ﬂock’ patterns to form
the longest duration patterns. The order is speciﬁed by the number found in each bracket.

Order
of
Merging

13

7

10

2

6

1

15

11

3

14

8

12

4

9

5

Points of  the Base Trajectory

Points of  Trajectory A

Points of  Trajectory B

Figure 4.
(Lower part) For each base trajectory, neighbouring points (represented by points found
inside each disk) are computed for each sampled time instance. In this example, the base has one
neighbour (a point in Trajectory B) for time instance t1. From t2 to t5, the base has two neighbours
(a point in Trajectory A and another in Trajectory B). As for t6, the base has no neighbouring point.
(Upper part) An example of the order of merging disks in adjacent time instances.

International Journal of Geographical Information Science

1857

A bracket represents the check performed between disks of adjacent time instances. In
the best-case scenario wherein the disks of the base trajectory contain the same minimal
members, all disks in the base trajectory are merged into a single disk that persists from
the ﬁrst time instance to the last time instance of the trajectory.

After merging, extracted ﬂock patterns with time instances lesser than the user-deﬁned
threshold min_time_slices are disregarded. However, the algorithm still produces redundant
patterns and stationary patterns as well. We say that a pair of ﬂock patterns is redundant if
their ﬂock members and the duration of ﬂocking are almost the same (i.e. majority of their
ﬂock members are the same and a large interval of their ﬂocking duration is the same).
Hence, the ﬁnal step consists of two sub-steps, one for pruning redundant patterns and
another for pruning stationary patterns.

It is important to note that the preceding steps of the algorithm produce redundant
patterns due to the use of different base trajectories that actually belong to the same
ﬂock. For instance, if obj1, obj2 and obj3 are members of the same ﬂock occurring
during a speciﬁc time period and the algorithm uses all three of them as base trajec-
tories, this can result in three redundant ﬂocks (only one of which should be retained).
Thus, to solve this problem, the pruning step disqualiﬁes a sub-trajectory for use as
a base trajectory if it already belongs to a previously extracted ﬂock. This means that
only the portion of the trajectory belonging to a previously extracted ﬂock is disqual-
iﬁed while the remaining part is still used as a base trajectory. This pruning sub-step
improves the running time of the algorithm since it avoids the need for processing all
trajectories as base trajectories. However, since the base trajectory is only an approx-
imation of the actual centre of the ﬂock for a speciﬁc time period, some ﬂocks may
not be found if the base trajectory for ﬁnding it has been disqualiﬁed. It is worth not-
ing that the undiscovered ﬂocks would be quite similar to at least one of the retained
ﬂocks.

After pruning of redundant ﬂock patterns, the stationary patterns are pruned out when
the extent of each extracted ﬂock has been computed. Patterns with a short extent (i.e.
having an extent smaller than the user-speciﬁed radius) are considered as stationary ﬂock
patterns and are thus disregarded. The research assumption behind this step is that ﬂocks
with members who only cover a short extent are most probably stopping together in a spe-
ciﬁc location. Therefore, ﬂock patterns with members who are spatially close for a long
time interval but only stay in one location are pruned out. On the other hand, the approx-
imation approach still considers moving ﬂock patterns with members who stop within its
ﬂocking time interval if the extent is long enough. For instance, a moving ﬂock may stop
together for some time before moving together.

The ﬂock extent is computed by ﬁnding the MBR for each sub-trajectory included in
the ﬂock considered. The MBR for each segment has a length and a width. The maximum
of the length and the width of a trajectory’s MBR is the trajectory’s extent. The ﬂock extent,
in turn, is the minimum of the trajectory extents belonging to segments in the ﬂock.

In the example illustrated in Figure 5, the MBR is computed for each sub-trajectory
belonging to the ﬂock. From the MBRs, the length and the width can be extracted. Since
the longer part of Trajectory1 segment is the width, width1 is assigned as its extent. Same
is true for Trajectory2. Finally, the ﬂock extent is the minimum of all trajectory extents,
which is width2 in this case.

The worst-case time complexity of the algorithm is O (n2t + nt2), where n is the number
of input trajectories and t is the number of time instances in the longest input trajectory.
The ﬁrst term of the complexity (i.e. n2t) corresponds to the contribution of the spatial
neighbourhood computation and pruning steps while the second term (i.e. nt2) comes

1858

M. Wachowicz et al.

Flock with2
trajectory segments

length2

length1

Trajectory1 extent is width1

width1

width2

Trajectory2 extent is width2

Flock extent is width2

Figure 5. An example of computing ﬂock extent for a ﬂock with two sub-trajectories.

from membership persistence analysis step. These terms dominate the time complexity
contribution of the synchronisation step since this is only executed once.

5. Experiments
The moving ﬂock algorithm was implemented using Java on a PC with Windows OS, Intel
Pentium 4 and 2 GB of main memory. We have tested the moving ﬂock algorithm on
two tracking datasets describing the pedestrian movements in recreational areas. The ﬁrst
dataset consists of pedestrian trajectories collected in the Dwingelderveld National Park
in the Netherlands, while the second dataset was collected in the National Fontainebleau
Forest Park in France. We have found the following parameter values suitable for deﬁning
the collective coherence behaviour in the experiments considering the pedestrian context:
min_ points to 3 members (assuming that the user is interested in the movement of a group
rather than just a pair in order to avoid trivial cases), min_time_slices to 3 time instances
(means that the members should co-occur at 3 time instances since 2 time instances is
deemed too short and is more likely to be coincidental), synchronisation_rate to 5 min-
utes for Dwingelderveld (which is long enough to be indicative that the objects have
moved to another location compared with the preceding time instance) and 1 minute for
Fontainebleau (since larger values resulted in a large amount of noise in the data) and the
radius to different values in meters (one factor affecting the choice of this parameter is the
landscape of the considered areas; since we are dealing with parks that have paths that are
quite long, we chose a radius value that is quite large for average pedestrian movement and
to make room for the GPS errors present in the movement data). Considering statistics,
such as the average speed of pedestrians in general, and based on known context data, we
have come to select this set of parameters for both datasets.

5.1. The Dwingelderveld National Park dataset

The Dwingelderveld National Park is a typical Dutch recreational area with an extensive
network of short strolls (60 km of marked trails, each less than 7 km in length) and long
walks for cycling and horse riding. It is a very popular area that receives between 1.5 to 2
million visitors per year (van Marwijk et al. 2007).

This dataset contains 370 trajectories consisting of a total of 141,826 sample points.
These were recorded using GPS devices given to the visitors in the parking lots where

International Journal of Geographical Information Science

1859

Table 1. Extracted moving ﬂock patterns in the Dwingelderveld National Park.

Radius

Start time

End time

Flock extent

Flock members

100

150

Sunday 28 May 2006,

Sunday 28 May 2006,

203.9375

139; 141; 140

Sunday 28 May 2006,

Sunday 28 May 2006,

628.5

52; 100; 46

Sunday 28 May 2006,

Sunday 28 May 2006,

203.9375

139; 141; 140

200

Sunday 28 May 2006,

Sunday 28 May 2006,

796.5

52; 100; 46

Sunday 28 May 2006,

Sunday 28 May 2006,

456

115; 118; 114

Sunday 28 May 2006,

Sunday 28 May 2006,

203.9375

139; 141; 140

12:45:00

09:40:00

12:45:00

09:40:00

13:40:00

12:45:00

13:00:00

10:00:00

13:00:00

10:05:00

13:55:00

13:00:00

(a)

(b)

Figure 6.
(a) The entire trajectories of moving ﬂock members 139, 141 and 140 in the
Dwingelderveld dataset. (b) The sub-trajectories belonging to the moving ﬂock whose members
include 139, 141 and 140 in the Dwingelderveld dataset.

the pedestrians have started their visits. This data collection was carried out once a month
during spring and summer of 2006, having in total 7 days (weekend and weekdays) of
tracking. Table 1 shows the different time intervals and spatial extents of moving ﬂocks
obtained using three radius values (i.e. radius = 100, 150 and 200 m). The results show
that the larger the radius values, the greater the prospect of ﬁnding a larger number of
moving ﬂocks as long as the radius is not too large compared with the spatial extent. Figure
6 illustrates one of the extracted moving ﬂocks containing the three members 139, 141 and
140 when the radius is equal to 200 m.

Figure 7 shows the base trajectories for each of the extracted moving ﬂocks with the
radius set to 150 m and visualising them on top of the set of all trajectories (Figure 7a) and
on a Google map (Figure 7b) as background. Finally, a large number of stationary ﬂock
patterns were ﬁltered out by our algorithm as shown in Figure 8a, which compares the
number of moving ﬂocks versus stationary ﬂocks with respect to the user-speciﬁed radius.

5.2. The National Fontainebleau Forest Park dataset

The forest of Fontainebleau is a massive wooded area of 25,000 ha, 21,600 ha of which
are currently administered by a national park management. Millions of visitors come to the
park every year (e.g. 13 million in 2006). The routes are usually used for walking and they
can probably be dated back to the sixteenth century.

The Fontainebleau dataset contains 207 trajectories of 23 visitors, consisting of a total
of 22,748 sample points. These data were collected during the months of April, May and

1860

M. Wachowicz et al.

Figure 7. The base trajectories of the moving ﬂock patterns found in the Dwingelderveld dataset
when the radius is set to 150 m using (a) the whole trajectory dataset and (b) a Google map as
background.

(a)
450

400

350

300

250

200

150

100

50

0

(b)
180

160

140

120

100

80

60

40

20

0

Moving flocks

Stationary flocks

0

100 200 300 400 500 600

700 800 900 100011001200

0

100 200 300 400 500 600

700 800 900 100011001200

Radius

Radius

Figure 8.
(a) The number of moving ﬂocks versus the number of stationary ﬂocks in the
Dwingelderveld dataset. (b) The number of moving ﬂocks versus the number of stationary ﬂocks
in the Fontainebleau dataset.

September, having in total 5 days in the year 2004. Table 2 shows the different time inter-
vals and spatial extents of the moving ﬂocks obtained when the radius was set to 150
and 200 m. Figure 9 depicts the extracted moving ﬂocks when radius is set to 150 m.
Finally, Figure 10 shows the base trajectories for each of the extracted moving ﬂocks
using radius equal to 150 m in the dataset, with the set of all trajectories (Figure 10a)
and with Google map (Figure 10b) as background. The number of moving ﬂocks and the
number of stationary ﬂocks with respect to the speciﬁed radius are plotted in Figure 8b.
Once again, this demonstrates the large number of stationary ﬂocks pruned out by our
algorithm.

6. Discussion and conclusions

In this article, we introduced a moving ﬂock deﬁnition, along with a method for ﬁnd-
ing moving ﬂock patterns from pedestrian datasets. The proposed deﬁnition emphasises
that ﬂock members should be moving, disqualifying patterns with ﬂock members that

International Journal of Geographical Information Science

1861

Table 2. Extracted moving ﬂock patterns in the National Fontainebleau Forest Park.

Radius

Start time

End time

Flock extent

Flock members

150

Sunday 25 April 2004,

Sunday 25 April 2004,

159.34375

9; 11; 8

13:38:00

Sunday 26 September
2004, 11:41:00
Sunday 26 September
2004, 11:38:00

13:48:00

12:04:00

Sunday 26 September
2004, 12:18:00

200

Sunday 25 April 2004,

150.28125

19; 27; 18

264.71875

19; 27; 18

Sunday 25 April 2004,

Sunday 25 April 2004,

264.5

9; 10; 8

13:34:00

13:41:00

Figure 9. The sub-trajectories of the extracted moving ﬂocks in the Fontainebleau dataset when the
radius is set to 150 m – (a) ﬁrst ﬂock and (b) second ﬂock.

Figure 10. The base trajectories of the moving ﬂock patterns found in the Fontainebleau dataset
when the radius is set to 150 m using (a) the whole trajectory dataset and (b) a Google map as
background.

remain stationary in a common place during the considered time interval. This is a new
contribution to existing ﬂock extraction methods.

The proposed moving ﬂock extraction algorithm is robust in ﬁnding moving ﬂock
patterns due to path-following interactions as demonstrated in the results shown in the
previous sections. Although the validation of this algorithm is difﬁcult to be carried out,
the results conﬁrm an association of collective coherence with the path-following interac-
tion, showing visitors walking some distance ahead of others as well as visitors following
the most popular routes. One example is the white route in the Dwingelderveld National
Park.

1862

M. Wachowicz et al.

The main collective coherence parameter is the radius since it deﬁnes the closeness of
visitors of a moving ﬂock over time. Although it is intuitive to ﬁnd more moving ﬂocks as
the radius is set to a larger value, this is not always the case. It is possible to ﬁnd a smaller
number of moving ﬂocks with a larger value for the radius since the spatial extent constraint
also becomes more restrictive for large values of radius. More research is needed in order
to investigate the optimal values for the other collective coherence parameters deﬁned for
our moving ﬂock algorithm.

We have also tested our moving ﬂock algorithm on two tracking datasets, where the
trajectories of visitors in very different types of recreational landscapes were collected
from GPS devices. The results have shown that the extracted moving ﬂock patterns are
the emergent property of path-following interactions, which in turn have different time
intervals and spatial extents, as well as they were located at the most popular routes in both
parks.

The experiments also revealed the ﬁltering power of the proposed algorithm. By sorting
the results using the spatial extent of ﬂocks and removing those with very short extent, we
have pruned out a large number of uninteresting patterns. These patterns include both the
stationary ﬂocks and the redundant patterns, which should not be considered as groups of
objects moving together. However, it is also important to point out that some redundant pat-
terns have been retained during the analysis in order to avoid losing moving ﬂock patterns
with longest durations.

Since the number of spatial points, and thus the number of candidate centre points as
well, is inﬁnite, our approximation algorithm only considers the points found in the dataset
as candidate centres. As a consequence, it may not ﬁnd certain ﬂock patterns. Moreover,
the algorithm exploits the fact that any member of a ﬂock is spatially close to the actual
centre of the ﬂock (based on the given ﬂock deﬁnition, which states that members of the
ﬂock must be spatially close to each other and hence they must be close to the centre of the
ﬂock as well). As a consequence, ﬂocks that can be extracted using the actual centres can be
approximated using a member’s trajectory as a base. For a more exact algorithm, the mem-
bership persistence analysis step can be modiﬁed such that merging does not only occur
among candidate ﬂocks of the same base trajectory. That is, merging also occurs among
candidate ﬂocks belonging to different base trajectories, increasing the overall complexity
of the algorithm to O(n3t2) and also increasing the number of redundant ﬂocks. In fact,
this is still an approximation algorithm and the problem of computing the longest dura-
tion ﬂock, where the members do not vary over the duration of ﬂocking, was proven to
be nondeterministic polynomial time hard (NP-hard) by Gudmundsson and van Kreveld
(2006).

Our ongoing work is focused on the design of a methodology to enrich the ﬂock detec-
tion method with semantic information. In particular, we are envisaging a framework to
semantically annotate the extracted moving ﬂock patterns in order to further classify them.
Our implementation of the moving ﬂock extraction algorithm is available at the following
URL: http://www-kdd.isti.cnr.it/moving-ﬂock.

Acknowledgements
We thank Professor Dino Pedreschi for the discussions on the selection of radius value, Roberto
Trasarti for the use of Daedalus (now known as M-Atlas) and the anonymous reviewers for their
comments and suggestions that helped in improving the article. We also thank Ramona van Marwijk
and Rene Jochem for providing us with the datasets.

International Journal of Geographical Information Science

1863

References
Andersson, M., et al., 2008. Reporting leaders and followers among trajectories of moving point

objects. GeoInformatica, 12 (4), 497–528.

Benkert, M., et al., 2008. Reporting ﬂock patterns. Computational Geometry, 41 (3), 111–125.
Bian, L., 2004. A conceptual framework for an individual-based spatially explicit epidemiological

model. Environment and Planning B: Planning and Design, 31 (3), 381–396.

Bierlaire, M., Antonini, G., and Weber, M., 2003. Behavioral dynamics for pedestrians. In: K.W.
Axhausen, ed. Paper presented at the moving through nets: the physical and social dimensions
of travel. Lucerne, Switzerland: Elsevier, 81–105.

Colizza, V., et al., 2007. Modeling the worldwide spread of pandemic inﬂuenza: baseline case and

containment interventions. PLoS Medicine, 4 (1), 95–110.

Ester, M., Kriegel, H.-P., Sander, J., and Xu, X., 1996. A density-based algorithm for dis-
covering clusters in large spatial databases with noise. In: 2nd international conference
on knowledge discovery and data mining, 2–4 August 1996 Portland, OR. AAAI Press,
226–231.

Galea, E.R., ed., 2003. Pedestrian and evacuation dynamic 2003. In: Proceedings of the 2nd interna-
tional conference on pedestrian and evacuation dynamic 20–23 August 2003, Greenwich, UK.
London: CMS Press.

Gudmundsson, J. and van Kreveld, M., 2006. Computing longest duration ﬂocks in trajectory data.
In: 14th annual ACM international symposium on advances in geographic information systems,
10–11 November 2006 Arlington, VA. New York: ACM, 35–42.

Gudmundsson, J., van Kreveld, M., and Speckmann, B., 2004. Efﬁcient detection of motion
patterns in spatio-temporal data sets. In: 12th annual ACM international workshop on geo-
graphic information systems, 12–13 November 2004 Washington, DC. New York: ACM,
250–257.

Güting, R.H. and Schneider, M., 2005. Moving objects databases. San Francisco, CA: Morgan

Kaufmann Publishers.

Helbing, D., et al., 2005. Self-organized pedestrian crowd dynamics: experiments, simulations, and

design solutions. Transportation Science, 39 (1), 1–24.

Helbing, D., et al., 2001. Self-organizing pedestrian movement. Environment and Planning B:

Planning and Design, 28 (3), 361–383.

Hornsby, K. and Egenhofer, M., 2002. Modeling moving objects over multiple granularities, special
issue on spatial and temporal granularity. Annals of Mathematics and Artiﬁcial Intelligence, 36
(1–2), 177–194.

Kalnis, P., Mamoulis, N., and Bakiras, S., 2005. On discovering moving clusters in spatio-temporal
data. In: C.B. Medeiros, M.J. Egenhofer, and E. Bertino, eds. Proceedings of the 9th international
symposium on advances in spatial and temporal databases 2005. Lecture Notes in Computer
Science. vol. 3633. Berlin: Springer, 364–381.

Laube, P. and Imfeld, S., 2002. Analyzing relative motion within groups of trackable moving point
objects. In: M.J. Egenhofer and D.M. Mark, eds. GIScience 2002. Lecture Notes in Computer
Science. vol. 2478. Berlin: Springer, 132–144.

Laube, P., van Kreveld, M., and Imfeld, S., 2004. Finding REMO – detecting relative motion pat-
terns in geospatial lifelines. In: Proceedings of the 11th international symposium on spatial data
handling, 23–25 August 2004 Leicester. Berlin: Springer, 201–214.

May, R.M.C. and McLean, A.R., 2007. Theoretical ecology: principles and applications. New York:

Oxford University Press.

Ortale, R., et al., 2008. The DAEDALUS framework: progressive querying and mining of movement
data. In: 16th ACM SIGSPATIAL international conference on advances in geographic information
systems, 5–7 November 2008 Irvine, CA. New York: ACM, article no. 52.

Schreckenberg, M. and Sharma, S., 2002. Pedestrian and evacuation dynamics. Berlin: Springer-

Verlag.

van Kooten, G.C. 1993. Land resource economics and sustainable development: economic policies

and the common good. Vancouver, BC: UBC Press.

van Marwijk, R., Elands, H.M., and Lengkeek, J., 2007. Experiencing nature: the recognition of
the symbolic environment within research and management of visitor ﬂows. Snow Landscape
Research Journal, 81 (1–2), 59–76.

1864

M. Wachowicz et al.

Vieira, M., Bakalov, P., and Tsotras, V., 2009. On-line discovery of ﬂock patterns in spatio-temporal
data. In: 17th ACM SIGSPATIAL international conference on advances in geographic information
systems, 4–6 November 2009 Seattle, WA. New York: ACM, 286–295.

Wood, Z. and Galton, A., 2009. A taxonomy of collective phenomena. Applied Ontology, 4 (3–4),

267–292.

Zheng, X., Zhong, T., and Liu, M., 2009. Modeling crowd evacuation of a building based on seven

methodological approaches. Building and Environment, 44 (3), 437–445.

Copyright of International Journal of Geographical Information Science is the property of Taylor & Francis Ltd

and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright

holder's express written permission. However, users may print, download, or email articles for individual use.

