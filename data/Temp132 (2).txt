Geoinformatica (2013) 17:235–255
DOI 10.1007/s10707-011-0147-2

Directional relations and frames of reference

Eliseo Clementini

Received: 30 December 2008 / Revised: 9 October 2011
Accepted: 2 November 2011 / Published online: 24 November 2011
# Springer Science+Business Media, LLC 2011

Abstract As an intermediate category between metric and topology, directional relations
are as much varied as “right of”, “before”, “between”, “in front of”, “back”, “north of”,
“east of”, and so on. Directional relations are ambiguous if taken alone without the
contextual information described by frames of reference. In this paper, we identify a
unifying framework for directional relations and frames of reference, which shows how a
directional relation with its associated frame of reference can be mapped to a projective
relation of the 5-intersection model. We discuss how this knowledge can be integrated in
spatial query languages.

Keywords Spatial relation . Frame of reference . Directional relation . Projective relation .
Spatial taxonomy

1 Introduction

A significant trend of research in Geographical Information Science (GIS) relates to the
study of the fundamental concepts governing our perception of objects in space and the
increase of computational capabilities, such as assessing spatial relations among geographic
objects. Directional relations represent a category of spatial
relations that provide
information about the spatial arrangement of objects in a scene [1] or locations in an
embedding space [2, 3]. Directional relations are also defined as describing positions with
respect to a frame of reference [4].

In queries such as “What are those buildings ahead on the right?”, spatial qualifiers like
“ahead” and “on the right” correspond to the computation of directional relations.
Moreover, to make this computation possible, there are several spatial aspects that are
implicit in the query (we can call these aspects the ‘context’ of the query) and that should
be made explicit. In previous query example, context information could be the direction of

E. Clementini (*)
Department of Electrical and Information Engineering, University of L’Aquila, L’Aquila, Italy
e-mail: eliseo.clementini@univaq.it

236

Geoinformatica (2013) 17:235–255

movement, the distance from the buildings, and the fact that the person that formulates the
query and the listener share the same point of observation. Therefore, directional relations
between two objects cannot be expressed independently of a geometric structure called
frame of reference.

While topological relations are available in existing spatial query languages (indeed, the
computation of topological relations and topological properties of spatial objects is the most
prominent feature of spatial query languages), directional relations have not been included
so far. This might be ascribed to two difficulties: (1) the definition of models that would be
able to describe the directional relation between two extended objects and (2) the definition
of models that would be able to describe directional relations under various frames of
reference. In fact, most models for directional relations (including both the orientation and
distance components) refer to point abstractions (e.g., [5–10]). Some models of directions
among extended objects are the direction matrix [11] and the 5-intersection [12]. The
direction matrix describes the relation between two objects in an absolute (projection-
based) frame of reference. The 5-intersection describes ternary projective relations among
objects without being tied to a specific frame of reference. The second difficulty is related
to the representation of frames of reference. Direction relations are normally expressed in a
variety of frames of reference [13–15]. A spatial query language that includes directions
should be able to deal with such a diversity and the ways to switch from one frame of
reference to another. The latter issue was defined as ‘articulation rules’ by Hernández [16].
The lack of formalization of frames of reference has probably been the major barrier for the
inclusion of directional relations in spatial query languages. Early studies on the link
between projective terms and frames of reference have been conducted by Eschenbach [17,
18] and later by Moratz and Tenbrink [19].

In this paper, we define a model of directional relations in various frames of reference,
specifying the main types and subtypes: this outcome can be considered a taxonomy of
frames of reference, refining the well-known classification of [20]. The knowledge of
directions and frames of reference allows us to define a set of directional operators that can
be integrated in a spatial query language. The directional relations are mapped to the 5-
intersection model, which precisely gives the geometric definitions and the algorithms to
compute relations. The 5-intersection model classifies projective relations between three
geometric objects in the plane, distinguishing among 34 ternary projective relations that
make up a jointly-exhaustive and pair-wise disjoint (JEPD) set of relations. Among the
strengths of the model are the facts that it only uses projective properties and that the
acceptance areas of relations depend on the shape and size of the reference objects. The
limit of the 5-intersection is that its primitives cannot be directly integrated in a spatial
query language without effort. The model is strongly geometric-oriented: with its formal
definitions, it can be effectively implemented and optimized at the computational level
creating a small set of projective operators that apply to all geometric spatial data types. On
the other hand, it does not directly express the typical contextual information that is
associated with directional relations. As an attempt to overcome such a limit, in this paper,
we define directional relations in various frames of reference with transformation rules to
the geometric level and vice versa.

The paper is structured as follows: we start in Section 2 introducing some concepts about
frames of reference. In Section 3, we briefly recall the 5-intersection model. In Section 4,
we identify the taxonomy for different subtypes of frames of reference and the mapping
rules towards the 5-intersection. In Section 5, we describe a prototype architecture and the
Java implementation of a computation engine for the defined directional relations. Finally,
in Section 6 we draw short conclusions.

Geoinformatica (2013) 17:235–255

2 Frames of reference

237

Most human reasoning about physical space appears to use a qualitative interpretation of
that space. Therefore, purely quantitative methods are less adequate than qualitative
methods to effectively represent spatial information [21]. All spatial relations describing the
mutual position of objects are usually described as binary relations from human beings.
Examples are “the bus stop in front of the university” or “the tree to the left of the
building”. Very few exceptions are ternary: notably the relation “between” [22], such as in
the expression “the fountain between those two buildings”. The binary nature of directional
relations must be combined with the presence of a frame of reference to disambiguate the
meaning of the relation. In fact, a directional relation has a unique meaning when associated
with some contextual information. If the context varies, most often the meaning of the
relation becomes ambiguous: the expression “the tree to the left of the university”, which is
unambiguous in a given context, becomes ambiguous if extrapolated from its context (see
Fig. 1).

In this paper, we refine the classification of frames of reference given in [20]. Our goal is
not to give an exhaustive taxonomy, but we aim to identify the most commonly used
subcategories and show how the directional relations expressed in them can find a mapping
towards the 5-intersection model. Frames of reference are implicit or explicit structures that
are imposed on space [16]. The term implicit refers to a frame of reference which has not
been made explicit because all information is expressed in the same frame of reference: the
observer performs its reasoning in a given frame of reference without ambiguities.
Nonetheless, the frame of reference needs to be made explicit if we need to compare
information from different frames of reference, and therefore, the observer is aware of more
co-existing frames of reference. The most detailed description of various frames of
reference in a cross-linguistic setting is given by Levinson [13] and subsequent refinements
by Klatzky [14] and Frank [15]. In [15], frames of reference are described, in analogy to
Cartesian coordinate systems, as having three parameters: the origin, the orientation, and
the handedness.

Three basic types of frames of reference are distinguished by Retz-Schmidt [20]:

&

&

&

intrinsic frames of reference are established on a reference object that determines the
origin of the coordinate system as well as its orientation;
extrinsic frames of reference may also inherit their origin from a reference object;
however, their orientation is determined by external factors such as a conventional
object used as landmark;
deictic frames of reference involve three objects: a primary object that is in a particular
relation with respect to the reference object and the point of view. The orientation is
imposed on the reference object as seen by the point of view.

(a)

(b)

Fig. 1 Different interpretation of
the expression “the tree to the left
of the university” varying the
context: a the left side is
determined by an intrinsic
property of the building; b the left
side is determined by the point of
view of an observer

Right

Back

University

Front

Left

238

Geoinformatica (2013) 17:235–255

According to [23], the same types of frames of reference are called intrinsic, absolute,
and relative, respectively. Another way to characterize frames of reference is given in [24]
and [14] leading to two categories: egocentric (subject-centered) and allocentric (other-
centered), depending on whether the origin of the frame of reference is centered inside or
outside the observer.

To better illustrate Retz-Schmidt’s classification, let us consider the following queries:

1. What is the name of the street in front of the university?
2. What is the building towards north?
3. What is the building to the left of the city hall (from an observer’s point of view)?

If we analyze the queries above, we can see that each of them can be associated with a
different frame of reference: in the first one, the frame of reference is intrinsic, due to the
fact that it is determined by the prominent front of the university building, which is an
intrinsic property of the reference object (Fig. 2(a)). In the second one, the underlying frame
of reference is extrinsic, since the conventional “north” direction is used as reference for
orientation (Fig. 2(b)). The frame of reference used in the third query is deictic: the
reference object is the city hall and the spatial relation of the unknown building is expressed
with respect to the point of view of the observer (Fig. 2(c)).

Directional relations are used in different contexts: both man-made features, like roads
and buildings, or natural features,
like mountains and rivers, can have one or more
geometric representations. Contextualization of spatial data semantics allows the same
underlying data to take multiple forms, and disambiguate spatial concepts based on
localized contexts [25]. The processing and representation of spatial information is essential
for human cognition, especially for wayfinding and the creation of mental spatial
representations. In [26], authors examined how people use verbal route directions given
in different frames of reference in real-world navigation, particularly differences or
similarities in cognitive load posed by two frames of reference. The influence that language
has on the conceptualization of spatial relations, particularly turn directions, has been
pointed out in [27]. A comparable approach to ours is proposed in [28], where spatial
relations are discussed in the context of moving vehicles on US road networks. Those
relations are ternary and are expressed in the form relation(X,Y,T), where X and Y are
variable terms that refer to either a reference object (e.g., my car) or target object (e.g., the
vehicle behind my car) moving on the network at variable time T. One of the scenarios of
our paper (see Section 4.1.2), dealing with moving users, is quite similar to the one
proposed in [28], though we take into account qualitative time only (past and future) and
we define a different set of relations.

(a) 

(b) 

West

(c) 

North

N

South

East

Fig. 2 a Intrinsic frame of reference; b Extrinsic frame of reference; c Deictic frame of reference

Geoinformatica (2013) 17:235–255

239

We will not consider relations between overlapping objects such as “Milan is in the
north of Italy” or “Sweden is in the north of Europe”. These relations can be considered
part/whole spatial relations [29], in which the parts are determined by cardinal directions.

3 Projective relations

Projective relations are a category of spatial relations that can be described by projective
properties of the space without resorting to metric properties [30, 31]. Projective relations
are thus qualitative in nature because they do not need exact measures to be explained.
Also, projective relations can add more details to topological relations and, hence, they can
serve as a basis for describing relations that are not captured by topology.

A ternary relation among three objects A, B, and C is denoted with r(A,B,C). We assume
that the first object A involved in the relation r has the role of primary object and the second
and third objects have the role of reference objects.1 Therefore the relation r(A,B,C) should
be read as “A is in the relation r with B and C”. The order of the reference objects B and C
affects the orientation, that is, an orientation from reference object B to reference object C is
assumed.

The basic projective invariant is the collinearity of three points: based on this primitive,
which has been extended to regions [32], the 5-intersection was coherently built upon
ternary relations of the kind r(A,B,C). Three points x,y,z are collinear if they lie on the same
line. Given an oriented line connecting the two reference points y and z, the plane is
subdivided in two half-planes and the line itself is subdivided into three parts. This gives
rise to the five projective relations between (bt), rightside (rs), before (bf), leftside (ls), after
(af). If two of the points are coincident, the three points are trivially collinear, since two
points determine a line. If all three points are coincident, they are also trivially collinear
because there are infinite lines incident in a point. In the case the two reference points are
coincident, we refine the relation collinear to the relations inside (in) and outside (ou). The
set of ternary relations among points bt, rs, bf, ls, af, in, ou is a JEPD set of relations, as it
was proved in [12].

The definitions for points are a special case of the definitions for regions. The relation
collinear among regions can be introduced as a generalization of the same relation among
points. For a complete discussion about definitions of collinearity for regions, see [32]. If
two reference regions B and C have disjoint convex hulls (CHs), then two pairs of common
tangents are uniquely defined: the external common tangents and the internal common
tangents (Fig. 3(a)). The internal common tangents subdivide the plane into four cones. The
external common tangents define the convex hull of the union of the two reference regions:
such a convex hull corresponds to the acceptance area of the relation between. By
intersecting the convex hull with the four cones, we obtain the acceptance areas, which we
call tiles. The tiles Between(B,C), Rightside(B,C), Before(B,C), Leftside(B,C) and After(B,C)
correspond to the five projective relations bt, rs, bf, ls, af, respectively, which are called
single-tile relations. If a primary region A lies in more than one tile, the relation is called
multi-tile: for example, if A is partly in Rightside(B,C) and partly in Before(B,C), then we
say that A is partly rightside and partly before of B and C and we write rs:bf(A,B,C). As a
convention for the notation, the order in which we enumerate the tiles composing a multi-
tile relation is always bt, rs, bf, ls, af. For example, we will always write rs:bf and not bf:rs.

1 We use the terminology of [5, 8, 20]: the primary object is the one to be located and the reference objects
are the ones in relation to which the primary object is located.

240

Geoinformatica (2013) 17:235–255

As a special case, if the two reference regions have not disjoint convex hulls, common
tangents cannot be defined and the plane can be partitioned in two areas, corresponding to
relations in and ou (Fig. 3(b)).

The 5-intersection matrix can be defined by considering the empty/non-empty
intersections (indicated with 0 and 1, respectively) of the primary region A with the five
acceptance areas:

A Before(B,C)  A Between(B,C) 

A After(B,C) 

A Leftside(B,C) 

A Rightside(B,C) 

The 5-intersection can have 25–1 different configurations. Each configuration corre-
sponds to a projective relation among three regions A, B, and C, where
CHðBÞ \ CHðCÞ ¼ ;. The matrix with all five values equal to zero does not correspond
to a relation. For CHðBÞ \ CHðCÞ 6¼ ;, we consider the following 2-intersection matrix:

A Inside(B,C)  A Outside(B,C) 

The latter matrix can assume the values (0 1), (1 0), and (1 1). Overall, the model builds

a JEPD set of 34 projective relations among three regions of the plane.

4 Identifying directions and frames of reference

We model directional relations as binary relations with an associated frame of reference.
The same relations can have a geometric representation in terms of ternary relations of the
5-intersection model. A directional relation r can be defined as a tuple of three elements:
two objects, namely, a primary object PO and a reference object RO, and a frame of
reference f.

Definition 1.

r = (PO, RO, f)

(a)

(b)

Fig. 3 a The partition of the plane into five areas for disjoint convex hulls of reference regions; b the
partition of the plane into two areas for non disjoint convex hulls of reference regions

Geoinformatica (2013) 17:235–255

241

Both objects PO and RO take values from a set of classes O, which we assume to have a
spatial component. For example, typical objects could belong to the class Building or the
class Road. The relation r can take values from a subset of possible relations R, which
depends on the frame of reference f. So, for each frame of reference f, among other aspects,
we define the subset of directional relations that can be used with it. We define a frame of
reference f made up of four components: type (t), subtype (st), object (o), and a set of
directional relations (R*).

Definition 2.

f = (t, st, o, R*)

The type can be one in the set (intrinsic, extrinsic, deictic). For each type, we identify
several subtypes referring to common application scenarios. The values for the subtype will
be specified later on in this section: each subtype corresponds to a different geometric
representation in terms of the 5-intersection model. The object o is a particular geometric
object that, depending on the frame of reference, has a specific role in the scene and is
necessary to build the relations. Also the possible values for object o will be discussed in
detail later on in this section. The set R* is a subset of the set of directional relations R that
is associated with the frame of reference. Figure 4 anticipates the results by showing the
proposed taxonomy of frames of reference, with the hierarchical structure made up of types
and subtypes. The resulting hierarchy is a refinement of the intrinsic-extrinsic-deictic
categorization: the distinction in subtypes comes from an analysis of various examples in
common scenarios and from those discussed in the literature (e.g., [13, 33]), but it cannot be
considered exhaustive nor complete. It would be perfectly possible that other subtypes
could be proposed in other peculiar situations.

1; RO0

f), with a corresponding projective relation of

In order to express a directional relation using the 5-intersection model, we have to
identify the formal rules that allow us to perform the mapping from a given frame of
reference to its geometric representation. The directional relation assumes the form r(PO,
RO,
the 5-intersection model
r0ðPO0; RO0
2Þ. In this correspondence, the object PO is always mapped to PO′. The
reference objects RO0
2 are determined in various ways, as discussed later on, for
each subtype of the frame of reference f. In this paper, for each frame of reference, we
assume that RO0
2 have disjoint convex hulls, avoiding thus the degenerate case of
the 5-intersection model. The relation r is mapped to the corresponding relation r′ via a
mapping function Φ, which also varies with the frame of reference. We restrict ourselves to
is
single-tile relations,

is, relations mapping to a single acceptance region. It

1 and RO0

1 and RO0

that

Fig. 4 The taxonomy of frames of reference

242

Geoinformatica (2013) 17:235–255

straightforward to extend the model to multi-tile relations: given two single-tile relations r1
and r2, the multi-tile relation obtained with them can be indicated as r1: r2. Multi-tile
relations are mapped considering the components individually.

The domain of Φ is the set of relations R, while the co-domain of Φ is the set of single-
tile relations of the 5-intersection model, denoted by P = {rightside, leftside, between,
before, after}.

Definition 3. Φ : R→P

The Φ function can be completely defined by enumerating the results in a two columns
matrix for each frame of reference. In the following, we discuss the various subtypes of
frames of reference.

4.1 Extrinsic frames of reference

4.1.1 Geographic subtype

For the extrinsic frames of reference, we distinguish two different subtypes, called:
geographic and path.

In this subtype, we include directional relations such as “region A is north of region B”.
While object B acts as reference object for this relation, the direction is determined by
external factors (geographic coordinates). The geographic north is a conventional point in
the terrestrial surface that determines all other cardinal directions (conventionally, east is
defined to be on the right of an observer that looks towards north). Depending on the
particular projection in which data are represented, we can have variations of this frame of
reference subtype: the north could be represented as a point (Fig. 5(a)) or as a line (e.g., the
upper side limit of data bounding box – Fig. 5(b), called north grid line in [34]). Such a
conventional geometric object is specified by the object element o of the frame of reference.
We label this frame of reference fEGN, where E stands for extrinsic, G for geographic,

and N for North:

Definition 4.
»
EGN is the following:

The set R

»
EGN )
fEGN = (extrinsic, geographic, conventional_north, R

Definition 5. R

»
EGN = {north_of, east_of, south_of, west_of}.

(a)  

 (b)

North
2nd 
Reference 
Object

N

West of

East

1st Reference 
Object

South of

Fig. 5 Extrinsic frame of reference of subtype geographic: a point as passed object; b line as passed object

Geoinformatica (2013) 17:235–255

243

The mapping at the geometric level takes RO as RO0
2; the ΦEGN function is:

RO0

1 and the conventional_north as

We may assume that in the particular subdivision of the plane that we have in this

subtype, the after relation of the P set does not correspond to any directional relation.

Another situation that we include in the geographic subtype is that of other fixed
bearings, other than the conventional north,
that are sometimes used to establish an
extrinsic frame of reference, such as mountain slopes, prevailing wind directions, river
drainages, celestial azimuths [13]. For example, an extrinsic frame of reference can be
determined by a slope with directional relations such as ‘downhill’ and ‘uphill’, as in the
Tzeltal linguistic frame of reference [13]. Also the flow of a river commonly determines the
right and left banks.

We label this frame of reference fEGB, where E stands for extrinsic, G for geographic,

and B for fixed bearing:

Definition 6.

»
EGB)
fEGB = (extrinsic, geographic, fixed_bearing_object, R

The set R

»
EGB is the following:

Definition 7. R

»
EGB = {downhill, right_of, uphill, left_of}.

The subdivision of the space can be made up in this case by a conventional object that is

situated downhill and by a mapping function that can be rewritten as follows:

EGN
r

r 
north_of  between 
east_of 
rightside 
south_of  before 
leftside 
west_of 
after 

EGB
r

r 
downhill  between 
rightside 
right_of 
before 
uphill 
leftside 
left_of 
after 

4.1.2 Path subtype

The path subtype describes an extrinsic frame of reference, for which the context is given
by successive positions along a linear path. This type of extrinsic frame of reference was
described in [16, 20], taking the motion of a reference object to identify contextual factors.

244

Geoinformatica (2013) 17:235–255

For simplicity, we assume to have a straight path, since a bended path would need a
modification of the 5-intersection model.

Examples of relations could be found in expressions such as “the car passed a crossroad”
or “you come across a supermarket along the way”. Both primary and reference objects
have to be taken along the path. The directional relation is expressed between a primary
two variations of this subtype can be identified,
object and a reference object, but
considering that
the geometric level can be done by associating the
reference object either with the first or the second reference object of the 5-intersection
model. The other reference object needs to be found along the path as well.

the mapping at

We can find a temporal interpretation thinking to a moving reference object taken at
various time instants. Assuming that one reference object of the projective relation
represents the present time position of the moving object, then the other reference object
may represent, respectively, a position in the past or in the future. A past or a future position
of the reference object is passed to the object element of the tuple (Fig. 6(a-b)). The
reference object RO of the directional relation (PO, RO, f) is always the present position.
We name these two variations of the path subtype fEPP and fEPF, where E stands for
extrinsic, P for path, and P and F for past and future, respectively.

The corresponding tuples are:

Definition 8.
Definition 9.

fEPP = (extrinsic, motion, past_position, R
fEPF = (extrinsic, motion, future_position, R

»
EPP).
»
EPF ).

Now we define the two sets R

»
»
EPF of all possible directional relations for the
EPP and R

frames above:

»
EPF = {passed, right, left, ahead}.
Definition 10. R
»
EPF = {along, right, behind, left}.
Definition 11. R

The ΦEPP and ΦEPF functions are:

EPP
r

r 

r 
passed  between  along 
rightside  right 
right 
before 
leftside 

left 
ahead  after 

behind  before 
leftside 
left 
after 

EPF
r
between 
rightside 

In both variations, there are two 5-intersection relations that are not used. With respect to
the past position, the subtype does not specify what was before the starting point, while,

Fig. 6 Extrinsic frame of refer-
ence: a subtype path with past
position; b subtype path with
future position

(a)

(b)

RO
Future Position

Left

RO
Present Position

Right

Behind

Geoinformatica (2013) 17:235–255

245

with respect to the future position, the subtype does not specify what will be after the arrival
point. Let us better illustrate the above frames of reference with some examples. In the
frame of reference fEPP, we can express relations of a moving object with respect to a past
position (e.g., the starting point): e.g., “the car (which I am driving) passed a crossroad” or
“as we move ahead, we arrive at a gas station”. In fEPP, the past position is well fixed, while
future positions are underdetermined. In the frame of reference fEPF, we can express
relations of a moving object with respect to a future position (well determined). For
example, “I’m going towards Rome. Along the way, we meet Florence” and “We left
behind Bologna”.

The frames of reference fEPP and fEPF, if combined together, would construct a frame of
reference very similar to the double-cross calculus [7], obtaining an equivalent for extended
regions.

4.2 Intrinsic frames of reference

In this section, we analyze the second type of frames of reference: the intrinsic one. We can
identify two different subtypes depending on how we build the reference system: canonical/
geometric and visual/motion.

4.2.1 Canonical/geometric subtype

the object

itself. The prominent

The canonical/geometric subtype copes with all situations in which there is a reference
object with some peculiarities that allow the identification of a prominent front and/or other
sides of
front may be identified with geometric
characteristics of the reference object or by a canonical use of some of its parts. For
example, the front side of a building could be identified by an architectural feature, like
a façade, or by a functional feature, like its main entrance [35]. Depending on the shape
of the reference object, it is possible to identify two geometric parts, back and front,
which are assigned to the object o of the frame f. Those two parts correspond to RO0
1 and
RO0
2 in the 5-intersection model (Fig. 7(a)). As a special case, the back or front could be a
point (Fig. 7(b)).

We name this frame of reference fIC, where I stands for intrinsic and C for canonical/

geometric and the corresponding tuple is:

Definition 12.

fIC = (intrinsic, canonical/geometric, back-front, R

Now we define the set R

»
IC of all possible directional relations of fIC

»
IC)

»
IC = {inside, rightside, back, leftside, front}.
Definition 13. R

The ΦIC function is:

IC
r’
r 
inside 
between 
rightside  rightside 
back 
leftside 
front 

before 
leftside 
after 

246

Geoinformatica (2013) 17:235–255

Fig. 7 Intrinsic frame of reference
subtype canonical/geometric:
a back-front object; b special case

(a) 

(b)

4.2.2 Visual/motion subtype

The visual/motion subtype is an intrinsic frame of reference, where the front direction is
determined either by the motion of the reference object RO [33] or by the direction of
vision [35]. It is worthwhile to notice that the direction of motion could be not coincident
with the direction of vision. Both cases fall inside egocentric frames of reference. The
reference object RO corresponds to RO0
1. The acceptance areas can be determined by an
angle centered on the front direction (Fig. 8(a)), whose width may be determined by
different criteria. In the case of motion, the width of the angle could be the range in which
the movement direction can change; in the case of vision, the angle could be the width of
view, such as the binocular view angle. The second reference object RO0
2 can correspond to
a reference segment, as illustrated in Fig. 8(a). The meaning of such a segment is not
uniquely determined: one interpretation in the case of motion could be to delimit a zone
where a possible collision can occur during the movement or alert zone (Fig. 8(b)). In the
case of vision, we can distinguish a close visual field from a medium/far visual field. The o
element of the f tuple is this reference segment.

We name this frame of reference fIV, where I stands for intrinsic and V for visual/motion

and the corresponding tuple is:

Definition 14.

fIV = (intrinsic, visual/motion, reference_segment, R

Now we define the set R

»
IV of all possible projective relations of fIV:

»
IV )

»
IV = {to_the_right, back, to_the_left, front}.
Definition 15. R

The corresponding ΦIV function is:

IV

r’
r 
alert/close 
between 
to_the_right  rightside 
back 
to_the_left 
front 

before 
leftside 
after 

Fig. 8 Extrinsic frame of refer-
ence subtype angle: a identifying
Ref.Seg.; b acceptance areas

(a)

(b)

Back

Alert

Front

Rightside

Leftside

Geoinformatica (2013) 17:235–255

4.3 Deictic frames of reference

247

In this section, we analyze the last type of frames of reference: the deictic one. We
distinguish two different subtypes depending on whether the origin of the frame of
reference is centered on the reference object RO or on the point of view. We call the
subtypes allocentric (Fig. 9(a)) and egocentric (Fig. 9(b)). The construction is the same for
both frames of reference: we use the RO of the relation tuple as RO0
2 and the point of view,
represented by the object o of the f tuple, as RO0

1.

We name these two frames of reference fDA and fDE, where D stands for deictic and A

and E mean allocentric and egocentric, respectively. The corresponding tuples are:

Definition 16.
Definition 17.

»
DA).
fDA = (deictic, allocentric, point_of_view, R
»
DE).
fDE = (deictic, egocentric, point_of_view, R

Now we define the two sets R

»
DA and R

»
DE of all possible projective relations of fDA and

fDE:

»
DA={front, right_of, left_of, behind}.
Definition 18. R
»
DE={between, right_of, back, left_of, after}.
Definition 19. R

The ΦDA and ΦDE functions are:

DA
r’
r 
between  between   between 
front 
right_of  rightside  right_of  rightside 

DE
r’

r 

left_of 
behind   after 

leftside 

back 
left_of 
after 

before 
leftside 
after 

In the Hausa and other languages [13], for the frame fDA, the relations front and behind
would be exchanged, since in these languages coordinates are translated from the point of
view to the reference object, rather than rotated. The Before zone of the 5-intersection
model is not mapped by the ΦDA function due to the fact that it is placed on the back of the
observer: we assume that, if we focus the attention on the reference object, all objects on
the back of the observer lose their meaning. Finally, examples of use of the frame fDE could
be “There is a fountain between me and the house” or “The post office is behind you if you
look at the church”.

Fig. 9 Deictic frame of
reference: a subtype allocentric;
b subtype egocentric

(a) 

(b)

Geoinformatica (2013) 17:235–255

248

5 Application

5.1 Architecture

In this section, we outline a possible architecture, our implementation of frames of
reference, and query examples.

The proposed architecture adheres to the following guidelines:

&
&
&

possibility to handle queries on spatial data with spatial operators;
use of standard data formats to promote syntactic interoperability;
ability to manage information on the basis of context.

The typical structure of the architecture to promote interoperability is divided into layers:
the presentation layer (or user layer) for user interface, the business logic layer (or service
layer) to perform operations and the data layer which is used by the previous level to
retrieve data to manipulate or to save them in a permanent support. To allow syntactic
interoperability, it is necessary to use standards to represent and manage data. In the
architecture proposed by the Open Geospatial Consortium (OCG), in the business logic
layer there is a WFS (Web Feature Service) to perform data exchange [36]. A WFS contains
several interfaces to retrieve and manage vector data. The WFS receives the query and uses
the data layer to retrieve the answer. In this kind of 3-tiers architecture, the data storage
formats or spatial database software that is used in the data layer is opaque to the client. The
client does not have to know the implementation details of the data layer, because it
communicates with the WFS service only.

the query at

According to the OGC,

the geometric level of an interoperable
architecture can be expressed by using the Geographic Markup Language (GML)
[37], but topological operators only are supported: therefore, an extension of GML is
necessary to handle queries with projective operators and the associated frames of
reference. When the query reaches the server, the WFS, using the frame of reference
expressed within the query, translates application features into geometric types accessing
the geometric property of the feature: for example, features like streets, rivers, and
railroads will be mapped to their corresponding geometric representations, like polylines
and polygons. Directional relations, like “back” or “along”, will be mapped by the WFS
according to the corresponding Φ function implicitly contained in the adopted frame of
reference and chosen in the Φ repository. Subsequently, the spatial operators will be
calculated by a spatial DBMS or by one or more geometric calculation engine. For
example, JTS is a Java-implemented calculation engine for topological operators [38].
Regarding projective operators, as shown in the next section, we developed a Java
engine capable to compute the 5-intersection relations and all the directional relations
with respect to a chosen frame of reference. Then, the data will be sent back to the client
for visualization (Fig. 10).

5.2 Implementation

We carried out a Java implementation of the frames of reference and the corresponding
operators to compute directional relations. Those operators rely on the geometric operators
provided by the 5-intersection model, which have been previously implemented (see [12]).
In detail, we extended the JTS “geometry” class that represents geometric objects,

Geoinformatica (2013) 17:235–255

249

Client

GML

WFS

Φ
Repository

ΦEGN
P
between
rightside
before
leftside

R*EGN
North_of
East_of
South_of
West_of

ΦDE
P
between
rightside
before
leftside
after

R*DE
between
right_of
back
left_of
after

JTS

APPLICATION
LAYER

Application
Ontology

Other
calculation
engine

Projective
calculation
engine

SERVICE
LAYER

DATA
LAYER

Spatial DB 1
Schema 1

Spatial DB 2
Schema 2

Spatial DB n
Schema n

Fig. 10 A prototypical architecture

according to the definitions given in the OGC simple features specifications, adding
methods to compute directional relations and, then, we implemented a Java virtual class for
the frame of reference called FoR and other three virtual classes for the three different
subtypes of frames of reference.

The virtual super class FoR includes methods as explained below. To illustrate the
methods, we will use an instance of FoR, called fr_of_ref, and two instances, a tree T and a
university building U:

1. The virtual function Fi that implements the Φ function and allows us to translate a
directional relation to the corresponding 5-intersection relation. This function has to be
implemented in the subtype classes because it can be defined only if the type and the
subtype are defined.

2. A relate function capable of checking if a given directional relation holds between any
two given objects. It can also be used to check multi-tile relations such as after:left_of.
A possible use is: “Is the tree after and left of the university building?”

boolean test_rel=fr_of_ref.relate(T,U,”after;left_of”);

Alternatively, relations can be completely specified in terms of a binary pattern
using methods patt2rel and rel2patt that allow the translation from binary patterns to
relations and vice versa.

boolean test_rel=fr_of_ref.relate(T,U,”00011”);

250

Geoinformatica (2013) 17:235–255

3. A relate function that returns all the application objects that are in a given relation
with a given object. This function can be used to retrieve objects from a data
store filtering those that verify the relation expressed within a query, as we will
show in Section 5.3.

The virtual classes representing subtypes have one more attribute containing the
corresponding type. For each type of frame of reference, we implemented all the subtypes.
As an example, a UML diagram of subtype fDE is given in Fig. 11.

Each subtype has the same structure and includes the following attributes and

methods:

1. The subtype of the frame of reference.
2. A geometric object Object, as defined in Section 4.
3. The set Rs of all possible relations within the frame of reference. Each relation can be
completely specified in terms of a pattern: Rs is a bi-dimensional array of strings that

Fig. 11 UML diagram of fDE

FoR

-Name : String

+Fi() : String
+relate() : Boolean
+relate() : Object

FoR_Deictic

-Type : String

FoR_Deictic_egocentric

-SubType : String
-Object : Geometry
-Rs : String[][]
+Fi() : String
+between() : Boolean
+right_of() : Boolean
+back() : Boolean
+left_of() : Boolean
+after() : Boolean
+relate() : Boolean
+relate() : Object

Geoinformatica (2013) 17:235–255

251

contains the name of the relations and the relative pattern. For example, for the fDE
subtype, Rs will look as follows:

Rs=new String[5][2];

Rs[0] [0]= "10000";
Rs[0] [1]= "between";
Rs[1] [0]= "01000"; 
Rs[1] [1]= "right_of";
Rs[2] [0]= "00100";
Rs[2] [1]= "back";
Rs[3] [0]= "00010";
Rs[3] [1]= "left_of";
Rs[4] [0]= "00001";
Rs[4] [1]= "after";

4. The mapping function Fi

that allows to translate a directional relation in the

corresponding geometric one calculated by means of the 5-intersection model.

5. A set of Boolean functions that check all the possible single-tile relations defined
in the frame of reference. Those relations are binary and operate on two application
objects by accessing their geometric representation. Referring to the example shown
in the introduction, if we want to check if the tree is on the left of the university
building from the observer point of view, we have to call the Boolean function
left_of, which is a method of the FoR_Deictic_egocentric class. The function call is
the following:

boolean test_rel=fr_of_ref.left_of(T,U);

5.3 Query example

Let us show how our implementation can be used for answering queries containing spatial
operators. We will focus only on the first step of the query processing, which is the
retrieving of objects from a data store filtered by a spatial relation. A possible user query
could be: “What is the building to the right of the university?”. Thus, we need to retrieve all
the objects Building from the data store filtered by those that verify the spatial relation
right_of with the observer location and the university. The relation right_of is unambiguous
if associated with a frame of reference. This association is carried out automatically by the
query interface, based on the context information. Let us suppose that in this case the
reference (instantiated as
relation should be interpreted under
fr_of_ref_DE). The SQL-like statement will be:

the fDE frame of

SELECT * FROM Building WHERE fr_of_ref_DE.right_of(Building, id.University)

252

Geoinformatica (2013) 17:235–255

This query is expressed at the application level and contains a constant, which is
the id.University, and a variable Building. The WHERE clause will invoke the relate
method of the FoR_Deictic_egocentric class with the pattern of the right_of relation. It
will return all the application objects (buildings) that are in the right_of relation with the
university in an array called Collection. Let us suppose that the Buildings[] array contains
all the buildings in the data set and U is the university. The call to the relate function will
look as follows:

Building Collection[]=fr_of_ref_DE.relate(Buldings[],U,"right_of");

the spatial

relation is binary:

As mentioned before,

there is a primary object
Building that is variable (it will be the result of our query) and a reference object U, and it
is associated with a particular frame of reference fDE. In this case, the frame of reference
contains the observer position in the Object attribute. For each Building, the relate
function will invoke the function relate of the 5-intersection using the observer position
and the university as first and second reference object, respectively. Then, it will evaluate
the returned pattern with respect to the one obtained by the Φ function applied to the
right_of relation: the building with the matching patterns will be added to Collection[]. A
possible translation of the previous query coded in an extended GML could be the
following:

<?xml version="1.0" encoding="iso-8859-1"?> 
<GetFeature outputFormat="GML2" xmlns:gml="http://www.opengis.net/gml">
<Query typeName="OBJECTS"> 
 <PropertyName>BUILDING</PropertyName> 
 <PropertyName>GEOM</PropertyName> 
  <Filter> 
    <gml:FoR>    
      <TYPE>DEICTIC</TYPE> 
       <SUBTYPE>EGOCENTRIC</SUBTYPE> 
          <OBJECT> 
            <PropertyName>GEOM</PropertyName> 

     <gml: Point > 
      <coord> 

               <X>X coordinate of observer position</X>
               <Y>y coordinate of observer position</Y
             </coord> 
            </gml:Point> 
          </OBJECT> 
      <Right_of> 
       <PropertyName>GEOM</PropertyName> 
         <gml:Polygon> 
          <gml:outerBoundaryIs> 
          <gml:LinearRing> 
           <gml:coordinates cs="," decimal="." ts=" "> 
             …coordinates of the University building.. 
           </gml:coordinates> 
          </gml:LinearRing> 
         </gml:outerBoundaryIs> 

As shown in the example above, the Φ function does not need to be explicitly expressed
in the query because once we identify the frame of reference, the associated Φ is known
server-side.

Geoinformatica (2013) 17:235–255

253

6 Conclusions

In this paper, we outlined the development of a framework for expressing directional
relations in various well-known frames of reference and their translation to projective
relations of the 5-intersection model. In order to reach our aim, we have identified formal
rules that allow us to map all frames of reference to the geometric model. Specifically, we
have identified a pair of reference objects for each directional relation (and for the
associated frame of reference) and a mapping function Φ that provides the binding between
directional relations and 5-intersection relations.

The 5-intersection model was not born to satisfy cognitive or linguistic aspects but
the geometric need of modeling positions of extended objects in space by using
projective invariants. In this sense, it is not essential the name that we assign to the
projective relations identified by the model. It is instead the goal of the present article
to try to give “meaning” to the 5-intersection relations, by mapping them to typical
frames of reference in which the directional relations are able to convey the associated
cognitive or linguistics aspects.

The identified frames of reference always map to a valid 5-intersection matrix, avoiding
the case of intersecting convex hulls of the reference objects. Therefore, the part of the
model for projective relations called 2-intersection was not actually used in the frames of
reference discussion. It should be noticed that, in this paper, we do not consider the case of
frames of reference made up of overlapping objects, such as a region and one of its parts
(the already cited example of “Milan is in the north of Italy”). For these cases, a modified
model of directional relations should be developed.

From the application point of view,

this paper provides the means of indicating
spatial relations on the basis of context: the query interface can build queries that will
be processed server-side at a geometric level. The model was implemented as a Java
computation engine for projective relations and embedded in a prototypical application
for testing.

Acknowledgements We thank the anonymous reviewers and the area editor for suggesting important new
insights to the first submitted version of this paper.

References

1. Bloch I, Ralescu A (2003) Directional relative position between objects in image processing: a

comparison between fuzzy approaches. Pattern Recognit 36:1563–1582

2. Liu X, Shekhar S, Chawla S (2003) Object-based directional query processing in spatial databases. IEEE

Trans Knowl Data Eng 15(2):295–304

3. Worboys M, Duckham M, Kulik L (2004) Commonsense notions of proximity and direction in

environmental space. Spat Cogn Comput 4(4):285–312

4. Wolter D, Lee JH (2010) Qualitative reasoning with directional relations. Artif Intell 174:1498–

5. Clementini E, Di Felice P, Hernández D (1997) Qualitative representation of positional information. Artif

6. Frank AU (1992) Qualitative reasoning about distances and directions in geographic space. J Vis Lang

1507

Intell 95(2):317–356

Comput 3(4):343–371

7. Freksa C (1992) Using orientation information for qualitative spatial reasoning. In: Frank AU,
Campari I, Formentini U (eds) Theories and methods of spatio-temporal reasoning in geographic
space - International Conference GIS - From space to territory: theories and methods of spatio-
temporal reasoning, September 21–23, 1992, Pisa, Italy, vol 639. LNCS. Springer, Berlin, pp 162–
178

254

Geoinformatica (2013) 17:235–255

8. Hernández D (1993) Maintaining qualitative spatial knowledge. In: Frank AU, Campari I (eds) Spatial
information theory: a theoretical basis for GIS - European conference, COSIT’93, vol 716. LNCS.
Springer-Verlag, Berlin, pp 36–53

9. Ligozat GF (1993) Qualitative triangulation for spatial reasoning. In: Frank AU, Campari I (eds) Spatial
information theory: a theoretical basis for GIS: European conference, COSIT’93, September 19–22,
1993, Marciana Marina, Elba Island, Italy, vol 716. LNCS. Springer Verlag, Berlin, pp 54–68

10. Schlieder C (1995) Reasoning about ordering. In: Frank AU, Kuhn W (eds) Spatial information theory: a

theoretical basis for GIS - Int. Conf., COSIT’95, vol 988. LNCS. Springer, Berlin, pp 341–349

11. Goyal R, Egenhofer MJ (1997) The direction-relation matrix: a representation of direction relations for

extended spatial objects. In: UCGIS annual assembly and summer retreat, Bar Harbor, ME

12. Clementini E, Billen R (2006) Modeling and computing ternary projective relations between regions.

IEEE Trans Knowl Data Eng 18(6):799–814

13. Levinson SC (1996) Frames of reference and Molyneux’s question: crosslinguistic evidence. In: Bloom
P, Peterson MA, Nadel L, Garrett MF (eds) Language and space. The MIT Press, Cambridge,
Massachussets, pp 109–169

14. Klatzky RL (1998) Allocentric and egocentric spatial representations: definitions, distinctions, and
interconnections. In: Freksa C, Habel C, Wender KF (eds) Spatial cognition: an interdisciplinary
approach to representing and processing spatial knowledge vol 1404. Lecture Notes in Artificial
Intelligence. Springer, Berlin, pp 1–17

15. Frank AU (1998) Formal models for cognition — Taxonomy of spatial location description and frames
of reference. In: Freksa C, Habel C, Wender KF (eds) Spatial cognition: an interdisciplinary approach to
representing and processing spatial knowledge vol 1404. Lecture Notes in Artificial Intelligence.
Springer, Berlin, pp 293–312

16. Hernández D (1994) Qualitative representation of spatial knowledge, vol 804. Lecture Notes in Artificial

17. Eschenbach C (1999) Geometric structures of frames of reference and natural language semantics. Spat

Intelligence. Springer, Berlin

Comput Cogn 1(4):329–348

18. Eschenbach C, Habel C, Leßmöllmann A (1997) The interpretation of complex spatial relations by integrating
frames of reference. Paper presented at the Workshop “Language and Space” (AAAI-97), Rhode Island

19. Moratz R, Tenbrink T (2006) Spatial

iterative,
empirically supported development of a model of projective relations. Spat Cogn Comput 6(1):63–107

reference in linguistic human-robot

interaction:

20. Retz-Schmidt G (1988) Various views on spatial prepositions. AI Mag 9(2):95–105
21. Cohn AG, Renz J (2007) Qualitative spatial representation and reasoning. In: Harmelen Fv, Lifschitz V,

Porter B (eds) Handbook of knowledge representation, 1. Elsevier, pp 551–596

22. Bloch I, Colliot O, Cesar RM Jr (2006) On the ternary spatial relation “Between”. IEEE Trans Syst Man

Cybern B Cybern 36(2):312–327

23. Majid A, Bowerman M, Kita S, Haun DBM, Levinson SC (2004) Can language restructure cognition?

The case for space. Trends Cogn Sci 8(3):108–114

24. Gallistel CR (2002) Language and spatial frames of reference in mind and brain. Trends Cogn Sci 6

25. Cai G (2007) Contextualization of geospatial database semantics for Human–GIS Interaction.

(8):321–322

GeoInformatica 11(2):217–237

26. Ishikawa T, Kiyomoto M (2008) Turn to the left or to the west: verbal navigational directions in relative
and absolute frames of reference. In: Cova TJ, Miller HJ, Beard K, Frank AU, Goodchild MF (eds)
Geographic information science, 5th International Conference, GIScience 2008, Park City, UT, USA,
September 23–26, 2008., vol 5266. LNCS. Springer, Berlin, pp 119–132

27. Klippel A, Montello DR (2007) Linguistic and nonlinguistic turn direction concepts. In: Winter S,
Duckham M, Kulik L, Kuipers B (eds) Spatial Information theory, 8th International Conference, COSIT
2007, Melbourne, Australia, September 19–23, 2007, vol 4736. LNCS. Springer, Berlin, pp 354–372
28. Stewart Hornsby K, King K (2008) Modeling motion relations for moving objects on road networks.

GeoInformatica 12(4):477–495

29. Varzi A (1996) Parts, wholes, and part-whole relations: the prospects of mereotopology. Data Knowl Eng

20(3):259–286

1(1):1–17

30. Clementini E, Di Felice P (1997) A global framework for qualitative shape description. GeoInformatica

31. Clementini E, Di Felice P (2000) Spatial operators. ACM SIGMOD Rec 29(3):31–38
32. Billen R, Clementini E (2005) Semantics of collinearity among regions. In: Meersman R, Tari Z, Herrero
P (eds) On the move to meaningful internet systems 2005: OTM workshops - 1st Int. Workshop on
semantic-based geographical information systems (SeBGIS’05), Agia Napa, Cyprus, October 31 -
November 4, 2005, vol 3762. LNCS. Springer, Berlin, pp 1066–1076

Geoinformatica (2013) 17:235–255

255

33. Jackendoff R (1996) The architecture of the linguistic-spatial interface. In: Bloom P, Peterson MA, Nadel

L, Garrett MF (eds) Language and space. The MIT Press, Cambridge, Massachussets, pp 1–30

34. Kulik L, Klippel A (1999) Reasoning about cardinal directions using grids as qualitative geographic
coordinates. In: Freksa C, Mark DM (eds) Spatial Information Theory: Cognitive and Computational
Foundations of Geographic Information Science: International Conference COSIT ’99, August 25–29,
1999, Stade, Germany, vol 1661. LNCS. Springer, Berlin, pp 205–220

35. Levelt WJM (1996) Perspective taking and ellipsis in spatial descriptions. In: Bloom P, Peterson MA,
Nadel L, Garrett MF (eds) Language and space. The MIT Press, Cambridge, Massachussets, pp 77–107
36. OGC Open Geospatial Consortium Inc (2005) OpenGIS Web Feature Service (WFS) Implementation

specification. OGC 04–094:131

37. OGC Open Geospatial Consortium Inc (2007) OpenGIS Geography Markup Language (GML) Encoding

Standard. http://www.opengeospatial.org/standards/gml. Accessed 05.12.2008

38. Vivid Solutions Inc (2004) JTS Topology Suite. http://www.vividsolutions.com/jts/JTSHome.htm.

Accessed 05.12.2008

Eliseo Clementini received a M.Eng. in Electronics Engineering from the University of L’Aquila in 1990
and a Ph.D. in Computer Science from University of Lyon in 2009. He is an Associate Professor of
Computer Science at the Electrical and Information Engineering Department of the University of L’Aquila.
His research activity was mainly in the fields of spatial databases and qualitative spatial reasoning, where he
has given original contributions towards conceptual data models for the representation of geographic
information in object-oriented databases, models for spatial relations between geometric objects, qualitative
models for spatial reasoning, and models for the treatment of uncertainty in spatial data. The conceptual
model for spatial data and topological relations developed by Prof. Clementini is part of Open Geospatial
Consortium recommendations and ISO/TC 211 standard and has been implemented in major spatial database
systems. He has active scientific collaborations with many international experts in the fields of spatial
databases and spatial reasoning. He was a visiting researcher at the INSA of Lyon, at the University of Liège,
at the University of Glasgow, at the University of Maine, at the Technical University of Munich, at
Hiroshima University, and at Simon Fraser University. He has been an invited speaker in various
international symposia. He is a member of the program committee of several conferences such as COSIT
(Conference on Spatial Information Theory), SDH (Spatial Data Handling), ACM SIGSPATIAL GIS
(Advances in Geographic Information Systems), and SeCoGIS (Semantic and Conceptual Issues in GIS).

