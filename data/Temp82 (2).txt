Geoinformatica
DOI 10.1007/s10707-017-0303-4

EPLA: efficient personal location anonymity

· Yuanyuan Jin1 · Kai Zhang1 ·
Dapeng Zhao1
Xiaoling Wang1 · Patrick C. K. Hung2 · Wendi Ji1

Received: 11 October 2016 / Revised: 13 April 2017 / Accepted: 22 May 2017
© Springer Science+Business Media New York 2017

Abstract A lot of researchers utilize side-information, such as the map which is likely to
be exploited by some attackers, to protect users’ location privacy in location-based ser-
vice (LBS). However, current technologies universally model the side-information for all
users and don’t distinguish different users. We argue that the side-information is personal
for every user. In this paper, we propose an efficient method, namely EPLA, to protect
the users’ privacy using visit probability. We select the dummy locations to achieve k-
anonymity according to personal visit probability for users’ queries. In EPLA, we use
AKDE(Approximate Kernel Density Estimate), which greatly reduces the computational
complexity compared with KDE approach. We conduct the comprehensive experimental
study on the two real Gowalla and Foursqure data sets and the experimental results show
that EPLA obtains fine privacy performance and low computation complexity.

Keywords LBS · Privacy · Anonymity · KDE · Cloaking region

(cid:2) Xiaoling Wang

xlwang@sei.ecnu.edu.cn

Dapeng Zhao
zhaodapeng hh@163.com

Yuanyuan Jin
2547124038@qq.com

Kai Zhang
maroma@qq.com

Patrick C. K. Hung
patrick.hung@uoit.ca

Wendi Ji
wendyg8886@gmail.com

1

2

International Research Center of Trustworthy Software, Shanghai Key Laboratory of Trustworthy
Computing, East China Normal University, Shanghai, China

Faculty of Business and Information Technology, University of Ontario Institute of
Technology(UOIT), 2000 Simcoe Street North, Oshawa, ON L1H 7K4, Canada

Geoinformatica

1 Introduction

In recent years, location-based services LBSs [1] have been wide-spread adopted in many
public areas. While a lot of Technologies [2, 3] in LBSs bring convenience to people, they
face problems caused by the privacy disclosure. The potential individual privacy leak draws
people’s attention. The locations can expose personal privacy information, such as home
address, health information, religious belief and so on.

In a lot of applications [4, 5], such as Meituan (www.meituan.com), LBS service
providers aren’t completely trusted. They appeal to users to log in by electronic coupons
and discount, and then, they obtain the login information. Since LBS service providers have
obtained login information, users are more fearful that their location information is collected
by service providers. Once LBS service providers get users’ location information, they can
precisely analyze the users and get their privacy information.

To protect users’ location privacy, a lot of scholars have proposed large amounts of tech-
niques including spatial cloaking technique [6, 7], pseudonyms technique [8, 9] and so on.
Spatial cloaking technique is a very popular approach and it reduces the spatial resolution to
obscure the real locations. A lot of techniques exploit trusted-party structure [6] to decrease
client-side costs and the trusted-party gathers all locations information about users. When a
user submits LBS queries with his exact location to the trusted-party anonymity server, the
server hides the user’s exact location by either building a bigger Cloaking Region (CR) cov-
ering many other users or constructing a dummy location set [9] including the user’s exact
location and a lot of other locations geographically. Hence, the LBS service providers can-
not determine what is the user’s exact location. However, the data in the trusted third-party
server faces certain risk, and hackers can capture all the usern data by breaking through the
trusted server.

Moreover, most of the current methods assumed that adversaries don’t consider side-informa-
tion, such as the location semantics [10]. Therefore, some unlikely locations, such as lakes
and mountains, are included to hide users’ real locations. As we know, the adversary can
easily filter out the unlikely locations. Even though, a few pieces of literature [9] make use
of the side-information, researchers model them as universal model for all users. If location
is the same one, the query probability is the same in [9] for every user. As we know, different
users have different movement trajectories. For instance, most of users travel around their
residences and workplaces. So, the query probability of the same location is different for
everyone. From the analysis, current methods are difficult to ensure the desired privacy degree.
To overcome the drawback of above methods, we present EPLA, an efficient personal
location anonymity method, to protect users’ location privacy. Different from the cur-
rent approaches, EPLA takes the users’ visited locations into account and selects dummy
locations based on visit probabilities that are possibilities visiting all locations. Since the
visit probability is personal, we respectively model visit probability for each user in this
paper. EPLA is a two-step method. In the first phase, we divided the space into cells and
determined the dummy locations candidate set P . And then, Approximate Kernel Density
Estimation (AKDE) is utilized to compute the personal visit probability of each location
pi in candidate dummy locations set P based on the sampling user’s visited locations. The
computational complexity of the Kernel Density Estimation(KDE) [11] method is decreased
from O(|P |n3) to O(|P |n) (where |P | is the number of elements in set P and n is the num-
ber of sampling user’s visited locations). In the second phase, we achieve k-anonymity via
maximizing location information entropy and the area of cloaking region(CR). Finally, we
construct location anonymity set as the user’s location in LBS. And EPLA protects users’
privacy by large entropy and a big area of CR.

Geoinformatica

The preliminary version of this work was presented as conference paper [12]. In the
extensional section, we first summarize some new related work. And then, we present the
attacker in our lives and analyze the security under the strong attacker. Moreover, we extend
the experiment on Foursqure data set and compare the experimental result on the Gowalla
and Foursqure data sets. The contributions made in this research are as follows:

1. We proposed a new method, named Approximate Kernel Density Estimation(AKDE) to
compute the personal visit probability. AKDE greatly reduces the computational com-
plexity compared with Kernel Density Estimation(KDE) from O(|P |n3) to O(|P |n).
2. We analyze the error between AKDE and KDE, and then, prove that the error upper

3. We conduct extensive experiments to evaluate the proposed method and the results of

the experiments show that our method obtains well performance.

4. We theoretically analyze the security under the strong attacker and testify the security

bound is

2

(p!)1/2 ( 3

2q )p.

of our method.

The rest of the paper is organized as follows. In Section 2, we review the work of location
privacy protection. We present the relevant preliminaries of this paper in Section 3. The per-
sonal visit probability is calculated in Section 4. Section 5 presents the approach of selecting
anonymity set; Section 6 introduces the EPLA algorithm. Section 7 presents the preliminary
performance evaluation results. We analyze the security performance in Section 8. Finally,
the paper is concluded in Section 9.

2 Related work

For the existing techniques proposed to preserve users’ location privacy, we categorize them
into four main classes, named spatial cloaking technique, pseudonyms and dummy location
technique, cryptography technique and differential privacy technique.

Spatial cloaking technique [13] is a very popular method. Gruteser et al. [14] proposed
a new model which can solve Location-aware Location Privacy Protection(L2P2) prob-
lem. ICliqueCloak [7] was proposed against location-dependent attacks. Natesan et al. [15]
develop a framework that would help users to choose and manage their privacy preferences
effectively and to obtain context-based privacy from the anonymizers. Zhang et al. [16]
proposed a novel system architecture, called Location Privacy Protection for Smartphone
(LPPS), to provide a privacy-preserving top-k query. LPPS does not rely on a trust third
party (TTP), nor does it requires LBS servers to change their business model.

Mix-zone [17] is one representative Pseudonyms techniques, which only enables users
to change their pseudonyms inside a special region where users do not report the exact
locations. Guo et al. [18] combines a geometric transformation algorithm with a dynamic
pseudonyms-changing mechanism and user-controlled personalized dummy generation to
achieve strong trajectory privacy preservation. Kido et al. [19] exploited dummy locations
to achieve anonymity.

Cryptography technique [20] is also one of the main approaches. Ghinita et al. [20]
proposed a novel framework to support private location dependent queries, based on Pri-
vate Information Retrieval PIR. Considering the insecure wireless net environment, [21]
presented a k-anonymity algorithm using encryption for location privacy protection that
can improve the security of LBS system by encrypting the information transmitted by wireless.
Li and Jung [22] designs a suite of novel fine-grained Privacy-preserving Location Query
Protocol(PLQP) which allows different levels of location query on encrypted location information.

Geoinformatica

Differential privacy technique [23] is a new technique to protect location privacy.
Andr´es et al. [24] presented a mechanism for achieving geo-indistinguishability by adding
controlled random noise to the users’ location with differential privacy.

From the analysis above, most of the existing approaches assumed adversaries have
no side-information and didn’t take users’ visit characteristics into consideration. So the
approaches are difficult to make sure the users’ privacy effectively. Different from the exist-
ing work, our scheme considers individual visited locations into account to generate dummy
locations set. It provides personal privacy level for mobile users without any trusted party.

3 Preliminaries

In our method, we adopt a client/server framework and pay close attention to location
privacy when users dispatch snapshot queries in LBS.

Our method firstly divides the space into n × n cells and selects the (n − 1) × (n − 1)
corners set P (cid:2) of inner cells. The user location of a user R is indicated as a corner pR which
is closest to him. The candidate location anonymity set is P = P (cid:2) − pR. As shown in the
Fig. 1, the space is divided into 4 × 4 cells and the set P (cid:2) is {p1, p2, · · · , p9}. The red
location R is a real user’s location and it is close to p5. Therefore, the candidate location
anonymity set is P = P (cid:2) − {p5}.

3.1 Definition

on the Earth.

Definition 1 We now give the definitions of k-anonymity [25].
1. The set of locations contains k locations and each of them identifies an exact coordinate

2. The k locations in the set contains a user’s real location and k-1 dummy locations.

Definition 2 side-information is the information that is not directly related to location,
such as map, figure and so on.

Definition 3 visit probability of a location for a user is the probability that the user visits
the location

Fig. 1 Candidate locations

Geoinformatica

Definition 4 The query model that a user sends to LBS service provider is presented as
Q = (uid; K; P ∗), where uid is the user’s identification and K denotes the keywords of the
query which are not the focal point of research in this paper. The P ∗ = {P ∗
; · · · ; P ∗
}
k
1
denotes the anonymity set which includes the users current location and k − 1 dummy
locations.

; P ∗
2

3.2 The personal visit preference

As we know, users’ visit behaviors on locations are influenced by geographical factors and
the users’ preferences. In this paper, we aim to exploit the personal visit relation between
users and locations to select dummy locations. In reality, each user’s visit behavior should
be unique.

Real-world motivating examples To know the personal user’s visit preference, we
conducted an analysis on the China Telecommunications data set which is collected in
Shanghai. We randomly choose two different users from data. As Fig. 2 depicts, their visit
preferences are different. The visited places of U1 are centralized while the visited places
of U2 are dispersive. Due to geographical influence and limit, each user’s visit probability
on the same location is different. So it is undesirable to model visit preference [9] as a uni-
versal distribution. We can know the distribution over the distances between every pair of a
user’s visited locations is also personal and it can reflect the user’s personal preference.

3.3 Kernel density estimation of distance distribution

The analysis of Section 3.1 inspires us to use the distance distribution to research the
personal visit preference. As we know, the form of the distance distribution is uncer-
tain and we don’t get the parameters of the probability density function. In this paper,
we use KDE to model the personal distance distribution because KDE can be used to
model arbitrary distributions and doesn’t assume the form of the probability density func-
tion. There are two steps in our method: sampling distances, and estimating distance
distribution.

Sampling distances Firstly, we randomly sample some locations from the user’s visited
locations. Then, we compute the Euclidean distance of every pair of sampling locations as

(a)

(b)

Fig. 2 Distributions of personal visited locations

Geoinformatica

distance sample. Since our method achieves anonymity in client and only use his visited
locations, the user can input some of his visited locations when he firstly uses our model.

Estimating distance distribution We use D to denote the distance sample for a certain
ˆf is KDE of
user, which stems from the personal distance distribution density function f .
f based on D, as follows:

where K(.) is the kernel function and σ is the smoothing parameter, called the bandwidth.
In our method, it is the normal kernel:

ˆf (d) = 1
|D|σ

(cid:2)

d(cid:2)∈D

K

(cid:3)

(cid:4)

d − d(cid:2)
σ

K(x) = 1√
2π

− x2
2

e

(cid:5)

(cid:6)

1/5

σ =

4 ˆσ 5
3|D|

≈ 1.06 ˆσ |D|−1/5

the bandwidth [11]:

where ˆσ is the standard deviation of distance sample D.

3.4 Fast gauss transform

A Gaussian e−(di −d(cid:2))2/2σ 2
Hermite expansion. And the fast Gauss Transform [26] is given by:
(cid:4)

(cid:3)

(cid:3)

can be transformed to Hermite polynomials centered at x0 by the

−(di −d(cid:2))2/2σ 2 =

e

∞(cid:2)

s=0
p−1(cid:2)

s=0

1
s!

1
s!

d(cid:2) − d0√
2σ
d (cid:2) − d0√
2σ

(cid:3)

=

(cid:4)
s

hs

hs

di − d0√
2σ

di − d0√
2σ

(cid:4)

s

(cid:3)

(cid:4)

+ ε(p)

where

hs(x) = (−1)s ds

−x2

).

dxs (e

d0 is the mean value of all the distances in D. ε(p) is the error when we truncate the infinite
series after p terms. When d(cid:2) is close to d0, a small p is enough to guarantee that ε(p) is
negligible.

3.5 Metrics for location privacy

In this paper, entropy [9] and the area of CR [7] are used to measure the level of privacy and
the location information entropy is a very popular metric. The entropy H is defined as:

H (x) = −

pi · log2 pi

k(cid:2)

i=1

(1)

(2)

(3)

(4)

(5)

(6)

Geoinformatica

where pi is the probability which the location i is the user’s real location. As we know,
the theoretical maximum entropy is log2k when all the k possible locations have the same
probability 1
k .

The area of CR is also an important metric. The higher privacy requirement demands the
bigger area of CR. Since it is difficult to compute the area of polygon, we make use of an
approximate method to substitute for it. Intuitively, the sum of the distances between pairs
i , P ∗
of locations in anonymity set P ∗ can be used to substitute for it, which is
j ),
j ) denotes the distance between location P ∗
where d(P ∗
j in anonymity set P ∗.

i and P ∗

i(cid:8)=j d(P ∗

i , P ∗

(cid:7)

3.6 Attack model

Any party can be a potential attacker who wants to gain sensitive information about a par-
ticular user. We consider two kinds of adversaries: weak adversary and strong adversary.
Any party can be a weak adversary if he obtains the current queries from the partic-
ular user and a few visited positions by monitoring his communications. On the other
hand, a strong adversary gains the user’s current queries and a lot of his visited loca-
tions. Additionally, he knows the location privacy protection mechanism used in the system.
Based on these information, he tries to infer the user’s real location. Therefore, the prob-
ability that the strong adversary distinguishes the real location from anonymity set is
larger than that of the weak adversary. In this paper, we only take strong adversary into
account.

4 Personal visit probability

Our objective is to generate a dummy location set based on the model of personal visit
probability to achieve k-anonymity. To ensure high privacy level, dummies whose personal
visit probabilities are similar to that of the user’s current cell should be selected. Therefore,
we should obtain the personal visit probability of all candidate locations.

In this section, we introduce two methods to calculate the personal visit probability. The
first method is EPVP which calculates the personal visit probability by KDE, and then,
an approximate method, namely APVP, is proposed. Finally, we analyze the error between
APVP and EPVP.

4.1 Exact personal visit probability (EPVP)

In order to exactly compute the personal visit probability, we use KDE to estimate the
personal distance distribution for every user U and compute the visit probability of any cell
pj in candidate anonymity set P according to personal distance distribution. The user’s
sampling visited locations are L = {l1, l2, · · · , ln}. We can compute the Euclidean distance
between every location li in L and pj , as follows:

we can use Eq. 1 to compute a probability for each di as follows:

di = distance(li, pj ), ∀li ∈ L

ˆf (di) = 1
|D|σ

(cid:2)

d(cid:2)∈D

K

(cid:3)

(cid:4)

di − d(cid:2)
σ

(7)

(8)

Geoinformatica

The probability which U visits a location pj can be computed as follows:

p(pj ) = 1
n

n(cid:2)

i=1

ˆf (di) =

1√

n(cid:2)

(cid:2)

− (di

(cid:2)

)2

−d
2σ 2

e

2π nσ |D|

i=1

d(cid:2)∈D

(9)

Eventually, we derive visit probability of any pj in candidate anonymity set P . As is
shown in Algorithm 1, the computational complexities of line 3 and line 4 are both O(n2).
The computational complexity of line 8 is O(n2). Since we should calculate all pj in P ,
the total computational complexity from line 8 to line 11 is O(n3). Therefore, the total
computational complexity of from line 5 to line 14 is O(|P |n3). The total complexity of
Algorithm 1 is O(n2) + O(n2) + O(|P |n3) = O(|P |n3).

4.2 Approximate personal visit probability

As we know, the computational complexity O(|P |n3) of EPVP grows rapidly with n
increasing. In this part, we design an approximate method, namely APVP, to compute per-
sonal visit probability through the fast Gauss transform and three-sigma rule of Gaussian
distribution. And we finally reduce the complexity of EPVP to O(|P |n).

For Eq. 9, the personal visit probability p(pj ) that a user visits the location pj can
be approximately calculated using Eq. 4. To reduce the error, we should not only select
center, such as the mean of d(cid:2). And with the number of centers increasing, computational
complexity increases.

Nearly all values of d(cid:2) in the distance sample D lie within the interval [ ¯d − 3 ˆσ , ¯d + 3 ˆσ ]
according to three-sigma rule of Gaussian distribution. Where ¯d is the mean of the sample
D and ˆσ is the standard deviation of the sample D. In order to facilitate the calcula-
tion, we evenly divide the interval [ ¯d − 3 ˆσ , ¯d + 3 ˆσ ] into 2q small intervals set I =
{I1, I2, · · · , I2q } = {[ ¯d − 3 ˆσ , ¯d − 3 ˆσ + 3 ˆσ
], · · · , [ ¯d +
q , ¯d + 3 ˆσ ]} and the distance sample D is divided into 2q small distance sample
3 ˆσ − 3 ˆσ

q , ¯d − 3 ˆσ + 6 ˆσ

], [ ¯d − 3 ˆσ + 3 ˆσ

q

q

Geoinformatica

set{D1, D2, · · · , D2q } according to I . Where, q = 3k and k ≥ 1. Each small distance sam-
ple Di is approximately shifted respectively by the fast Gauss transform and we select the
the middle value μi = ¯d − 3 ˆσ + 3i ˆσ
2q of Ii as transforming the center of Di. Based on the
partition Di and three-sigma rule of Gaussian distribution, we have

2q(cid:2)

(cid:2)

p−1(cid:2)

− (di

(cid:2)

)2
−d
2σ 2 ≈

e

(cid:2)

d(cid:2)∈D

(cid:3)

1
s!

d(cid:2) − μr√
2σ

d(cid:2) − μr√
2σ

(cid:4)

s

(cid:3)

hs

(cid:4)

di − μr√
2σ

(cid:4)

s

hs(

di − μr√
2σ

)

s=0

r=1

2q(cid:2)

d(cid:2)∈Dr
p−1(cid:2)

(cid:3)

(cid:2)

1
s!

d(cid:2)∈Dr

A(s, r)hs

=

=

r=1

2q(cid:2)

s=0
p−1(cid:2)

r=1

s=0

(cid:3)

(cid:4)

di − μr√
2σ

where

A(s, r) = 1
s!

(cid:3)

(cid:2)

d(cid:2)∈Dr

(cid:4)

s

.

d(cid:2) − μr√
2σ

We can transform the Eq. 9 according to Eq. 10, as follows:

p(pj ) =

1√

n(cid:2)

2q(cid:2)

p−1(cid:2)

A(s, r)hs

(cid:3)

(cid:4)

di − μr√
2σ

2π nσ |D|

i=1

r=1

s=0

(10)

(11)

(12)

As is shown in Algorithm 2, the computational complexities of line 3 and line 4 are both
O(n2). The complexities of line 5 and line 6 are also both O(n2). Since the p and q are
constant parameters and |p| (cid:11)n, the computational complexity from line 7 to line 13 is
O(pq|P |n) = O(|P |n). Therefore, the total complexity of Algorithm 2 is O(n2)+O(n2)+
O(n2) + O(n2) + O(|P |n) = O(|P |n).

Geoinformatica

4.3 Error analysis

Theorem 1 (The upper bound of the error ε ). By truncating the infinite series after p
terms in Eq. 4 and dividing interval [ ¯d − 3 ˆσ , ¯d + 3 ˆσ ] into 2q small intervals, Algorithm 2
guarantees that the upper bound of the error ε satisfies

2

(p!)1/2 ( 3

2q )p

Proof At first, according to Cramers inequality [29] hs(x) ≤ 2s/2(s!)1/2e−x2/2 and
e−x2/2 ≤ 1, so

hs(x) ≤ 2s/2(s!)1/2

(13)

Hence,

|ε(p)| ≤

di − d0√
2σ

|

|s2s/2(s!)1/2

∞(cid:2)

s=p
∞(cid:2)

s=p
∞(cid:2)

s=p

1
s!

1
s!

|s|hs(

| d(cid:2) − d0√
2σ
| d(cid:2) − d0√
2σ
| d(cid:2) − d0
σ
| d(cid:2) − d0
σ

∞(cid:2)

|s

|s

1
(s!)1/2

1
(p!)1/2

≤

=

≤

|ε(p)| ≤

(cid:3)

∞(cid:2)

(cid:4)
s

1
(p!)1/2

s=p

3
2q

(14)

(15)

(16)

s=p
As depicted in Section 4.2, every d(cid:2) in distance sample D is assigned to a small distance set
Di whose transforming center is μi. And we have |d(cid:2) − d0| = |d(cid:2) − μi| ≤ 3σ
2q . Therefore,

Moreover, q ≥ 3, Accordingly

(cid:3)

(cid:4)

p

(cid:3)

(cid:4)

p

|ε(p)| ≤

1
(p!)1/2

3
2q

2q
2q − 3

≤

2
(p!)1/2

3
2q

As depicted in Theorem 1, the upper bound of the error decreases faster than the

exponential decay with the p and q increasing, as shown in Fig. 3.

5 Anonymity set selection (ASS)

In the process of dummy location selection, we consider two factors which are location
information entropy and the area of CR to achieve anonymity. Therefore, the process
of dummy selection can be formulated as MCDM model. Let P ∗ = {P ∗
2 , · · · , P ∗
}
denote the location anonymity set in our scheme. The MCDM model can be described
as:

1 , P ∗

k

⎧
⎨

⎩

k(cid:2)

i=1

(cid:2)

k(cid:8)=j

⎫
⎬
⎭ .

Max

−

p(P

∗
i ) · log p(P

∗
i ),

d(P

∗
i , P

∗
j )

(17)

Geoinformatica

where P ∗
i , P ∗
respectively.

j

∈ P ∗, p(P ∗

i ) and p(P ∗

j ) denote the personal visit probabilities of P ∗

i and P ∗

j

For MCDM model, it is hard to find a location set to meet all requirements simultane-
ously. So, we use heuristic solution [9] to select the proper dummy location set. The process
has two steps as follows: (1) maximizing location information entropy; (2) maximizing area,
and Algorithm 3 depicts the process of dummy locations selection.

Maximizing location information entropy A user whose location need to protect first
input real location R. So,we can find the closest corner pR to R as Section 3.1 depicts. Sec-
ondly, our algorithm should get the user’s personal visit probabilities which are computed by
Algorithm 2 and then sorts all locations in P based on the personal visit probabilities. Then,
our algorithm selects 4k candidates locations set which contains the 2k locations before pR
and the 2k locations after pR to ensure that they are as similar as possible to R. After that,
our algorithm randomly selects m location sets S = {S1, S2, . . . , Sm} from 4k candidates
locations, each set containing the real location and 2k − 1 dummy locations are contained.
The j th(j ∈ [1, m]) set can be denoted as Sj = {Sj 1, Sj 2, . . . , Sj i, . . . , Sj 2k}. According
to the personal visit probabilities, we should normalize visit probabilities. We denote them
using Pj 1, Pj 2, . . . , Pj i, . . . , Pj 2k and computed by

where p(Sj i) is the personal visit probability of the location Sj i and
entropy Hj of anonymity set Sj can be derived as follows:

(cid:7)

2k
i=1 Pj i = 1. So, the

1, S(cid:2)
Finally, the location set S(cid:2) = {S(cid:2)
S is selected. And it can be described as:

j , · · · , S(cid:2)

2k

} whose entropy is maximum in

p(Sj i)

Pj i =

2k(cid:7)

i=1

p(Sj i)

Hj = −

Pj i · log Pj i

2k(cid:2)

i=1
2, · · · , S(cid:2)

(cid:2) = argmax{Hj }.

S

(18)

(19)

(20)

Fig. 3 Anonymity times vs. k

Geoinformatica

Maximizing area In this process, we use the greedy algorithm to get the final location
anonymity set P ∗ = {P ∗
j ). It can be denoted
as:

} from S(cid:2) based on

2 , · · · , P ∗

i(cid:8)=j d(S(cid:2)

1 , P ∗

i, S(cid:2)

(cid:7)

k

∗ = argmax{

P

d(S

(cid:2)
i, S

(cid:2)
j )}.

(cid:2)

i(cid:8)=j

(21)

Firstly, a set P ∗ = ∅ is constructed. The user’s real location is added into P ∗ and
removed from S(cid:2). Then, the next location p∗ is selected to be added into P ∗ and to be
∈P ∗ d(p∗, P ∗
removed from S(cid:2), when
j ) is greatest. As lines 9–12 in Algorithm 3 depict,
ASS repeats this step k − 1 times. Finally, we get the anonymity set P ∗.

P ∗
j

(cid:7)

6 EPLA Algorithm

As Algorithm 4 depicts, the EPLA algorithm obtains two procedures. Firstly, we calculating
p(pj ) which denotes the users visit probability of any pj in candidate anonymity set P by
Algorithm 2. Secondly, we select the dummy anonymity set P by Algorithm 3. We achieve
the k-anonymity to protect the users’ location privacy.

Geoinformatica

Table 1 The statistics of the two datasets

Dataset

Number of users

Number of POIs

Number of check-ins

Gowalla

Foursquare

196,591

2,321

1,280,969

5,596

6,442,890

194,108

7 Performance evaluation

7.1 Experiment setup

Datasets In the experiments, we respectively use the publicly available Gowalla [27] and
Foursquare [28] datasets instead of the users’ locations sample. The Gowalla dataset con-
tains 6,442,890 check-ins made by 196,591 users at 1,280,969 POIs and, the Foursquare
dataset contains 194,108 check-ins made by 2,321 users at 5,596 POIs. Each check-in
contains user and POI ID information. The statistics of the two datasets are shown in Table 1.

Comparison algorithms We evaluate the privacy degree of our scheme by comparing
three algorithms, namely dummy [19], DLS [9] and enhanced-DLS [9]. The dummy method
is taken as the baseline in this paper. The DLS and enhanced-DLS approaches are the dummy
selection approaches proposed in [9], which takes query probability into account to achieve k-
anonymity. As we know, the location information entropy of the optimal scheme is log2k in
theory.

Moreover, we select 40 km × 40 km American region, and then, it is divided into 80×80
cells in our experiment. So the candidate locations anonymity set P includes 79 × 79 − 1 =
6240 locations. The personal visit probability is calculated by AKDE.

7.2 Evaluation of privacy degree

In the process, location information entropy and the sum of distance are used as metrics.
Anonymity cost is also an important trait in LBS and we measure it using online time.
Moreover, we compare the time costs of APVP and EPVP, and then, analyze the relationship
between the time cost of APVP and the constant parameters(namely p and q).

(a)

Fig. 4 Entropy vs. k

(b)

Geoinformatica

(a)

(b)

Fig. 5 The sum of distances vs. k

Entropy vs. k the location information entropy of anonymous set indicates the protection
strength.Larger information entropy implies that it is more difficult to ensure the user’s
real location. As Fig. 4 depicts, the location information entropies of all methods increase
following k. The entropy of dummy is terrible than other. Our scheme EPLA is optimal and
provides better privacy level than DLS and enhanced-DLS.

Area of CR vs. k The area of CR is focused on location privacy domain. As we know,
when the area is too small, an attacker can know user’s real location. So, we should consider
the area to evaluate the privacy level. As Fig. 5 depicts, the area in enhanced-DLS method
is biggest and the area in DLS method is smallest. The areas of CR in dummy and EPLA
are similar. From above analysis, we know every user’s zone of action is limited by a lot of
factors and most of the visit location is close to our residences and workplaces. So, we only
get a biggish area of CR in our method while enhanced-DLS obtains the biggest area of CR.

The time cost vs. n we conduct the time cost experiments in only Gowalla dataset. As we
know, the different p and q will lead to the different time cost of APVP when n is the same.
we select different p and q to test the time cost of APVP. In the Fig. 6, we fix p=8 and we
fix q=8 in the Fig.7. And the the cost of APVP linearly grows with n increasing while the
EPVP looks like exponential growth. Moreover, when p and n are fixed, the time cost is
increasing with q increasing. And when q and n are fixed, the time cost is also increasing
with p increasing. As Figs. 6 and 7 depict, the computational complexity of EPVP is far
outweighed the computational complexities of APVP.

Fig. 6 The time cost vs.
n fixing p

Geoinformatica

Fig. 7 The time cost vs.
n fixing q

8 Security performance

8.1 Attack model

Any party can be a potential attacker who wants to gain sensitive information about a par-
ticular user. We consider two kinds of adversaries: weak adversary and strong adversary.
Any party can be a weak adversary if he obtains the current queries from the particular user
and a few visited positions by monitoring his communications. On the other hand, a strong
adversary gains the user’s current queries and a lot of his visited locations. Additionally, he
knows the location privacy protection mechanism used in the system. Based on these infor-
mation, he tries to infer the user’s real location. Therefore, the probability that the strong
adversary distinguishes the real location from anonymity set is larger than that of the weak
adversary. In this paper, we only take strong adversary into account.

8.2 Security analysis

In our system, all of the anonymous processes are completed in client-side and no informa-
tion besides users’ queries Q is sent to any party. By doing this, it is hard to gather users’
data for the adversary. Strong adversary can conduct inference attack to infer users’ real
locations based on obtained information.

j ) represent respectively the probabilities that P ∗

As we know, a scheme can prevent inference attack if the probability that any cell in
dummy anonymity set C is the user’s real location is equal from the adversary’s point of
view. p(P ∗
i ) and p(P ∗
j are the
user’s real location, where P ∗
i and P ∗
j are any two locations in P ∗. Our scheme can prevent
inference attack if and only if p(P ∗
i ) = p(P ∗
j ). Since a strong adversary knows location
privacy protection mechanism and a lot of the user’s visited locations data, he can compute
the visit probability of each location as the probability that the location is the user’s real
location. However, we can know the probability is tremendously similar in anonymity set
according to Eq. 19, namely p(P ∗
j ). Therefore, our scheme can prevent inference
attack.

i ) = p(P ∗

i and P ∗

9 Conclusion

In this paper, we designed a new location privacy protection approach EPLA. Firstly,
we used AKDE to compute personal visit probability of all cells. Then, the selection of

dummy location set was modeled as MCDM and we use two factors to achieve the selec-
tion process. Experimental results showed the effectiveness of our method. In future work,
we will consider the continuous query problem and try to solve the privacy protection in a
continuous query.

Geoinformatica

Acknowledgment This work was supported by NSFC grants (No. 61532021 and 61472141), Shanghai
Knowledge Service Platform Project (No. ZF1213), Shanghai Leading Academic Discipline Project (Project
NumberB412) and Shanghai Agriculture Applied Technology Development Program (GrantNo.G20160201).

References

1. Zheng B, Yuan NJ, Zheng K et al (2015) Approximate keyword search in semantic trajectory database.

In: 2015 IEEE 31st International conference on data engineering (ICDE). IEEE, pp 975–986

2. Su H, Zheng K, Zeng K et al (2015) Making sense of trajectory data: a partition-and-summarization
approach. In: 2015 IEEE 31st International conference on data engineering (ICDE). IEEE, pp 963–974
3. Zheng K, Huang Z, Zhou A et al (2012) Discovering the most influential sites over uncertain data: a

rank-based approach. IEEE Trans Knowl Data Eng 24(12):2156–2169

4. Wang H, Zheng K, Xu J et al (2014) Sharkdb: an in-memory column-oriented trajectory storage. In:
Proceedings of the 23rd ACM international conference on conference on information and knowledge
management. ACM, pp 1409–1418

5. Zheng K, Su H, Zheng B et al (2015) Interactive top-k spatial keyword queries. In: 2015 IEEE 31st

International conference on data engineering (ICDE). IEEE, pp 423–434

6. Ashouri-Talouki M, Baraani-Dastjerdi A, Seluk AA (2015) The Cloaked-Centroid protocol: location

privacy protection for a group of users of location-based services. Knowl Inf Syst 45(3):589–615

7. Pan X, Xu J, Meng X (2012) Protecting location privacy against location-dependent attacks in mobile

services. IEEE Trans Knowl Data Eng 24(8):1506–1519

8. Lu H, Jensen CS, Yiu ML (2008) Pad: privacy-area aware, dummy-based location privacy in mobile
services. In: Proceedings of the seventh ACM international workshop on data engineering for wireless
and mobile access. ACM, pp 16–23

9. Niu B, Li Q, Zhu X et al (2014) Achieving k-anonymity in privacy-aware location-based services. In:

IEEE INFOCOM IEEE conference on computer communications. IEEE, pp 754–762

10. Lee B, Oh J, Yu H et al (2011) Protecting location privacy using location semantics. In: Proceedings
of the 17th ACM SIGKDD international conference on knowledge discovery and data mining. ACM,
pp 1289–1297

11. Dehnad K (1987) Density estimation for statistics and data analysis. Technometrics 29(4):495–495
12. Zhao D, Zhang K, Jin Y et al (2016) EPLA: efficient personal location anonymity. Asia-pacific web

conference. Springer International Publishing, pp 263–275

13. Jia J, Zhang F (2015) K-anonymity algorithm using encryption for location privacy protection. Int J

Multimed Ubiquit Eng 10:155–166

14. Gruteser M, Grunwald D, Wang Y, Xu D, He X et al (2012) L2P2: location-aware location privacy
protection for location-based services. In: INFOCOM, 2012 Proceedings IEEE. IEEE, pp 1996–2004
15. Natesan G, Liu J (2015) An adaptive learning model for k-anonymity location privacy protection. In:
IEEE 39th Annual computer software and applications conference (COMPSAC). IEEE, vol 3, pp 10–16
16. Zhang H, Xu Z, Yu X et al (2016) LPPS: location Privacy protection for smartphones. In: 2016 IEEE

International conference on communications (ICC). IEEE, pp 1–6

17. Palanisamy B, Liu L, Palanisamy B, Liu L (2015) Attack-resilient mix-zones over road networks:

architecture and algorithms[J]. IEEE Trans Mob Comput 4(3):495–508

18. Guo M, Pissinou N, Iyengar SS (2015) Pseudonym-based anonymity zone generation for mobile service
with strong adversary model. In: 2015 12th annual IEEE consumer communications and networking
conference (CCNC). IEEE, pp 335–340

19. Kido H, Yanagisawa Y, Satoh (2005) An anonymous communication technique using dummies for
location-based services. In: Proceedings of international conference on pervasive services ICPS’05.
IEEE, pp 88–97

20. Ghinita G, Kalnis P, Khoshgozaran A et al (2008) Private queries in location based services: anonymizers
are not necessary. In: Proceedings of the 2008 ACM SIGMOD international conference on management
of data. ACM, pp 121–132

Geoinformatica

21. Jia J, Zhang F (2015) K-anonymity algorithm using encryption for location privacy protection. Int J

22. Li XY, Jung T (2013) Search me if you can: privacy-preserving location query service. In: INFOCOM,

Multimedia Ubiquit Eng 10:155–166

Proceedings IEEE. IEEE, pp 2760–2768

23. Clifton C, Tassa T (2013) On syntactic anonymity and differential Privacy. Trans Data Priv 6(2):161–183
24. Andr´es ME, Bordenabe NE, Chatzikokolakis K et al (2013) Geo-indistinguishability: differential pri-
vacy for location-based systems. In: Proceedings of the ACMx SIGSAC conference on computer &
communications security. ACM, pp 901–914

25. Sweeney L (2002) K-anonymity: a model for protecting privacy. Int J Uncertainty Fuzziness Knowledge

Based Syst 10(05):557–570

26. Greengard L, Strain J (1991) The fast Gauss transform. SIAM J Sci Stat Comput 12(1):79–94
27. Cho E, Myers SA, Leskovec J (2011) Friendship and mobility: user movement in location-based social
networks. In: Proceedings of the 17th ACM SIGKDD international conference on knowledge discovery
and data mining. ACM, pp 1082–1090

28. Yuan Q, Cong G, Ma Z et al (2013) Time-aware point-of-interest recommendation. In: Proceedings of
the 36th international ACM SIGIR conference on research and development in information retrieval.
ACM, pp 363–372

29. Indritz J (1961) An inequality for Hermite polynomials. Proc Am Math Soc 12(6):981–983

Dapeng Zhao is currently a graduate in Computer Science at East China Normal University of Science and
Technology. He received his Bachelor in College of computer science and technology, Shanghai University
of Electric Power in Shanghai P.R. China in 2016. His current research interests include location privacy
protection and data mining.

Yuanyuan Jin is currently a graduate in Computer Science at East China Normal University of Science and
Technology. She received her Bachelor in Computer Science from East China Normal University in Shanghai,
P.R. China in 2016. Her current research interests include location privacy protection and data mining.

Geoinformatica

Kai Zhang is currently a graduate in Computer Science at East China Normal University of Science and
Technology. He received his Bachelor in computer science and technology, South East University in Jiangsu
P.R. China in 2016. His current research interests include location privacy protection and data mining.

Xiaoling Wang is currently Professor, Vice Dean of Software Engineering Institute at East China Normal
University. She received her doctoral, master and bachelor degrees from Southeastern University in 2003,
2000 and 1997, respectively. She worked as an assistant professor and associate professor in Fudan Uni-
versity from 2003 to 2008, and joined East China Normal University in 2008. She achieved the Programs
of New-Century Talent of Ministry of Education of China and Innovation of Science and Technology of
Department of Education of Shanghai. She is the Associate Editor of Frontier of Computer Science. She
is acting as program committee co-chair of BDMS 2013, member of program committee of VLDB2014ER
2013, SCC 2013, SCC2014, APWeb 2013, and member of China Computer Federation Technical Committee
on Databases. She has published more than 60 papers and some papers publish in international conferences
and journals such as SIGMOD, WWW, SIGIR, DASFAA, WAIM, ICWS and JWSR. Her research interests
mainly include Web data management, data service technology and applications.

Geoinformatica

Patrick C. K. Hung is an Associate Professor at the Faculty of Business and Information Technology in
University of Ontario Institute of Technology, Canada and an Honorary International Chair Professor at
the Department of Electronic Engineering in National Taipei University of Technology, Taiwan. Patrick has
worked with Boeing Research and Technology on aviation services-related research with two patents on
mobile network dynamic workflow system. He is also a Visiting Professor at University of Sao Paulo, Brazil.
In addition, he was an Adjunct Professor at Wuhan University, a Visiting Professor at the Shizuoka Univer-
sity and University of Aizu in Japan, a Guest Professor in University of Innsbruck in Austria, University of
Trento and University of Milan in Italy. Before that, he was a Research Scientist with Commonwealth Scien-
tific and Industrial Research Organization in Australia as well as he worked as a software engineer in industry
in North America. He is a founding committee member of the IEEE International Conference of Web Ser-
vices (ICWS), IEEE International Conference on Services Computing (SCC), and IEEE BigData Congress
(BigData Congress). He is also an Associate Editor of the IEEE Transactions on Services Computing, and a
Coordinating Editor of the Information Systems Frontiers.

Wendi Ji is currently working toward the doctoral degree in the Software Engineering Institute at East China
Normal University. Her research interests mainly include user behavior analysis and data mining.

