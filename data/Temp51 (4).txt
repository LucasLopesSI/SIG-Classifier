This article was downloaded by: [University North Carolina - Chapel Hill]
On: 24 October 2014, At: 07:35
Publisher: Taylor & Francis
Informa Ltd Registered in England and Wales Registered Number: 1072954 Registered
office: Mortimer House, 37-41 Mortimer Street, London W1T 3JH, UK

International Journal of Geographical
Information Science
Publication details, including instructions for authors and
subscription information:
http://www.tandfonline.com/loi/tgis20

Evolution of clusters in dynamic point
patterns: with a case study of Ants'
simulation
Maxim Shoshany a , Asaf Even‐Paz a & Shlomo Bekhor a
a Department of Transportation and Geo‐Information Engineering ,
Faculty of Civil & Environmental Engineering , Technion , Israel
Institute of Technology , Haifa, Israel
Published online: 14 Jun 2007.

To cite this article: Maxim Shoshany , Asaf Even‐Paz & Shlomo Bekhor (2007) Evolution of
clusters in dynamic point patterns: with a case study of Ants' simulation, International Journal of
Geographical Information Science, 21:7, 777-797, DOI: 10.1080/13658810601169881

To link to this article:  http://dx.doi.org/10.1080/13658810601169881

PLEASE SCROLL DOWN FOR ARTICLE

Taylor & Francis makes every effort to ensure the accuracy of all the information (the
“Content”) contained in the publications on our platform. However, Taylor & Francis,
our agents, and our licensors make no representations or warranties whatsoever as to
the accuracy, completeness, or suitability for any purpose of the Content. Any opinions
and views expressed in this publication are the opinions and views of the authors,
and are not the views of or endorsed by Taylor & Francis. The accuracy of the Content
should not be relied upon and should be independently verified with primary sources
of information. Taylor and Francis shall not be liable for any losses, actions, claims,
proceedings, demands, costs, expenses, damages, and other liabilities whatsoever or
howsoever caused arising directly or indirectly in connection with, in relation to or arising
out of the use of the Content.

This article may be used for research, teaching, and private study purposes. Any
substantial or systematic reproduction, redistribution, reselling, loan, sub-licensing,
systematic supply, or distribution in any form to anyone is expressly forbidden. Terms &
Conditions of access and use can be found at http://www.tandfonline.com/page/terms-
and-conditions

International Journal of Geographical Information Science
Vol. 21, No. 7, August 2007, 777–797

Research Article

Evolution of clusters in dynamic point patterns: with a case study of
Ants’ simulation

MAXIM SHOSHANY, ASAF EVEN-PAZ and SHLOMO BEKHOR
Department of Transportation and Geo-Information Engineering, Faculty of Civil &
Environmental Engineering, Technion, Israel Institute of Technology, Haifa, Israel

(Received 5 October 2006; in final form 18 November 2006 )

Recent developments in sensing and tracking technologies have enabled large
geographical databases to be established that represent spatial dynamics of
‘behavioral entities’. Within this type of dynamics there are several levels and
modes of organization that need to be revealed. Clusters are high-level groupings
of entities, where change in their location and form, including split and merge
events, represents self-organization and functioning patterns. Such information
may contribute for better understanding spatially complex dynamic patterns. The
main objective of this article is to develop an adaptable methodology that
facilitates exploration of spatial order and processes in point pattern dynamics.
The approach presented here utilizes data-clustering at each snapshot of the
moving pattern, and then involves pairwise linking between the clusters identified
at each snapshot and those identified in the following snapshot. Such linking is
based on a new methodology that defines well globally optimized solutions for
numerous possible linking combinations based on Linear Programming. A
preliminary assessment of the approach was conducted with an existing Ants’
simulation tool, capable of creating data sets covering in detail a substantial
portion of the nest’s life cycle.

Keywords: Dynamic GIS; Clustering; Clusters’ linking; Linear Programming;
Bio-inspired computing; Ants’ simulation

1.

Introduction

‘Spatially behaving entities’ are those exhibiting movements that are governed by
free choice and social influences. Recent technological advancements enable the
monitoring of movements of such entities—for example, people, animals, and birds.
However, currently there are relatively few geographical databases that represent
extensive and in-depth spatial, dynamic information considered adequate for
studying these movements. Since the work of Von Neumann and Burks (1966), there
has been growing interest in bio-inspired computing, replicating a wide diversity of
natural, spatial dynamics. Recently, the field of GeoSimulation has evolved,
combining GIS and MAS (Multi-Agent Systems) (Batty and Jiang 2000, Koch 2000)
for producing realistic presentations of spatial processes. Studying these data sets
may advance our understanding of the ways spatial patterns are formed, joint
dynamics are maintained and dissolved, and how different communities interact in
space. Developing GIS tools for analyzing the dynamics in point patterns is most
important for discovering groups (swarms, herds, and flocks) of entities moving
together within an intermingled ‘cloud’ of the most diverse individual trajectories.

International Journal of Geographical Information Science
ISSN 1365-8816 print/ISSN 1362-3087 online # 2007 Taylor & Francis
http://www.tandf.co.uk/journals
DOI: 10.1080/13658810601169881

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 778

M. Shoshany et al.

The collective patterns formed are often most complex spatially, although they may
be constructed in a very simple fundamental order (Openshaw and Openshaw 1997).
Development of exploratory algorithms for revealing such an order is the main
objective of the present study. For this purpose, dynamic point patterns would be
first generated and then analyzed to extract information regarding the spatial
organization of clusters of points and their evolution over time.

The article starts with explaining the research objective within the context of
recent developments in motion/dynamic GIS and clustering methods, and then
presenting the Ants’ simulation (which enabled the assembly of large data sets of
motion patterns), the experimentation with clustering strategies, the parameteriza-
tion of the clusters’ properties (which facilitate assessment of the whole point
pattern evolution), and finally the pairwise linking of clusters.

2. Clusters in point pattern dynamics

Issues concerning representing and modeling dynamics in GIS have already been
addressed in the last two decades (e.g. Chen and Jiang 2000, De Vasconcelos et al.
2002, Langran 1989, 1992, 1993, Peuquet and Duan 1995, Sinha and Mark 2005,
Takeyama and Couclelis 1997, Worboys 2005, Yuan and McIntosh 2003). It is
possible to discern three fundamental typologies in the modeling or the description
of spatial dynamics: entities, paths, and clusters. The first typology deals with
determining the lifelines and lifeline prisms of individual moving entities (see, for
example, Hooge et al. 2001, Hornsby and Egenhofer 2002, Laube et al. 2005, Miller
2005, Tobler 1981, Zhang and Hunter 2000). The second typology involves the
generalization of activity patterns (e.g. shoppers’ behavior) from joint space–time
paths, taking into account the geometrical properties of the activity space and the
spatial distributions of opportunities or attractions (see for example, Forer 1998,
Kwan 2004, Landau et al. 1982, Pun-Cheng and Chu 2004). Recent works, e.g.
D’Auria et al. (2005) and Laube et al. (2005), present advanced approaches within
this typology, using ‘building-up’ patterns from lifeline trajectories. Gudmundsson
et al. (2004) developed additional methods for characterizing the moving point
patterns by considering properties such as leadership, convergence, and encounter.
The third typology, described here, concerns the evolution of clusters of entities as
abstract composite objects (Hornsby and Egenhofer 1998), and their spatial
movements while splitting, merging, and dissolving. However, these ‘clusters’ have
neither a rigid outline nor a fixed entity membership. Instead, they are somewhat
fuzzy and form abstract spatial and social groupings. Their dynamics may form
‘emergent spatial patterns’ (Koch 2000) or exhibit self-organization: ‘a spontaneous,
dynamically produced re-organization’ (Di Marzo Serugendo et al. 2006). Global
patterns may evolve from lower-level entities showing simple behaviors (see, for
example, Ramos and Almeida 2000). It is the collective organization and behavior
of sometimes dumb parts, or the recognition that the ‘flock is more than the sum of
the birds’ (Kelly 1994) that instigated science and imagination. Thus, clustering
lower-level entities became one of the challenges in the fields of GIS (see, for
example, Brimicombe 2005), bio-inspired computing (see, for example, Bonabeau
et al. 1999, Deneubourg et al. 1991), evolutionary computation (Ramos and
Abraham 2004), and Mathematical Biosciences (Pollard and van der Laan 2002).

Research in this field evolved into two main approaches: that of the clustering of
ants based on self-organization principles (Deneubourg et al. 1991, Handl et al.
2004, Kanade and Lawrence 2003) and statistical or data-mining approaches (Han

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 Evolution of clusters in dynamic point patterns

779

et al. 2001, Ramos and Abraham 2004). There have been numerous unsupervised
clustering methods developed in this field, such as hierarchical agglomerating
(Kaufman and Rousseeuw 1990, Nanni 2005) versus hierarchical partitioning
approaches (van der Laan and Pollard 2003), adaptive methods (Viszine et al. 2005)
and mean shift-based algorithms (Netanyahu et al. 2003, Wang et al. 2002).
However, most of the existing works in this field can be regarded as static, despite
the fact that in some of these studies the high dimensionality of the data is embedded
into two-dimensional representations (Handl et al. 2004). Li et al. (2004) provided
one of the very few examples of clustering of moving objects. They treated events of
splitting and collision of micro-clusters; thus it can be seen as an extension of the
individual lifeline approaches. The approach presented here is significantly different,
since it emphasizes the moving clusters rather than the clustering of moving entities.
These moving clusters are built from sequences of ‘snapshot’ clusters (a ‘succession
of temporal snapshots of spatial configurations of objects’ according to Worboys
(2005)), with no rigid entity membership. Linking clusters assumes that the time
interval between snapshots is short enough to ensure that successive snapshots do
not form independent patterns (Swihart and Slade 1985). Determining the linkage
between ‘snapshot’ clusters
into
consideration the pattern as a whole. The objective of this study is to develop a
generalized algorithm consisting of two basic components: (1) clustering entities at
‘snapshots’, and (2) optimal
linking between snapshot clusters while treating
merging/splitting/dissolving events. Similarly to many other studies on the lack of
open data sets representing full-point pattern dynamics, we have chosen to use Ants’
simulation data; this enables experimentation with different evolving patterns.

is a spatial optimization task that

takes

3. The Ants’ case study

The study utilized ant motion patterns as its preliminary test case; therefore a
‘simulator’ was needed to produce the specific ant motion data. To this end, we
searched for an ‘ant simulator’ whose application would be simple, programmable,
and represent multi-directional movement (so that future applications can expand
and extend our work and modify it accordingly). Therefore, the general framework
for the spatial dynamics simulation was implemented in NetLogo language (Resnick
1994). NetLogo is a programmable modeling environment for the simulation of
natural and social phenomena and for modeling complex systems that develop over
time. Hundreds or thousands of independent agents, all operating concurrently, can
be given ‘instructions’, making it possible to explore the connection between the
micro-level behavior of individuals and the macro-level patterns that emerge from
the interaction of many individuals. Among the many areas of application are
Biology, Chemistry, Physics, Computer Science, Earth Science, and Social Science.
An ant simulator termed ‘Ants-Space’ (Wilensky 1998) was found online (figure 1).
Its main advantage over other simulators found on the Web is that the ants follow
very simple rules, making it possible to compare the simulation behavior with any
kind of ant species. Ants in this simulator exhibited gradual changes in behavior;
therefore, each time the simulator was evoked, the ants gradually (after about 20–
30 s of run-time) formed trails from the nest to the food sources. The simulation
generated the ants’ new location and numbered each ant in each new snapshot. The
essential information regarding the ants (name, XY coordinates) was stored in a
data structure in MATLABH.

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 780

M. Shoshany et al.

Figure 1. The Ants’ Simulation Tool. Gray levels represent accumulated pheromone levels
released by the Ants on the way from the food source to the nest.

4.

Identifying ‘snapshot’ clusters in dynamic point patterns

4.1 Methodology

As discussed earlier, unsupervised clustering in dynamic point patterns has been
dealt with extensively in the professional literature since the beginning of the 1990s.
The following aspects of unsupervised clustering techniques were assessed here.

- The type of clustering algorithm: hierarchical clustering versus k-means

partition.

- A procedure for determining the number of clusters with no user intervention.
- Representation of dynamics in the input data as entities in moving patterns
could be very close but they could belong to very different clusters due to
differences in their direction of movement;
the approach here suggests
incorporating directional information in the following way:
N Each ant’s azimuth was calculated using the information regarding the ants’
location in the previous snapshot. The ants’ azimuths in the first snapshot
were given values of zero and were not taken into account in the processing
phases that followed.
N The azimuth of each ant was transformed into the sine/cosine domain so
that correct clustering of ‘similar’ azimuths could be obtained (azimuth 1
approaches azimuth 359).

- Clustering strategy with respect to input data combination:

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 Evolution of clusters in dynamic point patterns

781

N Clustering by location data only.
N Clustering by direction data only.
N Clustering by location and direction simultaneously.
N Clustering by location and then re-clustering by direction.
N Clustering by direction and then re-clustering by location.

A decision regarding implementation of the most adequate combination of the
above-mentioned clustering characteristics must be based on assessment of their
results. The silhouette value (Kaufman and Rousseeuw 1990) is one of the most
extensively used for this purpose in the clustering of point patterns (see, for example,
Handl et al. 2004, van der Laan and Pollard 2003).

Given some clustering of the data C1, C2, …, Ck and some sort of distance metric
in cluster Cg, we can define a(i) as an average

d(i,
dissimilarity of i from other objects in its cluster as follows:

j) for each observation i

ð1Þ

ð2Þ

ð3Þ

For other clusters, Cl, l?g, we can define an average dissimilarity of i to the

objects in Cl as follows:

a ið Þ~ 1
(cid:1)
(cid:1)
(cid:1){1
Cg
(cid:1)

X

j[Cg, j=i

d i, j
ð

Þ

d i, Cl

ð

Þ~ 1
(cid:1)
Cg
(cid:1)

(cid:1)
(cid:1)

X

j[Cl

d i, j
ð

Þ

b ið Þ~d i, Ch
ð

Þ

s ið Þ~

b ið Þ{a ið Þ
max a ið Þ, b ið Þ

f

g

The cluster Ch with the smallest dissimilarity measure is called the neighbor of i

and its dissimilarity is defined as:

The silhouette value for i can now be computed as follows:

and is bounded by the values of 1 and 21.

A silhouette value of 1 represents the maximum dissimilarity between a cluster
and its neighboring cluster and practically from all other clusters. When assessing
the performance of a specific algorithm, the average silhouette value represents the
dissimilarity between all clusters and their neighbors: better clustering would yield
higher average silhouette values.

Thus, the silhouette value was implemented for different strategies representing
combinations of clustering techniques (k-means and hierarchical) and an input data.
An iterative process was used in each of them to determine the appropriate number
of clusters in the following scheme.

N First, the clustering algorithm was run with an initial number of clusters given
by the user. The average silhouette value of each cluster was calculated by
averaging the silhouette values of each ant in the cluster and from this the
average of all the clusters was derived.

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 782

was run once more and the average silhouette value was re-calculated.

M. Shoshany et al.
N Next, the number of clusters was raised by one and the clustering algorithm
N If the difference between the two average silhouette values was larger than a
user-defined threshold (0.01), then the larger number of clusters was kept and
the process was repeated until the difference fell below the threshold. The
assumption in this scheme is that clustering can only be improved significantly
if most of the silhouette values of the data points are improved by at least a
threshold value.

At the end of this process, each of the above-mentioned clustering strategies was
given a silhouette value, allowing them to be ranked relative to their performance.
Similarly, the most suitable combination of algorithm type and data input can be
determined for any type of dynamic point pattern without human intervention.

4.2 Clustering results

Experimentation with the ants’ simulation produced two series of ‘static’ patterns:
the first with 66 snapshots and the second with 96 snapshots. As discussed earlier,
each snapshot had to be recorded by registering each ant and calculating its
direction by comparing pairs of successive snapshots. Considering two methods and
five strategies, we conducted 1620 clustering repetitions; for each of them we
implemented an iterative process for determining the number of clusters. The
management and execution of such a large task were carried out algorithmically,
based on software developed for this purpose. Table 1 presents the average of 162
silhouette values obtained for each of the configurations tested. The main finding at
this stage can be summarized as follows:

N Clustering methods—the k-means clustering scheme performed better than the
hierarchical scheme: in 4 out of 5 strategies the average silhouette value was
substantially lower than 0.5 for the hierarchical scheme, whereas it was
substantially higher than 0.6 for all strategies for the k-means.
N Clustering strategies—clustering by location and re-clustering by direction
performed consistently better, although the differences between this strategy
and first clustering by direction and re-clustering by location were relatively
small: 0.72 versus 0.62.

Table 1. Average silhouette values obtained for different clustering strategies at two
simulation experiments.

Hierarchical clustering

Experiment 1

Experiment 2

By location
By location and re-cluster by direction:
By direction
By location and direction
By direction and re-cluster by location

K-means clustering
By location
By location and re-cluster by direction
By direction
By location and direction
By direction and re-cluster by location

0.030
0.628
0.381
0.008
0.679

0.622
0.720
0.707
0.627
0.621

20.108
0.586
0.498
20.091
0.686

0.620
0.721
0.714
0.601
0.623

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 Evolution of clusters in dynamic point patterns

783

Figure 2 provides a graphic representation of the clustering results obtained at a
certain snapshot, with the ants numbered according to their corresponding clusters.
This figure demonstrates an important finding: that the clustering by location and
consequently according to direction managed to split well ‘clouds’ composed of
different moving directions, which to a certain extent, overlap spatially. This result
can be explained by the fact that first clustering by direction will potentially form
spatially larger clusters at the first stage than by location. Further ‘breaking down’
of these large clusters would be affected by their high spatial spread. On the other
hand, the potential directional variability within small regions (formed by first
clustering by location) is relatively small, thus leading toward the formation of small
clusters containing ants moving generally in the same direction.

5. Analysis of the clusters’ pattern evolution

Determining the clusters at each snapshot enables assessment of the characteristics
of the whole clusters’ pattern evolution over time, similarly to that of patch pattern
dynamics (see, for example, Forman 1995, Shoshany and Kelman 2006). Pattern
fragmentation and/or aggregation can be detected prior to the analysis of splitting,
merging, and dissolving at the individual cluster level (which will be treated in the
following paragraphs) by examining the changes in the distribution of the clusters’
properties between snapshots. Such properties are (1) morphological: those clusters
as entities by themselves; and (2) agglomerative: those derived from the entities
composing the clusters. Quantification of the morphological properties of each
cluster and assessment of the changes in their distributions may provide both a
generalized understanding of the pattern evolution and insight into the processes
taking place (see, for example, Shoshany and Kelman 2006). Determining the
clusters’ boundaries, although not physical boundaries (as in patches), facilitates
calculating various morphological features needed for this purpose. Polygonal
boundaries were identified according to the convex hull of each cluster. The convex

Figure 2. A graphic representation of the clustering results obtained at a certain snapshot
(#20): each ant is numbered according to its corresponding cluster.

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 784

M. Shoshany et al.

hull of a set of points is the smallest convex set that contains the points. We utilized
the MATLABH function ‘convhull’, which is based on Quickhull—an incremental
algorithm that repeatedly adds a point to the convex hull of the previously processed
points (Barber et al. 1996). The following morphological and agglomerative
properties were then calculated for each cluster:

A. Area of the convex hull polygon.
B. Perimeter of the convex hull polygon.
C. Sine of the average azimuth.
D. Standard deviation of the azimuths.
E. Density.
F. Number of ants.
G. Average X ordinate.
H. Average Y ordinate.
I. Area to perimeter squared.
J. Average distance between each ant and all other ants.
K. Standard deviation of the distance between each ant and all other ants.
L. Perimeter to the Pc ratio (Pc is the circumference of a circle with an area the

size of the polygon).

Assessment of the pattern evolution will utilize at this stage only area, perimeter,
and the number of ants (properties A, B, and F, respectively). Other properties will
be used in the next stage of the individual clusters’ linking.

One of the fundamental parameterizations for the level of

fragmentation/
aggregation in a pattern is provided by the Shannon and Weiner (1949) Entropy/
Information index:

n

Ep~{ X
i~1

pilogpi

ð4Þ

where in our study pi represents the relative fraction of each cluster from the total
clusters’ area/perimeter/population.

As the index approaches 0, the largest fraction approaches 1, and as it increases
this infers that the fractions’ number increase, their size decrease and their
distribution becomes more even. Although calculating entropy according to area
and population fractions is very common, the use of the perimeter’s entropy adds
weight to clusters that are small in area but long and winding.

Ants’ clusters’ pattern change, in this simulation, is mainly affected by the number
of available food sources and the amount of food in them. An increase in these two
factors will increase fragmentation and vice versa. Thus, inversely, a change in the
level of fragmentation would indicate the availability of new food resources.
Experimentation with the simulation indicated that fluctuations in the entropy levels
in three parameters, namely area, perimeter, and population exhibit characteristic
properties (figures 3a and 3b):

- Consistent hierarchy of entropy levels: with Population the highest, with Area
the lowest, and with Perimeter intermediate. This means that groups of ants are
more equally distributed (in numbers) than the areas they occupy, or in other
words, that groups occupying larger areas do not necessarily have more ants.
- All three entropy levels fluctuate concurrently, expressing the effects of
merging groups near the nest, and splitting when ants spread out toward the

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 Evolution of clusters in dynamic point patterns

785

Figure 3. Fluctuations in the entropy levels in three parameters: area, perimeter, and
population. a. Simulation I. b. Simulation II.

food sources. Such fluctuations are represented in both figures 3a and 3b
where:
N starting at a low level (less than 1) in Snapshot 10, indicating that the largest

clusters are at the vicinity of the nest;

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 786

M. Shoshany et al.

N reaching a maximum level of approximately 2.5 (at Snapshots 30 and 58 in
figures 3a and 3b, respectively) when a significant number of clusters
represent movements close to the food sources;
N ending a cycle by concentration (fragmentation lower than 1) near the nest

(at Snapshots 50 and 90 in figures 3a and 3b, respectively).

- Area and perimeter fragmentation exhibits the highest rates of change and
represent the best indications that the pattern structure has been modified,
whereas population fragmentation fluctuations remain almost at the same
average level
throughout the process. One possible explanation for the
differences in the performances of these parameterizations is that the clusters
maintain similar numbers of ants in them throughout the process whereas their
area and perimeter do expand and contract.

Changes in pattern parameterizations seem to be of higher efficiency in
assessing pattern dynamics than visual interpretations, which are most difficult
when clusters of ants (or objects) move in different directions while overlapping in
space.

6. Linking clusters

6.1 Methodology

sources and destination clusters

There are many different configurations of possible matching between clusters
the subsequent clustering snapshots. For all clusters
found in each pair of
the algorithm needs to solve in an optimal way, such that the combination of
all
fulfills certain multiple criteria. When
repeated with all subsequent clustering pairs, this solution will ultimately enable
the tracking of the clusters’ evolution and their splitting and merging. Hornsby and
Egenhofer (1998) provide an in-depth discussion of the semantics of composite
objects’ changes, including creating, continuing existence, eliminating and combin-
ing objects as well as adding and eliminating parts. In our case the following events
may occur:

N creation: the formation of new clusters.
N a merge event would be obtained when most of the ants from several clusters in
Snapshot 1 combine to form one cluster in Snapshot 2: a many-to-one link: a
combined event in Hornsby and Egenhofer’s (1998) terminology;
N a split event would be obtained when the population of ants in one cluster
in Snapshot 1 is divided into several clusters in Snapshot 2: a one-to-many
link. An elimination event in Hornsby and Egenhofer’s (1998) termino-
logy;
N a one-to-one link: most of the ants in the Snapshot 1 cluster are clustered into
one cluster in Snapshot 2: a continued existence event in Hornsby and
Egenhofer’s (1998) terminology.

In nature and in simulated reality, ants’ groups merge, split, and are
maintained while fulfilling their functional roles in collecting and searching for
food or in defending their nest. Here those events are not treated explicitly, but
they can be identified in retrospective searching, according to the clusters’ linking
results. Linking between clusters in successive snapshots is done by considering

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 Evolution of clusters in dynamic point patterns

787

both their morphological and agglomerative properties, which were previously
presented.

In general, optimization techniques are used to find a set of decision variables
(representing both agglomerative and morphological properties) x5{x1, x2, …, xn},
which can be defined as optimal: minimizing or maximizing some system
f(x).
that are dependent on x, or an objective
characteristics
Minimization or maximization is subject to constraints, however. When both the
objective function and the constraints are linear functions of the decision variables,
the problem is known as a Linear Programming (LP) problem. The LP problem has
been studied extensively for many years by researchers in many different areas
(Dantzig 1963, Dantzig et al. 1955, Gass 1985, Luenberger 1984) including relatively
few studies in GIS (e.g. Aerts 2003, Akay et al. 2004, Arthur and Nalle 1997, Guerra
and Lewis 2002, Kaur et al. 2004).

function,

Once the problem has been formulated, it can be solved using one of the many
optimization algorithms available. The simplex algorithm, which was introduced by
Dantzig (1963), is one of the earliest and best-known optimization algorithms. The
MATLABH Optimization Toolbox uses an improved version of the original simplex
algorithm that returns a vertex optimal solution. The algorithm solves the following
LP problem:

f xð Þ~h0x subject to Aeq:x~beq

Min
x

ð5Þ

A:xƒb

lbƒxƒub

where A and Aeq represent matrices of parameters, b and beq are the right-hand-side
vectors of the inequality and the equality constraints, respectively, and lb and ub are
the lower bounds and upper bounds imposed on the decision variables x,
respectively.

Here we define the decision variables, the objective function, and the constraints
in an attempt to model the cluster changes from one snapshot to a subsequent
snapshot. To this end, we created an analogy of our problem to an LP problem
using the following criteria:

1. The total number of ants moving from clusters in Snapshot 1 (‘sources’) to
clusters in Snapshot 2 (‘destinations’) represents a ‘flow’, which is non-
negative. The number of ants moving from some cluster in Snapshot 1 to some
other cluster in Snapshot 2 can be defined as the decision variables x5{x11,
x12, …, x1n, x21, x22, …, x2n, …, xmn}, where m is the number of clusters in
Snapshot 1 and n is the number of clusters in Snapshot 2.

2. The sum of flows from each source to all destinations must be exactly the total
number of ants in each source. Thus, the following constraint can be devised:

x11zx12z . . . zx1n~beq1
x21zx22z . . . zx2n~beq2

. . . :
xm1zxm2z . . . zxmn~beqm

where beqm is the number of ants in cluster m in Snapshot 1.

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 788

M. Shoshany et al.

3. The sum of flows to each destination from all sources cannot exceed the total
number of ants in each destination. Thus, the following constraint can be devised:

x11zx21z . . . zxm1ƒb1
x12zx22z . . . zxm2ƒb2

. . . :
x1nzx2nz . . . zxmnƒbn

4.

where bn is the number of ants in cluster n in Snapshot 2. Note that these
constraints are less restrictive than the equality constraints referring to the source.
This is performed to check whether the optimal solution also limits the
destination flows.
If the time intervals are small enough, clusters in Snapshot 2 would probably
originate from clusters in Snapshot 1 that are close geographically. Using this
idea, it is possible to define the objective function as the minimization of some
total distance function f(x)5h9*x, where h is a column vector of the ‘distances’
(Euclidean/Mahalanobis/CityBlock) between each of the clusters in Snapshot
1 and each of the clusters in Snapshot 2. The optimal solution in this case will
depend on the value assumed for the distance vector between the clusters. In
our research, we tested 3 distance metrics and 3 different
input data
configurations, combining location and direction of movement, yielding a
total of 9 different combinations of the distance vectors h as follows:

The different configurations of input data (using an overall number of p clusters

from both snapshots) were composed of the following 3 matrices:

2

6
6
4

2

6
6
4

2

6
6
4

1. ai1~

2. ai2~

3. ai3~

X1:sin az1
ð
X2:sin az2
ð
. . .
(cid:2)
Xp:sin azp

Þ Y1:cos az1
Þ Y1:cos az2

ð
ð

Þ
Þ

(cid:3) Yp:cos azp

(cid:2)

(cid:3)

3

7
7
5

X1 Y1
X2 Y2
. . .
Xp Yp

sin az1
ð
sin az2
ð

Þ
Þ

cos az1
ð
cos az2
ð

Þ
Þ

(cid:2)
sin azp

(cid:3)

(cid:2)
cos azp

(cid:3)

3

7
7
5

X1:sin az1
ð
X2:sin az2
ð
. . .
(cid:2)
Xp:sin azp

Þ Y1:sin az1
Þ Y2:sin az2

ð
ð

Þ
Þ

(cid:3) Yp:sin azp

(cid:2)

(cid:3)

3

7
7
5

where aik represents the matrix of cluster i for the input data configuration, k, Xi, Yi
are the spatial coordinates of the center of cluster i, and azi is the average azimuth of
the ants in cluster i.

The distance metrics used in this phase are as follows:

1. Euclidean(cid:1)(cid:1)dE~

q

ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
(cid:3)2
(cid:2)
ai1{aj1

(cid:2)
(cid:3)2z . . . z aik{ajk

(cid:2)
(cid:3)2z ai2{aj2

Mahalanobis(cid:1)(cid:1)dM ~
q

2.

ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
(cid:3)T
(cid:3)wij ai2{aj2
(cid:2)
ai1{aj1

(cid:2)
(cid:3)T z . . . z aik{ajk

(cid:2)
(cid:3)T z ai2{aj2

(cid:3)wij ai1{aj1

(cid:3)wij aik{ajk

(cid:2)

(cid:2)

(cid:2)

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 Evolution of clusters in dynamic point patterns

789

3. CityBlock(cid:1)(cid:1)dC~ ai1{aj1

(cid:1)
(cid:1)

(cid:1)
(cid:1)z ai2{aj2

(cid:1)
(cid:1)

(cid:1)
(cid:1)
(cid:1)z . . . z aik{ajk
(cid:1)

(cid:1)
(cid:1)

The subscripts i and j indicate clusters from Snapshots 1 and 2, respectively, and
wij is their inverse covariance matrix. The distance vector will take any of the 3
distance metrics above, which is applied to one of the 3 input data configurations
aik.

Those three metrics represent three different spatial configurations: Euclidean is
the simplest, shortest distance and is mainly applicable where clusters are compact;
Mahalanobis is scale-invariant and takes into account correlations between data sets
(primarily linear spread); and CityBlock is adapted to measuring distances along
orthogonal mesh systems (e.g. obstacles evenly spread between the nest and the food
sources).

6.2 Results

To illustrate the use of the LP approach in our research, we provide an example
from the data set. Table 2 shows a ‘flow’ matrix between the clusters in Snapshot 1
and those in Snapshot 2. The ‘flow’ is defined in our research as the number of ants
that moved from one cluster in Snapshot 1 to another cluster in Snapshot 2. The
cells marked with ‘..’ represent the maximum flow into each cluster in Snapshot 2,
symbolizing the ‘connection’ that was made using the simplex algorithm. Thus, we
can conclude, for example, that Cluster 3 in Snapshot 2 originated mostly from
Cluster 4 in Snapshot 1. Note that in the example above, there are 9 clusters in
Snapshot 1 and 13 clusters in Snapshot 2, thus representing a general splitting
phenomenon. Specific linking events can be identified as follows.

N Splitting events are represented by the distribution of ants along the matrix
rows, for example, Cluster 9 in Snapshot 1 is split into clusters 2, 7, and 11 in
Snapshot 2.
N Merging events are represented by the distribution of flows along the matrix
columns. As discussed earlier, there is a need to differentiate between merging
of whole clusters (or the vast majority of their ants), which is not represented in
our example, and the combination of parts of clusters in the first snapshot into
a new cluster in the next snapshot (for example, Cluster 3 in Snapshot 2
combines parts of Clusters 1, 2, and 4 in Snapshot 1).

Table 2. Flow matrix between clusters in two snapshots. The cells marked with ‘&’ represent
the maximum flow into each cluster in Snapshot 2, symbolizing the ‘connection’ that was
made using the simplex algorithm.

From/To Snapshot 2 1

2

3

4

5

6

8

9

10

11

12

13

Snapshot 1

1
2
3
4
5
6
7
8
9

2
0
0
0
1 &2
0
0
0
0
0
&4
0
0 &3
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0 &5

0
0
0
0
0
0
0
0
0 &21
0
8
0
0
0
0
0
0

0
0
3
0
0 &18
0
0
0
0
0
0
0
0
0
0
0
0

8
0
0
0
0
0
0
0
0 &4

0
0
0
0
0
0
2
0 &3
0

0
0
0
0
0
0
2
1
0
0
0
0
0 &7
0
0

7

0
0
0
0
1
2
0
0
2

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 790

M. Shoshany et al.
N Continued existence is represented by clusters that do not split or merge, for

example, Clusters 5 and 7 from the first snapshot.

Table 3 shows a distance matrix between the clusters in Snapshot 1 and those in
Snapshot 2. The distance metric presented is the standard Euclidean distance. The
cells marked with ‘..’ are those connections that resulted from the simplex
algorithm but are not necessarily the ones that a simple minimum distance algorithm
would have produced (the cells marked with ‘#’). The bold cells marked with ‘( )’
are those that represent a match between the solution given by the simplex algorithm
and a simple minimum distance algorithm. In the example above, not all flows were
matched with the minimum cost. For example, the optimal solution allocated flow
from Cluster 3 in Snapshot 1 to Cluster 1 in Snapshot 2, with a distance of 0.09 (the
cell marked with ‘..’), instead of the minimum distance of 0.02 (the cell marked
with ‘#’). This finding indicates that although the simplex algorithm relies heavily
on the distance metric, the final link is affected by the other constraints determined
earlier.

Figure 4 presents a sequence of clusters linked using the LP approach presented in
this paper. It represents a breakdown of a highly dense agglomeration of ants into
clusters ‘escaping’ from a core area. It is important to note that when dealing with
overlapping clusters, especially near the nest, the direction of movement becomes
the primary criteria for grouping ants. The sequence of marked clusters is linked by
a direction of movement toward the lower-left corner from the focal point of the
core area (marked by a cross). The cluster-formed group leads ants into a specific
direction with ants just joining them in that direction; thus, the centers of these
clusters do not move at the rate of the leading ants. In the first snapshot it is rather
difficult to visually detect the direction of movement, whereas from the second
snapshots it is possible to observe two main groups moving in opposite directions
where each of them is characterized by further outward divergence. Such divergence
is characterized by progressive directional splitting of the ants’ cloud. The three
clusters identified maintain the same direction throughout the pattern change.
Furthermore, it can be seen that individual ants join and depart from the clusters.
Such individual joins may significantly change the area enclosed by the clusters’
ants.

The above-described scenario of cluster evolution follows the application of
the objective functions determined here. It consistently forms chains of clusters,
where the effect of individual entities on these chains seems to be limited,
for example, to the area enclosed or the rate of change in the clusters’ center.
These results indicate that avoiding the dominance of the centers’ proximity in
defining linked clusters seems to be justified and it contributes to the algorithm’s
robustness.

7. Discussion

Ants fulfill various tasks: searching for new food sources, collecting food while
moving toward the food source and returning to the nest along pheromone lanes/
markings, protecting the nest from enemies, and searching for new nesting locations.
Some of
these ‘duties’ are performed individually whereas others represent
functional structures (hierarchies) within the communities. Their collective behavior
is governed by these communal structures and some level of coordination between
reflecting
the different groups. When ‘pulses’ of customers enter a mall,

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 Table 3. Distance matrix between clusters in the two snapshots. The cells marked with ‘&’ are those connections that resulted from the simplex algorithm
but are not necessarily the ones that a simple minimum distance algorithm would have produced (the cells maked with ‘#’). The bold cells marked with ‘( )’
are those that represent a match between the solution given by the simplex algorithm and a simple minimum distance algorithm.

From/To

Snapshot 2

1

2

3

4

5

6

7

8

9

10

11

12

13

Snapshot 1

1
2
3
4
5
6
7
8
9

0.47# 2.72
1.55
2.24
0.04
0.02# 2.26
0.49& 2.74
1.57
2.84
1.67
0.59
0.09& 2.36
0.56
0.61& 1.70
0.09
2.20
0.20
2.05
0.97
0.28
2.55
(0.01)& 0.15
2.25
1.16
0.47
2.75
0.05# 0.72
0.29
0.44
2.31
1.81
0.04# 1.13
0.97
1.13
0.65
1.62
0.12
0.27
1.98
0.21& 0.90
2.48

2.68
2.57
2.70
2.59
2.80
2.68
0.40
0.52
(0.04)& 0.16

0.12
0.05
(0.01)& 0.11
0.11
2.19
2.55
(0.03)& 2.74
2.30
0.41
1.62
1.09
2.48
0.23

1.59
(0.26)& 1.82
1.61
1.84
0.28
1.71
1.94
(0.00)& 0.38
0.57
0.34
1.91
2.28
0.93
0.70
2.26
2.64
1.12
0.89
2.46
2.83
0.46
2.02
2.40
0.69
0.23# (0.00)& 0.45
1.34
1.71
0.41
0.63& 0.86
2.19
2.57

2.04
2.06
2.16
0.12#
0.48
0.67
0.24&

E
v
o
l
u
t
i
o
n

o
f

c
l
u
s
t
e
r
s

i
n

d
y
n
a
m
i
c

p
o
i
n
t

p
a
t
t
e
r
n
s

7
9
1

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 792

M. Shoshany et al.

Figure 4. A sequence of clusters linked using the LP approach representing a breakdown of
a highly dense agglomeration of ants into clusters ‘escaping’ from a core area.

transportation timings,
their movements might be governed by individual
they might be responding together in different ways to
considerations, yet
information distributed through media or communication networks. When tens or
hundreds of ants conduct their ‘duties’ or a similar number of persons shop in a
mall, very complex spatio-temporal dynamics may evolve. Are these dynamic
patterns governed by groups forming and dissolving spontaneously? Do individuals
respond to the formation of such spontaneous groupings? Some of them consciously
join the crowd whereas others intentionally stay out of it. In what way is a response
pattern to environmental disturbances (a security alert or an enemy’s intrusion into
the territory) formed? Answers to this type of question may be obtained by
clustering at snapshots and assessing evolution events (i.e. continuation, splitting,
and merging). Relationships between driving forces and environmental events to
changes in the clusters’ pattern characteristics (i.e. fragmentation and aggregation)
and in their evolution (i.e. continuation, splitting, and merging events) may facilitate
better understanding of the processes taking place. However, for this purpose, it is
necessary to ensure that the clustering and clusters’ matching methodologies do not
form artifacts. This might be achieved by employing objective and consistent
methods with minimal and even no human intervention during their execution. The
use of the silhouette value for determining the number of clusters searched for and
for assessing which clustering strategy (i.e. combinations of algorithm and input
parameters) performs better, may facilitate optimal selection of a method suitable to
specific phenomena. In other words, it is not suggested here to necessarily adopt the
preferred processing strategy that was found here, but rather to adopt a comparative

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 Evolution of clusters in dynamic point patterns

793

strategy performance evaluation. The use of optimization techniques for determin-
ing clusters’ matching in-between pairs of snapshots follows the same approach,
where the selection of decision variables and distance metrics would have to be
justified phenomenologically. This would add some level of subjectivity and
could bias the results. The main problem then concerns verification of the results,
which would be impossible or impractical in very complex cases: human visual
judgment of clustering and matching clusters in complex dynamics may not
necessarily compete with computerized methods. Thus, there is no way to form as a
reference a ‘true’ result for these cases. The reliability of the results relies on the
reliability of the components’ methods: the clustering and the matching are based on
linear programming optimization. This is especially true when considering the
proposed algorithm as exploratory rather than explanatory (e.g. Gahegan and
Brodaric 2002, Openshaw 1994, 1998). When implementing the algorithm within the
context of an explanatory application/modeling, it is necessary to validate it with
reference to phenomenological knowledge. In real ants’ dynamics, this would mean
linking the observed patterns to knowledge regarding community structure and
functioning.

8. Summary and conclusions

A new generalized algorithm was presented as an exploratory tool for assessing
dynamic changes in point patterns. Discovering and analyzing the dynamics of
clusters in point patterns is a considerable challenge whose increasing relevance is
attributed to the widespread use of systems routinely utilized for collecting
information regarding the spatial behavior of people and animals. Although the
entities’ dynamics has attracted considerable attention within the GIS community,
there are very few studies that have treated swarm behavior. An Ants’ simulation
program was utilized for creating a data set that facilitated the preliminary
experimentation and testing of the new methodology/algorithm. The approach
presented here combines the representation of the movements in the snapshot data
(by attributing each point with a direction of movement), creates clusters in these
data points, and then optimizes pairwise links throughout the processes. Application
of the Linear Programming approach to pairwise linking of clusters has been shown
to perform well in presenting a significant number of cases where the linked clusters
were not the closest ones. The result that the Mahalanobis distance also exhibited
better performance when computed on the basis of both location and direction data
is important, underscoring the importance of the role of the covariance rather than
the pure Euclidian distance. Linking the clusters thus facilitates the analysis of
pattern evolution through creating, merging, and splitting events and the tracking of
clusters throughout the process. It has been shown that when the Shannon–Weiner
information index is applied to the area, population, and perimeter fractions, it may
provide an indication of the whole pattern’s response to changes under the driving
conditions (e.g. food availability).

The presented methodology can be implemented in a wide variety of ‘behavioral’
entities’ dynamics for exploring spontaneous and/or intentionally formed dynamic
clusters. However, there is a need for further empirical and systematic investigations
with real data and for phenomenological-expert assessments of the different results
in order to generalize the methodology. The expansion of the assessment could
include other clustering algorithms and other optimization schemes.

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 794

M. Shoshany et al.

References
AERTS, J., 2003, Using linear programming for multi-site land-use allocation. Geographical

Analysis, 35(2), pp. 148–169.

AKAY, A.E., KARAS, I.R., SESSIONS, J., BOZALI, N. and GUNDOGAG, R., 2004, Using high-
for computer-aided forest road design. In

resolution digital elevation model
Proceedings of the XX ISPRS Congress, Istanbul 2004.

ARTHUR, J.L. and NALLE, D.J., 1997, Clarification on the use of linear programming and GIS
for land-use modeling. International Journal of Geographical Information Science,
11(4), pp. 397–402.

BARBER, C.B., DOBKIN, D.P. and HUHDANPAA, H.T., 1996, The Quickhull algorithm for

convex hulls. ACM Transactions on Mathematical Software, 22(4), pp. 469–483.

BATTY, M. and JIANG, B., 2000, Multi-agent simulation: computational dynamics within GIS.
In Innovations in GIS VII: Geocomputation, D. Martin and P. Atkinson (Eds), pp.
55–71 (London: Taylor & Francis).

BONABEAU, E., DORIGO, M. and THERAULAZ, G., 1999, Swarm Intelligence—From Natural to

Artificial Systems (New York: Oxford University Press).

BRIMICOMBE, A.J., 2005, Cluster detection in point event data having tendency towards
spatially repetitive events. In Proceedings of the 8th International Conference on
Geocomputation, Ann Arbor Michigan, 1–3 Agust 2005.

CHEN, J. and JIANG, J., 2000, An event-based approach to spatio-temporal data modeling.

DANTZIG, G.B., 1963, Linear Programming and Extensions (Princeton, New Jersey: Princeton

GeoInformatica, 4(4), pp. 387–402.

University Press).

DANTZIG, G.B., ORDEN, A. and WOLFE, P., 1955, Generalized simplex method for minimizing
a linear from under linear inequality constraints. Pacific Journal of Mathematics, 5,
pp. 183–195.

D’AURIA, M., NANNI, M. and PEDRESCHI, D., 2005, Time focused density based clustering of
trajectories of moving objects. In Proceedings of the Workshop on Mining Spatio-
Temporal Data (MSTD-2005), Porto, 2 October 2005.

DENEUBOURG, J.L., GOSS, S., FRANKS, N., SENDOVA-FRANKS, A., DETRAIN, C. and
CHRETIEN, L., 1991, The dynamics of collective sorting: robot-like ants and ant-like
robots. In Proceedings of the First International Conference on Simulation of Adaptive
Behavior: From Animals to Animats1, J.-A. Meyer and S. Wilson (Eds), pp. 356–365
(Cambridge, MA: MIT Press).

DE VASCONCELOS, M.J.P., GONCALVES, A., CARTY, F.X., PAUL, J.U. and BARROS, F., 2002,
A working prototype of a dynamic geographical information system. International
Journal of Geographical Information Science, 16(1), pp. 69–91.

DI MARZO SERUGENDO, G., GLEIZES, M.-P. and KARAGEORGOS, A., 2006, Self-organisation

and emergence in MAS: an overview. Informatica, 30, pp. 45–54.

FORER, P., 1998, Geometric approaches to the nexus of time, space, and microprocess:
implementing practical model for mundane socio-spatial systems. In: Egenhofer,
M.J., and Golledge, R.G. (eds), Spatial and Temporal Reasoning in Geographic
Information Systems, pp. 171–190 (Oxford: Oxford University Press).

FORMAN, R.T.T., 1995, Land Mosaics: The Ecology of Landscape and Regions (Cambridge:

Cambridge University Press).

GAHEGAN, M. and BRODARIC, B., 2002, Computational and visual support for geographical
knowledge construction: filling in the gaps between Exploration and Explanation. In
Proceedings of the Symposium on GeoSpatial Theory, Processing and Applications,
Ottawa, 2002 (CD-ROM).

GASS, S.I., 1985, Linear Programming: Methods and Applications, 5th edition (New York:

International Thomson Publishing).

GUDMUNDSSON, J., VAN KREVELD, M. and SPECKMANN, B., 2004, Efficient detection of
motion patterns in spatio-temporal data sets. In 12th ACM International Workshop on

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 Evolution of clusters in dynamic point patterns

795

Geographic Information Systems, ACM-GIS 2004, 12–13 November, Washington,
DC, USA D. Pfoser, I.F. Cruz, and M. Ronthaler (Eds) (Washington DC: ACM).
GUERRA, G. and LEWIS, J., 2002, Spatial optimization and GIS: locating an optimal habitat

for wildlife reintroduction. ARCUSER, April–June, pp. 32–35.

HALL, L.O. and KANADE, P., 2006, Scalable Swarm Based Fuzzy Clustering. In From Data
and Information Analysis to Knowledge Engineering, Part 1, M. Spiliopoulou,
R. Kruse, C. Borgelt, A, Numberger, and W. Gaul (Eds) (Berlin: Springer).
HAN, J., KAMBER, M. and TING, A.K.H., 2001, Spatial clustering methods in data mining—a
survey. In Geographic Data Mining and Knowledge Discovery, H.J. Miller and J. Han
(Eds), pp. 188–217 (Bristol, PA: Taylor and Francis).

HANDL, J., KNOWLES, J. and DORIGO, M., 2004, Strategies for the increased robustness of ant-
based clustering. In Engineering Self-Organising Systems, vol. 2977 of Lecture Notes
in Computer Science, pp. 90–104 (Heidelberg, Germany: Springer-Verlag).
HOOGE, P.N., EICHENLAUBE, W.M. and SOLOMON, E.K., 2001, Using GIS to analyze animal
movements in the marine environment. In Analyzing Animal Movements, P.M.
Hooge, W.M. Eichenlaube and E.K. Solomon (Eds)
(Alaska Science Center,
Anckorage, AK: US Geological Survey).

HORNSBY, K. and EGENHOFER, M., 1998, Identity-based change operations for composite
objects. In Proceedings of the 8th International Symposium on Spatial Data Handling,
T.K. Poiker and N. Chrisman (Eds). (Vancouver, Canada: International Geographic
Union), pp. 202–213.

HORNSBY, K. and EGENHOFER, M., 2002, Modeling moving objects over multiple
Issue on Spatial and Temporal Granularity Annals of

granularities. Special
Mathematics and Artificial Intelligence, 36, pp. 177–194.

KAUFMAN, L. and ROUSSEEUW, P., 1990, Finding Groups in Data: An Introduction to Cluster

Analysis (New York: John Wiley & Sons).

KAUR, R., SRIVASTAVA, R. and BETNE, R., 2004, Integration of LP and hydrological model.

Journal of Geographical Information Science, 18(1), pp. 73–98.

KELLY, K., 1994, Out of Control: The New Biology of Machines, Social Systems and the

Economic World (New York: Basic Book, Perseus Books Group).

KOCH, A., 2000, Linking multi agent systems and GIS—modelling and simulating
interactions. Available online at: www.rwth-aachen.de/geo/Ww/deutsch/

spatial
MultiAgentsKoch.pdf.

KWAN, M.P., 2004, GIS methods in time–geographic research: geocomputation and
geovisualization of human activity patterns. Geographic Annals, 86B(4), pp. 267–
280.

LANDAU, U., PRASHKER, J.N. and ALPERN, B., 1982, Evaluation of activity constrained
choice sets to shopping destination choice modeling. Transportation Research A, 16A,
pp. 199–207.

LANGRAN, G., 1989, A review of temporal database research and its use in GIS applications.
International Journal of Geographical Information Systems, 3(3), pp. 215–232.
LANGRAN, G., 1993, Issues of implementing a spatio-temporal system. International Journal

of Geographical Information Systems, 7(4), pp. 305–314.

LANGRAN, G., 1992, Time in Geographic Information Systems (London: Taylor & Francis).
LAUBE, P., IMFELD, S. and WEIBEL, R., 2005, Discovering relative motion patterns in groups
of moving point objects. International Journal of Geographical Information Science,
19(6), pp. 639–668.

LI, Y., HAN, J. and YANG, J., 2004, Clustering moving objects, KDD’04, 22–25 August, 2004,

LUENBERGER, D.G., 1984, Introduction to Linear and Nonlinear Programming (Boston:

MILLER, H.J., 2005, A measurement theory for time geography. Geographical Analysis, 37,

Seattle, Washington, USA.

Addison Wesley).

pp. 17–45.

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 796

M. Shoshany et al.

MILLER, H.J. and HAN, J., 2001, Geographic data mining and knowledge discovery—an
overview. In Geographic Data Mining and Knowledge Discovery, H.J. Miller and J.
Han (Eds), pp. 3–32 (Bristol, PA: Taylor and Francis).

NANNI, M., 2005, Speeding-up hierarchical agglomerative clustering in presence of expensive

metrics. PAKDD 2005 LNAI 3518.

NETANYAHU, N., FRIEDMAN, L. and SHOSHANY, M., 2003, Mean shift-based clustering for
remotely sensed data. In Proceedings of the IGARSS 2003, Toulouse, France.
OPENSHAW, S., 1994, Two exploratory space–time-attribute pattern analyzers relevant to GIS.
In Spatial Analysis and GIS, A.S. Fotheringham and P.A. Rogerson (Eds), pp. 83–104
(London: Taylor& Francis).

OPENSHAW, S., 1998, Building automated geographical analysis and explanation machines. In
Geocomputation: A Primer, P.A. Longley, S.M. Brooks, R. McDonnel and B.
MacMillan (Eds), pp. 95–115 (Chichester: Wiley).

OPENSHAW, S. and OPENSHAW, C., 1997, Artificial Intelligence in Geography (New York: John

Wiley & Sons).

PEUQUET, D.J. and DUAN, N., 1995, An event-based spatio-temporal data model (ESTDM)
for temporal analysis of geographical data. International Journal of Geographical
Information Systems, 9(1), pp. 7–24.

POLLARD, K. and VAN DER LAAN, 2002, Statistical inference for simultaneous clustering of

gene expression data. Mathematical Biosciences, 176(1), pp. 99–121.

PUN-CHENG, L. and CHU, A., 2004, An analysis of shoppers’ walking behavior by using GIS.

Archive ISPRS WG II/5.

RAMOS, V. and ABRAHAM, A., 2004, Evolving a stigmergic self-organized data-mining. In
ISDA’04, International Conference on Intelligent Systems, Design and Applications,
Hungary 2004 (Conference proceedings on ROM).

RAMOS, V. and ALMEIDA, F., 2000, Artificial ant colonies in digital image habitats—a mass
behaviour effect study on pattern recognition. In ANTS’00—2nd International
Workshop on Ant Algorithms (From Ant colonies to Artificial Ants), M. Dorigo, M.
Middendorf, T. Stutzle (Eds), Belgium (Conference Proceedings on CD ROM).

RESNICK, M., 1994, Turtles, Termites, and Traffic Jams: Explorations in Massively Parallel

Microworlds (Cambridge, MA: MIT Press).

SHANNON, C.E. and WEINER, W., 1949, The Mathematical Theory of Communication

(Urbana: University of Illinois).

SHOSHANY, M. and KELMAN, E., 2006, Assessing mutuality of change in soil and vegetation
pattern characteristics by means of cellular automata. Geomorphology, 77(1–2), pp.
35–46.

SINHA, G. and MARK, D.M., 2005, Measuring similarity between geospatial lifelines in
studies of environmental health. Journal of Geographical Systems, 7(1), pp. 115–
136.

SWIHART, R.K. and SLADE, N.A., 1985, Testing for independence of observations in animal

movements. Ecology, 66, pp. 1176–1184.

TAKEYAMA, M. and COUCLELIS, H., 1997, Map dynamics: integrating cellular automata and
GIS through Geo-Algebra. International Journal of Geographical Information Science,
11(1), pp. 73–91.

TOBLER, W., 1981, A model of geographic movement. Geographical Analysis, 13(1), pp. 1–20.
VAN DER LAAN, M.J. and POLLARD, K.S., 2003, A new algorithm for hybrid hierarchical
clustering with visualization and the bootstrap. Report of Research within the
framework of the Life Sciences Informatics Program. University of California,
Berkley.

VISZINE, A.L., dE CASTRO, L.N., HRUSCHKA, E.D. and GUDWIN, R.R., 2005, Towards
improving clustering ants: an adaptive ant clustering algorithm. Informatica, 29, pp.
143–154.

VON NEUMANN, J. and BURKS, A.W., 1966, Theory of Self-Reproducing Automata (Urbana:

University of Illinois).

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 Evolution of clusters in dynamic point patterns

797

WANG, X., QIU, W. and ZAMAR, R.H., 2002, An iterative non-parametric clustering
algorithm based on local shrinking. In Proceedings of the IEEE ICDM conference
2002.

WILENSKY, U., 1998, NetLogo Ants model. Center for Connected Learning and Computer-
Based Modeling, Northwestern University, Evanston, IL. Available online at: http://
ccl.northwestern.edu/netlogo/models/Ants.

WORBOYS, M., 2005, Event-oriented approaches to geographic phenomena. International

Journal of Geographical Information Science, 19(1), pp. 1–28.

YUAN, M. and MCINTOSH, J., 2003, GIS representation for visualizing and mining geographic

dynamics. Transactions in GIS, 3(2), pp. 3–10.

ZHANG, W. and HUNTER, G.J., 2000, Temporal interpolation of spatially dynamic objects.

GeoInformatica, 4(4), pp. 403–418.

Downloaded by [University North Carolina - Chapel Hill] at 07:35 24 October 2014 