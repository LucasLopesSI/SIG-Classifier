This article was downloaded by: [UAA/APU Consortium Library]
On: 14 October 2014, At: 11:00
Publisher: Taylor & Francis
Informa Ltd Registered in England and Wales Registered Number: 1072954 Registered
office: Mortimer House, 37-41 Mortimer Street, London W1T 3JH, UK

International Journal of Geographical
Information Science
Publication details, including instructions for authors and
subscription information:
http://www.tandfonline.com/loi/tgis20

Embedding rivers in triangulated
irregular networks with linear
programming
Marc van Kreveld a & Rodrigo I. Silveira a
a Department of Information and Computing Sciences , Utrecht
University , Utrecht, The Netherlands
Published online: 29 Oct 2010.

To cite this article: Marc van Kreveld & Rodrigo I. Silveira (2011) Embedding rivers in triangulated
irregular networks with linear programming, International Journal of Geographical Information
Science, 25:4, 615-631, DOI: 10.1080/13658816.2010.488240

To link to this article:  http://dx.doi.org/10.1080/13658816.2010.488240

PLEASE SCROLL DOWN FOR ARTICLE

Taylor & Francis makes every effort to ensure the accuracy of all the information (the
“Content”) contained in the publications on our platform. However, Taylor & Francis,
our agents, and our licensors make no representations or warranties whatsoever as to
the accuracy, completeness, or suitability for any purpose of the Content. Any opinions
and views expressed in this publication are the opinions and views of the authors,
and are not the views of or endorsed by Taylor & Francis. The accuracy of the Content
should not be relied upon and should be independently verified with primary sources
of information. Taylor and Francis shall not be liable for any losses, actions, claims,
proceedings, demands, costs, expenses, damages, and other liabilities whatsoever or
howsoever caused arising directly or indirectly in connection with, in relation to or arising
out of the use of the Content.

This article may be used for research, teaching, and private study purposes. Any
substantial or systematic reproduction, redistribution, reselling, loan, sub-licensing,
systematic supply, or distribution in any form to anyone is expressly forbidden. Terms &
Conditions of access and use can be found at http://www.tandfonline.com/page/terms-
and-conditions

International Journal of Geographical Information Science
Vol. 25, No. 4, April 2011, 615–631

Embedding rivers in triangulated irregular networks with linear
programming

Marc van Kreveld and Rodrigo I. Silveira*

Department of Information and Computing Sciences, Utrecht University, Utrecht, The Netherlands

(Received 23 October 2009; final version received 17 March 2010)

Data conflation is a major issue in GIS: different geospatial datasets covering overlapping
regions, possibly obtained from different sources and using different acquisition techni-
ques, need to be combined into one single consistent dataset before the data can be
analyzed. The most common occurrence for hydrological applications is conflation of a
digital elevation model (DEM) and rivers. We assume that a triangulated irregular net-
work (TIN) is given, and a subset of its edges are designated as river edges, each with a
flow direction. The goal is to obtain a terrain where the rivers flow along valley edges, in
the specified direction, while preserving the original terrain as much as possible.

We study the problem of changing the elevations of the vertices to ensure that all the
river edges become valley edges, while minimizing the total elevation change. We show
that this problem can be solved using linear programming. However, several types of
artifacts can occur in an optimal solution. We analyze which other criteria, relevant for
hydrological applications, can be captured by linear constraints as well, in order to
eliminate such artifacts. We implemented and tested the approach on real terrain and
river data, and describe the results obtained with different variants of the algorithm.

Keywords: digital elevation or terrain models; triangulated irregular networks; river
networks; data conflation

1.

Introduction

Spatial data can be acquired in various ways and has widely differing characteristics. Even for
the same type of data, different acquisition techniques give rise to different properties of the
data. For example, the extent of a forest can be obtained from land surveying, which is precise
and reliable, but it can also be obtained from satellite imagery, which is less precise and less
reliable, because it depends on classifications of pixels. On the contrary, land surveying is more
expensive and therefore, less frequently performed. This implies that available data can easily
be outdated. As a second example, consider a dataset with the boundaries of the states of the
United States and a dataset with the rivers of the United States. These datasets have different
origins, but if they are used in conjunction, one should be aware that often, the boundary of a
state follows part of a river. If the river dataset has a lower resolution, then it seems that a state
also has small patches of land on the other side of the river.

These two examples illustrate the issue of spatial data integration. The widespread
availability of georeferenced data makes it increasingly common to encounter data regarding

*Corresponding author. Now affiliated with the Departament de Matema`tica Aplicada II, Universitat
Polite`cnica de Catalunya, Barcelona, Spain. Email: rodrigo.silveira@upc.edu.

ISSN 1365-8816 print/ISSN 1362-3087 online
# 2011 Taylor & Francis
DOI: 10.1080/13658816.2010.488240
http://www.informaworld.com

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 616

M. van Kreveld and R.I. Silveira

the same attribute from different sources, giving data acquired at different scales and with
different accuracies. Therefore, the integration of different datasets is becoming more and
more important (Kyriakidis et al. 1999). Data conflation is the compilation or reconciliation
of two spatial datasets covering overlapping regions (Saalfeld 1988, Chen and Knoblock
2008). When two datasets refer to the same area, data conflation may be necessary to obtain
data that are consistent and have no contradicting features attributed to the same part of the
terrain, while taking advantage of the characteristics of both datasets.

The study of automatic methods to conflate different datasets was initiated by Saalfeld
(1988), and since then it has experienced a significant growth. Based on the types of data
being combined, different techniques have been proposed, either for vector-to-vector data
conflation, a typical example being the conflation of two road networks of different accuracy
levels (Ware and Jones 1998, Walter and Fritsch 1999); or vector-to-raster data conflation,
for example, to match a vector road network to an aerial photograph (Eidenbenz et al. 2000,
Chen et al. 2006); or raster-to-raster data conflation, to identify corresponding features in
two georeferenced images, for example, identifying streets from a raster map in an ortho-
photo map (Dare and Dowman 2001, Chen et al. 2004).

In this article, we discuss a special type of vector-to-vector data conflation problem
between a digital elevation model (DEM) and a river dataset. In particular, we assume that
the DEM is given as a triangulated irregular network (TIN) terrain and the river dataset as a
set of polygonal lines in the plane, each with a flow direction. We wish to conflate these two
datasets, which means that the rivers should follow through edges of the terrain, these edges
should indeed be valleys with respect to the incident triangles, and the direction of flow
should be correct. To accomplish this, we may need to add edges to the terrain, move terrain
and river edges, and/or change the elevations of vertices in the terrain.

1.1. Motivation and background
The combination of different spatial datasets is a difficult and challenging problem because
of the imprecision that is present in most spatial datasets. Imprecision or uncertainty is an
intrinsic part of digital terrain models (DTMs). In fact, no DTM can be considered error-free
because of the methods that are used to produce the DTMs in the first place, as they
ultimately depend on error-prone measuring devices (Heuvelink 1998). Moreover, DTMs
are usually the end result of a number of modeling and processing steps (such as measuring,
converting, and interpolating), which can introduce further uncertainty into the model.

The issue of uncertainty in terrain modeling has received a lot of attention. Many authors
have addressed the problem of evaluating the accuracy of different
types of DTMs
(see, e.g., Wang and Trinder 1999, Berry et al. 2000, Maune 2001). A lot of effort has been
devoted to quantifying the uncertainty present in the data, using analytical models for error
propagation (Heuvelink 1998, Albani et al. 2004) and more commonly with stochastic
simulation techniques (Chrisman 1989, Goodchild et al. 1992, Brunsdon and Openshaw
1993, Deutsch and Journel 1998, among many others). Furthermore, several methods have
been proposed to model the uncertainty in an elevation model based on a set of higher accuracy
control points. Many such methods are capable of estimating the global error of the DTM and a
vertical accuracy range for every point in the elevation model. Examples of such methods are
proposed by Aerts et al. (2003), Kyriakidis et al. (1999), and Aguilar et al. (2006). For a review
of the literature on uncertainty in DEMs for hydrologic applications, see Wechsler (2007).

The importance of terrain and river conflation lies in hydrology and erosion modeling on
terrains. Water can flow through the surface and on the surface, and in the latter case, it may

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 International Journal of Geographical Information Science

617

Figure 1. Left: three types of edges: normal or transfluent, valley or cofluent, and ridge or difluent.
Center: a river network and its drainage basin (dashed). Right: the terrain and the input rivers overlaid.

flow freely or in rills, streams, or rivers. One of the reasons for erosion is the sediment
transportation capacity of flowing water, which leads to soil loss.

A standard assumption of water flow on a terrain is that water follows the direction of
steepest descent. In particular, this implies that water has no inertia when it flows on a terrain.
When a TIN is used as a DEM, the places where water collects are the so-called cofluent or
valley edges (Frank et al. 1986), see Figure 1. Whereas most edges receive water from one
incident triangle and pass it onto the other, valley edges receive water from both incident
triangles, after which the water follows the downward direction on that edge. Hence, valley
edges are the natural way to represent rivers (for brevity we use rivers for any flowing stream on
a terrain, be it a rill, gully, stream, creek, brook, tributary, or river). Rivers typically form a
network that is often a tree structure rooted at a local minimum or the boundary of the terrain, see
Figure 1. The part of the terrain that drains into a particular river is the drainage basin, or
watershed, of that river.

Most hydrological modeling research assumes a raster terrain (DEM). Each grid cell in the
terrain drains to one of its eight neighbors, the one that gives the steepest descent. This is called
the D8 model (O’Callaghan and Mark 1984) (see Figure 2) and allows the definition of
accumulation of water, drainage networks, and drainage basins. Many mainstream GIS soft-
ware packages (such as ESRI ArcGIS) contain tools for this. Often they also contain tools to
correct DEMs hydrologically. A DEM is hydrologically correct if it has a connected drainage
structure and a correct representation of ridges and streams. It implies that there are no spurious
pits: local minima that are caused by insufficiently dense sampling, inaccuracies in elevation
measurement, or rounding of elevations (Hutchinson 1988, 1989, Maidment 1993).

Correction is done by changing elevations of the grid cells. There are essentially three
approaches to ensure that given rivers correspond to those according to the terrain shape.
First, the simplest and the most used method is that of stream burning: lower only the
elevations of cells through which the river passes. Second, one can specify a buffer around
the river and also allow a change of elevation of cells in the buffer. This allows a more
smooth incorporation of rivers and is the approach in the ArcGIS Spatial Analyst extension

17

17

16

17 16

17

16

13

15

14

15

14

1 3 14

17

18

10

11

15

16

1 1

9

10

13 14

Figure 2. The D8 flow model. Numbers indicate elevations and arrows flow between contiguous
cells. The blue circles show cells that receive water from at least three other cells.

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 618

M. van Kreveld and R.I. Silveira

and in AGREE (Hellweger 1996). Third, one can (potentially) allow all cells of the DEM to
change elevation. The ANUDEM system allows this (Hutchinson 1988, 1989, 1994). For more
details on how these three approaches work, and an experimental comparison of the
methods, we refer to Callow et al. (2007).

To ensure that spurious local minima are removed, one can employ pit filling and
breaching. Pit filling is to increase the elevation of a local minimum and some grid cells
around it until no local minimum remains (Jenson and Dominique 1988). Breaching is to
lower the elevations of grid cells along a path from a local minimum to an even lower point in
the neighborhood (Martz and Garbrecht 1999).

Once a hydrologically correct terrain is obtained, further analysis can be performed to
compute hydrographs, determine runoff, or simulate the hydrological cycle (including rain-
fall, evaporation, overland flow, subsurface flow, and so on). Clearly, many geographic
aspects influence hydrological modeling like soil type, vegetation, precipitation intensity,
and terrain shape. Regarding the last aspect, the most important geomorphological factors
are the slope and aspect of the terrain.

Raster terrains are attractive mostly due to their simplicity and their widespread availability.
However, grid models present several disadvantages when used for hydrological modeling: they
are bound to a fixed, uniform resolution; they allow only a limited number of drainage directions
(usually eight); and the regular grid can introduce anisotropy leading to bias in drainage patterns
(Braun and Sambridge 1997, Tucker et al. 2001). As an alternative, TINs do not have these
limitations, and moreover, they allow to incorporate important terrain features like breaklines and
stream networks into the mesh. For these reasons, there has been a considerable amount of
research in hydrology, erosion, and landscape evolution that has adopted TINs to model the
terrain surface. Relevant examples include Bates and Anderson (1993), de Berg et al. (1996),
Cobby et al. (2003), Ivanov et al. (2004a, b), Qu and Duffy (2007), Theobald and Goodchild
(1990), Tucker et al. (2001), Vasquez et al. (2008), Vivoni et al. (2005), and Yu et al. (1997).
In addition, with the rise of LiDAR (Light Detection and Ranging) for elevation data
acquisition, irregular point clouds and triangulations thereof are becoming more common as
elevation models, creating a need for algorithms that work on TIN representations.
Furthermore, for hydrologic simulations, triangulations have been considered superior to
DEMs; see, for example, the experiments by Vivoni et al. (2004).

Using river data to improve the hydrologic quality of terrain data is considered by
McAllister and Snoeyink (1999), Nelson et al. (1994), and Vivoni et al. (2004). These
methods let the triangulation have edges where the given rivers run, but do not guarantee that
these edges are valley edges.

1.2. Approach and results
In this article, we study terrain correction based on additional river data. We will compute a
TIN with minimally changed elevations of vertices while ensuring that given rivers flow
along valley edges and in the right direction.

As we expect river and terrain data to come from different sources, a first preprocessing
step to match the rivers to terrain edges is needed. There are basically two ways to make sure
that river edges and terrain edges match. First, we can add all river edges to the triangulation
by removing all the intersected terrain edges, and then partitioning all nontriangular faces
into triangles. Second, we can snap the river edges so that it uses terrain edges only. Both
options are discussed in Section 2.

After this preprocessing step, we can assume that a TIN is given where a subset of the
edges are marked as river edges, and a flow direction is specified. We study the problem of

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 International Journal of Geographical Information Science

619

changing the elevations of potentially all vertices to let all of these river edges become valley
edges of the terrain (with the specified flow direction), while minimizing the sum of
elevation changes of the vertices. We show in Section 3 that this problem can be solved
by linear programming. However, artifacts may occur in an optimal solution, like changing
the slope of some triangles dramatically, creating sharp folds between adjacent triangles that
were not present before, and creating new valley edges out of ordinary edges in the terrain.
For hydrological modeling on terrains, such artifacts should be avoided. Therefore, we
continue by analyzing which other criteria can be captured in a linear program (LP).

To test our approach, we implemented and ran it on independent terrain and river data
from the British Columbia. We describe the data, the preparation of the data, and the
experimental objectives in Section 4. Then, we evaluate the results and visualize various
attributes like the change in elevation and the change in slope.

2. Matching terrain and river edges

With river and terrain data originating from different sources, and possibly at different
resolutions, it becomes necessary to preprocess the data to match the rivers to the terrain.
In other words, one must decide where in the terrain the rivers should flow. Because the
terrain is represented by a TIN, this means that we must determine a set of terrain edges along
which the rivers run. There are basically two ways to make sure that river edges and terrain
edges match.

The first option, which we call gluing, is to add all river edges to the TIN and then to
traingulate all faces that are not triangles anymore using some constrained triangulation [like
the constrained Delaunay triangulation (Chew 1989)]. Thus, the original terrain is adapted to
fit the river data. This approach is illustrated in Figure 3. A problem inherent to this approach
is that when adding new vertices to the terrain (the river vertices), their elevation will be
unknown. The easiest way to solve this is obtaining the elevations of all the new vertices
from the previously present vertices by linear interpolation.

The second alternative is to match rivers and edges by snapping the river edges to the
terrain edges. One way to accomplish this is the following (see Figure 4 for an illustration).
First, all intersections between the river and terrain edges are added as new river vertices, and
all the river vertices interior to triangles are removed. This results in rivers with all edges
between points on triangle edges. Next, each river edge can be snapped to a terrain edge.
This is done by snapping each vertex lying on a terrain edge to the closest endpoint of that
edge. Finally, artifacts like duplicated vertices or loops must be removed. In this way, the
original terrain remains intact, but it is the river courses that are modified – hopefully not too
much – to match the terrain.

Figure 3. Matching river and terrain by gluing. From left to right: original river, river showing
intersections with terrain edges, edges intersected by the river removed, and final result: nontriangular
faces retriangulated.

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 620

M. van Kreveld and R.I. Silveira

Figure 4. Matching river and terrain by snapping. From left to right: original river, river showing
intersections with terrain edges, parts of the river inside triangles removed, and final result: river after
snapping to terrain vertices.

The final result for both methods consists of a triangulated terrain where some edges are
marked as river edges. Clearly both methods have advantages and disadvantages, and which
one to use will depend on the situation and on the specific types of data available.

3. Constraints for terrain correction

In this section, we study the criteria that make river edges to be valley edges on a terrain. We
also study other criteria that influence the morphological quality. The objective is to
formulate the criteria as much as possible as linear constraints, so that standard linear
programming software like IBM ILOG CPLEX1 can be used for terrain correction.

First we introduce some notation. We are given a triangulation T with heights, a subset of its
edges that are marked to be river, each with a flow direction. Each vertex vi has an initial height h0
i .
The goal is to determine a new height hi for each vertex vi so that the change to the
original terrain is minimized. There are several ways to model this objective. Natural options
are minimizing the sum of the height differences over all vertices, the sum of the squared
height differences, and the volume between the original and the new terrain. Because the first
option – unlike the second and third one – has the important advantage that it can be
expressed as a linear objective function, we set this as our objective.

More formally, the goal is to minimize the sum of the absolute difference between the
new height and the original height of each vertex: min P
i j. By using the standard
transformation hi ¼ h0
i (cid:2) z(cid:2)
i (cid:3) 0, the objective function becomes linear:
min P
i Þ. In Section 3.1 we show that turning river edges into valley edges with the
proper flow direction is an instance of linear programming. In Section 3.2, we analyze what
other criteria can be incorporated with an linear programming approach. For the ease of
reading, we continue to use hi as the height of a vertex vi.

i , where zþ

i jhi (cid:2) h0

i þ z(cid:2)

i þ zþ

i ; z(cid:2)

i ðzþ

With this approach, it is simple to incorporate information on the uncertainty of the
original terrain data. For example, if the original elevation data are collected with a precision
of (cid:4)m meters, the LP above can be modified to allow vertical movement within the first m
meters ‘for free.’ This is achieved by adding an extra variable fi for each vertex vi, and taking
the constraints hi ¼ h0
i (cid:2) z(cid:2)
i þ fi, with (cid:2) m (cid:5) fi (cid:5) m as additional constraints. The
objective function remains the same and contains only the zþ

i þ zþ

i and z(cid:2)

i variables.

3.1. Constraints for embedding rivers

Each edge e of T is incident to two triangles. We call the two vertices of such a triangle that are not
incident to e its wingtips. If e is marked as a river edge, then two constraints need to be imposed to
ensure that e is a valley edge, and another constraint is needed to ensure the correct flow direction.

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 International Journal of Geographical Information Science

621

Let H be the plane containing e and the horizontal line perpendicular to e and through
some point on e. In other words, H is the plane with smallest slope that contains e, thus the
direction of steepest descent on H is parallel to e (assuming e is not horizontal). Then, e is a
(weak) valley edge if and only if both wingtips lie above or on the plane H. For both triangles
incident to e, this constraint is a linear inequality on the three heights of the vertices involved,
called valley constraint.

The exact expression for the valley constraint for one of the triangles adjacent to e is as
follows. Let e ¼ viviþ1, and let vi ¼ ðxi; yi; hiÞ and viþ1 ¼ ðxiþ1; yiþ1; hiþ1Þ. We give the
expression for the valley constraint for the triangle with wingtip w, that is, (cid:2)viviþ1w. Let
w ¼ ðxw; yw; hwÞ, and let ^k ¼ ð0; 0; 1Þ.

Plane H is defined by vi, vi+1 and u, where u ¼ ðviþ1 (cid:2) viÞ · ^k þ vi (where · denotes the
vector cross product). The valley constraint states that the wingtip must be above or on H.
This is equivalent to the following condition on a 4 · 4 determinant, where the only
variables are hi, hi+1 and hw (because hu = hi):

(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)

1
1
1
1

xi
xiþ1
xu
xw

yi
yiþ1
yu
yw

hi
hiþ1
hi
hw

(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)

(cid:5) 0

The fact that this determinant yields a linear expression is easy to see by noting that all

variables (hj’s) are in one single column.

The flow direction involves only the two heights of the vertices incident to e, and
obviously specifies that the vertex to which the flow goes is at least as low as the other
vertex (namely, hi (cid:3) hiþ1). This constitutes the flow constraint.

It follows that given a TIN with n vertices, of which a subset of the edges are marked as
river edges with a flow direction, the problem of minimizing the total height change of all
vertices, while embedding the river edges as valley edges with the specified flow direction, is
a linear programming problem with O(n) variables and constraints.

Observe that the TIN where all vertices have the same height is a feasible solution,
regardless of which edges are specified to be river. In principle, we prefer strict inequalities
for the valley and flow constraints. If the river edges do not form a directed flow cycle and no
triangle of T incident to a river edge has its wingtip at a river vertex as well, then a solution exists
even with strict inequalities (although an optimal solution is not well-defined when we use strict
inequalities). We can simply lower all vertices that are endpoints of river edges to some very low
height that is the same for all of these vertices. This makes all river edges to be valley edges in
the strict sense (essentially, this is what stream burning does on a gridded DEM). Then we can
modify the heights slightly to ensure the flow direction in the strict sense as well.

3.2. Constraints for other terrain criteria
We analyze other terrain criteria that can be enforced using – hopefully linear – constraints
involving the heights of the vertices. The purpose is twofold. First, it may help to limit
artifacts like substantial slope change of triangles that can arise when we embed river edges
in the terrain. Second, it may be possible to ensure other useful characteristics of terrains with
respect to flow.

A summary of criteria and whether they can be represented by linear constraints is
presented in Table 1. The table also specifies whether the linear constraints for a terrain

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 622

M. van Kreveld and R.I. Silveira

Table 1. Terrain criteria that can be represented as linear constraints or not, and when such constraints
can make the LP infeasible.

Terrain criteria

Exclusions for feasibility

Model with
LP?

Valley and flow constraints for

Yes

None (flat terrain works)

rivers

Strict decline along rivers

Yes

Directed cycles and wingtips of river edges on
rivers
Wingtips of river edges on rivers

Valley edges in the strict sense Yes
Contiguous flow through rivers No (approx. yes) Non-river edge connections between rivers
Preserve edge and triangle type Yes (partially)
Equal elevation for lake vertices Yes
No
Maintain drainage basins
No
Local minima removal
Yes
Limit edge slope change
No (approx. yes)
Limit triangle slope change

None (flat terrain works)
None (flat terrain works)
n/a
n/a
Edges incident to river vertices
Triangles edge-or vertex-adjacent to rivers

criterion can make the LP infeasible (in combination with the valley and flow constraints).
Infeasible LPs are not useful because the purpose is to generate an improved terrain.
To ensure feasibility, we may need to adapt the terrain or exclude constraints for certain
edges and triangles.

3.2.1.

Strict decline along rivers

We can specify that every terrain edge that is part of a river has a decline (slope) in its flow
direction of at least some constant. This gives a linear inequality involving only the
elevations of the river vertices. Directed cycles of river edges will make the LP infeasible,
and possibly also triangles that are incident to a river edge and another river vertex (the
wingtip of a river edge meets the same river again). To deal with infeasibility of the second
type, we can add one Steiner point on an edge, splitting two triangles into two subtriangles
each.

3.2.2. Valley edges in the strict sense

To ensure that the flow direction on a triangle incident to a river edge is actually into the river
and not parallel to it, we would need a strict inequality in the valley constraint. We can
specify a decline (slope) of at least some constant in the direction perpendicular to the river
edge using a linear constraint. As long as wingtips of river edges do not lie on a river vertex,
this cannot lead to infeasibility.

Note that the constraint that the supporting plane of a triangle adjacent to a river edge
makes at least some constant angle with respect to the flattest supporting plane of e (denoted
H in Section 3.1) would not give a linear constraint.

3.2.3. Contiguous flow through rivers
Although standard drainage extraction methods for terrains will select all valley edges as part
of the drainage network, it is not guaranteed that the water in a river will flow from its source

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 International Journal of Geographical Information Science

623

Figure 5. Water can escape from a sequence of valley edges at a leak vertex.

to its outlet even if all river edges are valley and the flow direction is ensured. It can happen
that another, more steeply descending flow direction exists from a vertex of the river, see
Figure 5. Such a vertex is called a leak vertex. Because water is assumed to follow the
direction of the steepest descent, regardless of its volume or inertia, the water in the river will
leave its intended course, while at the next river edge, a ‘new’ river will start. This implies
that hydrologic analyses using accumulation of water will give incorrect results.

To ensure that water actually flows through the entire river from its source down, we
must guarantee that the river edge e down from a vertex v is steeper than any other edge or
segment over a triangle leaving v.

Unfortunately, bounding the steepest descent from a vertex outside the river is not
captured by a linear constraint, because it can be over a triangle interior. Although the
condition that one edge is steeper than another is easily captured with a linear constraint, this
is not the case for segments over triangles. Moreover, a triangle (cid:2)uvw may exist where vu!
and vw(cid:3)! descend mildly, whereas a segment from v to some point p on uw descends steeply,
see left of Figure 6. This can happen if the angle of (cid:2)uvw at v is close to p, and therefore,
p can be much closer to v than u or w. Requiring that the steepest sloping descent on a triangle
is at the most some value cannot be represented in a linear constraint. This is due to the fact
that length of the steepest descent edge of a triangle is a function of the heights of the
vertices, and the expression describing it is not linear.

However, we can give linear constraints that are only slightly stronger and do guarantee
that the river edge e down from v is the steepest one. Let s (cid:5) 0 be the downward slope of
e, whose value depends linearly on the elevations of its endpoints. Let t = (cid:2)uvw be some
triangle not incident to e, and let a be the angle at v (see Figure 6, right). We can require with
two linear constraints that the slope of vu! and vw(cid:3)! are at least s (cid:6) cos(a/2), which ensures that
the steepest slope occurring on t is at least s. To make such a constraint only slightly stronger
than needed, we must make a small. This is easily done by using imaginary points along uw
(see Figure 6, right), and using linear constraints for the imaginary edges to these imaginary
points as well. Instead of a, we use the much smaller angles between consecutive edges from
vu, the imaginary edges, and vw. By increasing the number of imaginary points, we decrease
the angle that we can use, and these constraints together become only slightly stronger than
needed to ensure steepest descent from v along e. We do not need to generate constraints for

w

v

p

w

w

u

u

α

v

e

u

v

e

Figure 6. Left: even when vu! and vw(cid:3)! descend mildly, the segment from v to p can descend steeply.
Right: using imaginary points on the opposite edge to ensure contiguous flow with mildly stronger
constraints.

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 624

M. van Kreveld and R.I. Silveira

the triangles incident to e, because the valley and flow constraints together ensure that no
segment on these triangles is steeper down than e.

3.2.4. Preserve edge and triangle type
Requiring that the flow situation of triangles and edges (see Figure 1) does not change can be
specified using linear constraints. For edges, we already showed that being valley is captured
by two linear constraints, and obviously the same is true for being ridge. Also, the property
for a transfluent edge that it receives flow from the one incident triangle and passes it on to
the other is captured by two linear constraints. Note, however, that the property of being a
transfluent edge is not strict enough: it leaves open which incident triangle is the one that
gives flow to the edge, leading to a disjunction. Similarly, we cannot use linear programming
to require that certain edges are not valley edges.

Some other related property we can maintain is the inflow and outflow edges incident to

any triangle, because these are the same constraints.

Third, edges on a terrain can be convex or reflex (or flat), which can be represented by a

linear constraint for each edge. Therefore, this property can also be maintained.

3.2.5. Elevation of lakes, drainage basins

Often the hydrologic data contains lakes in the river. We can easily specify equal elevation of
the vertices of the terrain that bound a lake, or specify an exact elevation of a lake when it is
known, using linear constraints.

Drainage basins (watersheds) are usually found by tracing paths of steepest ascent from
certain points in the terrain, in particular, from river junctions, passes, and local minima
(McAllister and Snoeyink 1999). Maintaining drainage basins is important for hydrological
correctness. However, it seems impossible to formulate the preservation of drainage basins
by linear constraints. We noted that we can maintain ridges, which are part of drainage basin
boundaries, using linear constraints. Furthermore, we do not expect drastic changes to
drainage basins when we embed rivers, because most changes made will be local to the
river edges, and drainage basin boundaries are typically not close to rivers.

3.2.6. Local minima removal

We cannot use a linear programming approach for spurious pit removal. To make sure that a
vertex is not a local minimum, we would have to require that at least one of the neighbors is
lower. These are linear constraints, but it is a disjunction instead of a conjunction so we
cannot use linear programming. Furthermore, local minima removal while minimizing total
elevation change can be shown to be NP-hard (Silveira and van Oostrum 2007).

3.2.7. Limit slope change

One method to avoid artifacts on a terrain caused by changing elevations of some vertices is
to limit the change in slope of the edges. This will cause a propagation of an elevation change
over a neighborhood, and therefore give a natural way to incorporate necessary elevation
changes to embed rivers. Restricting the change in slope of every edge to, say, 50% of the
original slope is easily captured in a linear constraint. However, enforcing the constraint for
river edges and edges incident to triangles that are incident to river edges can make the LP
infeasible. We also note that (nearly) flat edges must stay (nearly) flat with such conditions,

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 International Journal of Geographical Information Science

625

potentially causing propagation of a change in elevation over a large distance when a part of
the terrain is nearly flat. In any case, if this would cause unsatisfactory results, there are
various practical alternatives with which a change of slope of edges can be limited.

The slope on a triangle is the maximum slope of any segment on it. The aspect is the
compass direction in which the maximum downward slope is attained. Limiting the slope
change of a triangle cannot be done with a linear constraint, but we can limit the slope change
in a set of directions with a set of linear constraints, by which we limit the change in aspect as
well.

4. Experimental results
The approach described in the previous section was implemented and tested on real terrain
and river data. The data correspond to an area of British Columbia, with heights ranging
from 0 to 1600 m. We obtained a raster terrain model and a vector stream network from the
Canadian Council On Geomatics.2 The original terrain data were a 1:50,000 raster DEM,
whereas the water streams were covered at a 1:20,000 scale [very similar data were used by
McAllister and Snoeyink (1999) for extracting watersheds].

4.1. Preparation of the data
We converted the raster terrain into a TIN using ArcGIS, allowing a maximum vertical error
of 5 m with respect to the initial raster DEM. The stream network of the area contained 11
named rivers, of which 6 were selected for our tests, including the 3 longest ones.

Next, the rivers from the river dataset were matched up with the edges of the TIN. As
explained in Section 2, there are basically two ways to do this. For our experiments, we
decided to follow the second approach, that is snapping the river edges so that they use
terrain edges only.

The first step of the snapping algorithm consists of adding all intersections between the
river and terrain edges as new river vertices, and removing all the river vertices interior to
triangles. This results in a river where all edges are between the points on triangle edges.
Next, each river was snapped to the terrain edges by moving every intersection of a river
edge and a terrain edge to the nearest endpoint of the terrain edge. Finally, duplicated vertices
and loops were removed, and the course of the river was modified to avoid triangles with two
river edges. The latter was done by selecting the other (third) edge every time two edges of
one triangle were part of the river. This adaptation resolved many causes for infeasibility of
the resulting LP.

4.2. Experiments
We tested five different variants of our linear programming algorithm. VF3 includes only the
basic (weak) valley and flow constraints. VFR 10% adds a river decline constraint requiring
each river edge to have a slope of at least 10% of the average river slope. This is to avoid flat
river edges. The third variant, VFRS 10% adds a fourth constraint indicating that the slope of
nonflat terrain edges cannot change by more than 50%. To guarantee a feasible LP, edges
where one of the endpoints is a river vertex are excepted. Then we try two extreme additional
variants: VFR 1(cid:7) and VFRS 1(cid:7) are as before, but now we require each river edge to have a
slope equivalent to at least 1(cid:7). This is clearly a very strong constraint: its only purpose is to
understand how the algorithm propagates the change away from the river, in case a lot of
change is needed. For each river and variant, we generate a linear program that is solved

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 626

M. van Kreveld and R.I. Silveira

Table 2. Original terrain and river data used for the experiments.

River
name

Number of
terrain triangles

Number of
river edges

Number of river
edges wrong flow

Number of river
edges not valley

Goat
Khutze
Kiltuish
Kowesas
Paril
Triumph

37,713
216,648
146,091
244,598
20,960
20,382

140
407
281
321
89
104

32 (22.86%)
71 (17.44%)
54 (19.22%)
56 (17.45%)
12 (13.48%)
28 (26.92%)

47 (33.57%)
121 (29.73%)
78 (27.76%)
108 (33.64%)
24 (26.97%)
15 (14.42%)

River
length
(km)

13.49
34.16
22.42
38.07
8.85
11.37

using CPLEX 9.1. We analyze two aspects of the solutions: the total elevation change, and
the presence of certain artifacts.

The basic facts about the six rivers are shown in Table 2. It is worth noting the large
percentage of river edges that violate one of the two basic constraints in the original data.
Table 3 summarizes the change incurred by each variant. It can be seen that the first three
variants incur a relatively small change, on average less than 2 m (averaged over the vertices
with nonzero change).

If the only goal were to minimize the total elevation change, one would always choose VF,
except for the fact that it can create artifacts. This is shown in Table 4. In particular, VF creates
a large number of flat river edges. For the rivers studied, at least 40% of the edges become flat.
VFR 10% resolves these artifacts with only a small additional total elevation change. In all
cases, since the changes by VFR 10% were rather small and local, VFRS 10% produced

Table 3. Changes for each of the rivers by five variants of the algorithm.

Variant

Total abs.
change (m)

Average
change (m)

Total abs.
change (m)

No. of
vertices
moved

Average
change (m)

No. of
vertices
moved

Goat River

75
125
131
313
1,582
Kiltuish river

105
178
197
400
1,315
Paril river

34
58
64
115
343

VF
VFR 10%
VFRS 10%
VFR 1(cid:7)
VFRS 1(cid:7)

VF
VFR 10%
VFRS 10%
VFR 1(cid:7)
VFRS 1(cid:7)

VF
VFR 10%
VFRS 10%
VFR 1(cid:7)
VFRS 1(cid:7)

169
203
219
13,065
44,225

212
240
266
7,474
25,612

70
91
98
947
2,917

2.26
1.62
1.67
41.74
27.96

2.02
1.35
1.35
18.68
19.48

2.06
1.57
1.53
8.24
8.50

272
324
338
87,649
862,231

246
281
297
159,201
2,720,426

76
90
1083
92
1,137

Khutze River

181
320
334
933
12,938
Kowesas river

146
247
264
761
23,912
Triumph river

38
70
106
75
119

1.50
1.01
1.01
93.94
66.64

1.69
1.14
1.12
209.20
113.77

1.99
1.28
10.21
1.23
9.56

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 International Journal of Geographical Information Science

627

Table 4. Artifacts created for each of the rivers, by five variants of the algorithm.

Variant

# LM

# FE

# LV

# LM

# FE

# LV

— (Initial)
VF
VFR 10%
VFRS 10%
VFR 1(cid:7)
VFRS 1(cid:7)

— (Initial)
VF
VFR 10%
VFRS 10%
VFR 1(cid:7)
VFRS 1(cid:7)

— (Initial)
VF
VFR 10%
VFRS 10%
VFR 1(cid:7)
VFRS 1(cid:7)

142
130
112
110
178
121

298
289
242
238
313
251

86
87
71
70
82
75

Goat River
36
87
0
0
0
0

Kiltuish River
50
113
0
0
0
0

Paril River
18
38
0
0
0
0

32
7
10
7
61
12

55
3
4
2
65
8

19
6
4
3
13
5

642
622
547
547
775
607

465
456
408
407
615
477

76
74
57
61
57
57

Khutze River
116
216
0
0
0
0

Kowesas River
77
151
0
0
0
0

Triumph River
25
45
0
0
0
0

94
15
11
11
212
32

80
23
20
19
221
39

24
4
4
5
4
2

Abbreviations used: LM: local minima, FE: flat river edges, LV: leak vertices.

similar results. The importance of the slope preservation constraint becomes evident in the
more extreme case of VFR 1(cid:7). For the rivers tested, the least-cost way to create a river with 1(cid:7)
decline is always to create a dam around it. This is clearly visible in Figure 7. Such a solution is
unacceptable for practical applications, because the terrain shape suggests that there are two
more rivers, one on either side of the dam. The variant VFRS 1(cid:7) spreads the change toward the
sides of the river, producing a larger total change, but a more natural terrain because there is
still only one river in the valley. Table 4 also shows clearly that VFR 1(cid:7) increases the number of
artifacts considerably, whereas VFRS 1(cid:7) is able to prevent many of them.

From the experiments we can conclude that the first three variants give valid rivers with
relatively small and local elevation change. The extent of the change can be seen in Figure 8.
It is interesting to note that the number of local minima and leak vertices, which are not
addressed explicitly, often also decreases. The most extreme case of Figure 8, VFRS 1(cid:7), is
shown in more detail in Figure 9. We emphasize that this figure shows an extreme setting: the
purpose is to understand how the algorithm propagates the change toward the sides of the
valley, away from the river, in case a major change is needed. In most practical situations, we
expect that such major changes are not needed.

It is worth noting that the terrains used in these experiments are relatively steep. In
principle, our approach works also for relatively level terrains, but one can expect less good
results if the terrain is nearly flat.

Finally, even though the goal of our tests was not to assess the running time of the
methods, the methods appear suitable for real-world instances. For our largest instance
(Kowesas River), CPLEX took less than 50 seconds to compute the solution to VFRS 1(cid:7),
running on an Intel Core 2 Duo 2.66 GHz computer with 2 GB memory. The solution to the
more realistic VFRS 10% variant was computed in only 7 seconds.

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 628

M. van Kreveld and R.I. Silveira

Figure 7. Part of the Goat River after applying four variants of the algorithm. Changed parts are
shown in brown (light). From left to right, top to bottom: VF, VFR 10%, VFR 1(cid:7), VFRS 1(cid:7).

5. Conclusions and future work

We discussed correcting a TIN so that a known river follows valley edges: edges whose local
shape is like those of rivers. We formulated the problem of minimizing the total elevation
change to achieve this (and other terrain corrections) as an P, which makes it easy to
implement and fast in practice. Experiments show that the approach works very well.
Based on the exact criteria, vertices need be moved only a little, and the new terrain is
hydrologically more correct.

On a more theoretical note, it is important to mention that it is an open problem whether a
strongly polynomial-time algorithm for linear programming exists (see Megiddo (1987) for
an introduction to the topic). This motivated the authors to study a variant of the river
embedding problem in which only the elevations of the river vertices can be modified. This
case corresponds to the stream burning approach that has been studied for DEMs, mentioned
in the introduction. For this particular case we presented a strongly polynomial-time algo-
rithm that runs in O(n4) time, for a river with n vertices. Given that in practice linear
programming performs very fast, this result is only of theoretical interest, and the details
are omitted from this paper.

To obtain hydrologically correct terrains (with respect to the river network), spurious
local minima must be removed by other means than linear programming, and one must
ensure that the watershed boundaries are correct. Further research is needed to determine
how and when local minima are removed, and experiments may reveal whether a change in
watershed boundaries really occurs in terrain correction methods.

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 International Journal of Geographical Information Science

629

Figure 8. Extent of change for four different variants, on a portion of the Kowesas River. Shades of
green indicate change in triangle slope (the darker, the larger), shades of red show vertex elevation
change. Triangles whose vertices did not change are not shown. From left to right: VF, VFR 10%, VFR
1(cid:7), VFRS 1(cid:7).

Figure 9. Terrain view of a portion of the Kowesas River, corrected using the VFRS 1(cid:7) variant (the
portion shown corresponds to the rightmost figure in Figure 8). Left: original terrain. Right: terrain
computed by the VFRS 1(cid:7) variant, with changed areas colored.

Notes
1. See http://www-01.ibm.com/software/integration/optimization/cplex/.
2. Available at http://www.geobase.ca.
3. The letters in the names of the algorithms stand for: (V)alley, (F)low, (R)iver slope, and (S)lope of

terrain edges.

References
Aerts, J.C.J.H., Goodchild, M.F., and Heuvelink, G.B.M., 2003. Accounting for spatial uncertainty in

optimization with spatial decision support systems. Transactions in GIS, 7 (2), 211–230.

Aguilar, F.J., et al., 2006. The accuracy of grid digital elevation models linearly constructed from
scattered sample data. International Journal of Geographical Information Science, 20, 169–192.
Albani, M., et al., 2004. The choice of window size in approximating topographic surfaces from digital
elevation models. International Journal of Geographical Information Science, 18 (6), 577–593.
Bates, P.D. and Anderson, M.G., 1993. A two-dimensional finite-element model for river flow

inundation. Mathematical and Physical Sciences, 440, 481–491.

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 630

M. van Kreveld and R.I. Silveira

Berry, P.A.M., Hoogerboord, J.E., and Pinnock, R.A., 2000. Identification of common error signatures
in global digital elevation models based on satellite altimeter reference data. Physics and
Chemistry of the Earth, Part A: Solid Earth and Geodesy, 25 (1), 95–99.

Braun, J. and Sambridge, M., 1997. Modelling landscape evolution on geologic time scales: a new

method based on irregular spatial discretization. Basin Research, 9, 27–52.

Brunsdon, C. and Openshaw, S., 1993. Simulating the effects of error in GIS. In: P. Mather, ed.

Geographical information handling: research and applications. Chichester: Wiley.

Callow, J., Niel, K.V., and Boggs, G., 2007. How does modifying a DEM to reflect known hydrology

affect subsequent terrain analysis? Journal of Hydrology, 332, 30–39.

Chen, C.C. and Knoblock, C., 2008. Conflation of Geospatial data. In: S. Shekhar and H. Xiong, eds.

Encyclopedia of GIS. New York: Springer, 133–140.

Chen, C.C. Knoblock, C.A., and Shahabi, C., 2006. Automatically conflating road vector data with

orthoimagery. GeoInformatica, 10 (4), 495–530.

Chen, C.C., et al., 2004. Automatically and accurately conflating orthoimagery and street maps. In:
GIS ’04: Proceedings of the 12th annual ACM international workshop on Geographic information
systems, Washington DC, USA 12–13 November 2004. New York, NY: ACM, 47–56.

Chew, L.P., 1989. Constrained Delaunay triangulations. Algorithmica, 4, 97–108.
Chrisman, N., 1989. Error in categorical maps: testing versus simulation. In: Proceedings AUTO-CARTO 9,
2–9 April 1989, Baltimore, Maryland (Falls Church, Virginia: American Society for Photogrammetry
and Remote Sensing and American Congress on Surveying and Mapping), 521–529.

Cobby, D.M., et al., 2003. Two-dimensional hydraulic flood modelling using a finite-element mesh
decomposed according to vegetation and topographic features derived from airborne scanning
laser altimetry. Hydrological Processes, 17, 1979–2000.

Dare, P. and Dowman, I., 2001. An improved model for automatic feature-based registration of SAR
and SPOT images. ISPRS Journal of Photogrammetry and Remote Sensing, 56 (1), 13–28.
de Berg, M., et al., 1996. The complexity of rivers in triangulated terrains. In: Proceedings of the 8th
Canadian conference on computational geometry, 12–15 August 1996, Ottawa, Canada (Ottawa:
Carlton University Press) 325–330.

Deutsch, C. and Journel, A., 1998. GSLIB: Geostatistical software library and user’s guide. 2nd ed.

New York: Oxford University Press.

Eidenbenz, C., Kser, C., and Baltsavias, E., 2000. Atomi - automated reconstruction of topographic
International Archives of
images using vectorized map information.

objects from aerial
Photogrammetry and Remote Sensing, 33, 462–471.

Frank, A., Palmer, B., and Robinson, V., 1986. Formal methods for the accurate definition of some
fundamental terms in physical geography. In: Proceedings 2nd international Symposium on
spatial data handling, 6–10 July 1986, Seattle, USA (Williamsville, NY:
International
Geographical Union, Commission on Geographical Data Sensing and Processing) 583–599.
Goodchild, M.F., Sun, G., and Yang, S., 1992. Development and test of an error model for categorical

data. International Journal of Geographical Information Science, 6, 87–103.

Hellweger, R., 1996. Agree.aml [online]. Center for Research in Water Resources, The University of
Texas at Austin. Available from: http://www.ce.utexas.edu/prof/maidment/gishydro/ferdi/
research/agree/agree.htm [Accessed 4 May 2010].

Heuvelink, G., 1998. Error propagation in environmental modelling with GIS. London: Taylor &

Francis.

Hutchinson, M., 1988. Calculation of hydrologically sound digital elevation models. In: Proceedings
of the 3rd international symposium on spatial data handling, 17–19 August 1988, Sydney,
Australia. (Ohio: International Geographical Union, Commission on Geographical Data Sensing
and Processing, Dept. of Geography, The Ohio State University) 117–133.

Hutchinson, M., 1989. A new procedure for gridding elevation and streamline data with automatic

removal of spurious pits. Journal of Hydrology, 106, 211–232.

Hutchinson, M., 1994. ANUDEM version 5.1. [online]. The Australian National University, Canberra,
from http://fennerschool.anu.edu.au/publications/software/anudem.php

Australia. Available
[Accessed 4 May 2010].

Ivanov, V.Y., et al., 2004a. Catchment hydrologic response with a fully distributed triangulated

irregular network model. Water Resources Research, 40, W11102.

Ivanov, V.Y., et al., 2004b. Preserving high-resolution surface and rainfall data in operational-scale
basin hydrology: a fully-distributed physically-based approach. Journal of Hydrology, 298, 80111.

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 International Journal of Geographical Information Science

631

Jenson, S. and Dominique, J., 1988. Extracting topographic structure from digital elevation data for
geographic information systems. Photogrammatic Engineering and Remote Sensing, 54,
1593–1600.

Kyriakidis, P.C., Shortridge, A.M., and Goodchild, M.F., 1999. Geostatistics for conflation and
International Journal of Geographical

accuracy assessment of digital elevation models.
Information Science, 13 (7), 677–707.

Maidment, D., 1993. GIS and hydrologic modeling. In: M. Goodchild, B. Parks, and L. Steyaert, eds.

Environmental modeling with GIS. New York: Oxford University Press, 147–167.

Martz, L. and Garbrecht, J., 1999. An outlet breaching algorithm for the treatment of closed depres-

sions in a raster DEM. Computers and Geosciences, 25, 835–844.

Maune, D., ed., 2001. Digital elevation model technologies and applications: the DEM users manual.

Bethesda, MD: The American Society for Photogrammetry and Remote Sensing.

McAllister, M. and Snoeyink, J., 1999. Extracting consistent watersheds from digital river and
elevation data. In: Proceedings of the ASPRS / ACSM annual conference, 17–21 May 1999
Oregon (Bethesda, MD: American Society of Photogrammetry and Remote Sensing), CD-ROM.
Megiddo, N., 1987. On the complexity of linear programming. In: T.F. Bewley, ed. Advances in
economic theory—the fifth world Congress. Econometric Society Monographs. Vol. 12.
Cambridge, UK: Cambridge University Press, 225–258.

Nelson, E., Jones, N., and Miller, W., 1994. Algorithm for precise drainage-basin delineation. Journal

Hydraulic Engineering, 120, 298–312.

O’Callaghan, F. and Mark, D.M., 1984. The extraction of drainage networks from digital elevation

data. Computer Vision, Graphics, and Image Process, 28, 323–344.

Qu, Y. and Duffy, C.J., 2007. A semidiscrete finite volume formulation for multiprocess watershed

simulation. Water Resources Research, 43, W08419.

Saalfeld, A., 1988. Conflation: automated map compilation. International Journal of Geographical

Information Science, 2, 217–228.

Silveira, R. and van Oostrum, R., 2007. Flooding countries and destroying dams. In: Proceedings of the
10th workshop on algorithms and data structures. Lecture Notes in Computer Science. Vol. 4619.
Halifax, Canada, 15–17 August 2007. Berlin/Heidelberg: Springer-Verlag, 227–238.

Theobald, D. and Goodchild, M., 1990. Artifacts of TIN-based surface flow modelling. In:

Proceedings of GIS/LIS, Anaheim ,CA, 7–10 November 1990. 955–964.

Tucker, G.E., et al., 2001. An object-oriented framework for distributed hydrologic and geomorphic

modeling using triangulated irregular networks. Computers & Geosciences, 27, 959973.

Vasquez, J.A., Steffler, P.M., and Millar, R.G., 2008. Modeling bed changes in meandering rivers using

triangular finite elements. Journal of Hydraulic Engineering, 134, 1348–1352.

Vivoni, E.R., et al., 2004. Generation of triangulated irregular networks based on hydrological

similarity. Journal of Hydrologic Engineering, 9, 288–302.

Vivoni, E.R., et al., 2005. Embedding landscape processes into triangulated terrain models.

International Journal of Geographical Information Science, 19, 429 457.

Walter, V. and Fritsch, D., 1999. Matching spatial data sets: a statistical approach. International

Journal of Geographical Information Science, 13 (29), 445–473.

Wang, L.W. and Trinder, J.C., 1999. Analysis and evaluation of the DEM derived from TOPSAR

airborne interferometric SAR system. Australian Surveyor, 44 (2), 174–182.

Ware, J.M. and Jones, C.B., 1998. Matching and aligning features in overlayed coverages. In: GIS ’98:
Proceedings of the 6th ACM international symposium on advances in geographic information
systems, Washington, DC, US, 6–7 November 1998. New York, NY: ACM, 28–33.

Wechsler, S.P., 2007. Uncertainties associated with digital elevation models for hydrologic applica-

tions: a review. Hydrology and Earth System Sciences, 11 (4), 1481–1500.

Yu, S., van Kreveld, M., and Snoeyink, J., 1997. Drainage queries in TINs: from local to global and
back again. In: M. Kraak and M. Molenaar, eds. Advances in GIS research II: Proceedings of the
7th international symposium on spatial data handling, Delft, the Netherlands, 12–16 August 1996.
London: Taylor & Francis, 829–842.

Downloaded by [UAA/APU Consortium Library] at 11:00 14 October 2014 