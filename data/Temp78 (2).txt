Geoinformatica
DOI 10.1007/s10707-013-0186-y

Modeling vague spatial data warehouses
using the VSCube conceptual model

Thiago Luís Lopes Siqueira &
Cristina Dutra de Aguiar Ciferri &
Valéria Cesário Times &
Ricardo Rodrigues Ciferri

Received: 15 October 2012 / Revised: 10 July 2013 /Accepted: 23 July 2013
# Springer Science+Business Media New York 2014

Abstract Although many real world phenomena are vague and characterized by having
uncertain location or vague shape, existing spatial data warehouse models do not support
spatial vagueness and then cannot properly represent these phenomena. In this paper, we
propose the VSCube conceptual model to represent and manipulate shape vagueness in spatial
data warehouses, allowing the analysis of business scores related to vague spatial data, and
therefore improving the decision-making process. Our VSCube conceptual model is based on
the cube metaphor and supports geometric shapes and the corresponding membership values,
thus providing more expressiveness to represent vague spatial data. We also define vague
spatial aggregation functions (e.g. vague spatial union) and vague spatial predicates to enable
vague SOLAP queries (e.g. intersection range queries). Finally, we introduce the concept of
vague SOLAP and its operations (e.g. drill-down and roll-up). We demonstrate the applicability
of our model by describing an application concerning pest control in agriculture and by
discussing the reuse of existing models in the VSCube conceptual model.

Keywords Spatial data warehouse . Conceptual modeling . Spatial vagueness .
Vague spatial object

T. L. L. Siqueira
São Paulo Federal Institute of Education, Science and Technology in São Carlos, IFSP, 13.565-905 São
Carlos, SP, Brazil
e-mail: prof.thiago@ifsp.edu.br
T. L. L. Siqueira : R. R. Ciferri (*)
Department of Computer Science, Federal University of São Carlos, UFSCar, 13.565-905 São Carlos,
SP, Brazil
e-mail: ciferri.ricardo@icloud.com

C. D. A. Ciferri
Department of Computer Science, University of São Paulo in São Carlos, USP, 13.560-970 São Carlos,
SP, Brazil
e-mail: cristina.ciferri@icloud.com

V. C. Times
Informatics Center, Federal University of Pernambuco, UFPE, Recife, 50.670-901 Recife, PE, Brazil
e-mail: vct@cin.ufpe.br

Geoinformatica

1 Introduction

Decision-making support has gained the attention of researchers of Geographic Information
System (GIS), Data Warehouse (DW) and Online Analytical Processing (OLAP). Spatial
analysis together with multidimensional analytical queries over huge historical data sets
have been provided by tools that query a Spatial Data Warehouse (SDW) [1, 6, 23, 33, 39],
which is a subject-oriented, integrated, time-variant, voluminous, non-volatile and multidi-
mensional database that stores spatial data (i.e. vector geometries) and descriptive attributes
(i.e. conventional data). A fact denotes the scores of business activities through numeric
measures or spatial measures, while dimensions hold conventional attributes and spatial
attributes that describe the values of the measures. Hierarchies associate attributes of higher
and lower granularity in a given dimension. Such association is possibly described by a
spatial relationship (e.g. contains).

The Spatial Online Analytical Processing (SOLAP) provides fast, flexible, and multidi-
mensional ways for spatial data analysis over SDW [1, 6, 23, 24, 30, 35]. Furthermore,
SOLAP tools provide multidimensional queries extended with spatial predicates that run
over the SDW to support the decision-making process. Commonly, range queries are
submitted to the SDW to assess spatial attributes and select spatial objects that satisfy a
given predicate (e.g. intersection, containment and enclosure) with respect to an ad hoc
spatial query window [26, 35]. In addition, spatial data are frequently aggregated according
to an aggregation function, e.g. union [5, 39].

Existing SDW and SOLAP applications mainly address phenomena represented by crisp
spatial data that are assumed as having exact locations and exact boundaries that were
accurately surveyed [1, 6, 23, 24, 30, 32, 35]. On the other hand, plenty of real world
phenomena are characterized by spatial vagueness, as soil
types, habitats of species,
agriculture, geology, climatology and archaeology. The spatial vagueness is one kind of
spatial data imperfection concerning the difficulty of distinguishing an object shape from its
neighborhood [2], since the concepts used to describe the spatial information are not defined
precisely [45]. As a result, it is not possible to be sure if the parts of a spatial object belong
completely or partially to it or not [28].

Spatial vagueness is sub classified in location vagueness and shape vagueness [19]. The
location vagueness concerns spatial objects with uncertainty about their locations, for both
spatial objects delimited by a sharp line and spatial objects surrounded by a broad boundary
[19]. On the other hand, the shape vagueness occurs for spatial objects containing certain
parts in addition to uncertain ones [18, 28]. In addition to tackle regions with broad
boundaries [11, 13], shape vagueness influences the broadness of a line interior, of a line
boundary, or both a line interior and boundary [3, 4, 12, 31]. Also, temporality is another
facet that may affect the shape of a spatial object [19].

The membership degree to a given vague concept cannot be computed using a binary
logic (i.e. true or false). Therefore, a 3-valued logic (i.e. true, maybe or false) is adopted by
exact models that reuse and adapt the research legacy for crisp spatial data [3, 4, 8, 11, 13,
28], while the fuzzy logic is adopted by fuzzy models to express membership degrees [8, 15,
22, 25, 34, 40]. The infeasibility of storing every element of a fuzzy set motivated the
development of data structures for fuzzy models [15, 20, 43, 44], which hold geometric
features (as exact models) and their corresponding membership values (as fuzzy models).

To the best of our knowledge, there are not in the literature approaches that address spatial
vagueness and conceptual modeling of SDW in the same setting. On the one hand, exact and
fuzzy models do not provide multidimensional analysis together with spatial analysis, which
are essential in SDWs. On the other hand, existing conceptual models for SDW do not

Geoinformatica

address spatial vagueness. Differently from [1], we argue that spatial vagueness is not only
related to data cleansing and integration issues for certain natural phenomena whose
indeterminate boundaries need to be re-measured at different epochs. Indeed, spatial vague-
ness must be firstly addressed by a conceptual model and afterwards by a logical model to
enable a full multidimensional and spatial analysis over vague spatial data in SDW.
Moreover, current SOLAP operations (e.g. drill-down and roll-up) do not explore spatial
vagueness.

The aforementioned issues have motivated us to develop the Vague Spatial Cube
(VSCube) conceptual model to enable the modeling of SDWs and the representation of
shape vagueness for both simple and complex spatial objects, considering that the shapes of
the vague spatial objects do not change through time. We use the cube metaphor to have
independence of any logical or physical implementation details [10]. As a result, the
designer is able to associate shape vagueness to dimensions or facts, hierarchically represent
and organize multidimensional and vague spatial data and perform multidimensional queries
extended with spatial predicates.

The major characteristics of our model are described as follows.

& Regarding SDW, it comprises attribute types, hierarchies and their categories, dimen-
sions, measures, fact, vague spatial fact, data cube and lattice of cuboids to manipulate
conventional data, non-geometric spatial data, crisp spatial data and, mainly, vague
spatial data.

& Concerning shape vagueness, it supports vague spatial data modeled according to exact
models (i.e. geometric shapes) and represented by data structures that approximate vague
spatial data modeled according to fuzzy models (i.e. geometric shapes and the corre-
sponding membership values).
In the context of spatial analysis and GIS, it defines vague spatial aggregation functions
(vague spatial union, vague spatial intersection and vague spatial difference) and vague
spatial predicates (spatial range query and vague spatial range query) that specify how to
manipulate vague spatial data in queries.

& Regarding SOLAP, it defines vague SOLAP and its operations (slice-and-dice, drill-

&

down, roll-up and pivot).

As a result, our VSCube conceptual model allows the analysis of business scores related
to vague spatial data to improve the decision-making process. It does not impose the use of
one specific exact model to design the location and shape of the studied phenomenon.
Indeed, it allows the domain of a vague spatial attribute to hold instances modeled according
to any exact model. Rather than supporting only the geometric shapes (as exact models), our
VSCube conceptual model supports geometric shapes and the corresponding membership
values. Consequently, it provides more expressiveness to represent vague spatial data than
strictly exact models. The vague spatial aggregation functions and vague spatial predicates
provided by the VSCube conceptual model explore these characteristics and comply with
requirements of queries in SDWs.

1.1 Running example

Together with the definition of the VSCube conceptual model, we describe an application
concerning pest control in agriculture to illustrate the applicability of our model. Our
that neglect shape
example was based on real problems that have been tackled, but
vagueness. Crops are identified from imagery as shown in Fig. 1a. In the dashed rectangle

Geoinformatica

 belongs to a crop
may belong to a crop
– belongs to an irrigation channel 

(a) Imagery of a real rural area

(b) Crops and irrigation channels

Fig. 1 Objects describing crisp shapes and vague shapes. a Imagery of a real rural area. b Crops and irrigation
channels

of Fig. 1a, one crop is identified as being crisp in Fig. 1b: C6. On the other hand, all other
crops intrinsically have a vague shape in Fig. 1b, as the crop C1 that has two parts that
belong to it in black and one part that may belong to it in gray, and the crop C5 that has one
part that belongs to it in black and four parts that may belong to it in gray.

Pesticides as herbicides, insecticides, fungicides and defoliants are applied aerially to
crops, with some fraction intercepted by foliage and some fraction reaching the soil.
Methods of application vary from ground equipment to aircraft, and the material can be
applied as solids, dispersions, emulsions or solutions [21]. It is noteworthy that a pesticide is
not applied uniformly over the extent, due to variable spraying according to the weed area,
real-time sensory and fuzzy control used to regulate dose of drugs [36]. In addition,
dissipation, plant transpiration and runoff influence the distribution of pesticide in a given
extent [27]. For instance, the crop C1 and the area A1 where a given pesticide was applied to,
shown in Fig. 2a, indicate that the possibility of application is higher in the darker gradient
than in the brighter gradient.

In addition to estimate where pesticides were applied, another relevant measure in the
study is how many tons of pesticides were applied. For instance, considering that 0.3 t were
applied over A1, some portions of pesticides were applied over parts of crops, as follows:
0.25 t were applied over the part C11 that certainly belongs to C1, as shown in Fig. 2b; no
pesticide was applied over the part C12 that certainly belongs to C1; and 0.05 t were applied
over the part C13 that may belong to C1, in the extent circumscribed by a dashed line in

(a) A1 over C1

(b) A1 over C11

(c) A1 over C13

(d) Subsets of A1

Fig. 2 An applied area of pesticide A1 over the crop C1. a A1 over C1. b A1 over C11. c A1 over C13. d
Subsets of A1

Geoinformatica

Fig. 2c. A discrete representation of the gradient of an applied area is obtained as subsets
having a possibility of application, according to Fig. 2d, for A1 and possibilities of 100 %,
80 %, 50 % and 30 %. Such representation use geometric shapes and the corresponding
possibility (membership) values.

Not only crops and areas of pesticide application are considered in the study.
Artificial irrigation channels assist the growing of crops and flood areas may occur
in their interiors, determining shape vagueness. Also, each agricultural land maintains
several crops and has broad boundaries, also characterizing shape vagueness. Aiming
at observing pesticide use and water quality, watersheds are assumed as crisp regions
and contain several agricultural
lands. The date of pesticide application and the
pesticide characteristics are also relevant.

1.2 Paper organization

This paper is organized as follows. Section 2 summarizes the theoretical foundation, while
Section 3 surveys related work. Sections 4 to 9 describe our VSCube conceptual model as
follows. Section 4 details the attribute types of the VSCube conceptual model and highlights
the vague spatial attribute, Section 5 focuses on hierarchies that characterize how instances
of attributes are associated independently from their types, Section 6 contextualizes vague
spatial data in the multidimensional cube metaphor, Section 7 details aggregation functions
for vague spatial data, Section 8 describes vague spatial predicates and Section 9 introduces
the vague spatial OLAP. Further, Section 10 discusses how existing models for spatial
vagueness can be reused in our VSCube conceptual model. Finally, Section 11 concludes
the paper and addresses future work.

2 Spatial vagueness

2.1 Exact models

In this section, we summarize the concepts that are essential to understand this paper. Section 2.1
surveys exact models, Section 2.2 addresses fuzzy models and Section 2.3 tackles discrete data
structures for fuzzy models.

Exact models address shape vagueness reusing well-known crisp spatial data models and
extend the existing theory of spatial data types and spatial predicates [3, 4, 11, 13, 28]. They
are based on a 3-valued logic, i.e. true, maybe or false, which separates the space where a
given phenomenon certainly occurs, the space where the phenomenon maybe occurs, and
the space where the phenomenon definitely does not occur, respectively. Concerning exact
models, all the locations where the phenomenon maybe occurs have the same degree of
membership to the phenomenon, and gradual transitions are not supported. In this section,
we summarize the Qualitative Min-Max Model (QMM) [3, 4] and the Vague Spatial Algebra
(VASA) [28].

QMM extends the Broad Boundaries [11] and the Egg-Yolk [13] exact models that are
specific for regions with broad boundaries. It defines a spatial object with vague shape as a
pair of crisp complex spatial objects, namely the minimal extent and the maximal extent. The
former refers to the space where a given phenomenon certainly occurs. The latter encom-
passes the minimal extent and includes the vague part of the object. If a point p belongs to
the minimal extent, then it also belongs to the object. However, if p belongs strictly to the

Geoinformatica

maximal extent, then maybe p belongs to the object. Finally, if p does not belong to the
minimal extent and neither to the maximal extent, then p does not belong to the object. A
vague point is represented by a crisp region (Fig. 3a). A vague line may have the interior
represented by a crisp region (Fig. 3b). Finally, a vague region is composed of a pair of crisp
regions, such that the maximal extent can be equal to, contain, or cover the minimal extent
(Fig. 3c). Multipoints, multilines or multiregions are not supported.

VASA defines a spatial object with vague shape as a pair of crisp complex spatial objects: the
kernel and the conjecture. The kernel refers to the space where a given phenomenon certainly
occurs, while the conjecture refers to the space where the phenomenon maybe occurs. The main
differences between VASA and QMM are as follows. In VASA, the interior of the kernel is disjoint
from the interior of the conjecture; also, the kernel and the conjecture necessarily belong to the
same data type. Furthermore, VASA supports multipoints, multilines and multiregions (Fig. 3d–f).
Figure 3 clearly illustrates the differences among the data types of QMM and VASA. Note that the
minimal extent and the kernel are black, while the maximal extent and the conjecture are gray or
dashed. For instance, the crops depicted in Fig. 1b can be modeled according to QMM or VASA.

2.2 Fuzzy models

Fuzzy models are based on the fuzzy set theory and therefore, fuzzy spatial data types
addressing shape vagueness are formal definitions of fuzzy sets in R2. In contrast with the 3-
valued logic of the exact models, fuzzy models determine membership values in [0,1] that
quantitatively determine the membership grade of the element p to a given fuzzy set [15, 22,
34, 40, 43]. Intrinsically, there are gradual transitions and no sharp boundaries. Figure 4
shows instances of fuzzy spatial data types according to [15, 34], considering that the
membership value is higher at the darker gradient, and lower at the brighter gradient.

The fuzzy point defined in [34] is continuous and has a set of membership values, which vary
due to the proximity of a given reference point (Fig. 4a). On the other hand, according to [15] a
fuzzy point is a site with a known location but with a single uncertain membership grade to a given
phenomenon, while a fuzzy multipoint is a finite collection of disjoint fuzzy points (Fig. 4d).

A fuzzy line is a continuous curve with smooth transitions of membership grades between
neighboring points of the line, and has an exact location but uncertain extent (Fig. 4b) [15,
34]. The fuzzy multiline is a finite collection of fuzzy lines. They necessarily intersect

(a) Vague point

(b) Vague line

(c) Vague region

(d) Vague point and 
vague multipoint 

(e) Vague line and 
vague multiline

(f) Vague region and 
vague multiregion 

Fig. 3 Instances of vague spatial data types according to exact models [3, 4, 28]. a Vague point [3, 4]. b
Vague line [3, 4]. c Vague region [3, 4]. d Vague point and vague multipoint [28]. e Vague line and vague
multiline [28]. f Vague region and vague multiregion [28]

Geoinformatica

(a) Fuzzy point 

(b) Fuzzy line 

(c) Fuzzy regions 

(d) Fuzzy point and fuzzy 

multipoint 

(e) Fuzzy multilines 

(f) Fuzzy multiregion 

Fig. 4 Instances of vague spatial data types according to fuzzy models [15, 34]. a Fuzzy point [34]. b Fuzzy
line [15, 34]. c Fuzzy regions [15, 34]. d Fuzzy point and fuzzy multipoint [15]. e Fuzzy multilines [15, 34]. f
Fuzzy multiregion [15, 34]

according to [34] (Fig. 4e, left), or do not necessarily intersect according to [14] (Fig. 4e,
right).

A fuzzy region is a set of neighbor points whose membership values vary gradually and
smoothly [14, 34, 40]. Therefore, the fuzzy region is a fuzzy set without irregularities, i.e. it
does not have many abrupt variations of the membership values and does not hold isolated
points or lines (Fig. 4c). The area where a pesticide was applied, shown in Fig. 2a, is a fuzzy
region. The fuzzy multiregion is a set of disjoint fuzzy regions [15] (Fig. 4f).

2.3 Data structures for fuzzy models

Fuzzy models are commonly implemented by data structures such as bitmap [44], plateau
region [20], triangulated irregular network [14, 43] and lines with gradual transition [14].
The bitmap is a raster approach that distributes a finite number of cells over a grid and
associates several fuzzy points to one cell. Each cell covers a limited extent and holds one
membership value. Cells may be rectangular or hexagonal. Figure 5a depicts a bitmap where
membership values are shown for each cell.

Conversely, a plateau region is a finite set of crisp adjacent or disjoint regions with
different membership values. These regions are obtained by partitioning a given fuzzy
region in a finite set of α-cuts. Figure 5b depicts a plateau region where membership values
are shown for each region.

A triangulated irregular network (TIN) is commonly used to model fuzzy regions by
creating non-overlapping triangles whose vertices hold membership values. The member-
ship value of any point inside a triangle is obtained by a linear interpolation considering the
membership values of the vertices, differently from bitmaps and plateau regions that store
precomputed membership values. Figure 5c depicts a TIN whose triangles were omitted
where the membership value is equal to 1. The vertices and the corresponding membership
values are shown for one of the triangles. Note that a TIN provides a continuous surface,
while bitmaps and plateau regions are merely discrete models.

Fuzzy lines are represented by lines with gradual transition, by applying a function over
membership values of two consecutive vertices of a linear feature. The line is a sequence of
triples 〈(x1,y1,mv1),…(xn,yn,mvn)〉 each triple providing the x, y coordinates to locate a point
in the line with the corresponding membership value mv. Consecutive points are interpolated
to approximate the line tracing and its membership values. Figure 5d depicts a line with

Geoinformatica

1.0
0.8
0.6
0.4
0.2
0.0

(a) Bitmap 

(b) Plateau region 

1.00       

almost 0

consecutive points

approximated point

(c) TIN 

(d) Line with gradual transition 

Fig. 5 Data structures. a Bitmap [43]. b Plateau region [20]. c TIN [43]. d Line with gradual transition

gradual transition holding four consecutive points and their membership values, the approx-
imate tracing of the line and one highlighted approximated point whose membership value is
omitted, but given by a linear interpolation with the vertices (x2,y2,mv2) and (x3,y3,mv3).

3 Related work

In this section, we discuss existing work in the literature that focus on exact and fuzzy
models, data structures for fuzzy models, conceptual and logical design of SDWs and some
existent solutions related to our running example. We also highlight the differentials of our
work.

Exact models [3, 4, 11–13, 28], fuzzy models [15, 34, 40] and data structures for fuzzy
models [14, 20, 43, 44] focus on the definition of vague spatial data types, operations and
relationships. However, they do not address conventional data and neither concepts as
hierarchies of attributes, dimensions, measures, facts, data cube, lattice of cuboids, aggre-
gation, predicates, and multidimensional queries extended with spatial predicates, which are
essential for SDWs and addressed by our VSCube conceptual model.

Although existing exact models have incompatible vague spatial data types, our VSCube
conceptual model allows the representation of vague spatial data according to any exact
model as it supports two collections of geometric shapes to represent the parts of a vague
spatial object (i.e. certitude and dubiety). Fuzzy models are more sophisticated than exact

Geoinformatica

models, since the former describe phenomena with membership functions and fuzzy sets in
R2, while the latter use a 3-valued logic and crisp geometries. In order to enable the
manipulation of vague spatial data represented according to fuzzy models in the SDW, we
designed our VSCube conceptual model to support membership values associated to the
geometric shapes, similarly to existing data structures for fuzzy models, thus providing more
expressiveness to represent vague spatial data. Then, we avoid the high computation cost to
process fuzzy sets containing infinite locations over huge volumes of spatial data. Also, our
VSCube conceptual model, however, is not limited to regions with vague shape, as [20].

Regarding the conceptual design of SDW, existing spatial multidimensional models
define dimensions, hierarchies of attributes, fact, cube and SOLAP operations, and focus
only on crisp spatial data [6, 23, 32, 39]. On the other hand, our VSCube conceptual model
addresses shape vagueness and provides a set of components to introduce the vague SOLAP.
Other multidimensional models represent spatial data as continuous fields using mathemat-
ical surfaces and polynomial functions, mapping each point of the geometry to an alphanu-
meric value [5, 42]. Conversely,
is based on objects,
describes the phenomenon using geometric features and their membership values and
assumes that some instances of a vague spatial attribute might be crisp.

the VSCube conceptual model

As for the logical design of SDW, in [30] the authors reuse the UML class diagram and
provide a profile to enable the specification of multidimensional models comprising
spatial attributes as geometries. However, vague spatial data are not addressed. Further-
more, a framework for integrity constraints using the Object Constraint Language to
improve spatial data quality in SDW is introduced in [7]. Although inter level integrity
constraints involve members (instances) of at least two levels of granularity and specify
topological relationships among these members, such constraints also do not address
different types of attributes as the hierarchies of the VSCube conceptual model defined
in Section 5.

Also concerning the logical design of SDW, the Fuzzy SDW [29] drops geometric
attributes, replacing them by precomputed spatial relationships among all members of
distinct dimensions. For instance, if counties and evacuation routes are spatial dimension
tables holding homonymous spatial attributes, the latter are dropped as the distance between
each county and each evacuation route is computed and stored into a dimension table called
distance, whose rows maintain a key value and the distance between a county and an
evacuation route. The dimension table is then referenced by the fact table. The Fuzzy
SDW addresses shape vagueness of regions using the fuzzy minimum bounding rectangle,
i.e. the minimum circumscribing rectangle and a set of inner rectangles, all of them with a
membership degree to the region. Conversely, the VSCube conceptual model addresses the
conceptual design, does not drop geometric attributes because they are essential to evaluate
spatial predicates on the fly, and supports not only vague regions, but also vague points and
vague lines.

Recently, we tackled the logical design of SDW to store vague spatial data [37], but did
not address the conceptual level and neither the cube metaphor (which is independent of
logical or physical implementations). We also did not define specific predicates or aggrega-
tion functions to manipulate the vague spatial data in queries. Finally, at physical level, we
assessed the performance of vague spatial data stored in SDW in [38]. However, we did not
focus on the conceptual design.

Our running example described in Section 1.1 was based on real problems that have been
tackled, but that neglect shape vagueness, as follows. The U.S. Geological Survey [41]
developed a method to evaluate the relation between water quality and pesticide use in the
USA by combining state-level information on pesticide use rates, county level information

Geoinformatica

field crops as corn, wheat, soybeans, cotton, potatoes, peanuts,

on harvested crop acreage and diverse hydrologic conditions (watersheds) that concentrate
about 60 % of USA’s water resources. Data describing these environmental characteristics
were collected from a variety of sources, and consequently, range in spatial scale,
coverage, and date of compilation. A report was produced and contained the average
annual pesticide use, the total amount of pesticides applied and the corresponding area
treated. The report considered 208 compounds of pesticides that are applied to crops,
for major
rice,
sorghum and tobacco. For example, relations between water quality and pesticide
applications to irrigated corn grown on sandy soils in a particular area within a study
unit are determined, and then these relations can be directly compared with other
areas of the country that share similar physical characteristics and crop management
practices. Thematic maps were produced using spatial and tabular data to further
refine both the estimates of pesticide use and their distribution at state and regional
levels. A similar approach is given by the California Department of Public Health and
its Agricultural Pesticide Use Web Mapping Service [9].

However, existing solutions as those previously described mainly utilize GIS and strictly
sharp boundaries. The shape vagueness of soil types, crops and pesticide applications were
merely eliminated and then an inherent property of them was lost. Possibly, it was due to the
absence of a technology to allow storing and manipulating spatial objects with vague shapes
[2]. In addition, no data inform the user about the truth degree of the estimations, e.g. it does
not inform how many tons of pesticides were applied over the broad boundary of a given
extent. This way not only results in waste of pesticides, but also pollutes the environment
[36]. The USGS’s method also did not address SDW, despite it: (i) integrated spatial and
non-spatial data from different sources; (ii) generated aggregated measurements for different
spatial levels of granularity (national and state); and (iii) aided decision-making analysis
regarding water quality and pesticide use.

4 The vague spatial attribute

In this section, we introduce the attribute types of the VSCube conceptual model and
highlight the vague spatial attribute.

Definition 1 A conventional attribute is an attribute whose domain has only numeric,
alphanumeric or date values and, therefore, has a total order relation.

Example 1 The attributes pestname, pestkey and date are conventional attributes and refer to
a name of pesticide, an identifier for a pesticide and a date, respectively. The domain of
pestname, Dom(pestname), is alphanumeric, e.g. {‘P0910’, ‘P0911’, …}, the domain of
pestkey, Dom(pestkey), is numeric, e.g. {122, 123, 124, …}, and the domain of date,
Dom(date) is the set of valid dates, e.g. {‘2012-10-14’, ‘2012-09-16’, …}.

Definition 2 A non-geometric spatial attribute describes existing locations without provid-
ing geometric features or reference coordinates.

Example 2 The attributes address and city_name are non-geometric spatial attributes refer-
ring to a civic address and a city name, respectively. The domain of address, Dom(address) is
alphanumeric, e.g. {‘1040 3rd Street’, ‘3060 5th Avenue’, …}. The domain of city_name,
Dom(city_name) is also alphanumeric, e.g. {‘Columbus’, ‘Quito’, …}.

Geoinformatica

Definition 3 A crisp spatial attribute is a geometric feature assuming exact location and
well-known shape and boundaries for a given phenomenon in the 2D Euclidean space.

Example 3 The crisp spatial attribute address_geo locates an address with one point. In
addition, watershed_geo describes the well-known boundaries of watershed with one
(complex) region. Both address_geo and watershed_geo are crisp spatial attributes, and
instances for them are shown in Fig. 6. In this paper, we adopt crisp spatial attributes having
the suffix “_geo”.

spatial

attribute ν is

a

composite

attribute

denoted

4 A vague

Definition
ν=〈certitude,dubiety〉, where:
&

certitude = geocertitude, where geocertitude is a simple or a complex crisp geometric
feature in the 2D Euclidean space;
dubiety = 〈geodubiety,[mval]〉, where geodubiety is a simple or a complex crisp geometric
feature in the 2D Euclidean space, and mval is an optional membership value associated
to geodubiety; and
both the certitude and the dubiety are multivalued.

&

&

The certitude describes the features of a given phenomenon that are assumed to have
exact location and well-known shape and boundaries, while the dubiety describes the shape
vagueness of the same phenomenon. Therefore, the certitude represents the space where a
given phenomenon certainly occurs, while the dubiety represents the space where a given
phenomenon may occur according to a membership degree. The representation of the vague
spatial attribute ν according to the E-R notation of [17] is shown in Fig. 7.

The certitude accessor and the dubiety accessor enable the access to the certitude and
dubiety values for every instance z ∈ Dom(ν). The certitude accessor z.certitude.geo returns
the collection of geometries that compose the certitude of z. To retrieve the i-th geometry of
the certitude, it is necessary to refer to z.certitude[i].geo. Furthermore, the dubiety accessors
are z.dubiety.geo and z.dubiety.mval. The former returns the collection of geometries and the
latter returns the corresponding list of membership values. Both the cited collection of
geometries and the list of membership values describe the dubiety of z and have the same
length. To retrieve the j-th geometry of the dubiety, it is necessary to refer to z.dubiety[j].geo,
while to retrieve the membership value associated to the j-th geometry of the dubiety, it is
necessary to refer to z.dubiety[j].mval.

(a) An address 

(b) A watershed

Fig. 6 Instances of crisp spatial attributes. a An address. b A watershed

Geoinformatica

Fig. 7 The vague spatial attribute ν is a composite attribute with a multivalued certitude denoted by
geometries and a multivalued dubiety denoted by geometries and their membership values

Furthermore, the following restrictions apply to every instance z of a given vague spatial
attribute ν, in order to allow aggregation of vague spatial data (Section 7) and vague spatial
predicates (Section 8):
& The interior of geocertitude is disjoint from the interior of geodubiety.
& ∀i ≥ 0, only one of the following conditions is valid:

a. z.dubiety[i].mval is in ]0, 1[ ; or
b. z.dubiety[i].mval is determined by a function whose codomain is ]0, 1] ; or
c. z.dubiety[i].mval is null.

A membership value in ]0, 1[ indicates that the instance was derived from fuzzy models
and then discretized. A membership value defined by a function denotes that the instance
was derived from fuzzy models and then represented by a continuous surface. A null
membership value associated to the dubiety indicates that the instance was derived from
exact models and complies with the 3-valued logic (i.e. true, maybe or false). A discussion
on the reuse of existing models in our VSCube conceptual model is detailed in Section 10.
Besides, the VSCube conceptual model classifies vague spatial attributes as follows:

&
&

a completely vague spatial attribute has all instances with non-empty dubiety.
a partially vague spatial attribute has some instances not affected by shape vagueness,
and then with empty dubiety, i.e. these instances are crisp.

The crisp spatial attribute and the vague spatial attribute are distinct and if one attribute is
crisp it cannot become vague, or vice-versa, since we do not take into account temporality
and assume the shapes of the vague spatial objects do not change through time.

Example 4 In this paper, we adopt vague spatial attributes having the suffix “_vgeo”. The
completely vague spatial attribute appliedarea_vgeo has membership values associated to the
dubiety, as shown in Fig. 8a. The instance A1, from Fig. 2d, has the region A11 composing its
certitude, and the regions A12, A13 and A14 composing its dubiety, with the membership values
0.8, 0.5 and 0.3, respectively. The attribute crop_vgeo is a partially vague spatial attribute. In
Fig. 8b, the instance C1, from Fig. 1b, has the regions C11 and C12 as its certitude, and the region
C13 as its dubiety. The partially vague spatial attribute irrigationchannel_vgeo has instances
depicted in Fig. 8c. The instance I1 has a certitude composed of the line I11 and an empty
dubiety, while the instance I2 has a certitude composed of the lines I21 and I23, and the dubiety

Geoinformatica

(a)

(b)

(c)

(d)

Fig. 8 Instances of the vague spatial attributes

composed of the region I22. The attribute anthill_vgeo is a completely vague spatial attribute,
with the instance H1 depicted in Fig. 8d, whose certitude has two simple points, H11 and H12,
and a dubiety composed of the simple point H13.

The vague spatial attribute of the VSCube conceptual model does not impose the use of
one specific exact model to design the location and shape of the studied phenomenon.
Indeed, it allows the domain of a vague spatial attribute to hold instances that were designed
according to any exact model, as discussed in Section 10. Furthermore, it supports geometric
shapes and the corresponding membership values similarly to data structures for fuzzy
models. As a result, it provides more expressiveness to represent vague spatial data than
strictly exact models. Moreover, the vague spatial attribute is a concept and therefore
independent of implementation. For example, the designer is able to perform an E-R to
relational mapping [17] on the vague spatial attribute (shown in Fig. 7) and then use it in
relational OLAP.

5 Hierarchies of vague spatial data

Hierarchies characterize how instances of attributes are associated. The hierarchy operator
formalized in Section 5.1 enables the association of two attributes, independently from the
types the attributes assume. The properties of hierarchies are detailed in Section 5.2 to enable
the association of several attributes. Finally, the categories of hierarchies are addressed in
Section 5.3, according to the types of the attributes involved.

5.1 Hierarchy operator

Definition 5 The operator ≺ imposes a total order that associates a pair of attributes xi and
xi+1 according to a cardinality and that restricts the topological relationships allowed among
the instances of xi and xi+1, i.e.

Geoinformatica

cardinality
xi ≺ xiþ1
R c;cð
Þ
R c;dð
R d;cð
Þ
R d;dð

Þ

Þ

such that:

&
&

cardinality is 1:1 or 1:N;
R(c,c) is a set of topological relationships among xi.certitude[p].geo and xi+1.certitude[s].geo,
∀p, s ≥ 0;

& R(c,d) is a set of topological relationships among xi.certitude[p].geo and xi+1.dubiety[t].geo,

& R(d,c) is a set of topological relationships among xi.dubiety[q].geo and xi+1.certitude[s].geo,

& R(d,d) is a set of topological relationships among xi.dubiety[q].geo and xi+1.dubiety[t].geo,

∀p, t ≥ 0;

∀q, s ≥ 0; and

∀q, t ≥ 0.

Table 1 shows the types that the attributes xi and xi+1 can assume in a xi ≺ xiþ1 statement.
The existence of the sets of topological relationships R(c,c), R(c,d), R(d,c) and R(d,d) is
assured only if both xi and xi+1 are vague spatial attributes (line 1 in Table 1). None of these
sets exist if one of the attributes is conventional or non-geometric (lines 3, 4, 7–16 in
Table 1) since there are no geometries involved in such types of attributes. As a result, all
these sets are empty and can be omitted for the sake of simplicity. If xi is crisp and xi+1 is
vague, then only R(c,c) and R(c,d) exist (line 5 in Table 1), since xi holds only the certitude.
If xi is vague and xi+1 is crisp, then only R(c,c) and R(d,c) exist (line 2 in Table 1) since xi+1

Table 1 Types that the attributes
xi and xi+1 can assume

#

1

2

3

4
5

6

7

8

9

10

11

12
13

14

15

16

xi

Vague Spatial

Vague Spatial

Vague Spatial

Vague Spatial
Crisp Spatial

Crisp Spatial

Crisp Spatial

Crisp Spatial

Non-geometric Spatial

Non-geometric Spatial

Non-geometric Spatial
Conventional

Conventional

Conventional

Conventional

Non-geometric Spatial

Non-geometric Spatial

xi+1

Vague Spatial

Crisp Spatial

Conventional
Vague Spatial

Crisp Spatial

Conventional

Vague Spatial

Crisp Spatial

Conventional
Vague Spatial

Crisp Spatial

Non-geometric Spatial

Conventional

Non-geometric Spatial

Non-geometric Spatial

Geoinformatica

holds only the certitude. Finally, and if both xi and xi+1 are crisp (line 6 in Table 1), then only
R(c,c) exists since both xi and xi+1 hold only the certitude.

The examples described in this section use the topological relations defined in [16] to

express R(c,c), R(c,d), R(d,c) and R(d,d).

Example 5 Consider agriland_vgeo ≺ irrigationchannel_vgeo, whose types are those of
Line #1 in Table 1, and whose topological relationships are shown in Fig. 9. As a result:

                                   1:N 
agriland_vgeo
                     R(c,c) = contains, overlaps 
                     R(c,d) = contains, overlaps 
                    R(d,c) =  disjoint, overlaps 
                    R(d,d) = disjoint, overlaps

 irrigationchannel_vgeo

5.2 Properties of hierarchies

In this section, we provide the properties of hierarchies that assure a total order relationship
among attributes of possibly distinct types, as follows.

Fig. 9 The topological relationships of agriland_vgeo ≺ irrigationchannel_vgeo

Definition 6 A hierarchy H is a total order on a set of attributes and is denoted x0≺…≺ xn ,
where xi and xn are attributes and 0 ≤ i < n. Furthermore:
&

If xi (cid:2)≺ xiþ1
granularity of xi and xi+1 refer to the same level of detail; (antisymmetry).

then xi = xi+1 means that cardinality is 1:1 and that the

and xiþ1 (cid:2)≺ xi

Geoinformatica

&

If

cardinality-ij 
xj
xi
Rij(c,c) 
Rij(c,d) 
Rij(d,c) 
Rij(d,d) 
where:

and

,

then

cardinality-jk 
xk
xj
Rjk(c,c) 
Rjk(c,d) 
Rjk(d,c) 
Rjk(d,d) 

cardinality-ik 
xk
xi
Rik(c,c) 
Rik(c,d)
Rik(d,c)
Rik(d,d) 

cardinality-ik is 1:1 if both cardinality-ij and cardinality-jk are 1:1, otherwise cardi-
nality-ik is 1:N;
Rik(c,c) = {disjoint} ∧ Rik(c,d) = {disjoint} ∧ Rik(d,c) = {disjoint} ∧ Rik(d,d) = {disjoint}
is not allowed if both xi and xk are vague spatial attributes;
Rik(c,c) = {disjoint} ∧ Rik(c,d) = {disjoint} is not allowed if xi is a crisp spatial attribute
and xk is a vague spatial attribute;
Rik(c,c) = {disjoint} ∧ Rik(d,c) = {disjoint} is not allowed if xi is a vague spatial attribute
and xk is a crisp spatial attribute;
Rik(c,c) = ∅ ∧ Rik(c,d) = ∅ ∧ Rik(d,c) = ∅ ∧ Rik(d,d)= ∅ if, and only if both xi and xk
are not (vague or crisp) spatial attributes; (transitivity).

&

xi ≺ xiþ1 or xiþ1 ≺ xi

(totality).

Although two attributes can be considered in the same level of granularity (antisymmetry), a
hierarchy imposes that one precedes the other (totality). In addition, transitivity is only held if the
geometries of different attributes are not all disjoint. When transitivity is applied to relate a pair of
attributes, the valid topological relationships need to be identified, as it is not possible to
automatically determine them.

Example 6 The hierarchy Hagriwater = watershed_geo ≺ agriland_vgeo ≺ crop_vgeo has its
topological relationships described in Figs. 10 and 11, such that:

Line #5 in Table 1 
1:N 

watershed_geo

 agriland_vgeo

R(c,c) = contains, covers 
R(c,d) = contains, covers 

Line #1 in Table 1 

1:N 

agriland_vgeo

 crop_vgeo

R(c,c) = covers, contains 
R(c,d) = contains 
R(d,c) = meets, disjoint 
R(d,d) = disjoint, meets 

Example 7 According to the hierarchy Hagriwater = watershed_geo ≺ agriland_vgeo ≺
crop_vgeo, by transitivity watershed_geo ≺ crop_vgeo. The identification of the valid
topological relationships among watersheds and crops leads to:

Line #5 in Table 1

          1:N 

watershed_geo

 crop_vgeo

R(c,c) = contains, covers 
R(c,d) = contains, covers 

Geoinformatica

R(c,c)

R(c,d)

watershed8 contains agriland45.certitude[0].geo

watershed8 contains agriland22.certitude[0].geo

watershed8 covers agriland17.certitude[0].geo

watershed8 covers agriland61.certitude[0].geo

watershed8 contains agriland45.dubiety[0].geo

watershed8 covers agriland22.dubiety[0].geo

watershed8 covers agriland17.dubiety[0].geo

watershed8 contains agriland61.dubiety[0].geo

Fig. 10 Topological relationships determined by watershed_geo ≺ agriland_vgeo

Example 8 Political boundaries are set by the hierarchy Hlocation = country_geo ≺ statename
≺ city_geo ≺ citycode, such that (the sets R(c,c), R(c,d), R(d,c) and R(d,d) are omitted when
all of them are empty):

Line #7 in Table 1
      1:N 

country_geo

 statename

Line #10 in Table 1 
 1:N 

statename

 city_geo

Line #8 in Table 1
1:1 

city_geo

 citycode

Line #12 in Table 1 
 (by transitivity) 
 1:N 

statename

 citycode

Line #6 in Table 1 
 (by transitivity)
       1:N 

country_geo

 city_geo

R(c,c) = contains, covers 

5.3 Categories of hierarchies

The hierarchies of the VSCube conceptual model are categorized in Table 2, according to the
types of attributes associated. For instance, a hybrid hierarchy holds attributes of all types,
while a completely spatial hierarchy holds only vague spatial attributes and crisp spatial
attributes.

Geoinformatica

R(c,c)

R(d,c)

agriland100.certitude[0].geo covers C1.certitude[0].geo

agriland100.certitude[0].geo contains C1.certitude[1].geo

agriland100.certitude[0].geo covers C2.certitude[0].geo

agriland100.certitude[0].geo covers C2.certitude[0].geo

agriland100.certitude[0].geo contains C1.dubiety[0].geo

R(c,d)

agriland100.certitude[0].geo contains C2.dubiety[0].geo

agriland100.certitude[0].geo contains C2.dubiety[0].geo

agriland100.dubiety[0].geo meets C1.certitude[0].geo

agriland100.dubiety[0].geo and C1.certitude[1].geo are disjoint

agriland100.dubiety[0].geo meets C2.certitude[0].geo

agriland100.dubiety[0].geo meets C2.certitude[0].geo

agriland100.dubiety[0].geo and C1.dubiety[0].geo are disjoint

R(d,d)

agriland100.dubiety[0].geo meets C2.dubiety[0].geo

agriland100.dubiety[0].geo and C3.dubiety[0].geo are  disjoint

Fig. 11 Examples of topological relationships of agriland_vgeo ≺ crop_vgeo

Example 9 As examples of different categories of hierarchies, Hirrigation described in Exam-
ple 5 is a vague spatial hierarchy, Hagriwater described in Example 6 is a completely spatial
hierarchy, and Hlocation described in Example 8 is a partially crisp spatial hierarchy.

6 Multidimensional cube of vague spatial data

This section contextualizes vague spatial data in the multidimensional cube metaphor as
follows. Section 6.1 describes dimensions, Section 6.2 details measures, Section 6.3 addresses

Table 2 Categories of hierarchies of the VSCube conceptual model

Category of hierarchy

Vague spatial
attributes

Crisp spatial
attributes

Non-geometric
spatial attributes

Conventional
attributes

Geoinformatica

Hybrid hierarchy

Completely spatial hierarchy

Partially vague spatial hierarchy

Partially crisp spatial hierarchy

Partially non-geometric spatial hierarchy

Vague spatial hierarchy

Crisp spatial hierarchy

Non-geometric spatial hierarchy

Conventional hierarchy

☑

☑

☑

☑

☑

☑

☑

☑

☑

☑

☑

☑

☑
☑

☑

☑

☑

☑

☑

☑

☑
☑

☑

☑

☑

☑

☑

☑

☑

☑

☑

☑

the cube, Section 6.4 characterizes the vague spatial fact, and Section 6.5 focuses on the lattice
of cuboids.

6.1 Dimensions

Dimensions are a core concept in data cubes, as they match the axes of a multidi-
mensional view. A dimension is mainly composed of attributes associated through
hierarchies.

Definition 7 A dimension D is a tuple denoted TypeDimD = 〈TypeAttr0x0, …, TypeAttrvxv〉, where:
&
&

xi is an attribute and 0 ≤ i ≤ v;
TypeAttri ∈ {numeric, string, date, nongeo, crisp, vague◖, vague●} is the type of the
attribute, i.e. numeric, alphanumeric (string), date, non-geometric spatial, crisp spatial,
partially vague spatial or completely vague spatial, respectively;
TypeDim ∈ {conv, nongeo, crisp, vague} refers to the type of the dimension, as
follows:

&

– A conventional dimension has only conventional attributes.
– A non-geometric spatial dimension has at least one non-geometric spatial attribute and

optional conventional attributes.

– A crisp spatial dimension has at least one crisp spatial attribute and no vague spatial

attributes; and

– A vague spatial dimension has at least one vague spatial attribute;

Geoinformatica

&

if xi univocally identifies one instance of the dimension it is considered a key and is
underlined.

Example 10 The following dimensions address the problem described in Section 1.1.
Furthermore, an instance of the dimension vagueDcrop is exemplified and illustrated in
Fig. 12. The attribute pestname could also be a key in dimension convDpesticide. However,
pestkey was chosen instead, for the sake of simplicity.

convDdate ¼ 〈datedate; stringmonth; stringquarter; numericyear〉
convDpesticide ¼ 〈numericpestkey; stringpestname; stringpestbrand; stringpesttype〉
crispDmunicipality ¼ 〈numericcitycode; nongeocityname; numericpopulation; crispcity geo;

nongeostatename; nongeocountryname; crispcountry geo〉

6.2 Measures

Measures are the subject of analysis and denote business scores that are summarized using
aggregation functions. The scores may refer both to conventional values as well as to crisp or
vague georeferenced values. As a result, aggregation functions manipulate conventional and
spatial data in the VSCube conceptual model.

Definition 8 A measure TypeMeam is an attribute whose type is TypeMea ∈ {numeric, crisp,
vague◖, vague●}.

Numeric measures are aggregated by aggregation functions such as SUM, AVG, MIN,
MAX, COUNT and functions defined by the user, while crisp spatial measures are aggre-
gated by spatial aggregation functions, e.g. union, intersection and difference. On the other
hand, vague spatial measures are aggregated by aggregation functions as vague spatial
union, vague spatial intersection and vague spatial difference detailed in Section 7.

Fig. 12 An instance of vagueDcrop

Example 11 To comply with the running example described in Section 1.1, the quantity of
pesticides applied in tons is addressed by the measure numericappliedtons and aggregated by the
SUM aggregation function . Furthermore, the regions with shape vagueness where pesticides
were applied to are addressed by the vague spatial measure vague●appliedarea_vgeo,
which is aggregated by the vague spatial union aggregation function (i.e. VSUnion),
which is detailed in Section 7.1. Note that appliedtons = 0.30 and appliedarea_vgeo = A1
according to Fig. 2.

Geoinformatica

6.3 Cube

A cube metaphor is a multidimensional view whose axes are the dimensions. The values of
an axis are the values assumed by the attributes of the dimension, while the values of
measures are projected on axes. A fact associates values of attributes in dimensions to values
of measures. Since (vague) spatial data can be addressed on dimensions and facts, the cube
provides not only a multidimensional view, but also a geographic view of data.

Definition 9 A cube C is a tuple denoted C =  D0, …, Dp, TypeMea0m0, 
where Di is a dimension, TypeMeajmj is a measure, and
to TypeMeajmj, for 0 ≤ i ≤ p and 0 ≤ j ≤ q.

q
j is an aggregation function applied

0, …, TypeMeaqmq, 

The cube comprises dimensions and all their attributes, and therefore provides several
levels of granularity, according to hierarchies that relate the attributes. Attributes of a given
dimension that do not participate in the hierarchy are associated to the attribute of the
hierarchy that represents the lower level of granularity, i.e. associated to the key of the
dimension, as the attribute plantname of vagueDcrop described in Example 10. Conversely, a
cuboid maintains zero or one attribute of each dimension and then denotes a distinct level of
granularity of the cube. Measures and aggregation functions of a cuboid are those defined in
its cube.

Definition 10 A cuboid c is a tuple denoted c = 〈C,TypeAttr0x0,…,TypeAttrtxt〉, where:
& C is the cube that defines c;
&
&
& ∀s ≤ i, j ≤ t : i ≠ j ⟹ xi ≠ xj (there are no repeated attributes in c); and
&
TypeAttri ∈ {numeric, string, date, nongeo, crisp, vague◖, vague●}.

0 ≤ i ≤ t;
xi is an optional attribute of a dimension in C;

In order to associate measures to a cuboid, we introduce the notion of fact, which assigns

values of measures to each value of the attributes of a cuboid.

Definition 11 A fact f is a set denoted f = {a0, …, ap, value0, …, valueq} or f = {value0, …,
valueq} where:
&
&
& mj is a measure held by the cube C where the cuboid c is defined, for 0 ≤ j ≤ q; and
&

xi is an attribute of the cuboid c, for 0 ≤ i ≤ p;
ai ∈ Dom(xi);

valuej ∈ Dom(mj).
The general case adopts the definition of fact as f = {a0, …, ap, value0, …,
valueq}. On the other hand, the distinguished cuboid call described in Section 6.5 does

Geoinformatica

not hold any attributes, and then values of measures are associated to it by the fact denoted f =
{value0, …, valueq}. Therefore, call holds the aggregated values of the measures over all
dimensions.

Example 12 Let Cpesticide_application be a cube and c0 be a cuboid. Consider also the SUM and
VSUnion aggregation functions adopted in Example 11. They address the problem described
in Section 1.1 and discussed in previous examples, as follows:

Cpesticide_application =  convDpesticide, convDdate, vagueDcrop, convappliedtons, SUM, vagueappliedarea_vgeo, VSUnion
c0 =  Cpesticide_application, numericpestkey, datedate, vague crop_vgeo 

An example of a multidimensional and geographic view provided by the cuboid c0, which
holds the keys of all dimensions in Cpesticide_application, is depicted in Fig. 13 and indicates the
amount of applied tons and the extent of pesticide application per key of pesticide (121, 122)
per date (‘2012-10-01’ to ‘2012-10-04’) per crops (C1, C2, C3). The fact highlighted in
Fig. 13 is {121, ‘2012-10-04’, C1, 0.30, A1}.

6.4 Vague spatial fact

A vague spatial fact has a finer granularity than a fact and enables the analysis of
measures at the grains of certitude and dubiety when a vague spatial attribute is addressed by
the cuboid. A vague spatial fact is defined for each vague spatial attribute in a given
cuboid.

Definition 12 A vague spatial fact vaguef is a (|ν.certitude.geo|+|ν.dubiety.geo|) × M matrix
for each fact where:
& ν is a vague spatial attribute addressed by the cuboid c of the cube C;
&
|ν.certitude.geo| is the cardinality of ν.certitude.geo;
&
|ν.dubiety.geo| is the cardinality of ν.dubiety.geo;
& M is the quantity of measures addressed in cube C;
&

the cells of the matrix are celli,j, for 0 ≤ i < M and 0 ≤ j < |ν.certitude.geo|+
|ν.dubiety.geo|;

Fig. 13 The multidimensional and geographic view provided by the cuboid c0, and the description of the fact f

C1.certitude[0].geo

C1.certitude[1].geo

C1.dubiety[0].geo

appliedtons

0.25

0.00

0.05

Geoinformatica

appliedarea_vgeo

Fig. 14 The matrix of a vague spatial fact

&

&

each cell celli,j, with 0 ≤ j <|ν.certitude.geo|, is the value of the i-th measure of the
cube C regarding the j-th geometry of ν.certitude.geo;
each cell celli,j, with |ν.certitude.geo| ≤ j < |ν.certitude.geo|+|ν.dubiety.geo|, is the
value of the i-th measure of the cube C regarding the (j - |ν.certitude.geo|)-th geometry
of ν.dubiety.geo;

On the one hand, the use of the corresponding aggregation function on the i-th measure,
to aggregate all celli,j with 0 ≤ j <|ν.certitude.geo| returns the aggregated measure for the
certitude of the instance. On the other hand, the use of the corresponding aggregation
to aggregate all celli,j with |ν.certitude.geo| ≤ j <
function on the i-th measure,
|ν.certitude.geo|+|ν.dubiety.geo|, returns the aggregated measure for the dubiety of the
instance.

Example 13 Consider the fact {121, ‘2012-10-04’, C1, 0.30, A1} highlighted in Fig. 13. The
vague spatial fact illustrated in Fig. 14 associates partial values of the measures appliedtons
and appliedarea_vgeo to the certitude and the dubiety of crop_vgeo = C1, where pestkey =
121 and date = ‘2012-10-04’. Note that C1.certitude[0].geo = C11, C1.certitude[1].geo = C12 and
C1.dubiety[0].geo = C13, according to Fig. 2a–c. In the matrix, cell0,j denotes how many tons of
pesticides were applied (appliedtons), while cell1,j denotes the extent of the applied area over the
corresponding part of C1 (appliedarea_vgeo). Therefore, cell0,0 is 0.25 as illustrated in Fig. 2b,
cell1,0 is the extent of A1 that intersects C11 in Fig. 2b, cell0,1 is 0.00 since A1 does not intersect C12
in Fig. 2b, cell1,1 is empty for the same reason, cell0,2 is 0.05 as shown in Fig. 2c and, finally, cell1,2
is the extent of A1 that intersects C13 in Fig. 2c. Applying the aggregation function of SUM
to cell0,0 and cell0,1 produces the aggregated measure appliedtons = 0.25 for the
certitude of C1, while to cell0,2 produces the aggregated measure appliedtons = 0.05 for
the dubiety of C1. Besides, applying vague spatial union to cell1,0 and cell1,1 produces the
geometry of the applied area regarding the certitude of C1, while cell1,2 is the single geometry of
the applied area regarding the dubiety of C1.

6.5 Lattice of cuboids

The existence of attributes with different levels of granularity in the dimensions allows the
definition of cuboids with distinct granularities.

Example 14 The cuboids c1, c2, c3 and c4 are:

c1 = 〈Cpesticide_application,

stringpestname,numericyear,vague●agriland_vgeo〉

c2 = 〈Cpesticide_application,
c3 = 〈Cpesticide_application,
c4 = 〈Cpesticide_application,

stringpestname,numericyear〉
stringpestname,vague●agriland_vgeo〉
numericyear,vague●agriland_vgeo〉.

Geoinformatica

The multidimensional and geographic views provided by cuboids c1, c2, c3, and c4 are
illustrated in Fig. 15. The cuboid c1 indicates the amount of applied tons and the extent of
pesticide application per name of pesticide (‘Pesticide121’ or ‘Pesticide122’) per year (2012)
per agricultural land (agriland100). The cuboid c2 indicates the amount of applied tons and
the extent of pesticide application per name of pesticide per year. The cuboid c3 indicates the
amount of applied tons and the extent of pesticide application per name of pesticide per
agricultural land. The cuboid c4 indicates the amount of applied tons and the extent of
pesticide application per year per agricultural land. The cuboids c1, c2, c3 and c4 have coarser
granularities than the cuboid c0 (detailed in Example 13), as they do not hold all keys of the
dimensions in Cpesticide_application. In addition, note that agriland_vgeo ≺ crop_vgeo and year
≺ quarter ≺ month ≺ date.

In the following, we discuss how the values for the measures appliedtons and

appliedarea_vgeo are obtained to describe the fact highlighted in Fig. 15.

Cuboids with distinct granularities are organized in a lattice to enable the aggregation of
the values of measures. Hierarchies play a key role to determine such organization. The
lattice of cuboids provides levels of summarized data commonly used to build materialized
views, which are commonly used to speed up OLAP query processing. The most detailed
cuboid is similar to the inferior level in a DW.

Definition 13 A lattice of cuboids L is a directed acyclic graph that imposes a partial order
on the set of cuboids of a given cube, and is a tuple denoted L = 〈C, c0,…, cz, E〉 where:
& C is the cube that defines the lattice;

Fig. 15 Multidimensional and geographic views provided by the cuboids c1, c2, c3, and c4

Geoinformatica

&
&

&

&
&

ci is a cuboid of C, and therefore is a node of the lattice (0 ≤ i ≤ z);
ci = cbottom is the bottom-level node, i.e. a cuboid at the finest granularity that holds the
keys of dimensions;
ci = call is the top-level node, i.e. a cuboid at the coarser granularity that does not hold
attributes;

& E is a set of edges that link the nodes (cuboids);
&

ci→cj means that there is an edge that links ci to cj and that the granularity of ci is finer
than the granularity of cj;
the reflexive and transitive closure of → is denoted by →*;
ci→* ck determines that aggregation functions are applied to values of measures in ci to
obtain summarized values in ck;

& →* has a unique bottom level cbottom and a unique top level call;
&
&

all cuboids ci are organized in the graph such that cbottom→* ci and ci→* call; and
each hierarchy x0 ≺ … ≺ xn is a total order encompassed by L, where 0 ≤ b < n and cb
and cb+1 are distinct cuboids of L, such that
xb ∈ cb,
xb+1 ∈ cb+1,
cb+1→cb, and
cb+1→* call

–
–
–
–

lattice of

Example 15 Let Lpesticide_application be
cube
a
Cpesticide_application. A subset of Lpesticide_application is depicted in Fig. 16, considering only
the keys of the dimensions in Cpesticide_application. The cuboid with the finest granularity is
cbottom = 〈Cpesticide_application,numericpestkey,datedate,vague◖crop_vgeo〉 (identical to the cuboid
c0 described in Example 12). On the other hand, the cuboid all does not hold attributes. Each
cuboid is represented by a node and the order relation used to aggregate data is represented
by a directed edge.

regarding the

cuboids

Example 16 The hierarchies encompassed by Lpesticide_application are illustrated in Fig. 17,
where each attribute is represented by a node and the operator ≺ is replaced by an edge.
Instances of their attributes are also depicted. Figure 17a shows how the hierarchy relates
dates, Fig. 17b shows how hierarchies relate pesticides and Fig. 17c shows how the

Fig. 16 Lattice of cuboids Lpesticide_application, using the same notation as [10]

Geoinformatica

(a) Hierarchy on dates.

(b) Hierarchy on pesticides.

(c) Hierarchies on spatial data

Fig. 17 Hierarchies in Lpesticide_application. a Hierarchy on dates. b Hierarchy on pesticides. c Hierarchies on
spatial data

hierarchies Hagriwater and Hirrrigation relate spatial data. Therefore, considering the cuboids c0
and c1 described in Example 12, then c0→* c1 as shown in Fig. 18, since agriland_vgeo ≺
crop_vgeo and year ≺ quarter ≺ month ≺ date. In addition, considering the cuboids c2, c3
and c4 described in Example 12, then c1→c2 ∈ E, c1→c3 ∈ E, c1→c4 ∈ E, as shown in
Fig. 18.

Example 17 Considering the cuboids c0 and c1 previously detailed and that c0→* c1, the fact
of the cuboid c1 highlighted in Fig. 15 is:

{ 

'Pesticide121',  

2012,  

0.3 + 0.1 + 0.3 + 0.1 + 0.2 + 0.2 + 0.1 + 0.2 + 0.1,  

VSUnion(A1, A2, A3, A4, A5, A7, A10, A11, A12) 

}

Geoinformatica

Fig. 18 Cuboids in Lpesticide_application according to hierarchies

Such fact of the cuboid c1 encompasses 12 facts of the cuboid c0 shown in Fig. 13, i.e. all
crops associated to the agricultural land agriland100 (Fig. 17b), four dates where year is 2012
(Fig. 17a) and the pesticide called ‘Pesticide121’ (Fig. 17c). Values for the measure
appliedtons are aggregated using SUM, while values for the measure appliedarea_vgeo are
aggregated using vague spatial union. Such data aggregation is feasible due to the edges of
the lattice of cuboids Lpesticide_application linking the cuboids as shown in Fig. 18. Some facts
refer to 0 t of pesticides and an empty applied area and therefore could just be ignored.

7 Vague spatial aggregation functions

In the VSCube conceptual model, data aggregation summarizes not only numeric measures
but also the spatial measures represented by crisp spatial attributes and vague spatial
attributes in a fact. Since each vague spatial object consists of certitude, dubiety and
membership value, it requires both geometric and numeric aggregations. In this paper, we
define three vague spatial aggregation functions: the vague spatial union described in
Section 7.1, the vague spatial intersection detailed in Section 7.2 and the vague spatial
difference addressed in Section 7.3.

7.1 Vague spatial union

The pair-wise union of two input vague spatial objects x and y merges them and creates a new
vague spatial object z. If there is intersection between the certitude of x or y with any part of the
other input object, such intersection belongs to the certitude of z. Furthermore, the portions in the
certitude of x or y that do not intersect any part of the other input object also belong to the certitude
of z. On the other hand, if there is intersection between the dubieties of x and y, then such
intersection belongs to the dubiety of z. In addition, the greater value of membership value is
yielded. Regarding the portions in the dubiety of x or y that do not intersect any part of the other
input object, they also belong to the dubiety of z and maintain their original membership values.

Geoinformatica

The vague spatial union of a collection of vague spatial objects composes a single vague

spatial object z and processes input vague spatial objects recursively.

Definition 15 The vague spatial union of a collection of vague spatial objects is:

VSUnion (o0, …, on) = VSUnionXY (on, VSUnionXY(on−1, … VSUnionXY(o1, o0)…)),
where oi is a vague spatial object and 0 < i ≤ n.

Example 18 Consider the running example detailed in Section 1.1 and that x and y are
distinct areas where pesticides were applied to. Both x and y are depicted in Fig. 19a and
VSUnion (x, y) returns a vague spatial object that is assigned to z in Fig. 19b. We adopted
different tones of gray to highlight the different membership values associated to the dubiety.
A similar approach could be used to process the vague regions in Example 17, i.e.
VSUnion(A1, A2, A3, A4, A5, A7, A10, A11, A12).

7.2 Vague spatial intersection

The pair-wise intersection of two vague spatial objects x and y produces the vague spatial object z
containing the extent shared by both x and y. The intersection of the certitudes of x and y belongs to
the certitude of z. Conversely, the intersection between the dubiety of x or y with any other part of
the other input object belongs to the dubiety of z and holds the lower membership value involved,

z.certitude.geo   

z.dubiety.geo

(a) x and y

(b) z = VSUnion (x, y)

Fig. 19 The vague spatial union applied to the vague spatial objects x and y. a x and y. b z = VSUnion (x, y)

Geoinformatica

considering that the membership value is assumed to be 1.0 for the certitudes of x and y. Finally, the
parts of x that do not intersect any part of y, and the parts of y that do not intersect any part of x are
discarded.

The vague spatial intersection of a collection of vague spatial objects composes a single

vague spatial object z and processes input vague spatial objects recursively.

Definition 17 The vague spatial intersection of a collection of vague spatial objects is:

VSIntersection (o0, …, on) = VSIntersectionXY (on, VSIntersectionXY(on−1, …
VSIntersectionXY(o1, o0)…)), where oi is a vague spatial object and 0 < i ≤ n.

Example 19 Consider that x and y are distinct areas where pesticides were applied to. Both x
and y are depicted in Fig. 20a and VSIntersection (x, y) returns a vague spatial object that is
assigned to z in Fig. 20b. We adopted different tones of gray to highlight the different
membership values associated to the dubiety.

7.3 Vague spatial difference

The pair-wise difference of two vague spatial objects x and y produces the vague spatial object z
containing the extent in x that does not belong to y. The portions in the certitude of x that do not
intersect any part of y belong to the certitude of z, while the portions in the dubiety of x that do not
intersect any part of y belongs to the dubiety of z maintaining their original membership values.
Conversely, the portions in the certitude of x that intersect the dubiety of y belong to the dubiety of

(a) x and y

(b) z = VSIntersection(x, y)

z.certitude.geo

z.dubiety.geo

Fig. 20 Vague spatial intersection applied to the vague spatial objects x and y. a x and y. b z = VSIntersection(x, y)

Geoinformatica

(a) x and y

(b) z = VSDifference (x, y)

z.certitude.geo

z.dubiety.geo

Fig. 21 Vague spatial difference applied to the vague spatial objects x and y. a x and y. b z = VSDifference (x, y)

z and hold the membership value of 1.0 minus the original membership value concerning y. In
addition, the portions of the dubieties of x and y that intersect belong to the dubiety of z only if the
membership value in x minus the membership value in y yields a positive value.

The vague spatial difference of a collection of vague spatial objects composes a single

vague spatial object z and processes input vague spatial objects recursively.

Definition 19 The vague spatial difference of a collection of vague spatial objects is:

VSDifference (o0, …, on) = VSDifferenceXY (on, VSDifferenceXY(on−1, …
VSDifferenceXY(o1, o0)…)), where oi is a vague spatial object and 0 < i ≤ n.

Example 20 Consider that x and y are distinct areas where pesticides were applied to. Both x
and y are depicted in Fig. 21a and VSDifference(x, y) returns a vague spatial object that is
assigned to z in Fig. 21b. We adopted different tones of gray to highlight the different
membership values associated to the dubiety.

8 Vague spatial predicates

Sections 8.1 and 8.2 address specifically range queries, which are essential to select vague
spatial objects from the dataset according to a spatial relationship. Nevertheless, novel vague
spatial predicates can be defined by reusing the concepts here described, then assessing: whole
vague spatial objects; only certitudes; only dubieties; dubieties according to membership

values; elements of certitudes; elements of dubieties; and elements of dubieties according to
membership values.

Geoinformatica

8.1 Spatial range queries

The spatial range query considers q as an iso-oriented rectangle in the 2D Euclidean space,
called spatial query window. The spatial range query retrieves every spatial object o that
satisfies a given spatial predicate θ with q, i.e. θ (o, q).

The intersection range query (IRQ) is a subtype of the spatial range query with θ =
intersects. To manipulate vague spatial attributes in the VSCube conceptual model, the
intersection range query assesses whole vague spatial objects (IRQobject), only certitudes
(IRQcertitude), only dubieties (IRQdubiety), dubieties according to membership values
(IRQcertitude_elements), elements of dubieties
(IRQdubiety-mval), elements of certitudes
(IRQdubiety_elements),
according to membership values
(IRQdubiety_elements-mval). These queries return a non-empty set if at least one vague spatial
object satisfies the relationship of intersection, or return an empty set otherwise.

and elements of dubieties

Definition 20 The IRQ issued over whole objects held by the dataset is:

IRQobject(q,dataset) = { z | z ∈ dataset ∧ (z.certitude.geo ∩ q ≠ ∅ ∨ z.dubiety.geo ∩ q ≠ ∅)},
such that q is a spatial query window and dataset is a set of vague spatial objects.

Example 21 Consider the running example detailed in Section 1.1. Suppose that an IRQobject
is issued according to Fig. 22, and that dataset = appliedarea_vgeo. This IRQobject retrieves
the whole vague spatial object z ∈ dataset.

Definition 21 The IRQs issued over the certitude or over the dubiety of vague spatial objects
held by the dataset are, respectively:

IRQcertitude (q, dataset) = {z | z ∈ dataset ∧ z.certitude.geo ∩ q ≠ ∅}
IRQdubiety (q, dataset) = {z | z ∈ dataset ∧ z.dubiety.geo ∩ q ≠ ∅}

Besides, the membership value α can be considered to filter objects, for Ф ∈ {=, ≠, >, <, ≤, ≥}:

IRQdubiety−mval(q, dataset, Φ , α ) = { z |
z ∈ dataset ∧ z.dubiety.geo ∩ q ≠ ∅ ∧ ∀ j ≥ 0, z.dubiety[j].mval Φ α},

such that q is a spatial query window and dataset is a set of vague spatial objects.

Example 22 Suppose that an IRQcertitude is issued according to Fig. 22. Since q intersects the
certitude of z, the whole vague spatial object z is returned. Furthermore, if an IRQdubiety is
issued according to Fig. 22, the result is the same. On the other hand, suppose an IRQdubiety-mval
is issued according to Fig. 22, with Ф being ‘greater than’ (i.e. >) and α = 0.5. The result for
this IRQdubiety-mval is empty, since there are elements in the dubiety of z that do not have
membership value greater than 0.5.

Definition 22 The IRQs issued over each element of the certitude or over each element of
the dubiety of vague spatial objects held by the dataset are, respectively:

IRQcertitude_elements(q, dataset) = { o | z ∈ dataset ∧ o ∈ z.certitude.geo ∧ o ∩ q ≠ ∅ }

Geoinformatica

dataset = appliedarea_vgeo

z is a vague spatial object

z

dataset

q is the spatial query window

certitude.geo

z.dubiety.geo

membership values are shown

z

Fig. 22 The vague spatial object z ∈ dataset and the query window q

IRQdubiety_elements(q, dataset) = { o | z ∈ dataset ∧ o ∈ z.dubiety.geo ∧ o ∩ q ≠ ∅ }
Besides, the membership value α can be considered to filter elements of the dubiety, for

Ф ∈ {=, ≠, >, <, ≤, ≥} and j ≥ 0:

IRQdubiety_elements−mval(q, dataset, Φ , α) = { o | z ∈ dataset ∧ o ∈ z.dubiety.geo ∧
o = z.dubiety[j].geo ∧ o ∩ q ≠ ∅ ∧ z.dubiety[j].mval Φ α }

such that q is a spatial query window and dataset is a set of vague spatial objects.

is issued according to Fig. 22. Since q
Example 23 Suppose an IRQcertitude_elements
intersects the single element of the certitude of z, this element is returned, as shown
in Fig. 23a. Furthermore, if an IRQdubiety_elements is issued according to Fig. 22, four
the dubiety of z are returned, as shown in Fig. 23b. Finally, suppose an
elements of
IRQdubiety_elements-mval is issued according to Fig. 22, with Ф being ‘greater than’ (i.e. >)
and α = 0.5. The result for this IRQdubiety_elements-mval has two elements of the dubiety of z, as
shown in Fig. 23c.

The containment range query (CRQ) is a subtype of the spatial range query with θ =
contains. Based on the previous definition of classes for IRQ, the classes for CRQ are
defined as follows.

CRQobject(q, dataset)={ z | z ∈ dataset ∧ z.certitude.geo ∩ q = z.certitude.geo
∧ z.dubiety.geo ∩ q = z.dubiety.geo }
CRQcertitude(q, dataset) = { z | z ∈ dataset ∧ z.certitude.geo ∩ q = z.certitude.geo}
CRQdubiety(q, dataset) = { z | z ∈ dataset ∧ z.dubiety.geo ∩ q = z.dubiety.geo}
CRQdubiety−mval(q, dataset, Φ , α ) = { z | z ∈ dataset ∧

z.dubiety.geo ∩ q = z.dubiety.geo ∧ ∀ j ≥ 0, z.dubiety[j].mval Φ α }

CRQcertitude_elements(q, dataset) = { o | z ∈ dataset ∧ o ∈ z.certitude.geo ∧ o ∩ q = o }
CRQdubiety_elements(q, dataset) = { o | z ∈ dataset ∧ o ∈ z.dubiety.geo ∧ o ∩ q = o }
CRQdubiety_elements−mval(q, dataset, Φ , α ) = { o | z ∈ dataset ∧ o ∈ z.dubiety.geo

∧ o = z.dubiety[j].geo ∧ o ∩ q = o ∧ z.dubiety[j].mval Φ α }.

such that q is a spatial query window and dataset is a set of vague spatial objects.

Geoinformatica

certitude.geo

z.dubiety.geo

z.dubiety.geo

(a) IRQcertitude_elements

(b) IRQdubiety_elements

(c) IRQdubiety_elements-mval

Fig. 23 The results for IRQcertitude_elements, IRQdubiety_elements and IRQdubiety_elements-mval. a IRQcertitude_elements.
b IRQdubiety_elements. c IRQdubiety_elements-mval

8.2 Vague spatial range query

Differently from IRQ and CRQ, the vague spatial range query ranks results according to
relevance, by performing two spatial range queries with concentric spatial query windows,
as follows.

The vague spatial range query (VSRQ) identifies all crisp spatial objects or vague spatial
objects that satisfy two spatial range queries concerning two concentric spatial query
windows, where:

(i) The inner spatial query window evaluates a CRQ, to be more restrictive and conse-
quently denote a lower degree of vagueness, producing more relevant results; and
(ii) The outer spatial query window evaluates an IRQ, to be less restrictive and gradually
denote a greater degree of vagueness, producing less relevant results by subtracting the
results gathered by the inner spatial query window.

Definition 23 The vague spatial range query issued over whole objects held by the dataset is:

VSRQobject q0; q1; dataset
ð
(cid:1)
ð
IRQobject q1; dataset

Þ ¼ CRQobject q0

ð
Þ − CRQobject q1

; dataset
(cid:3)
Þ

; dataset

ð

;

Þ∪

such that q0 and q1 are concentric spatial query windows and dataset is a set of vague

spatial objects.

The VSRQcertitude, VSRQdubiety, VSRQdubiety-mval, VSRQcertitude_elements, VSRQdubiety_elements and

VSRQdubiety_elements-mval are defined analogously.

Example 24 In Fig. 24, the VSRQobject(a, b, watershed_geo) is issued over watersheds of the
running example described in Section 1.1, considering the spatial query windows a and b. A
crisp spatial attribute was used just for the sake of simplicity, but a vague spatial attribute can
be used instead.

9 Vague spatial OLAP

The vague spatial OLAP (vSOLAP) comprises a set of complex multidimensional queries
described in this section, extended with vague spatial aggregation functions detailed in
Section 7 and the vague spatial predicates described in Section 8.

Geoinformatica

Definition 24 Let c be a cuboid such that c = 〈C,TypeAttr0x0,…,TypeAttrtxt 〉 . The slice-and-dice
operation determines a slice to match fixed values of at least one attribute xi of the cuboid c,
and a dice to match ranges for at least one of the remaining attributes xj of the cuboid c (i ≠ j).
The slice and the dice might assume conventional predicates or spatial predicates.

Example 25 Consider the cuboid p = 〈Cpesticide_application,watershed_geo, year, pestbrand〉,
the base query Q1, and the other queries shown in Table 3, whose spatial predicates are
underlined. The query Q2 indicates a slice-and-dice operation over the cuboid p. There is a
spatial predicate in the dice (IRQobject), which retrieves the geometries of watersheds that
intersect the spatial query window w1. The other predicates involve only conventional
attributes.

Definition 25 Let L be a lattice of cuboids such that L = 〈C, c0,…,cz, E〉. The drill-down
operation is denoted drill-down(cy, cx) and corresponds to firstly issue a query over the
cuboid cy, and subsequently issue a query over the cuboid cx, such that cy→* cx (there is at
least one way whose edges link cy and cx). The drill-down operation progressively fetches
data according to attributes of finest granularity, and therefore fetches lower levels of a given
hierarchy, by requiring attributes of linked cuboids.

Definition 26 Let L be a attice of cuboids such that L = 〈C, c0,…,cz, E〉. The roll-up operation
is denoted roll-up(cx, cy) and corresponds to firstly issue a query over the cuboid cx, and
subsequently issue a query over the cuboid cy, such that cy→* cx (there is at least one way whose
edges link cy and cx). The roll-up operation progressively fetches data according to attributes of
coarser granularity, and therefore fetches upper levels of a given hierarchy, by requiring
attributes of linked cuboids.

Note that roll-up is the inverse of drill-down. Both can be performed not only over
limited to
attributes that are adjacent
geometries of the same dimensionality between the hierarchy levels. Instead,
they
may change the dimensionality of geometries along the hierarchy of a spatial

in a hierarchy.

they are not

In addition,

Fig. 24 A VSRQobject issued on the crisp spatial attribute watershed_geo

Geoinformatica

Query Description

Q1

Q2

Table 3 Examples of queries regarding the running example detailed in Section 1.1

Retrieve the sum of appliedtons by year, by pestbrand

Retrieve the sum of appliedtons by year, by pestbrand according to the following restrictions

Slice: pestbrand = ‘P166’
Dice: watershed_geo INTERSECTS w1 AND 1999 ≤ year ≤ 2009

Q3a

Retrieve the sum of appliedtons by year, by pestbrand according to the following restrictions

Slice: pestbrand = ‘P166’
Dice & Drill-down: agriland_vgeo INTERSECTS w2 AND 1999 ≤ year ≤ 2009

Q3b

Retrieve the sum of appliedtons by year, by pestbrand according to the following restrictions

Slice: pestbrand = ‘P166’
Dice & Drill-down: crop_vgeo INTERSECTS w3 AND 1999 ≤ year ≤ 2009

Q4

Retrieve the sum of appliedtons by year, by pestbrand according to the following restrictions

Q5

Retrieve the sum of appliedtons and the vague spatial union of appliedarea_vgeo by year, by

Slice: pestbrand = ‘P166’
Dice: crop_vgeo.certitude INTERSECTS w3 AND 1999 ≤ year ≤ 2009

pestbrand according to the following restrictions
Slice: pestbrand = ‘P166’
Dice: crop_vgeo.certitude INTERSECTS w3 AND 1999 ≤ year ≤ 2009

dimension, e.g. 2D to 0D and vice-versa, e.g. city_geo ≺ address_geo and crop_vgeo ≺
anthill_vgeo. Sometimes the change occurs more than once and sometimes with levels
without geometry, e.g. 0D sampling points to 1D irrigation channel segments to 2D
agricultural lands to non-geometric watershed names, where watershedname ≺ agriland_vgeo ≺
irrigationchannel_vgeo ≺ samplingpoint_geo.

Example 26 In Table 3, the queries Q3a and Q3b are alternatives of drill-down operations
after the execution of Q2. Consider that watershed_geo ≺ agriland_vgeo ≺ crop_vgeo.
Then, Q3a drills Q2 down with a spatial predicate to retrieve the geometries of agricultural
lands that intersect the spatial query window w2. On the other hand, Q3b drills Q2 down with
a spatial predicate to retrieve the geometries of crops that intersect the spatial query window
w3. Although the IRQobject was used to exemplify the drill-down operation, any other
topological relationship or IRQ could be used instead.

Example 27 In Table 3, an example of roll-up operation is to execute the query Q3a and the
query Q2, subsequently.

Example 28 In Table 3, the query Q4 evaluates the intersection predicate among the
certitude of the crops and the spatial ad hoc query window w3, i.e. Q4 has an IRQcertitude.
Therefore, the dubiety of crop_vgeo is not taken into account.

Example 29 In Table 3, the queries Q1, Q2, Q3a, Q3b and Q4 performed only the well-known
aggregation function of SUM. On the other hand, as the appliedarea_vgeo is a vague spatial
measure it can also be aggregated, as shown in query Q5, using the vague spatial union detailed
in Section 7.1. Rather than vague spatial union, the user could also require the vague spatial
intersection addressed in Section 7.2 or vague spatial difference addressed in Section 7.3,

Geoinformatica

instead. Since the vague spatial union aggregates parts of applied areas that intersect the
certitude of a crop in Q5, it assesses a vague spatial fact as detailed in Section 6.4.

Definition 27 Let c be a cuboid such that c = 〈C,TypeAttr0x0,…,TypeAttrtxt〉. The pivot operation
provides interactive visualization of the cuboid c by switching the axis of at least two attributes.

Example 30 In Fig. 13, the cuboid c0 has the following axis: x = pestkey, y = crop_vgeo and
z = year. A pivot operation was applied on the cuboid c0, as shown in Fig. 25, obtaining the
following axis: x = year, y = crop_vgeo and z = pestkey.

10 Reuse of existing models

In this section, we discuss how vague spatial data, represented according to existing models
that are not aimed at vague SDW, can be adapted and reused in our VSCube conceptual
model. We separate the models according to the shapes they use to address shape vagueness
of a spatial object.

& Models based on arbitrary geometries use arbitrary geometries and may define precomputed
membership values on them. Some of these models adopt geometries with non-disjoint
interiors, as QMM [3, 4], Broad Boundaries [11, 12] and Egg-Yolk [13], while other adopt
geometries with disjoint interior, as VASA [28] and plateau region [20]. They are discussed
in Section 10.1;

& The bitmap model uses rectangular grid cells or hexagonal grid cells with disjoint
interior, each cell holding a precomputed membership value [44], and is discussed in
Section 10.2;

& The triangulation model uses triangles with disjoint interiors, whose vertices hold

membership values [14, 43], and is discussed in Section 10.3; and

& The linear feature model uses line segments whose vertices hold membership values

[14], and is discussed in Section 10.4.

10.1 Models based on arbitrary geometries

Considering that according to QMM, Lmax is the maximal extent of a vague spatial object z
and Lmin is the minimal extent of z, then the following assignments create a vague spatial
object o to be used in the VSCube conceptual model: o.certitude[0].geo←Lmin and
o.dubiety[0].geo←Lmax–Lmin. QMM encompasses the Broad Boundaries model and the
Egg-Yolk model, therefore the same assignments are applied for these models. The cited
subtraction is essential to enable geometric data aggregation of vague spatial data, which
play a key role in the processing of values of a vague spatial measure, since those models do
not define operators for union, intersection and difference. The cited subtraction is essential
to enable vague spatial predicates, since those models do not provide spatial predicates to
retrieve parts of vague spatial objects, for instance.

If z is a simple or complex vague spatial object modeled according to VASA, then
kernel is the kernel of z, and conjecture is the conjecture of z. Two approaches can be used to
create a vague spatial object o to be used in the VSCube conceptual model, as follows. The
first has the trivial assignments o.certitude[0].geo←kernel and o.dubiety[0].geo←conjecture.

Geoinformatica

Fig. 25 A pivoted cuboid

The second identifies i parts in kernel and j parts in conjecture, and has the assignments
o.certitude[i].geo←kernel[i] and o.dubiety[j].geo←conjecture[j], ∀i, j ≥ 0. The first assign-
ments allow querying whole objects, only certitudes and only dubieties, while the second
assignments allow querying whole objects, only certitudes, only dubieties, elements of the
certitude and elements of the dubiety. Both assignments enable geometric aggregation of
vague spatial data.

Membership values are not assigned and queries involving them are not enabled when
reusing QMM, Egg-Yolk, Broad Boundaries and VASA, since they are exact models.
Conversely, plateau regions are reused to provide membership values from fuzzy models,
as follows. If z is a plateau region, it is composed of several regions z[i] that have a geometry
z[i].geo and a corresponding membership value z[i].mval. Therefore, the following assign-
ments apply to create a vague spatial object o to be used in the VSCube conceptual model,
for i, j, k≥0:

(cid:4)

o: certitude j½ (cid:3) :geo ← z i½ (cid:3):geo
o:dubiety k½ (cid:3):geo←z i½ (cid:3):geo and o:dubiety k½ (cid:3):mval←z i½ (cid:3):mval

; iff z i½ (cid:3):mval¼1:0
; iff 0:0<z i½ (cid:3):mval<1:0

Besides, these assignments enable the geometric data aggregation of vague spatial data

and all vague spatial predicates of the VSCube conceptual model.

10.2 Bitmap model

Bitmaps are reused to provide membership values from fuzzy models, as follows. The same
assignments done for a plateau region are valid if z is a bitmap holding several cells z[i] that
have a geometry z[i].geo and a corresponding membership value z[i].mval. All vague spatial
predicates defined in our VSCube conceptual model are allowed. The operations of union,

Geoinformatica

intersection and difference adapt the grid of cells of the resultant bitmap, and therefore the
guidelines described in [44] should be incorporated in the aggregation of vague spatial data.

10.3 Triangulation model

TINs are reused to provide membership values from fuzzy models, as follows. Considering
that T is a TIN for a fuzzy region, the corresponding vague spatial object o to be used in the
VSCube conceptual model is created as follows. Let T[i] be the i-th triangle of T, such that
T[i] is described by ((x1, y1, z1), (x2, y2, z2), (x3, y3, z3)) where x and y are coordinates and z
are membership values. The following assignments apply:

(cid:4)

o:certitude j½ (cid:3):geo←Δ x1; y1
o:dubiety k½ (cid:3):geo←Δ x1; y1

ð
ð
ð
ð

ð
Þ; x2; y2
ð
Þ; x2; y2

Þ
Þ; x3; y3
ð
Þ
Þ
Þ
ð
Þ; x3; y3

; iff z1¼z2 ¼z3 ¼1:0
;otherwise

Such that Δ((x1, y1), (x2, y2), (x3, y3)) creates the geometry of a 2D triangle with the vertices
(x1, y1), (x2, y2), (x3, y3). Furthermore, the membership value in o.dubiety[k].mval, is not
precomputed, but is given by the following function whose codomain is]0,1] (proposed by
[43]):

− A
C

x − B
C

y − D
C

ð
; such that A ¼ y1 z2−z3
ð
B ¼ z1 x2−x3
ð
−y3
C ¼ x1 y2
D ¼ − A x1− B y1

Þ þ y2 z3−z1
ð
ð
Þ þ z2 x3−x1
Þ þ x2 y3
ð
−y1
− Cz3

Þ

Þ þ y3 z1−z2
ð
Þ
Þ þ z3 x1−x2
ð
Þ
ð
−y2
Þ þ x3 y1

where (x1,y1), (x2,y2) and (x3,y3) are the coordinates of the vertices of the triangle T[i], and z1,
z2 and z3 are the membership values of each vertex in T[i], respectively.

The function determines the membership value for every point (x, y) of a triangle
(including its vertices) and does not denote an empty value. Rather,
the value is
calculated when demanded to process vague spatial predicates and aggregation of
vague spatial data.

For instance, the same TIN depicted in Fig. 5c is reproduced in Fig. 26a, where two of its
triangles are highlighted and the spatial query window q is displayed. The black triangle
tblack belongs to the certitude of the vague region, while the gray triangle tgray belongs to the
dubiety of the vague region. Both tblack and tgray have their vertices described by coordinates
and membership values in Fig. 26b. Note that the triangles share one vertex, i.e. (102, 125,
1.0). Therefore, following assignments are valid:

o:certitude j½ (cid:3): geo←tblack
j ≥ 0
ð
Þ
o:dubiety k½ (cid:3):geo←tgray
Þ
ð
k ≥ 0
o:dubiety k½ (cid:3): mval←0:013688525x þ 0:056147541y − 8:404672131

since

ð
Þ þ 119 0:01−1:0

Þ ¼ 3:34
A ¼ 125 0:8−0:01
ð
Þ ¼ 13:7
ð
B ¼ 1:0 112−83
C ¼ 102 119−112
Þ ¼ −244
ð
D ¼ −3:34 (cid:4) 102−13:7 (cid:4) 125 þ 244 (cid:4) 0:01 ¼ −2050:74

Þ þ 112 1:0−0:8
ð
ð
Þ þ 0:01 102−112
ð
Þ þ 83 125−119

ð
Þ þ 0:8 83−102
ð
Þ þ 112 112−125

The vague spatial predicates of the VSCube conceptual model are enabled as follows.
Although we discuss the IRQ, the same concepts are applicable to the CRQ. When

Geoinformatica

evaluating an IRQobject, if one vertex of a triangle in o.certitude.geo or in o.dubiety.geo
intersects the spatial query window q, then the corresponding vague spatial object o is an
answer. The evaluation of IRQcertitude and IRQdubiety are done analogously considering the
intersection of q against o.certitude.geo and the intersection of q against o.dubiety.geo,
respectively. For instance, consider the vague region and the spatial query window q shown
in Fig. 26a. Both tblack and tgray include the vague region in the result set of the IRQobject,
while tblack includes the vague region in the result set of the IRQcertitude and tgray includes the
vague region in the result set of the IRQdubiety.

When evaluating IRQcertitude_elements or IRQdubiety_elements, if one vertex of a given triangle
intersects the spatial query window q, then the corresponding triangle is an answer. For
example, tblack satisfies an IRQcertitude_elements and tgray satisfies an IRQdubiety_elements, both
against the spatial query window q shown in Fig. 26a.

When evaluating IRQdubiety_elements-mval, if at least one vertex of a given triangle intersects
the spatial query window q and all vertices have an adequate membership value, then the
corresponding triangle is an answer. For example, tgray does not satisfy an IRQdubiety_elements-
mval against the spatial query window q for membership values greater than 0.6 in Fig. 26a
(note there is a vertex with membership value of 0.01). Analogously, a IRQdubiety-mval would
be processed and have an empty result set for the same spatial query window q and
membership values greater than 0.6.

The membership values of the vertices of triangles must be calculated not only when
evaluating vague spatial predicates on a TIN, but also to allow aggregation of vague spatial
data. The operations of union, intersection and difference may require retriangulation of the
input TINs, and therefore the guidelines described in [14] are incorporated in the aggregation
of vague spatial data. In order to execute the algorithms proposed by [14], the vague spatial
object o can be transformed into a TIN using the reverse assignments, considering T[i] is the
i-th triangle of a TIN T, such that T[i] is described by ((x1, y1, z1), (x2, y2, z2), (x3, y3, z3)),
where x and y are coordinates and z are membership values. The following reverse assign-
ments to transform a vague spatial object into a TIN apply:

8

>>>><
>>>>:

ð

ð
ð
where
ð
ð
T i½ (cid:3)← xd1; yd1; z1
where

ð
Þ; xc2; yc2; 1:0
T i½ (cid:3)← xc1; yc1; 1:0
ð
Þ; xc3; yc3
ð
Þ; xc2; y2
ð
xc1; yc1
ð
Þ; xd3; yd3; z3
Þ; xd2; yd2; z2
ð
ð
ð
ð
Þ; xd3; yd3
Þ; xd2; yd2
xd1; yd1
and z1; z2; z3 are their calculated membership values; respectively

Þ
Þ; xc3; yc3; 1:0
Þ;
Þ are vertices of
Þ

Þ are vertices of

Þ;

ð

Þ

ð

Þ

the triangle in o:certitude j½ (cid:3):geo

the triangle in o:dubiety k½ (cid:3):geo

(a) A TIN and a spatial query window

(b) Triangles of the TIN (tblack and tgray)

Fig. 26 A spatial range query over a TIN. a A TIN and a spatial query window. b Triangles of the TIN
(tblack and tgray)

Geoinformatica

10.4 Linear feature model

Lines with gradual transition are reused to provide membership values from fuzzy models.
Considering that l is a line with gradual transition, the corresponding vague spatial object o
to be used in the VSCube conceptual model is created as follows. Let l[i] be the i-th segment
of l, such that l[i] is described by ((x1, y1, z1), (x2, y2, z2)) where x and y are coordinates and z
are membership values. The following assignments apply:

(cid:4)

o:certitude j½ (cid:3):geo←Line x1; y1
o:dubiety k½ (cid:3):geo←Line x1; y1

ð
ð
ð
ð

Þ
Þ
ð
Þ; x2; y2
Þ
Þ
ð
Þ; x2; y2

; iff z1 ¼ z2 ¼ 1:0
; otherwise

Such that Line((x1, y1), (x2, y2)) creates the geometry of a line with the endpoints (x1, y1), (x2,
y2). Furthermore, the membership value in o.dubiety[k].mval, is not precomputed, but is
given by the linear interpolation on ((x1, y1, z1), (x2, y2, z2)).

The vague spatial predicates of the VSCube conceptual model are enabled similarly to
those described in Section 10.4. The operations of union, intersection and difference may
require splitting of lines used as input, and therefore the guidelines described in [14] are
incorporated in the aggregation of vague spatial data. In order to execute such methods, the
vague spatial object o can be transformed into a line with gradual transition using the reverse
assignments, considering l[i] is the i-th segment of a line l, such that l[i] is described by ((x1,
y1, z1), (x2, y2, z2)), where x and y are coordinates and z are membership values. The
following reverse assignments to transform a vague spatial object into a line with gradual
transition apply:

8

>>>><
>>>>:

ð
ð

Þ;
Þ

l i½ (cid:3)← xc1; yc1; 1:0

ð
ð
Þ are endpoints of
where
l i½ (cid:3)← xd1; yd1; z1
Þ;
Þ
ð
ð
Þ are endpoints of
Þ
where
and z1; z2 are their membership values; respectively

ð
Þ; xc2; yc2; 1:0
xc1; yc1
Þ
ð
Þ; xc2; y2
Þ; xd2; yd2; z2
ð
ð
Þ; xd2; yd2
ð
xd1; yd1

ð

the segment in o:certitude j½ (cid:3):geo

the segment in o:dubiety k½ (cid:3):geo

11 Conclusion

In this paper, we proposed the VSCube conceptual model to represent and manipulate spatial
vagueness in spatial data warehouses, allowing the analysis of business scores related to vague
spatial data, and therefore improving the decision-making process. Our model comprises attribute
types, hierarchies and their categories, dimensions, measures, fact, vague spatial fact, data cube
and lattice of cuboids to manipulate conventional data, non-geometric spatial data, crisp spatial
data and, mainly, vague spatial data. Not only geometric shapes (as exact models) but also
membership values (as fuzzy models) are supported. Our model also encompasses vague spatial
aggregation functions (vague spatial union, vague spatial intersection and vague spatial difference)
and vague spatial predicates (intersection range queries, containment range queries and vague
spatial range queries) to enable vague SOLAP queries. Furthermore, the vague SOLAP and the
operations of slice-and-dice, drill-down, roll-up and pivot have been described. In order to
corroborate the applicability of our VSCube conceptual model, we detailed an application

Geoinformatica

concerning pest control in agriculture as a running example. With our VSCube conceptual model,
spatial data warehouses can be modeled addressing phenomena characterized by shape vagueness.
As future work, we intend to automate the identification of topological relationships
derived from the property of transitivity in hierarchies, investigate mapping rules from the
conceptual level to the logical level and define a set of integrity constraints considering the
Object Constraint Language (OCL). We also intend to investigate the combination of spatial
vagueness with temporal vagueness and to provide support for vague non-geometric spatial
attributes that may use fuzzy labels to indicate proximity or reference for locations, e.g.
“very close to the university campus” and “in front of the stadium”, and consequently
provide support for a vague conventional dimension. Besides, we intend to tackle another
type of data that are not vague and neither crisp, i.e. those that have a statistically estimated
precision, and then accept non-fuzzy concepts having probabilistic uncertainty (i.e. known
precision for the position of vertices with known ellipses of errors, known quantitative
values with known probabilistic precisions and standard deviation). Finally, we plan to
design and implement a vague SOLAP tool, which will require further investigation on
vague spatial data display and visualization, and on map generalization.

Acknowledgments This work has been supported by the following Brazilian research agencies: FAPESP,
CAPES, CNPq, INEP, and FINEP. The second author is funded by the grant #2011/23904-7, São Paulo
Research Foundation (FAPESP).

References

1. Bédard Y, Han J (2009) Fundamentals of spatial data warehousing for geographic knowledge discovery.

In: Geographic data mining and knowledge discovery, 2nd. Taylor & Francis

2. Bejaoui L (2009) Qualitative topological relationships for objects with possibly vague shapes: implica-
tions on the specification of topological integrity constraints in transactional spatial databases and in
spatial data warehouses. PhD Thesis, Université Laval, Québec

3. Bejaoui L, Pinet F, Bédard Y, Schneider M (2009) Qualified topological relations between spatial objects

with possible vague shape. IJGIS 23(7):877–921

4. Bejaoui L, Pinet F, Schneider M, Bédard Y (2010) OCL for formal modelling of topological constraints

involving regions with broad boundaries. GeoInformatica 14(3):353–378

5. Bimonte S, Kang M-A (2010) Towards a model for the multidimensional analysis of field data. In:

ADBIS. pp 111–125

6. Bimonte S, Tchounikine A, Miquel M, Pinet F (2010) When spatial analysis meets OLAP: multidimen-

sional model and operators. IJDWM 6(4):33–60

7. Boulil K, Bimonte S, Mahboubi H (2010) Towards the definition of spatial data warehouses integrity

constraints with spatial OCL. In: DOLAP. pp 31–35

8. Burrough PA, Frank AU (eds) (1996) Geographic objects with indeterminate boundaries. GISDATA 2.

Taylor & Francis

9. California Department of Public Health. Agricultural pesticide use web mapping service. Available at:

http://www.ehib.org/tool.jsp?tool_key=18. Visited: Mar 2013

10. Ciferri C, Ciferri R, Gómez L, Schneider M, Vaisman A, Zimányi E (2013) Cube algebra: a generic user-

centric model and query language for OLAP cubes. IJDWM 9(2):39–65

11. Clementini E, Di Felice P (1996) An algebraic model for spatial objects with indeterminate boundaries.
In: Burrough PA, Frank AU. Geographic objects with indeterminate boundaries—GISDATA 2:155–
169

12. Clementini E, Di Felice P (1997) Approximate topological relations. Int J Approx Reason 16:173–204

Geoinformatica

13. Cohn AG, Gotts NM (1996) The egg-yolk representation of regions with indeterminate boundaries. In:
Burrough PA, Frank AU. Geographic objects with indeterminate boundaries—GISDATA 2:171–187
14. Dilo A, Bos P, Kraipeerapun P, de By R (2006) Storage and manipulation of vague spatial objects using
existing GIS functionality. In: Bordogna G, Psaila G. Flexible databases supporting imprecision and
uncertainty. Springer, pp 293–321

15. Dilo A, de By RA, Stein A (2007) A system of types and operators for handling vague spatial objects.

IJGIS 21(4):397–426

16. Egenhofer MJ, Franzosa RD (1991) Point set topological relations. IJGIS 5(2):161–174
17. Elmasri R, Navathe S (2010) Fundamentals of database systems, 6th. Addison-Wesley
18. Erwig M, Schneider M (1997) Vague regions. In: SSD, LNCS 1262. Springer Verlag, pp 298–320
19. Hazarika S, Cohn A (2001) A taxonomy for spatial vagueness, an alternative egg-yolk interpretation. In:

COSIT. pp 92–107

20. Kanjilal V, Liu H, Schneider M (2010) Plateau regions: an implementation concept for fuzzy regions in

spatial databases and GIS. In: IPMU, LNAI 6178:624–633

21. Leonard R, Knisel W, Still D (1987) GLEAMS: groundwater loading effects of agricultural management

systems. Trans ASAE 30(5):1403–1418

22. Leung Y (1987) On the imprecision of boundaries. Geogr Anal 19(2):125–151
23. Malinowski E, Zimányi E (2008) Advanced data warehouse design: from conventional to spatial and

24. Malinowski E, Zimányi E (2007) Logical representation of a conceptual model for spatial data ware-

25. Morris A, Kokhan S (eds) (2006) Geographic uncertainty in environmental security. Springer
26. Nascimento SM, Tsuruda RM, Siqueira TLL, Times VC, Ciferri RR, Ciferri CDA (2011) The spatial star

temporal applications. Springer

houses. Geoinformatica 11(4):431–457

schema benchmark. In: Geoinfo. pp 73–84

Texas A&M University TR-406

138

27. Neitsch S, Arnold J, Willians J (2011) Soil and water assessment tool: theoretical documentation. In:

28. Pauly A, Schneider M (2010) VASA: an algebra for vague spatial data in databases. Inf Syst 35(1):111–

29. Perez D, Somodevilla M, Pineda IH (2010) Fuzzy spatial data warehouse: a multidimensional model. In:

Advances in decision support systems. Intech

30. Pinet F, Schneider M (2010) Precise design of environmental data warehouses. Oper Res

31. Reis R, Egenhofer M, Matos J (2006) Topological relations using two models of uncertainty for lines. In:

10(3):349–369

Accuracy. pp 286–295

32. Salehi M (2009) Developing a model and a language to identify and specify the integrity constraints in

spatial data cubes. PhD Thesis, Université Laval, Québec

33. Silva J, Castro Vera AS, Oliveira AG, Fidalgo R, Salgado AC, Times VC (2007) Querying geographical

data warehouses with GeoMDQL. In: SBBD. pp 223–237

34. Schneider M (2008) Fuzzy spatial data types for spatial uncertainty management in databases. In:

Handbook of research on fuzzy information processing in databases. IGI. pp 490–515

35. Siqueira TLL, Ciferri CDA, Times VC, Ciferri RR (2011) The SB-index and the HSB-index: efficient

indices for spatial data warehouses. Geoinformatica 16(1):165–205

36. Shi Y, Zhang C, Liang A, Yuan H (2007) Fuzzy control of the spraying medicine control system. In:

CCTA. pp 1087–1094

In: GISCience. pp 173–186

37. Siqueira TLL, Ciferri RR, Times VC, Ciferri CDA (2012) Towards vague geographic data warehouses.

38. Siqueira TLL, Mateus RC, Ciferri RR, Times VC, Ciferri CDA (2011) Querying vague spatial informa-

tion in geographic data warehouses. In: AGILE conference. pp 379–397

39. Stefanovic N, Han J, Koperski K (2000) Object-based selective materialization for efficient implemen-

tation of spatial data cubes. TKDE 12(6):938–958

40. Tang X, Kainz W, Wang H (2010) Topological relations between fuzzy regions in a fuzzy topological

space. Int J Appl Earth Obs Geoinf 12(2):S151–S165

41. Thelin G, Gianessi L (2000) Method for estimating pesticide use for county areas of the conterminous

42. Vaisman A, Zimányi E (2009) A multidimensional model representing continuous fields in spatial data

United States. In: US Geological Survey

warehouses. In: ACM GIS. pp 168–177

43. Verstraete J, De Tré G, De Caluwe R, Hallez A (2005) Field based methods for the modeling of fuzzy
spatial data. In: Petry F, Robinson V, Cobb M. Fuzzy modeling with spatial information for geographic
problems. Springer, pp 42–69

Geoinformatica

44. Verstraete J, De Tré G, Hallez A (2006) Bitmap based structures for the modeling of fuzzy entities.

Control Cybern 35(1):147–164

45. Worboys M (1998) Imprecision in finite resolution spatial data. Geoinformatica 2:257–279

Thiago Luís Lopes Siqueira received the BSc degree in computer science from the State University of São Paulo,
Brazil, in 2006. In 2009, he received the MSc degree in computer science from the Federal University of São Carlos. He
is currently a PhD student at the Federal University of São Carlos, and also an assistant professor in the São Paulo
Federal Institute of Education, Science and Technology in São Carlos, Brazil. His research interests include data
warehouse, spatial databases, spatial vagueness and geographical information systems.

Cristina Dutra de Aguiar Ciferri received the BSc degree in computer science from the Federal University of São
Carlos, Brazil, in 1992. In 1995, she received the MSc degree in computer science from the State University of
Campinas, Brazil. She obtained her PhD degree in 2002 in computer science from the Federal University of
Pernambuco, Brazil. She is currently an assistant professor in the Computer Science Department at
the
University of São Paulo in São Carlos, Brazil. Her research interests include data warehouse, spatial
databases, geographical information systems, cloud databases, heterogeneous and distributed databases,
data integration and data provenance.

Geoinformatica

Valeria Cesario Times received the BSc degree in computer science from the Catholic University of
Pernambuco, Brazil, in 1991. In 1994, she received the MSc degree in computer science from the Federal
University of Pernambuco, Brazil. She obtained her PhD degree in computer science in 1999 from University
of Leeds, United Kingdom. She is currently an assistant professor in the Informatics Center at
the
Federal University of Pernambuco, Brazil. Her research interests include data warehouse, geographical
information systems, spatial databases, moving object databases, autonomous databases and advanced
database applications.

Ricardo Rodrigues Ciferri received the BSc degree in computer science from the Federal University of São
Carlos, Brazil, in 1992. In 1995, he received the MSc degree in computer science from the State University of
Campinas, Brazil. He obtained his PhD degree in 2002 in computer science from the Federal University of
Pernambuco, Brazil. He is currently an assistant professor in the Computer Science Department at the Federal
University of São Carlos, Brazil. His research interests include data warehouse, spatial databases, geograph-
ical information systems, cloud databases, data integration, data provenance, biological and biomedical
databases.

