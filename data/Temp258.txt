International Journal of Geographical Information Science, 2013
Vol. 27, No. 5, 845–865, http://dx.doi.org/10.1080/13658816.2012.721552

Towards generating highly detailed 3D CityGML models from
OpenStreetMap

Marcus Goetz*

GIScience Research Group, Institute of Geography, University of Heidelberg, Heidelberg, Germany

(Received 27 February 2012; ﬁnal version received 03 August 2012)

About one decade has passed since US vice president Al Gore articulated his vision
of Digital Earth (DE). Within this decade, a global multi-resolution and three-dimen-
sional (3D) representation of the Earth, which sums up the DE vision, increasingly
gained interest in both public and science. Due to the desired high resolution of the
available data, highly detailed 3D city models comprise a huge part of DE and they
are becoming an essential and useful tool for a range of different applications. In the
past as well as at present, 3D models normally come from a range of different sources
generated by professionals, such as laser scans or photogrammetry combined with 2D
cadaster data. Some models are generated with semi-automated or fully automated
approaches, but in most cases manual ﬁne tuning or even manual construction from
architectural plans is required. Further beyond outdoor city models, DE additionally
envisages the provision of indoor information. That is, the interior structure of public
or publically accessible buildings, such as airports or shopping malls, is represented
and made available in 3D; however, at the moment, such models are mostly cre-
ated by hand and essentially based on professional data sources. In contrast to such
professional data, which is mainly captured by surveyors or companies, the last few
years revealed the phenomenon of crowdsourced geodata, which receives an increasing
attractiveness as an alternative data source for many Geographic Information Systems
(GIS). Former research already demonstrated the power and richness of such geodata –
especially OpenStreetMap (OSM) – and it has also been proved that this non-standard-
ized, crowdsourced geodata can be combined with international standards of the Open
Geospatial Consortium (OGC). For example, CityGML Level-of-Detail 1 (LoD1) and
LoD2 models have already been created automatically from OSM. The research pre-
sented in this article will further continue on the automated generation of CityGML
models from OpenStreetMap. Essentially, a method for the creation of highly detailed
CityGML LoD4 models with interior structures will be explained. By applying the
invented approach on existing OSM data, limitations and restrictions of the IndoorOSM
mapping proposal, the available data and the developed approach are revealed and
discussed.

Keywords: 3D city models; 3D building modeling; CityGML; OpenStreetMap;
volunteered geographic information

Introduction

1.
Couple of years ago at the end of the twentieth century, US vice president Al Gore raised
the term ‘Digital Earth’ (DE), trying to name his vision of a global multi-resolution and

*Email: m.goetz@uni-heidelberg.de

© 2013 Taylor & Francis

846

M. Goetz

three-dimensional (3D) representation of the Earth enabling its users to consume a vast
amount of geo-referenced information about the environment (Gore 1999). More than one
decade later, geo-browsing applications, such as Google Earth or Digital Globe, brought
different aspects of DE to the broad public, but ‘they still fall short of Gore’s vision of
a DE’ (Craglia et al. 2012). Essentially, DE will not only visualize physical features of
the Earth but also contain semantic and qualitative information about both the past and
the present and, furthermore, exploiting the full range of information for predictions about
the future (Craglia et al. 2012). Thereby, the scale and granularity can vary from global
and coarse perspectives, up to ﬁne-grained and detailed models. Not only limited to the
context of DE, but deﬁnitely comprising a huge and important part of it, highly detailed
virtual 3D city models are already utilized for various tasks in different applications, such
as navigation (Coors and Zipf 2007), environmental simulations or facility management
(Kolbe 2009); emergency response or rescue operations (Kolbe et al. 2008); noise map-
ping, training simulators, architecture or city planning (Shiode 2001, Döllner et al. 2006).
Thereby, not only the geometry but also semantic aspects about the building, such as its
function or type, are becoming more and more important. Currently, the creation as well
as the maintenance of such models involves manual work to a considerable degree; thus,
obtaining 3D models is still quite expensive. Nevertheless, in the context of DE, recent
and up-to-date models are desirable because dynamic and interactive observation systems
are one key feature within the vision of DE (Craglia et al. 2012). Therefore, automatic
procedures for the generation of differently grained 3D models are required.

The above-mentioned application domains are typically related to outdoor areas; how-
ever, the idea of DE is way beyond that, additionally aiming at the possibility of consuming
and exploring information about building interiors, such as the accurate description of
single rooms or apartments. With the increasing size and complexity of public buildings
such as airports, shopping malls or hotels, the opportunity to ‘explore built environments
moving from the inside of buildings to the whole metropolis’ (Craglia et al. 2012) becomes
more important, additionally raising the need to apply the above-mentioned (outdoor)
applications to indoor spaces. Not only limited to the context of DE, indoor spaces are
receiving an increasing attention in science (Jensen et al. 2011). According to Winter
(2012), there are two reasons for this increase: on the one hand, a huge demand for indoor
information and, on the other hand, a lack of knowledge to satisfy this demand. One of the
biggest arguments for the need of indoor information is that nowadays many human activ-
ities, such as orientation or wayﬁnding, are related to indoors. A study about the average
North American recently revealed that, due to activities such as working, living or shop-
ping, about 90% of the time is spent inside buildings (APS 2008). Very likely, the amount
of time spent indoors reaches similar rates in other developed countries or megacities. It is
obvious that people spending so much time indoors are often confronted with foreign envi-
ronments (Winter 2012). That is, for tasks like indoor routing or wayﬁnding, information
about indoor environments is required and it seems apparent that the area of indoor maps
and applications is an emerging market. This is underpinned by several global companies,
such as Bing (2011), Google (2011) or Navteq (2011), starting to offer indoor content, yet
limited to 2D, in their well-known map applications. However, 3D models are much richer
concerning both geometry and semantics than 2D maps; thus it is and in the future will
be even more important to obtain and maintain 3D models for indoor spaces. For complex
scenarios and applications, such as 3D indoor navigation, it has been shown that a 3D visu-
alization is beneﬁcial for the user (Baus et al. 2001, Coors and Zipf 2007). Additionally,
the vision of DE advocates the provision of 3D information for observing, monitoring and
forecasting the environment (Craglia et al. 2012).

International Journal of Geographical Information Science

847

Following the idea of a ubiquitous accessibility of the DE, it is important to pro-
vide an interoperable access to 3D city models. For this purpose, the Special Interest
Group 3D (SIG 3D) deﬁned the City Geography Markup Language (CityGML), which
soon became the international standard for storing, representing and exchanging 3D urban
objects (Kolbe et al. 2005). The main difference of CityGML to other 3D formats, such
as Virtual Reality Modeling Language (VRML) or Extensible 3D (X3D), is that various
semantic information, such as names or detailed object types about buildings, can be stored
in addition to the geometry. That is, both the visual communication of spatial information
and complex analysis about built environments can be performed with CityGML (Winter
2012). The creation of CityGML normally requires high-quality data, which is captured
by professionals such as architects, public authorities or commercial data providers. Other
existing standards from other application domains, such as Industry Foundation Classes
(IFC) from the Building Information Modeling (BIM) domain, can be transformed to
CityGML (Benner et al. 2005, Isikdag and Zlatanova 2009). Nevertheless, the bigger part,
especially of the highly detailed models (Level-of-Detail 4, LoD4), is created manually by
using Computer Aided Design (CAD) ﬁles and 3D graphic applications.

In contrast to professional and proprietary data, in the last couple of years, a new
source for geodata evolved: thousands of humans acting as remote sensors (Goodchild
2007) collaboratively collect crowdsourced geodata – also called Volunteered Geographic
Information (VGI). That is, individuals contribute a massive amount of different (valu-
able) data, and a future DE should deﬁnitely exploit the new opportunities arising from
this development, turning citizens into major information providers (Craglia et al. 2012).
In particular, crowdsourced geodata bears an enormous potential of ‘moving from an essen-
tially static representation of the Earth to one that is dynamic and interactive’ (Craglia
et al. 2012). Regarding the quantity and quality of VGI, recent investigations revealed
that – especially in urban areas – VGI is able to compete against proprietary data sources
(Haklay 2010, Mooney et al. 2010, Zielstra and Zipf 2010, Neis et al. 2012). The crowd-
sourcing communities (one of the most popular examples is OpenStreetMap, OSM1) do
not only contain 2D data but also contain 3D information. The potential of VGI as a data
source for the visualization of urban regions with 3D city models in a 3D Spatial Data
Infrastructure (SDI) (Zipf et al. 2007) has already been demonstrated by Schilling et al.
(2009). For the application within DE and other application domains, researchers are trying
to merge unstructured and non-standardized VGI with CityGML. According to Goetz and
Zipf (2012), it is possible to transform semantic information from OSM to CityGML, as
well as to automatically generated building block models with simple roof geometries. The
generation of fully detailed models with interior structure has, due to the lack of indoor tag-
ging schemas in OSM, not been possible so far. However, with IndoorOSM such a schema
has just recently been invented (Goetz and Zipf 2011) and proposed to the OSM commu-
nity (OSM 2012a). This schema ought to contain all relevant information required for a
highly detailed CityGML building model with interior structures. Therefore, the main con-
tribution of this article is the development of a methodology for the automatic generation
of highly detailed CityGML models by using VGI from OSM. In doing so, it will be shown
that OSM can serve as a reasonable data source for professional applications and analyses,
for example, urban planning (Shiode 2001), environmental noise pollution (Czerwinski
et al. 2006) or indoor navigation (Mäs et al. 2006).

This article is organized as follows: following introduction, Section 2 provides an
overview on related work. Thereby, both CityGML and OSM, as well as existing research
approaches, are discussed. Section 3 identiﬁes relevant constraints and requirements, which
need to be fulﬁlled by IndoorOSM data, and further presents the developed approaches

848

M. Goetz

for an automatic CityGML model generation. Having sketched out how such a genera-
tion can be performed, Section 4 applies the developed approaches to current OSM data,
investigates the results and provides a comprehensive discussion on the limitations and
assumptions of the IndoorOSM mapping proposal. Section 5 concludes with a summary
and provides an outlook on future work.

2. Background and related work

This section elaborates required background knowledge as well as existing related work.
In Section 2.1, an introduction to CityGML is provided. Thereafter, Section 2.2 brieﬂy
describes the OSM project and Section 2.3 gives a detailed description of a recently devel-
oped model for mapping indoor information in OSM, namely IndoorOSM. Section 2.4
provides a brief insight into related work from the ﬁeld of procedural city modeling and
building reconstruction.

2.1. Virtual 3D city models with CityGML
CityGML has been designed with the aim of an interoperable access to 3D city models in
SDIs. One main characteristic of CityGML is that the model ‘distinguishes between build-
ings and other man-made artifacts, vegetation, waterbodies, and transportation facilities
like streets and railways’ (Kolbe et al. 2005). Since different applications require differently
detailed city models, CityGML features ﬁve LoDs, ranging from a simple 2.5-dimensional
Digital Terrain Model (DTM) (LoD0) to a highly detailed model with interior structures
(LoD4). Figure 1 depicts all the different LoDs.

For the representation of thematic, spatial and semantic information of buildings and
building parts, CityGML features a very detailed concept of a building model (Gröger et al.
2008). The central class of this model is the so-called _AbstractBuilding and instances of
this class are Buildings or BuildingParts. Different entities of _AbstractBuilding can be
organized in an arbitrarily deep hierarchy (Gröger et al. 2008). The class itself is derived
from the more general class _CityObject; thus, _AbstractBuilding also inherits all the

LoD0

LoD1

LoD2

LoD3

LoD4

Figure 1. The ﬁve different Level-of-Details in CityGML (Gröger et al. 2008).

International Journal of Geographical Information Science

849

properties of _CityObject, such as gml:name or address. Additionally, _AbstractBuilding
contains different semantic, quantitative or metric information, such as function, roofType,
measuredHeight and storeysBelowGround. Furthermore, various geometric objects, such
as Geometries, MultiSurfaces or Solids, represent the geometry of the corresponding
entity. Thereby, the amount and type of geometric objects also depends on the respec-
tive LoD; so, for example, a complete LoD1 model is described with either Solid or
MultiSurface. In contrast, a LoD2 building geometry (and also LoD3 and LoD4) is sep-
arated into a RoofSurface, WallSurface, GroundSurface or ClosureSurface. The given
introduction to CityGML ought to be enough for understanding the research presented
in this article. For more information, please refer to the CityGML standard (Gröger et al.
2008).

2.2. Crowdsourced geodata from OSM
Due to projects such as Wikipedia2 and other Web 2.0 initiatives,3 the phenomenon of col-
laboratively collected data became mature. With the ubiquitous availability of GPS-enabled
devices, such as smartphones or cameras, users also commenced to collect and share geo-
referenced data, such as geo-tagged photos or GPS Exchange Format (GPX) tracks. Some
examples for VGI are Flickr4 (geo-tagged images) or Wikimapia5 (crowdsourced map).

However, in the author’s opinion, one of the most popular and most successful projects
for crowdsourced geodata is OSM. With steadily increasing amount of members – currently
more than 500,000 members (OSM 2011) – the community aims at creating a free online
world map with a great variety of data. Thereby, OSM does not only contain information
about natural areas or streets but also contain various kinds of semantic information, such
as addresses and building types, as well as different kinds of 3D information, such as
the building height and building roof type. In early 2012, the amount of streets, typically
comprising the biggest fraction of the OSM map features, has even been surpassed by the
amount of buildings.6

The users of the OSM community contribute data in two ways: on the one hand,
they can create 2D geometries and, on the other hand, they can annotate the geome-
try with additional information. For the creation of geometries, OSM provides so-called
nodes describing geo-referenced points. Several nodes can be further combined to create
so-called ways, describing either linestring geometries or polygons. More complex poly-
gons, such as those with holes, or complex relationships between OSM features, such as
turn restrictions or tours, can be expressed by using relations. For adding additional infor-
mation to an OSM feature, it is possible to tag the geometry with key-value pairs. Thereby,
the key describes some kind of information domain or characteristic (e.g., highway,
building, etc.) and the value reﬁnes the information (e.g., primary, university, etc.). The
amount of key-value pairs is unlimited as well as the key-value pairs themselves. However,
there are community-accepted key-value pairs. Those are listed on the Map Feature
Wiki Page (OSM 2012b). In contrast, Tagwatch (2011) provides a list of all currently
used keys.

Various applications such as OSM-WMS (Goetz et al. 2012), OpenRouteService (Neis
and Zipf 2008) or OSM-3D (Over et al. 2010) demonstrate the richness of OSM data,
as well as the possibility to combine non-standardized VGI with global standards and
quasi-standards of the Open Geospatial Consortium (OGC) (e.g., WebMapService or
Web3DService) in SDIs. Of particular interest for this article, it has also been demon-
strated that the creation of CityGML LoD1 and LoD2 models based on OSM is feasible
(Goetz and Zipf 2012).

850

M. Goetz

2.3.

IndoorOSM: mapping the indoor world in OSM

Motivated by commercial indoor maps and products, such as Bing Maps Venue Maps
(Bing 2011), Google Maps for Indoors (Google 2011) or Navteq Destination Maps (Navteq
2011), and convinced by the increasing need for indoor maps and applications, researchers
and VGI communities think about how to gather and use (open) data for indoor applica-
tions. Trying to push the OSM community toward indoors, an OSM-based indoor extension
has been recently invented by Goetz and Zipf (2011).

The schema follows existing OSM methodologies; thus, it only uses nodes, ways, rela-
tions and key-value pairs. That is, existing OSM editors, such as JOSM7 or Potlatch,8 are
suitable for mapping IndoorOSM data. The schema is deﬁned as follows: a whole building
is represented as one OSM relation, whereas the different relation members (the children
of the relation) are the different building levels (ﬂoors). A level itself consists of one or
several closed way(s) for representing the shell of the level, that is the outer boundary, and
several other closed ways representing the inner building parts (e.g., rooms, corridors, etc.).
3D information such as the height of a level or the height of a building part is attached as
a key-value pair to the corresponding OSM feature with the key height and corresponding
values (e.g., 3, 6 ft, etc., the default unit is meter). That is, for each level and its inner
parts, a two-dimensional (2D) footprint geometry plus additional 3D information is avail-
able. Further semantic information, such as room names, level names, level numbers and
so on are attached as key-value pairs to the corresponding OSM feature. Figure 2 depicts
an exemplary ﬂoor plan of a building, including the outer shell and the inner parts of the
ﬂoor.

In IndoorOSM, information about windows is provided by adding nodes to the OSM
features which represent the level shells. Thereby, the location of the node represents the
2D center of the window (from a bird’s perspective). Information about the breast, width
and height is attached via corresponding keys.

Figure 2. Exemplary ﬂoor plan of a building, which is mapped according to IndoorOSM in JOSM.

International Journal of Geographical Information Science

851

Information about doors is provided in a similar way: a node represents the centric
position of the door, whereby the node is attached to one of the corresponding two building
part features. Information about the width and height is again provided via keys. By tag-
ging a door node with connector:ids, a semantic description of a connection to other OSM
features is possible. Essentially this tag is used for vertically connected doors (e.g., in
a staircase or elevator). The value of the key is the OSM-id of the other feature; if a
door is connected to several features, then multiple IDs can be added. To conclude, the
IndoorOSM model contains detailed information about the geometry of the interior struc-
ture of a building and essentially all required data for highly detailed CityGML models are
available. Goetz and Zipf (2011) and OSM (2012a) provide more information and detailed
descriptions of IndoorOSM.

2.4. Procedural modeling and building reconstruction
The creation of 3D building or city models is an important task. Instead of generating the
models manually, more and more efforts are undertaken toward an automatic generation
by using various kinds of data sources. For example, the extraction of 3D buildings models
from airborne lidar has been researched intensively (Weidner and Förster 1995, Maas and
Vosselman 1999, Brenner 2005, Kada and McKinley 2009, Malambo and Hahn 2010).
Similar to that, the generation of 3D building models from aerial imagery has also been
discussed (Wefelscheid et al. 2011). Furthermore, shape grammars (Stiny and Gips 1971)
or split grammars (Wonka and Wimmer 2003) have been used for building reconstruction
purposes (Brenner and Ripperda 2006). A comprehensive overview on existing approaches
is provided by Förstner (1999), Bauer et al. (2002), Ribarsky et al. (2002) and Hu et al.
(2003).

An approach for procedural modeling of cities has been presented by Parish and Müller
(2001). The authors try to generate city models from scratch by using a comprehensive set
of rules. However, the resulting model is very synthetic as both the placement and the
geometry of the buildings are based on stochastic and road network geometries, rather
than on real-world building data.

Wonka and Wimmer (2003) present their work toward an automatic modeling of archi-
tecture. Although they demonstrate the feasibility of their approach, they do not provide
a real-world example, but state that a comprehensive amount of grammar rules would be
required for such a building reconstruction. Semantic information or indoor spaces are also
not considered.

A concept for modeling and representing building models is presented by Döllner and
Buchholz (2005). Although this approach leads to visually appealing results, the generated
models lack geometric details. Essentially, windows and doors are not explicitly repre-
sented as geometry, but only visualized via textures. Furthermore, indoor spaces are not
considered at all.

Müller et al. (2006) present a novel shape grammar, namely CGA shape, which pro-
duces building models with high geometric detail, but their approach has two major
drawbacks: on the one hand, for reconstructing buildings by using real building footprints,
a comprehensive amount of complex rules needs to be deﬁned manually; on the other hand,
their approach only reconstructs the outer appearance of the building, but neither semantics
nor interior structures are considered.

Focusing more on the indoor environments, a grammar for the generation of 3D indoor
models has been developed by Gröger and Plümer (2010). They state that their approach
generates interior models with semantic information, but a comprehensive use case based

852

M. Goetz

on real-world data is not provided. Additionally, their approach is quite limited regarding
the shape of the different rooms and is only capable to generate box-based rooms with
rectangular corners and parallel sides.

Regarding the generation of CityGML models, Falkowski et al. (2009) discusses the
semi-automatic generation from images, and Isikdag and Zlatanova (2009) provide some
ﬁrst ideas toward the automatic generation of CityGML based on Industry Foundation
Classes (IFCs), but again real-world examples are missing.

To conclude this brief review, it can be stated that there are different approaches
available, but they mainly focus on the outdoor visualization. The inclusion of semantic
information is often missing and most approaches lack real-world examples. Furthermore,
the generation of buildings with indoor spaces is hardly discussed.

3. Generating CityGML from OSM
According to Goetz and Zipf (2012), the generation of CityGML LoD1 and LoD2 from
OSM is feasible. Building upon this work, the following sections focus on the generation
of CityGML LoD3 and LoD4 models. The next subsection elaborates the constraints and
requirements, which need to be fulﬁlled by the OSM data. Thereafter, the generation of
LoD3 and LoD4 models is described. Thereby, it is assumed that a building has been ide-
ally mapped according to the IndoorOSM model, thus fulﬁlls the described prerequisites.
A proof-of-concept will be provided in a later section. As an overview, Figure 3 depicts
the general workﬂow for the generation of CityGML LoD3 and LoD4 models, whereby
the former one is represented by the solid boxes and the latter one by both frameworks (the
solid and the dashed one).

Figure 3. General workﬂow for the generation of CityGML LoD3 and LoD4 models.

International Journal of Geographical Information Science

853

3.1. Data constraints and requirements

Basically, users can add any kind of data and information to OSM. Essentially, the con-
tribution is not double-checked beforehand; thus erroneous data needs to be detected
(and corrected) by other contributors. That is, the available data are potentially subject to
errors and missing data. However, in order to generate CityGML LoD3 and LoD4 models,
the provided data needs to satisfy and fulﬁll different topological constraints and met-
ric requirements. This section aims at formally elaborating those. Furthermore, potential
solutions or reasonable assumptions, if available, are discussed.

The ﬁrst requirement is that

(1) level shells of adjacent ﬂoors overlap each other.

This assures that the ﬁnal building model consists of one huge building feature.
Essentially, single isolated ﬂoating building parts, which are independent from the rest
of the building, are avoided.

(2) Walls and their thickness are explicitly mapped.

This means that there is a gap between adjacent building part geometries, representing
the actual wall. In particular, adjacent walls shall not share the same OSM nodes.
Otherwise, the generated model will contain walls with no thickness. However, when
encountering such a circumstance, a possible solution is to automatically compute an
appropriate wall thickness, by, for example, using existent wall thicknesses of other walls
of the same building or by assuming an average wall thickness.

(3) The outlines of building part geometries on the same level (ﬂoor) are pairwise

disjoint.

This means that two adjacent building parts shall not overlap each other. However, a
building part can contain another building part, if and only if the surrounding geometry
completely covers the contained geometry, such as a small room in the middle of a bigger
room.

It is further required that

(4) all building part geometries of one distinct level are completely covered by the

corresponding shell geometry.

That is, building part geometries do not penetrate the corresponding shell geometry
and essentially no building part geometry is completely outside of the corresponding shell
geometry.

(5) Relevant measures for levels, building parts, doors and windows must be provided.

That is, the OSM key height needs to be provided for each building level, building
part, door and window. Furthermore, the OSM key width needs to be provided for each
door and window, as well as the OSM key breast for all windows. If not available, it is
possible either to assume average values (e.g., 2 m for the height of a door) or to derive
the missing measures from the existing ones (e.g., if all building parts of a level have a

854

M. Goetz

height of 2.8 m or less, a total level height of 3.0 or 3.3 m could be assumed). However,
these assessments need to be done rather carefully. Closely related to this, it is furthermore
required that all

(6) provided measures are greater than zero.

This constraint is relevant for all measures, because negative values make no sense.
However, all values which are greater than zero shall be considered during the model
generation, although it is questionable if, for example, a 0.1-m wide door is reasonable.

(7) All provided measures ﬁt to other measure in the building complex.

This means that all provided measures are reasonable in comparison with the other
building elements. Essentially, contradictions between different values, such as a 2.5-m-
high door in a room with a height of 2.2 m, are not allowed. The only exception is that a
room can have a greater height than the containing level, if and only if there is no building
part in the overlying level which partly or completely covers the area of the underlying
building part. This is, for example, the case when mapping a huge hall which extends over
two or more levels.

(8) All measures are not contradictory to the location of the corresponding element.

This means that all provided measures need to be reasonable in comparison with the loca-
tion of the element. This constraint is relevant for doors and windows because it needs to be
guaranteed that their extent ﬁts to the corresponding building part geometry. For example,
a door with a width of 1.5 m does not make sense on a 1-m-wide wall.

For the successful generation of CityGML LoD3 and LoD4 models, the data need to
fulﬁll those eight before-mentioned requirements and constraints. Since they are related
to either simple completeness evaluations or computational geometry, such a validation
can be performed automatically. That is, the feasibility of generating a model can be
checked automatically beforehand. Furthermore, even if the data are not complete or ideal,
some automated adjustments are possible (cf. above). However, these make the models
coarser. It also needs to be stated that – even if the data are ideal – the output always relies
on the contributors’ knowledge. Essentially, broader considerations, such as architectural
feasibility or theory of structures, can neither be validated nor be disproved.

3.2. Generating CityGML LoD3 models

One of the main differences between a LoD2 and a LoD3 building model is that the facade
of the building in LoD3 is represented in a greater detail, because openings, such as doors
or windows, are explicitly represented. In CityGML, the classes Door and Window (both
derived from the abstract class Opening) are used for this purpose. The opening itself is
represented with a gml:MultiSurface geometry.

In order to generate LoD3 models with IndoorOSM data, it is required to gather all
the corresponding level shell geometries (i.e., the closed way(s) representing the outer
shell of a level) in the sequential arrangement of their occurrence in the building (e.g.,
level –1, level 0, level 1, etc.). The total number of levels can be gathered from the OSM
key building:levels. Information about the minimum and maximum levels is also available
with the tags building:min_level and building:max_level. Starting with the minimum level,

International Journal of Geographical Information Science

855

each level shell geometry is extruded with the height of the corresponding level (OSM key
height). Since each additional level must be computed on top of the previous level geom-
etry, an individual level shell geometry z-offset needs to be calculated. The IndoorOSM
model assumes that level 0 is always the ground level; thus, the elevation of underground
levels (level number is less than zero) needs to be reduced according to the height of all
levels between the current level and the ground level. Accordingly, for overground levels
(level number is greater than or equal to zero), the elevation is computed by accumulating
the heights of all previous overground levels.

For the incorporation of doors and windows, the corresponding opening geometries
also need to be considered. Firstly, these geometries must be included as InteriorRings (rep-
resenting holes) while generating the different WallSurface elements. Secondly, the open-
ing geometries are required for the representation of the Opening element in CityGML.
The geometry of an opening is computed as follows: the center of the opening is repre-
sented by the corresponding OSM key node. By bisecting the width of the opening (OSM
key width), the lower left and lower right bounds can be computed. Thereby, the direction
of the wall which contains the opening needs to be considered; thus, the 2D direction vector
in the x-y direction of the wall needs to be calculated. With the usage of the height of the
opening, the upper bounds can also be computed. The opening geometry is represented via
these four bounds (lower left, lower right, upper right and upper left). When computing the
geometry of a door, the z-values of the lower bounds equal the z-offset of the correspond-
ing ﬂoor. In contrast, the OSM key breast must also be considered for the z-values of the
bounds of a window. Figure 4 depicts a schematic visualization of the required IndoorOSM
information.

Following the above-described approaches and methodologies, it is possible to gener-
ate a detailed CityGML LoD3 model by using IndoorOSM data. The basic principle of
generating a LoD3 model from IndoorOSM data is exempliﬁed step by step in Figure 5.
By gathering the level shell geometry of the lowermost building level, a CityGML
GroundSurface element is generated (Figure 5a). Afterward, each segment of the shell
geometry (i.e., each pair of adjacent nodes) is extruded with the height of the corre-
sponding level (Figure 5b). Those are represented as CityGML WallSurfaces. Thereafter,
all windows and doors, which belong to the corresponding level shell, are gathered.
Based on their attributes (i.e., width, height and breast), a CityGML Opening element
is generated. Furthermore, an InteriorRing is attached to the corresponding WallSurface
(Figure 5c). Afterward, it needs to be checked whether the current level contains a
CityGML RoofSurface. Therefore, the level shell geometry of the next higher level is

Width

Width

Height

OSM-node (lat/lon)

Height

Boundary

Breast

Figure 4. Relevant IndoorOSM information for the computation of Opening geometries.

856

(a)

(c)

(e)

(g)

M. Goetz

z

y

x

(b)

(d)

(f)

(h)

Figure 5. Stepwise generation of a CityGML LoD3 building model with IndoorOSM data.

gathered and subtracted from the current level shell geometry. The remainder is then added
as a RoofSurface on top of the current level (Figure 5d).

A similar procedure is performed for computing the GroundSurface of the next higher
level. Thereby, the level shell geometry of the lower level is subtracted from the shell geom-
etry of the upper level and the remainder is stored as a GroundSurface element (Figure 5e).
Again, the different segments of the level shell geometry are extruded with the height
of the level and stored as WallSurface elements (Figure 5f). Opening and InteriorRing
elements are generated based upon the windows and doors and are added to the corre-
sponding WallSurface elements (Figure 5g). Finally – if no more levels are available – the
level shell geometry of the highest level is used for generating the ﬁnal RoofSurface ele-
ment (Figure 5h). Thereby, different roof-related OSM keys, such as building:roof:shape
or building:roof:style, need to be considered (cf. Goetz and Zipf 2012). For multi-story
buildings with more than two levels, the processing steps (d)–(g) are repeated accordingly.

3.3. Generating CityGML LoD4 models

LoD4 models in CityGML are typically the most detailed ones because they include
detailed information about the interior structure of a building. This representation is mainly
achieved by using the CityGML classes Room and IntBuildingInstallation (for interior

International Journal of Geographical Information Science

857

installations such as stairs, railings or pipes). According to the CityGML speciﬁcation,
a room is a semantic object for the representation of free space inside a building and
therefore the room should be closed topologically. The geometry of a room can be rep-
resented by using either gml:Solid or gml:MultiSurface. For a more detailed (semantic)
description of a room, its parts can be further represented with the classes CeilingSurface,
InteriorWallSurface and FloorSurface (all subclasses of _BoundarySurface).

In order to generate CityGML LoD4 models, the outer geometry is computed in the
same way as for LoD3. Additionally, the representation of interior structures needs to be
accomplished. This is realized as follows: besides gathering the different level shell geome-
tries, the different interior building part geometries also need to be obtained from OSM.
Similar to shell geometries, building parts are also represented with a 2D footprint with
additional 3D information attached to this geometry. By extruding the different line seg-
ments of the footprint with the corresponding height, individual InteriorWallSurfaces can
be created. The FloorSurface geometry and the CeilingSurface geometry are both repre-
sented by the footprint polygon itself. In the former case, the polygon is elevated by the
corresponding level elevation and, in the latter case, the geometry is additionally elevated
by the height of the corresponding building part. This allows the creation of rooms that
are not as high as the level. When generating the InteriorWallSurfaces, the occurrence of
Openings must be considered. This is achieved similar to Openings in LoD3; however,
some speciﬁcs have to be considered: when mapping an opening between two adjacent
elements, such as a window between a room and the level shell or a door between two
rooms, only one node for the opening is attached to one of the involved features. For exam-
ple, when two building parts A and B are connected with each other through a door, only
one of them will contain the corresponding door node. Figure 6 illustrates this issue, as
well as for the case of a window. That is, when creating an opening between two OSM
elements, this must be considered. General information about a Room (e.g., gml:name,
function, etc.) can be populated from several OSM keys (e.g., name, amenity, type, etc.),
which are attached to the corresponding OSM feature.

The basic principle of the generation of the interior elements is described step by step
in Figure 7. The initial situation (Figure 7a) is that the CityGML model consists of one
level, including GroundSurface, WallSurface and Opening elements. Thereafter, all build-
ing part geometries, which are mapped as relation members of the corresponding level
in OSM, are gathered and represented as FloorSurface elements (Figure 7b). Afterward,
each segment of each building part geometry is extruded with the height of the cor-
responding building part (Figure 7c). Those are represented as InteriorWallSurfaces in

Buildingpart

Level-shell

Window

Figure 6. Specialties in the IndoorOSM model for windows and doors.

Door

858

M. Goetz

z

y

x

(a)

(c)

(e)

(b)

(d)

(f)

Figure 7. Stepwise generation of a CityGML LoD4 building model with interior structures based
on IndoorOSM data.

CityGML. Similar to the outer appearance, all windows and doors of the current level are
gathered. Based on their attributes, different CityGML Opening and InteriorRing elements
are generated (Figure 7d) for adjacent (Interior)WallSurface elements. By elevating the
different building part geometries with the corresponding building part height, the differ-
ent CeilingSurface elements can be generated (Figure 7e). As already described for LoD3,
the ﬁnal RoofSurface element is then placed on the top of the building (Figure 7f). For
multi-story buildings, the processing steps (b)–(e) are repeated for each available building
level.

As mentioned above, CityGML LoD4 models also consider building installations, such
as stairs, ramps and railings. However, when talking to active members and contributors
of OSM, one gets the impression that very detailed micro mapping is out of scope of
OSM. That is, many OSM members are aware of the importance of indoor information,
but it is likely that they are only willing to contribute such data up to some degree of
granularity. Especially data about ﬁne-grained details, such as railings or individual steps,
will very likely not be mapped by the OSM community. That is, the IndoorOSM model
does not consider such information in great detail yet, but little information is available:
IndoorOSM provides the key-value pair buildingpart = verticalpassage for indicating that
a building part somehow connects two levels with each other. What kind of vertical pas-
sage it is can be reﬁned with the key buildingpart:verticalpassage. Possible values are,
for example, elevator, escalator, stairway and so on, and the ﬂoor range can be deﬁned
with the key buildingpart:verticalpassage:ﬂoorrange. Additionally, IndoorOSM provides
the key connector:ids, which allows the semantic description of two connected OSM fea-
tures (basically doors or openings). This information is quite coarse; however, it is still
useful for the generation of ramps and stairs. Due to space limitations and focus, the cre-
ation of IntBuildingInstallations cannot be discussed in greater detail. Nevertheless, there

International Journal of Geographical Information Science

859

is already some work on the creation of different stair types (Schmittwilken et al. 2007),
which is likely to be transferable to the domain of OSM and CityGML.

4. Results and discussion

For the demonstration of the developed methodology and the detection of potential lim-
itations of both the methodology and the available data, Section 4.1 describes different
results, which have been gained by applying the methodology to the existing IndoorOSM
data. While performing this case study, also some limitations of the IndoorOSM mapping
proposal became apparent – those will be discussed in Section 4.2.

4.1. Exemplary application of the developed methodologies
Since the IndoorOSM mapping proposal is rather new, there are not that many build-
ings available yet. Furthermore, it has been discovered that indoor mappers do not yet
necessarily contribute 3D information. That is, although there are already a lot of build-
ings available, not all of them fulﬁll the elaborated prerequisites of the here presented
approach. Nevertheless, couple of buildings are ideally mapped and the application of the
here presented approach leads to satisfying results. Figure 8 depicts three different exem-
plary CityGML models (LoD1–LoD4), which are generated according to the approach
presented here by using the existing OSM data.

LoD1

LoD2

LoD3

LoD4

Figure 8. Three exemplary CityGML building models in LoD1–LoD4. All have been generated
automatically by applying the presented approach to publically available OSM data.

860

M. Goetz

(a)

(c)

(e)

(b)

(d)

(f)

Figure 9. Examples for imprecise and erroneous building models (a–d) resulting from imprecise
data (e.g., e–f).

However, by applying the developed approach to the existing OSM data, it also became
apparent that there are some drawbacks of the current implementation and it seems that
many buildings are subject to errors or inaccuracy. For example, some building models
revealed slightly dislocated levels, resulting from non-congruent level shell geometries
and impreciseness. Two examples are depicted in Figure 9a and b. Furthermore, in some
buildings, the position of windows does not ﬁt to the provided width. When processing
such data, thus ignoring constraint (8) (cf. Section 3.1), this leads to overlapping window
geometries as depicted in Figure 9c. Regarding the interior structure of the buildings and
the alignment of the different rooms, it also became obvious that some building interiors
lack accuracy. Different sides of a wall are sometimes not parallel. Adding an Opening to
such a wall results in an imprecise 3D model (Figure 9d). Quite often, different adjacent
walls have a different thickness, for example, rooms 1 and 2 in Figure 9e have differently
thick walls on the upper side. Also, some four-sided rooms are obviously not quadrangular,

International Journal of Geographical Information Science

861

as, for example, room 2 or 3 in Figure 9e). Contrary to constraint (2) (cf. Section 3.1), many
interior walls do not have a thickness (Figure 9f), which leads to unrealistic 3D building
models.

4.2. Limitations of the IndoorOSM mapping proposal

Beside the above-described limitations, it furthermore became apparent that IndoorOSM
is currently only suitable for describing buildings up to some degree of complexity.
Essentially, the model is only capable for mapping buildings in which all walls are orthog-
onal to the corresponding grounds. IndoorOSM further assumes that ceilings and grounds
are planar. There is also no information about the shape of doors and windows; thus,
they are all regarded as being rectangular. That is, the IndoorOSM model is currently
limited to some kind of Manhattan-World-like situation and it is not possible to map
detailed information and to automatically compute CityGML models of buildings with
organic shapes. Essentially, complex architectural elements, such as folded or beveled
walls and four-centered arches, cannot be represented with this model. As an example,
this Manhattan-World-like restriction becomes apparent when trying to map two adjacent
ﬂoors in a building, whereby the lower level is bigger than the upper level and the facade
of the lower level is beveled to the ground of the upper level (Figure 10a). According to the
IndoorOSM model, the shell of each individual level is mapped (Figure 10b). Due to the
assumption of a Manhattan-World, the automatically generated model differs from reality
(Figure 10c).

information about

Regarding the provision of textural

the facade of a build-
ing, IndoorOSM is also very limited. By using the tags building:roof:color, build-
ing:facade:color or building:color (both American and British English spelling), only a
coarse description of the color of the building is possible. Although the IndoorOSM model
proposed the key building:facade:image for providing one facade image for the whole
building, the possibilities for mapping detailed facade information are still very limited.
Especially the provision of different textures for different walls or doors is not yet possible.
Some of the above-mentioned drawbacks can be solved by introducing new OSM tags,
for example, window:shape for the shape of a window. In contrast, other characteristics
cannot be integrated in OSM without introducing real 3D geometries. However, such an
immense change of the OSM data model is hard to realize. Also, it is questionable if the
existing community members will accept it because often they are simply not able (or
willing) to capture such highly detailed data.

Due to these limitations, a contrary conversion from CityGML to OSM is hardly
feasible. Only simple building models that satisfy the above-described prerequisites can
be mapped in IndoorOSM. Especially, a complete bijective mapping between OSM and

(a)

(b)

(c)

Figure 10. Consequences of the Manhattan-World-like restriction of IndoorOSM with the example
of two adjacent levels of a building with beveled facade in between. What they really look like (a),
what they are mapped in indoorOSM (b), and what the generated model looks like (c).

862

M. Goetz

CityGML is not yet (and probably never) possible. This also means that it is currently not
possible to import arbitrary CityGML models into OSM.

5. Conclusions and future work
Crowdsourced geodata is an emerging trend and the data can serve as a rich (alternative
or additional) data source for OGC-conform services in SDIs. Previous research investiga-
tions demonstrated that VGI and especially data from OSM can be used within SDIs and
is also transformable to OGC-standard exchange formats, such as CityGML. Earlier inves-
tigations revealed that CityGML LoD1 and LoD2 models can be generated, but until then
more detailed models were, due to missing data models, not feasible. With the invention
and proposal of an advanced indoor mapping schema (Goetz and Zipf 2011, OSM 2012a),
a ﬁrst step toward tackling this problem has been made.

After a short discussion on the importance of 3D city models and the elaboration of the
characteristics and motivation for DE, a brief introduction to CityGML has been provided.
Thereafter, the OSM community has been brieﬂy presented and a detailed overview about
the newly invented IndoorOSM model has been provided, as well as a discussion of related
work on procedural city modeling and building reconstruction. Following the transforma-
tion framework of Goetz and Zipf (2012), a semantic information transformation for all
LoDs is possible, as well as the generation of LoD1 and LoD2 geometries. In contrast to
former investigations, the newly proposed IndoorOSM model also allows the generation
of CityGML LoD3 models with windows and doors. The generation of highly detailed
LoD4 models is also possible now. Since the presented approaches require ideally mapped
buildings, the different data requirements and constraints have been elaborated. A case
study on currently available IndoorOSM buildings not only demonstrated the feasibility of
the presented approach, but also revealed the weaknesses and limitations of the available
data.

A desirable extension of the presented approaches is that imprecise or incorrect map-
ping will be detected and (semi)-automatically solved while generating CityGML models.
Furthermore, there are some possibilities for simplifying the geometries. At current stage,
each wall segment is individually computed; however, due to imprecise mapping (e.g.,
adding an additional node in the middle of a wall segment or creating angles with nearly
180◦), it might be possible to prune some wall nodes. An improved algorithm could further
detect congruent walls on adjacent levels and merged them to one WallSurface element.
The computation of realistic roof geometries for LoD3 and LoD4 constitutes an important
but challenging task. Some early results have already been gathered by using skeleton com-
putation with procedural extrusion (Laycock and Day 2003, Kelly and Wonka 2011), but
more detailed investigation is required. Developing methods, which cope with inaccurate
IndoorOSM buildings, will lead to more realistic and less-erroneous building models.

Acknowledgments
The author would like to express his thankfulness to the anonymous reviewers. By providing their
valuable comments, they contributed toward the improvement of this work. The author would also
like to thank his colleagues Julian Hagenauer, Eric Vaz and Alexander Zipf for their proofreading
and the fruitful discussions.

Notes
1. www.openstreetmap.org
2. www.wikipedia.org

International Journal of Geographical Information Science

863

3. The Web 2.0 describes an open community of users who do not only consume data in the web

but also create their own data and share it with the corresponding community.

4. www.ﬂickr.com
5. www.wikimapia.org
6. A global OSM dataset of 23 July 2012 contains 61,203,592 buildings and 57,941,913 streets

footprints (based on our internal OSM database).
JOSM is a Java based OSM editor and can be downloaded on josm.openstreetmap.org.

7.
8. Potlatch is the integrated editor on the OSM webpage www.openstreetmap.org

References
APS, 2008. Energy future: think efﬁciency. A report of the American Physical Society (APS).

Washington, DC: United States.

Bauer, J., et al., 2002. MetropoGIS: a feature based city modeling system. In: Photogrammetric

Computer Vision 2002 (PCV02) – ISPRS Comission III Symposium, Graz, Austria, 9.

Baus, J., Kray, C., and Krüger, A., 2001. Visualisation of route descriptions in a resource-adaptive

navigation aid. Cognitive Processing, 2 (2), 323–345.

Benner, J., Geiger, A., and Leinemann, K., 2005. Flexible generation of semantic 3D building mod-
els. In: G. Gröger and T.H. Kolbe, eds. 1st International Workshop on Next Generation 3D City
Models, 21–22 June 2005 Bonn, Germany. Leuven: EuroSDR Publication, 17–22.

Bing, 2011. Bing Maps venue maps now feature nine largest US malls, 148 total [online].
Available from: http://www.bing.com/community/site_blogs/b/maps/archive/2011/03/22/bing-
maps-venue-maps-now-feature-largest-nine-us-malls-148-total.aspx [Accessed 31 March 2012].
Brenner, C., 2005. Building reconstruction from images and laser scanning. International Journal of

Applied Earth Observation and Geoinformation, 6 (3), 187–198.

Brenner, C. and Ripperda, N., 2006. Extraction of facades using RJMCMC and constraint equations.
In: W. Förster and R. Steffen, eds. Proc. of Symp. of ISPRS Commission III Photogrammetric
Computer Vision, Bonn, Germany, pp. 165–170.

Coors, V. and Zipf, A., 2007. MoNa 3D – mobile navigation using 3D city models. In: 4th
International Symposium on LBS and Telecartography 2007, 08–10 November Hong Kong, 10.
Craglia, M., et al., 2012. Digital Earth 2020: towards the vision for the next decade. International

Journal of Digital Earth, 5 (1), 4–21.

Czerwinski, A., et al., 2006. Spatial data infrastructure techniques for ﬂexible noise mapping strate-
gies. In: K. Tochtermann and A. Scharl, eds. 20th International Conference on Environmental
Informatics – Managing Environmental Knowledge, 06–08 September 2006 Graz. Austria.
Aachen: Shaker Verlag, 123–130.

Döllner, J. and Buchholz, H., 2005. Continuous level-of-detail modeling of buildings in 3D city
models. In: 13th Annual ACM International Workshop on Geographic Information Systems,
31 October – 5 November Bremen, Germany, 173–181.

Döllner, J., et al., 2006. The virtual 3D city model of Berlin – managing, integrating, and communi-
cating complex urban information. In: 25th Urban Data Management Symposium UDMS 2006,
15–17 May 2006 Aalborg, 1–12.

Falkowski, K., et al., 2009. Semi-automatic generation of full CityGML models from images. In:

Geoinformatik 2009, Münster, Germany, 101–110.

Förstner, W., 1999. 3D city models: automatic and semiautomatic acquisition methods. In:

Photogrammetric Week, Stuttgart, Germany, 291–303.

Goetz, M., Lauer, J., and Auer, M., 2012. An algorithm based methodology for the creation
of a regularly updated global online map derived from volunteered geographic information.
In: 4th International Conference on Advanced Geographic Information Systems, Applications
and Services (GEOProcessing 2012), 30 January–04 February 2012 Valencia, Spain. Valencia:
IARIA, 50–58.

Goetz, M. and Zipf, A., 2011. Extending OpenStreetMap to indoor environments: bringing volun-
teered geographic information to the next level. In: M. Rumor, et al., eds. Urban and Regional
Data Management: Udms Annual 2011, 28–30 September, Delft, Netherlands: CRC Press,
47–58.

Goetz, M. and Zipf, A., 2012. Towards deﬁning a framework for the automatic derivation of
3D CityGML models from volunteered geographic information. International Journal of 3-D
Information Modeling, 1 (2), 1–16.

864

M. Goetz

Goodchild, M.F., 2007. Citizens as voluntary sensors: spatial data infrastructure in the World of Web

2.0. International Journal of Spatial Data Infrastructures Research, 2, 24–32.

Google, 2011. Go indoors with Google Maps 6.0 for Android [online]. Available from: http://
31

googlemobile.blogspot.de/2011/11/go-indoors-with-google-maps-60-for.html
March 2012].

[Accessed

Gore, A., 1999. The Digital Earth: understanding our planet in the 21st century. Photogrammetric

Engineering and Remote Sensing, 65 (5), 528.

Gröger, G. and Plümer, L., 2010. Derivation of 3D indoor models by grammars for route planning.

Photogrammetrie – Fernerkundung – Geoinformation, 2010 (3), 191–206.

Gröger, G., et al., 2008. OpenGIS City Geography Markup Language (CityGML) Encoding

Standard – Version 1.0.0. OGC Doc. No. 08-007r1.

Haklay, M., 2010. How good is volunteered geographical information? A comparative study of
OpenStreetMap and ordnance survey datasets. Environ Plan B-Plan Des, 37 (4), 682–703.
Hu, J., You, S., and Neumann, U., 2003. Approaches to large-scale urban modeling. IEEE Computer

Graphics and Applications, 23 (6), 62–69.

Isikdag, U. and Zlatanova, S., 2009. Towards deﬁning a framework for automatic generation of
buildings in CityGML using building information models. In: J. Lee and S. Zlatanova, eds. 3D
Geo-Information Sciences LNG&C Part II. Heidelberg: Springer, 79–95.

Jensen, C., Li, K.-J., and Winter, S., 2011. The other 87%: a report on The Second International
Workshop on Indoor Spatial Awareness (San Jose, California – November 2, 2010). ACM
SIGSPATIAL Newsletter, 3 (1), 10–12.

Kada, M. and McKinley, L., 2009. 3D building reconstruction from LiDAR based on a cell decompo-
sition approach. In: U. Stilla, F. Rottensteiner, and N. Paparoitis, eds. CMRT09 ISPRS Workshop
on Object Extraction for 3D City Models, Road Databases and Trafﬁc Monitoring – Concepts,
Algorithms and Evaluation, 3–4 September 2009 Paris, France, 47–52.

Kelly, T. and Wonka, P., 2011. Interactive architectural modeling with procedural extrusions. ACM

Transactions on Graphics, 30 (2), 14–28.

Kolbe, T.H., 2009. Representing and exchanging 3D city models with CityGML. In: J. Lee and S.
Zlatanova, eds. 3D Geo-Information Sciences LNG&C Part I. Heidelberg: Springer, 15–31.
Kolbe, T.H., Gröger, G., and Plümer, L., 2005. CityGML – interoperable access to 3D city models. In:
P. van Oosterom, S. Zlatanova, and E.M. Fendel, eds. Geo-Information for Disaster Management:
1st International Symposium on Geo-information for Disaster Management, 21–23 March 2005,
Delft, The Netherlands. Heidelberg: Springer, 883–900.

Kolbe, T.H., Gröger, G., and Plümer, L., 2008. CityGML – 3D city models and their potential for
emergency response. In: S. Zlatanova and J. Li, eds. Geospatial Information Technology for
Emergency Response. London: Taylor & Francis, 257–274.

Laycock, R.G. and Day, A.M., 2003. Automatically generating roof models from building footprints.
In: 11th International Conference in Central Europe on Computer Graphics, Visualization and
Computer Vision (WSCG’ 03), 03–07 February 2003 Plzen, Czech Republic. Plzen: UNION
Agency Science Press, 4–7.

Maas, H.-G. and Vosselman, G., 1999. Two algorithms for extracting building models from raw laser
altimetry data. ISPRS Journal of Photogrammetry and Remote Sensing, 54 (2–3), 153–163.
Malambo, L.M. and Hahn, M., 2010. LiDAR assisted CityGML creation. In: 3rd Summer Applied
Geoinformatics for Society and Environment, Universidad Catolica de Santa Maria, Arequipa.
Peru: Stuttgart University of Applied Sciences, 7.

Mäs, S., Reinhardt, W., and Wang, F., 2006. Conception of a 3D Geodata Web Service for the sup-
port of indoor navigation with GNSS. In: A. Abdul-Rahman, S. Zlatanova, and V. Coors, eds.
Innovations in 3D Geoinformation Science, Lecture Notes in Geoinformation and Cartography.
Heidelberg: Springer, 307–316.

Mooney, P., Corcoran, P., and Winstanley, A.C., 2010. Towards quality metrics for OpenStreetMap.
In: 18th SIGSPATIAL International Conference on Advances in Geographic Information Systems,
02–05 November 2010 San Jose. New York: ACM, 514–517.

Müller, P., et al., 2006. Procedural modeling of buildings. ACM Transactions on Graphics (TOG) –

Proceedings of ACM SIGGRAPH 2006, 25 (3), 614–623.

Navteq, 2011. NAVTEQ extends the journey beyond the ‘Front Door’ [online]. Available from: http://

press.navteq.com/index.php?s=4260&item=30551 [Accessed 31 March 2012].

Neis, P., Zielstra, D., and Zipf, A., 2012. The street network evolution of crowdsourced maps:

OpenStreetMap in Germany 2007–2011. Future Internet, 4 (1), 1–21.

International Journal of Geographical Information Science

865

Neis, P. and Zipf, A., 2008. OpenRouteService.org is three times “Open”: combining OpenSource,
OpenLS and OpenStreetMaps. In: D. Lambrick, ed. GIS Research UK (GISRUK), 2–4 April
Manchester, UK. Manchester: Manchester Metropolitan University.

OSM, 2011. Stats – OpenStreetMap Wiki [online]. Available from: http://wiki.openstreetmap.org/

wiki/Statistics [Accessed 31 March 2012].

OSM, 2012a. IndoorOSM [online]. Available from: http://wiki.openstreetmap.org/wiki/IndoorOSM

[Accessed 31 March 2012].
OSM, 2012b. Map features

Map_Features [Accessed 23 July 2012].

[online]. Available

from: http://wiki.openstreetmap.org/wiki/

Over, M., et al., 2010. Generating web-based 3D city models from OpenStreetMap: the current

situation in Germany. Computers, Environment and Urban Systems, 34 (6), 496–507.

Parish, Y.I.H. and Müller, P., 2001. Procedural modeling of cities. In: SIGGRAPH ‘01, Los Angeles,

US. 1–8.

Ribarsky, W., Wasilewski, T., and Faust, N., 2002. From urban terrain models to visible cities. IEEE

Computer Graphics and Applications, 22 (4), 10–15.

Schilling, A., et al., 2009. Interoperable location based services for 3D cities on the web using user
generated content from OpenStreetMap. In: A. Krek, M. Rumor, and S. Zlatanova, eds. Urban
and Regional Data Management: UDMS Annual 2009. Ljubljana, Slovenia: CRC Press, 75–84.
Schmittwilken, J., et al., 2007. A semantic model of stairs in building collars. Photogrammetrie,

Fernerkundung, Geoinformation PFG, (6), 415–428.

Shiode, N., 2001. 3D urban models: recent developments in the digital modelling of urban

environments in three-dimensions. GeoJournal, 52 (3), 263–269.

Stiny, G. and Gips, J., 1971. Shape grammars and the generative speciﬁcation of painting and
sculpture. In: C.V. Freiman and J.E. Grifﬁth, eds. Proceedings of IFIP Congress 71. Ljubljana:
Yugoslavia, 1460–1465.

Tagwatch, 2011. Tagwatch Planet-latest [online]. Available from: http://tagwatch.stoecker.eu/Planet-

latest/En/tags.html [Accessed 31 March 2012].

Wefelscheid, C., Hänsch, R., and Hellwich, O., 2011. Three-dimensional building reconstruction
using images obtained by unmanned aerial vehicles. In: Conference on Unmanned Aerial Vehicle
in Geomatics, 14–16 September Zurich, Switzerland, 6.

Weidner, U. and Förster, W., 1995. Towards automatic building reconstruction from high resolution
digital elevation models. ISPRS Journal of Photogrammetry and Remote Sensing, 50 (4), 38–49.
Winter, S., 2012. Indoor spatial information. International Journal of 3-D Information Modeling, 1

Wonka, P. and Wimmer, M., 2003. Instant architecture. ACM Transaction on Graphics, 22 (3),

(1), 25–42.

669–677.

Zielstra, D. and Zipf, A., 2010. A comparative study of proprietary geodata and volunteered geo-
graphic information for Germany. In: M. Painho, Y.M. Santos, and H. Pundt, eds. 13th AGILE
International Conference on Geographic Information Science, 10–14 May 2010 Guimarães,
Portugal. Leuven: AGILE, 1–15.

Zipf, A., et al., 2007. Towards 3D spatial data infrastructures (3D-SDI) based on open stan-
dards – experiences, results and future issues. In: P. van Oosterom, et al., eds. Advances in
3D Geoinformation Systems, Lecture Notes in Geoinformation and Cartography. Heidelberg:
Springer, 65–86.

Copyright of International Journal of Geographical Information Science is the property of Taylor & Francis Ltd

and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright

holder's express written permission. However, users may print, download, or email articles for individual use.

