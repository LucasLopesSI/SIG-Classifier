Transactions in GIS, 2012, 16(2): 249–265

Research Article

A Comparison between WCS and
OPeNDAP for Making Model Results
and Data Products Available through
the Internet

Fedor Baart
Deltares, Delft and Faculty of Civil
Engineering and Geosciences
Delft University of Technology,
The Netherlands

Wim de Haas
Ministry of Infrastructure and the
Environment
The Hague, The Netherlands

Marc Philippart
Ministry of Infrastructure and the
Environment
The Hague, The Netherlands

Maarten Plieger
Royal Netherlands Meteorological
Institute
The Bilt, The Netherlands

Gerben de Boer
Deltares, Delft and Faculty of Civil
Engineering and Geosciences
Delft University of Technology,
The Netherlands

Gennadii Donchyts
Deltares, Delft, The Netherlands

Mark van Koningsveld
Van Oord Dredging and Marine
Contractors, Rotterdam and Faculty
of Civil Engineering and
Geosciences
Delft University of Technology,
The Netherlands

Abstract
Numerical models produce output with a large number of variables, grid cells and
time steps. The same applies to algorithms that produce gridded datasets from sparse
or abundant raw data. Further use of the resulting data products has been challenging,

Address for correspondence: Fedor Baart, Delft University of Technology, Faculty of Civil Engi-
neering and Geosciences, Delft, Netherlands. E-mail: f.baart@tudelft.nl

© 2012 Blackwell Publishing Ltd
doi: 10.1111/j.1467-9671.2012.01312.x

250

F Baart et al.

especially for dissemination outside the institute of origin. Due to the gradually
increasing size of data products, simply downloading copies of them is becoming
impossible. A gradual transition from traditional download methods to web services
is therefore observed. Web services allow for on-the-ﬂy access to subsets of data that
were hitherto considered as indivisible granules. Here we compare the most mature
candidates to serve gridded data through the web: the Open-source Project for a
Network Data Access Protocol (OPeNDAP) and Web Coverage Service (WCS)
protocols. In the framework of the new Dutch National Model and Data Centre
(NMDC.eu) a distributed data storage has been created by coupling OPeNDAP
servers. A WCS service layer is provided for the same data. This allows us to compare
OPeNDAP and WCS. Using several use cases, we compare the usability, performance
and features of the two protocols.

1 Introduction

Scientists and government agencies run numerical models for hydrodynamic, atmo-
spheric or subsoil predictions on a regular basis. The results of these models were
traditionally stored in safe data centers. Only the communities that run these models
were able to access the data produced by them. The same applies to data products
generated by sophisticated algorithms that interpolate sparse raw data or shrink abun-
dant raw data to data grids. Currently there are two trends that endeavor to make these
results available on the Internet for a larger audience than these communities.

First there is a bottom-up trend. Research carried out on the interfaces between
disciplines encourages scientists to adopt an open data attitude. For disciplines to be able
to cooperate, they need an understandable form in which to share data. Another
bottom-up push is the recognition by scientists that they need to share the expensive
infrastructures to work with the increasingly large datasets. The recent establishment of
the NMDC.eu in the Netherlands is an example of this. The trend to open up data is also
pushed top-down by slow but irreversible international legislation. An example is the EU
Infrastructure for Spatial Information in the European Community (INSPIRE) directive
and the digital agendas advocated by Neelie Kroes (European Commissioner for Digital
Agenda). An increasing number of nations have a national portal to open government
data: see http://www.data.gov, data.gov.uk, data.ﬁngal.ie, data.overheid.nl for examples.
For the scientists and governments the motivation to expose data is often based on
efﬁciency. The chance of cooperation increases and that of duplication is reduced. If data
are put on the Internet in an accessible form, i.e. through an API, then other parties have
the possibility of joining in the analysis and further dissemination of the data. Good
examples of this are the “hack the government” and OpenEarth (van Koningsveld et al.
2010) initiatives where developers take the available datasets of the government and try to
build better applications based on the government data (http://www.hackdeoverheid.nl,
http://rewiredstate.org, http://www.openearth.eu). Furthermore there often is a formal
obligation for governments and scientists to provide their data on request (freedom of
information acts). By making the data available in a convenient way, governments can
reduce the number of requests and answer them more cost-effectively.

In the last decade several methods have been developed to make numerical model
results and data products available through the Internet. The same trend that is seen in
general IT – a shift from client server applications to service based applications – can

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

WCS versus OPeNDAP

251

also be seen in the applications that expose data products on the Internet. Geospatial
datasets have beneﬁted from the development of web services such as the Open Geospa-
tial Consortium (OGC) Web Feature Service (WFS) (Vretanos 2010) and Web Map
Service (WMS) (de la Beaujardiere 2006). These services provide the geometry and
attributes of geospatial features and rendered maps, respectively. For numerical models
that cover large regions in high detail, the WFS service is less suitable, because it does
not contain the relevant data types such as grids and meshes. For models that have a
low dimensionality, for example sparse sample points and 1D river models, the feature
approach works quite well. The WMS (pre-rendered) map approach is widely used to
provide numerical model results through the Internet. These pre-rendered maps serve a
large part of the potential audience. A major drawback of providing grid information
solely through rendered maps is that they do not allow data sources to be re-used and
compiled numerically into new data products. Some agencies that are reluctant to share
the actual numbers of their data might consider this as an advantage. Fellow research-
ers would rather access the actual data than mere visualizations of it. For providing the
access to the data, protocols other than WMS are required. Web services for gridded
data exchange are not new. The World Wide Web was conceived to exchange data
between large-scale physics laboratories. In the early days, data exchange consisted of
ﬁle transfer between servers, monitored by people behind terminals (thin clients). Next,
data exchange shifted towards exchange between PCs. Now there is a tendency for data
processing to shift back to servers with users again behind thin clients (Carr 2008). The
main criterion nowadays to keep data at data centers is energy efﬁciency, digital cura-
tion, assignment of persistent identiﬁers and cheap availability due to redundancy in
commercial data centers (cloud services). There are basically two methods for scientists
to work with these data: scientists go to the data or the data go to the scientists. The
former is to offer scientists CPU time (ﬂops) on the same data centres where the data
reside, e.g. NASA Earth eXchange (http://www.nas.nasa.gov/projects/nex.html). This
approach is promising for generating data products from a “data deluge” (Laaksonen
2010) of raw data. The latter is better suited by offering scientists protocols that allow
them to request any manageable subsets on-the-ﬂy. Hitherto data products were often
considered as indivisible granules that needed to be ordered as a full entity, e.g. the
General Bathymetric Chart of the Oceans (GEBCO) dataset (Ward 2010). With web
services, end users can simply request for any individual number in a data product. In
this article we compare most mature candidates for subsetting of data via the web: the
OPeNDAP and WCS protocols.

The development of the OPeNDAP started in 2000. The goal was to develop and
promote software that facilitates access to data via the network (Cornillon et al. 2003).
The OPeNDAP standard has led to a high level of interoperability for ”gridded” data
such as model outputs (Hankin et al. 2010). It started as a way to make federal
oceanographic data arrays available for scientists. GIS concepts as georeferencing were
added later with optional conventions. The OPeNDAP data model is closely related to
that of the Network Common Data Form (netCDF). The service is built as a layer on top
of the Hypertext Transfer Protocol (HTTP). The request is made in the form of a URL
with query parameters. The data store typically consists of ﬁles that are introspected by
an OPeNDAP server. Data is returned as binary (Distributed Oceanographic Data System
(DODS)), American Standard Code for Information Interchange (ASCII) or as a ﬁle
(various servers support various formats). The service itself is based on data types such
as grids, variables and attributes. No speciﬁc knowledge about geospatial or other

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

252

F Baart et al.

physical aspects are part of the protocol. These aspects are implemented through addi-
tional conventions. Since the incorporation of OPeNDAP into the netCDF libraries,
many scientist work with OPeNDAP as a web-enabled netCDF.

The OGC developed the Web Coverage Protocol (Whiteside and Evans, 2008). The
Web Coverage Service standard is deﬁned by the OGC as a web service interface that
enables interoperable access to gridded data. More speciﬁcally, the WCS supports elec-
tronic retrieval of geospatial data as “coverages”, that is, digital geospatial information
representing space-varying phenomena (Whiteside and Evans 2008). The latest speciﬁ-
cation deﬁnes WCS as follows. “WCS allows clients to choose portions of a server’s
information holdings based on spatial constraints and other query criteria. (. . .) WCS
provides available data together with their detailed descriptions; deﬁnes a rich syntax for
requests against these data; and returns data with its original semantics (instead of
pictures) which may be interpreted, extrapolated, etc., and not just portrayed.” WCS
started as a web enabled version of traditional GIS coverages, later extended with
time-concepts for modelers. In practice, WCS is used as the grid-enablement of the WMS
service for rendered maps.

Domenico and Nativi (2009) noted the difference between the standard GIS
approach (everything is a feature) and the “Fluid Earth Science” approach (everything is
a function). They performed two experiments in the context of the Galeon project. The
ﬁrst was to ﬁnd out if a web coverage service can serve data that is typically stored in
netCDF. The second interoperability experiment tested if a WCS server could be built on
top of an OPeNDAP server. This project, based on regular gridded datasets, resulted in
an extensive list of feature requests for the next WCS speciﬁcation. In return, the abstract
data model that is used in netCDF common data model was extended to conform to the
recent geospatial coverage OGC/ISO standards (Nativi et al. 2008).

The different users of the datasets have different expectations on usability ﬁtness for
a particular purpose. This is discussed by Blower et al. (2009b), who describe six
different levels (0–5) of data products that meet the requirements of the different end user
populations. In this article we focus on making results from numerical geospatial models
(hydrodynamic, atmospheric and subsoil) available. There are several different audiences
for such online hindcast, nowcast and forecast data. In this study we try to focus on the
following sets of possible end users:

•
Scientists
• Analysts
• Government agencies

We do not focus on making the data available to the general public. Providing
information to the general public usually involves an extra step of making visualizations
and key indicators that ﬁt speciﬁc purposes. An example of this is the categorization of
forecasted weather data into icons showing a sun and a little cloud. Figure 1 shows a
range of web services that exist to serve data via the web. The datasets generated by
scientists and their numerical models in the lowest level are transferred as raw binary or
text ﬁles via the web via FTP or HTTP download. Traditionally, servers were equipped
with delayed-mode subsetting services to cut the data to the required region (labelled
“subscening” in a satellite remote sensing context). For new data delivery services, this
approach is now replaced by OPeNDAP and WCS where subsetting can be performed in
real time. These protocols can be adopted for all of the data enrichment levels of Blower
et al. (2009b). Government agencies work with visualizations of the highest data product

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

WCS versus OPeNDAP

253

l
l

e
e
v
v
e
e

l
l
 
 

i
i

h
h
g
g
h
h
 
 
-
-
 
 

w
w
o
o
L
L

Work on client

Stored data (FTP):
NetCDF
HDF

Tailored data:
WCS

Standard data:
OPeNDAP

Visualized data:
WMS/KML

Work on server

Files
Files

Dataset
Dataset

Webservice
Webservice

Consumable
Consumable

Figure 1 Overview of different levels for providing subsets of data products via the web.
The work implies mapping of geospatial bounding boxes to indices, interpolation and
reprojection

levels. These are already provided through portals that are built on top of OPeNDAP
(Dapper Data Viewer (DCHART) (Blower et al. 2009a), ncWMS, Python implementa-
tion of the Data Access Protocol (Pydap) WMS responses, Atmospheric data access for
the geospatial user community (ADAGUC)) or WMS servers (EMODNET portals,
ArcGIS).

2 Challenges in the Use of WCS and OPeNDAP

Several challenges arose in providing our data through the WCS and OPeNDAP services
in the context of different national and EU projects (Morphological Impacts and COastal
Risks induced by Extreme storm (MICORE), NMDC.eu). This article groups these
challenges into the following categories:

• Time dependency and sparsity
• Non-rectilinear grids
• Multidimensional data
• Information and retention of the physical quantities
• Indices, queries and interpolation, performance of interpolation (stateless/stateful)
In the results section we will elaborate on the experiences relating to these challenges.

2.1 Time and Sparsity

Time is often referred to as the fourth dimension in GIS. There are different strategies to
store information about time together with spatial information (see for example Langran
(1990)). In numeric models the information can be quite dense in space and time. For a
hydrodynamic model all the wet grid cells have a temperature and volume for all time
steps. Some information can be quite sparse. For example a ﬁeld rain volume can be
empty for a whole model run. Exchanging both sparse and dense arrays in a uniform way
is one of the ways that we could improve the exchange of model results through the web.
Another topic relating to time arises when numerical models are used to generate
forecasts. One of the issues here is how to combine the different time windows. The time

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

254

F Baart et al.

window usually starts a few hours in the past and predictions range from one to several
days. These windows from multiple model runs overlap and are usually stored next to
each other. Easily providing and combining these model runs is an important challenge.

2.2 Non-rectilinear Grids

Numerical models subdivide the real world into small areas (points, cells, volumes or
elements) and layers. The collection of cells covering an area is called the computational
grid. One of the challenges in numerical modeling is to obtain a high precision in areas of
interest only. Grids with complex geometries are employed to get a high precision without
sacriﬁcing computation time, which is a function of the number of grid cells. An example
of such a grid, taken from Kernkamp et al. (2011) can be seen in Figure 2. One other aspect
that deserves special attention is the position of the quantities. For coastal applications
vector ﬁelds are located on the interfaces between the cells and the scalar quantities at the
cells; for oceanographic sets both vectors and scalars are localized at the corners, while in
some ﬁnite element approaches quantities can even be non-localized in distribution.

2.3 Vertical Coordinates

Results from numerical models in the ﬁeld of atmospheric and hydrodynamic models can
have some reference to a vertical coordinate. The vertical coordinate system can be based
on a presentation of the globe but can also be based on a physical quantity such as
pressure or temperature. The most common vertical coordinates are relative to a deﬁned
geoid, such as the WGS84. In modeling, other vertical reference levels are often used; for
example the ocean bottom, the terrain or pressure levels.

For offshore sets, local reference ﬁelds with respect to “lowest astronomical tide” are
used, that are themselves a result of model simulations. Figure 3 gives an overview of
some of the different types of coordinate systems that are used in hydrodynamic (z,
sigma), atmospheric and subsoil modeling (theta, eta and sigma). In addition, combina-
tions of vertical coordinate (hybrid) systems can be used, for example a ﬁxed height layer
at the bottom of the ocean followed by several relative sigma layers. It is often difﬁcult
to store information while keeping track (in a standardized way) of the properties of
vertical coordinates. The Climate and forecasting (CF) convention has standardized these

a

b

Figure 2 Examples of non-rectilinear grids

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

WCS versus OPeNDAP

255

θ

η

z

σ

σ

Figure 3 Example of different vertical coordinate systems in use in hydrodynamic and
meteorological modeling. q is an example of a temperature based coordinate system, h
is an example of a pressure based coordinate system, the top s is an example of a system
based on the ratio of the pressure differences. The z is an example of a depth-based
ocean coordinate system and the lower s is an example of a relative depth-based
coordinate system often modeled and outputted separately. It is important that the
physical quantities and other metadata are propagated throughout the whole series of
data provision

coordinates for ocean and atmospheric models (Eaton et al. 2011, see Appendix D).
Storing the data in their original coordinates and providing a formula to transform to a
different vertical coordinate system is the preferred way. This is comparable to how we
deal with geographic and projected coordinates where the transformation is usually
well-deﬁned.

2.4 Multidimensional Data

One of the noticeable aspects of model results is that they have more than just the
regular three or four spatial-temporal dimensions. For example, to properly model
suspended sediment in water, the sediment concentration is stored per time, vertical
layer, x, y and per bin of grain size and data assimilation schemes can have ensembles.
Other common extra dimensions are spectral (wave length) and direction bins. When
viewed from a relational database perspective these are extra properties that result in
more rows; when viewed from a multidimensional data perspective, these properties

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

256

F Baart et al.

generate an extra dimension. It is often useful to be able to query data using an
index-based approach along these extra dimensions. For example, we might be inter-
ested in the transport of ﬁnest sediments because they might contain more pollution.
Or we might be interested in the long waves from the north because they result in a
high surge at the southern coast. Thus being able to query data across the different
dimensions is one of the challenges.

2.5 Physical Quantities

The results of geophysical modeling often generate output variables that correspond to
physical quantities. For these quantities it is important that at least the following two
aspects are provided with the results: unit of measurement and measured variable,
preferably according to a controlled vocabulary. For example, in sea waves a distinction
is made between different types of waves depending on their wave period. These longer
and shorter wave energies are often modeled and outputted separately. It is important
that the physical quantities and other metadata are propagated throughtout the whole
series of data provision.

2.6 Indices, Queries and Interpolation

One of the steps that has to be taken when switching from model outputs to consumable
data is to go from the integer query index space that is usually present in model output
to the spatial space. Inside numerical models the world usually consists of index space.
The index-based approach is familiar to people like scientists who program with
arrays or know linear algebra. Other possible users are more familiar with the spatial
space.

Using these several use cases we compare the different techniques in terms of
suitability for analysts, government agencies and scientists. In addition, we will look at
performance and usability. Our goal here is to answer the following questions: What is
the best way to compare the different methods for making numerical model results
available through the Internet? How can the two methods best be improved when
considering the goal of making numerical model results available?

3 Methods

To be able to assess the suitability of the WCS and OPeNDAP service for the provision
of numerical model results, we performed two simple tests in addition to comparing
features, implementations and speciﬁcations. First we test the usability, to see if the
current implementations of services are easy enough to be used by untrained end users.
Second we measure the performance of the application in order to get a rough estimate
of directions for a good balance between a client side effort and a server side effort.

3.1 Performance Measurements

To be able to assess the performance of the two different services, we used a dedicated
machine with the following services installed:

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

WCS versus OPeNDAP

257

• Thematic Realtime Environmental Distributed Data Services (THREDDS) 4.2 as an

OPeNDAP server

• GeoServer 2.1 rc5 as a WCS server
• ADAGUC as a WCS and WMS server

For the performance measurements we used two datasets, precipitation and bathym-
etry. The precipitation ﬁle that was used for testing was a 720 by 360 grid ﬁle. For the
WCS test the original ASCII grid format was used. For the THREDDS server the ﬁle was
converted to a netCDF ﬁle. The ﬁle contains unspeciﬁed information about precipitation.
Another dataset that was tested was a 100 MB dataset of bathymetry data (Vaklodingen),
from which one timeslice was selected (500 x 500 grid). For all services the whole spatial
area of the dataset was extracted so no interpolation should be required. Because it was
not quite clear if interpolation was used by the GeoServer, the interpolation was set to
nearest neighbor, the least computationally intensive option, for the WCS server. A test
plan was created using the aApache JMeter and cURL software. Tests were performed on
the loopback network interface for the precipitation dataset to avoid looking at network
congestion. For the precipitation dataset, before each test the Tomcat server was restarted
and given time to start properly and load applications. This was done to avoid the
applications caching requests. For the servers, Java memory was increased to 1 GB. Two
machines were available for the performance measurements. The precipitation dataset
was run on machine 1 that had THREDDS and GeoServer installed. The bathy-
metry dataset was incompatible with the GeoServer WCS server. This dataset was
tested on machine 2 running ADAGUC and THREDDS. The ADAGUC WMS server
was tested with a nearest neighbour interpolation and a bilinear interpolation of a
background map.

3.2 Usability Test

To test the usability of both standards we deﬁned two assignments. Six MSc students
with medium-level scripting skills were asked to get data from both the OPeNDAP
service and the WCS service. Since our main goal is to make the data generated by
numerical models available to others, here we tried to test how well potential end users
are able to work with existing services. The following selection criteria were used:

• Has between 6 months and 2 years experience in at least one of the Matlab, Python

• Has not created a script or run a program before to extract data from an OPeNDAP

or Ruby languages; and

or a WCS server

Two datasets were provided for testing a dataset of time varying cloud coverage (MSG
Cloud Physical Properties (MSGCPP)) and a dataset of surface altitudes (Actueel
Hoogtebestand Nederland (AHN)). We used measured data products instead of model
data because these datasets were readily available, easy to understand and structurally
the same as model results. In fact, quite complex computer codes were executed to
produce these data products. For both datasets both a WCS URL and an OPeNDAP
URL were provided to the subjects. The order in which the students used the two
services was varied to correct for learning effects. Unfortunately four of the six
responses by the subjects got lost in a recent relocation. Therefore only qualitative
results are given.

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

258

F Baart et al.

4 Results

4.1 Time and Sparsity

One of the aspects that is only partially available in both speciﬁcations is the possibility
of sparse data. The CF convention describes the compression by gathering strategy to
store sparse arrays and compression for variables is available. But data types like sparse
and masked arrays or tree-based structures that are useful to exchange some model
datasets are not available. It is possible to deﬁne data on speciﬁc points in the coverage
speciﬁcation but implementations expect grids to be fully ﬁlled. In the OPeNDAP
approach there can be more than one time variable per computation, allowing selections
on both the valid and forecast reference times. For the WCS approach it was not clear
how to deal with the difference between valid and reference time of a forecast.

4.2 Non-rectilinear Grids

Although the speciﬁcation of both OPeNDAP and WCS allows for exposing model
results based on complex geometries, practical implementations are currently limited.
The OPeNDAP data model allows for many types of different applications but without
a standard or convention it is unlikely that complex geometries can be visualized. The
gridspec of Balaji et al. (2007) and the proposal of Jagers and van Dam (2011) provide
good directions for implementations (Figure 4). Some of the unstructured models already
provide netCDF output, for example ADCIRC and FVCOM. The different approaches
are actively discussed in the ugrid group (see https://groups.google.com/forum/#!forum/
ugrid-interoperability for additional details).

4.3 Multidimensional Data

The extension of data structures to N dimensions is properly implemented in the
OPeNDAP protocol. Sometimes implementations of clients, especially based on lan-
guages that do not support n-dimensional arrays, lack support of up to n, but when
limited to six we have not run into any problems. The abstract speciﬁcation limits the
number of dimensions to four. This is not enough for some geophysical applications. The
WCS speciﬁcation does supports the concept of dimensions but it comes with limitations.
For example there can only be one variable selected, the spatial grid has to be rectilinear
and a few other drawbacks.

Figure 4 Example of non-rectilinear grid structure with values on nodes, faces and
edges

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

WCS versus OPeNDAP

259

4.4 Physical Quantities

Both services provide the ability to work with units. For the OPeNDAP approach the
units are based on the udunits package and for the WCS units are available for “Axis”
through the ValuesUnits data structure. It is important that implementations retain the
units from the model results ﬁles. Otherwise these have to be manually conﬁgured. The
retention of metadata is a missing feature in most WCS implementations.

4.5 Indices, Queries and Interpolation

In numerical models the common way to access data in variables is by index. This makes
the matrix or array style approach that is used to query OPeNDAP data very familiar to
scientists who often work with scripts in, for example, R, Python and Matlab. A typical
approach to perform a spatial query on an OPeNDAP dataset is to start with getting the
spatial variables, latitude, longitude and possibly a vertical coordinate. Based on these
variables a spatial extent of interest is found locally. With this extent the server is again
queried, this time for the relevant variables. It is also possible to do the queries on the
server side with OPeNDAP, but this is not a common feature of OPeNDAP implemen-
tations. One advantage is that caching of the search index can be done on the client. This
allows for custom indexing strategies and subsetting. This is often helpful for visualizing
a dataset quickly. For example the ﬁrst and last few columns are sometimes left out of the
analysis because they can contain boundary effects that are not representative. The
querying by index-based approach is not the query type that is most common for
map-based applications. In a map there are generally two main query parameters: the
bounding box and the resolution. If we look at the query parameters of a WCS request
URL then we see that these are also the obligatory parameters for a WCS getCoverage
query: http://geoservices.knmi.nl/cgi-bin/NMDC_TEST_OPENDAP.cgi?&service=wcs&
version=1.0.0&request=getcoverage&coverage=OpenEarth/OPeNDAP/tno/ahn100m/
mv100&format=NetCDF4&crs=EPSG:28992&bbox=0,300000,280000,625000&
resx=100&resy=100

The part after the question mark represents the (key-value pair) query parameters,
with the parameter names bolded. One of the things to note is that the ﬁle is stored
locally before it is read. This can be avoided by using the XML response, but we have not
seen it in common use.

4.6 Feature Summary

Table 1 provides an overview of the features discussed so far, and shows that the two
main differences between the services are the default way of querying, the limits in
dimensionality and the default response type.

4.7 Performance

When optimizing performance of a service that exposes data over the Internet one
needs to balance data size, response time, memory use (caching) and processor time.
To give a very rough estimate of the difference in performance between the two types
of services, we ran the simple performance benchmark as described in the methods
section. The results we found were that the requests we tested on the GeoServer WCS

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

260

F Baart et al.

Table 1 Feature overview for WCS and OPeNDAP

OPeNDAP

WCS

Querying
Reprojection
Multiple projections

Interpolation
Dimensionality
Units
Metadata
Unstructured grids

By index
No
One dataset can contain
multiple projections

No
n
Yes
CF convention
Possible but not
standardized

By coordinates
Reprojection on request
Projections on the ﬂy

Yes
4 (x,y,z,t)
Yes
OWS Common
Standardized but not
available in current
implementations

Default response type
Multiple ﬁle formats

Arrays + attributes (DODS)
Yes (optional, depending on

XML + ﬁle
Yes

implementation)

service resulted in a response time of 2.4 (cid:2) 0.6 seconds. The THREDDS OPeNDAP
server yielded a response time of 0.15 (cid:2) 0.2 seconds. The THREDDS server was able
to return data almost instantly when the dataset had been queried before. When the
data was not queried before the response time was 0.25 seconds, as can be seen in
Figure 5.

The ADAGUC server was speciﬁcly designed to quickly render gridded data, as can
be seen in the low response times from the WMS service. It is clear that performance for
this speciﬁc case gives a much better response time for the THREDDS OPeNDAP service
than for theWCS implementations. For many purposes it is relatively easy to improve
performance with appropriate caching strategies. The throughput of both services, once
data transfer started, was approximately the same. We have not looked in detail at the
causes and generalizability of the found difference in performance, but the extra effort
that the WCS server has to do, in reading (in this case an ASCII grid versus a binary ﬁle),
interpolation (although not required) and perhaps reprojection and generating a new
output ﬁle are probably some of the causes.

4.8 Usability

To test whether the services are “usable” enough for possible users to be able to extract
data from the service we conducted a small usability experiment, as described in the
methods section. We found that all subjects had trouble extracting the data. Our ﬁrst
approach was to give the subjects only the URL from the dataset and service name. This
resulted in an annoyed subject, who spent over an hour looking for proper libraries and
clients in order to extract the data. We redeﬁned our experiment to be a bit more helpful.
We pointed the subjects to the libraries and were available to assist the subjects on
request. Most subjects made use of this offer by asking questions about several problems
they ran into. The ﬁrst problem they ran into was with the general concept of a web

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

WCS versus OPeNDAP

261

dataset

Bathymetry

Precipitation

THREDDS
(OPeNDAP)

●●●

ADAGUC
(WCS, ascii)

ADAGUC
(WCS, netCDF)

GeoServer
(WCS)

i

e
c
v
r
e
s

ADAGUC
(WMS nearest neighbour)

ADAGUC
(WMS bilinear)

0.0

0.5

1.0

1.5

2.0

2.5

3.0

start transfer time [s]
(lower is better)

Figure 5 Performance comparison of services for providing access to gridded data

service. The users had a strong association between the URL of the dataset and the
browser. They used the URL and put it in a web browser, where we expected them to put
the URL in their favorite scripting language. When the webpage that users ﬁnd, if
accessed by a browser, e.g. without request parameters, provides a short usage guide, the
likelihood of a user being able to get results from the dataset increases signiﬁcantly. Good
examples of this are the WCS coverage builders in ADAGUC and GeoServer that provide
step-by-step URL building and the selection tool in Pydap that provides examples for
different scripting languages (see Figure 6).

Another problem that the subjects found was that they got different answers from
the different methods. For example, in the assignment to ﬁnd altitude information, the
subjects all found different answers. For the WCS the subjects used a visualization to get
a height, but the height was based on too coarse a grid, so that the value extracted was
the average over a wider area than necessary. For the OPeNDAP service the subjects got
wrong answers or no answers at all. The spatial querying by hand (by using MATLAB)
proved to be too tough a task. For the mean thickness of liquid water, the subjects did
ﬁnd a consistent answer but this answer was consistently incorrect. The confrontation

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

262

F Baart et al.

)
t
h
g
i
r
(
p
a
d
y
P
d
n
a

)
t
f
e
l
(

C
U
G
A
D
A
m
o
r
f

r
e
d

l
i

u
B
S
C
W
o
t

e
c
a
f
r
e
t
n
I
b
e
W
e
h
t

f
o
e
l
p
m
a
x
E

6
e
r
u
g
i
F

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

WCS versus OPeNDAP

263

with new tools and the pressure to give an answer were a good basis for wrong answers.
Most students required more time than the 10 minute limit per dataset. Most subjects
preferred the WCS service; this was mainly due to the ability of Royal Netherlands
Meteorological Institute (KNMI)’s ADAGUC system to support the spatial queries. They
also found the webpages with forms that the THREDDS server provides, by manually
changing the URL’s (dodsC to catalog) but they were not able to use this form to extract
the relevant data.

5 Conclusions

One size does not ﬁt all when it comes to providing model results through the web. The
different user groups have different expectations and skill levels when it comes to
consuming the results of the numerical models. WCS and OPeNDAP both operate in a
narrow functional requirements zone. Yet this narrow zone is wide enough to warrant
OPeNDAP use next to WCS. WCS needs a base layer for data storage. This could well
be OPeNDAP, e.g. in ADAGUC. WCS acts as a thin processing service on top of
OPeNDAP. WCS is a layer that offers more, but should not be used to hide an underlying
OPeNDAP layer. It is interesting to see how the two different approaches, implementa-
tion before speciﬁcation for OPeNDAP and speciﬁcation before implementation for the
WCS service, lead to different types of solutions to similar problems. One of the issues
that results from this difference in approach is that although the speciﬁcation of the WCS
is suitable for most of our purposes, the implementations are lagging behind in some
aspects. For instance, we do not know of any WCS implementation that can handle
curvilinear grids and unstructured grids. In contrast, OPeNDAP can handle curvilinear
grids. The fact that users can easily extend OPeNDAP with their own conventions is a
beneﬁt of OPeNDAP use. However, it limits the convergence of ideas to agreed-upon
conventions like CF when there is not an active community driving the convergence.
WCS is an excellent protocol for analysts and government agencies that want to down-
load part of a large dataset occasionally, especially if they do not want to get into the
details of a particular dataset. In contrast, when a dataset is accessed often, and the user
becomes an expert on a dataset, the rationale of WCS is less efﬁcient than that of
OPeNDAP. When a user is familiar with a dataset, he can cache the indices required to
access a speciﬁc part of the datasets or he can automate the calculation of the indices.
When indices can be reused, OPeNDAP is a more efﬁcient protocol than WCS.
OPeNDAP allows a kind of “client state” on a dataset, for WCS the maximum possible
“client state” is the bounding box. The main advantage of using a WCS service is the
binning/gridding to rectangular grids in a different coordinate system. For scientists who
are interested in the “exact data” this WCS can be bypassed to use OPeNDAP directly.
Because the spatial and temporal queries, reprojection and interpolation are such
common operations, having this implemented on the server side can be convenient. The
interoperability between the two services is an important aspect. We hope to see netCDF
as one of the obliged return ﬁle types to bridge the gap between WCS and OPeNDAP.
Our initial performance test showed that there is room for performance increases in the
WCS service we tested. For performance the layer-on-layer approach might not always be
optimal. Having custom WMS services directly on the OPeNDAP service or directly on
the raw data can still serve a purpose. But for openness, having access to the lower layer
in a convenient way is preferable. Our usability test showed that there are numerous

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

usability issues with providing access to the services without guidance. Some of these
issues can be easily solved but one should be aware that it is likely that providing datasets
without proper guidance or training will result in incorrect analysis. Even users with
some experience in programming need substantial help to get started. Writing better
tutorials, examples and blog posts about using the services should help beginner service
users.

The research leading to these results has received funding from the European Commu-
nity’s Seventh Framework Programme (FP7/2007–2013) under grant agreement
!202798

264

F Baart et al.

Acknowledgement

References

Balaji V, Adcroft A, and Liang Z 2007 Gridspec: A Standard for the Description of Grids Used in

Earth System Models. Princeton, NJ, Princeton University Technical Report

Blower J D, Haines K, Santokhee A, and Liu C L 2009a GODIVA2: Interactive visualization of
environmental data on the Web. Philosophical Transactions of the Royal Society A: Math-
ematical, Physical and Engineering Sciences 367(1890): 1035–39

Blower J D, Blanc F, Clancy M, Cornillon P, Donlon C, Hacker P, Haines K, Hankin S C, Loubrieu
T, Pouliquen S, Price M, Pugh T F, and Srinivasan A 2009b Serving GODAE data and
products to the ocean community. Oceanography 22(3): 70–79

Carr N G 2008 The Big Switch: Rewiring the World, from Edison to Google. New York, W W

Norton

Cornillon P, Gallagher J, and Sgouros T 2003 OPeNDAP: Accessing data in a distributed, hetero-

geneous environment. Data Science Journal 2: 164–74

de la Beaujardiere J 2006 OpenGIS Web Map Server Implementation Speciﬁcation (March 2006).

Wayland, MA, Open Geospatial Consortium Implementation Standard OGC 06-042

Domenico B and Nativi S 2009 Web Coverage Service (WCS) 1.1 Extension for CF-netCDF 3.0
Encoding. Wayland, MA, Open Geospatial Consortium Discussion Paper No. 09-018
Eaton B, Gregory J, Drach R, Taylor K, Hankin S, Caron J, Signell R, Bentley P, Rappa G, Höck
H, Pamment A, and Juckes M 2011 NetCDF Climate and Forecast (CF) Metadata Conven-
tions. Livermore, CA, Lawrence Livermore National Laboratory Technical Report 1.5
Hankin S, Blower J D, Carval T, Casey K, Donlon C, Lauret O, Loubieu T, de La Villeon L P,
Srinivasan A, Trinanes J, Godøy Ø, Mendelssohn R, Signell R, de La Beaujardiere J, Cornillon
P, Blanc F, Rew R 2010 NetCDF-CF-OPeNDAP: Standards for ocean data interoperability
and object lessons for community data standards processes. In Proceedings of OceanObs ’09:
Sustained Ocean Observations and Information for Society (Volume 2), Venice, Italy

Jagers H R A and van Dam A 2011 Deltares CF proposal for Unstructured Grid data model.

Unpublished report

Kernkamp H, Van Dam A, Stelling G, and de Goede E 2011 Efﬁcient scheme for the shallow water
equations on unstructured grids with application to the Continental Shelf. Ocean Dynamics
61: 1175–88

Laaksonen L 2010 e-IRG Roadmap 2010. The Hague, The Netherlands, e-Infrastructure Reﬂection

Group Technical Report

Langran G 1990 Temporal GIS design tradeoffs. URISA Journal 2(2): 16–25
Nativi S, Caron J, Domenico B, and Bigagli L 2008 Unidata’s Common Data Model mapping to the

ISO 19123 Data Model. Earth Science Informatics 1(2): 59–78

van Koningsveld M, de Boer G J, Baart F, Damsma T, den Heijer C, van Geer P, and de Sonneville
B 2010 OpenEarth: Inter-company management of: data, models, tools and knowledge. In
Proceedings of the Nineteenth World Dredging Congress (WODCON XIX), Beijing, China

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

WCS versus OPeNDAP

265

Vretanos P A 2010 OpenGIS Web Feature Service 2.0 Interface Standard (November 2010).
Wayland, MA, Open Geospatial Consortium Implementation Standard OGC 09-025r1 and
ISO/DIS 19142

Ward R 2010 General bathymetric charts of the ocean. Hydro International 14(5) (available
at http://www.hydro-international.com/issues/articles/id1218-General_Bathymetric_Charts_
of_the_Ocean.html)

Whiteside A and Evans J D 2008 Web Coverage Service (WCS) Implementation Standard (March
2008). Wayland, MA, Open Geospatial Consortium Implementation Standard OGS 07-067r5

Acronyms

OPeNDAP
WCS
NMDC.eu Dutch
INSPIRE
WFS
WMS
GEBCO
OGC
netCDF
ADAGUC
MICORE

SOAP
XMLRPC
REST
CF
KNMI
Pydap
DCHART
THREDDS
MSGCPP
AHN
DODS
http
ascii

Open-source Project for a Network Data Access Protocol
Web Coverage Service
National Model and Data Centre
Infrastructure for Spatial Information in the European Community
Web Feature Service
Web Map Service
General Bathymetric Chart of the Oceans
Open Geospatial Consortium
Network Common Data Form
Atmospheric data access for the geospatial user community
Morphological Impacts and COastal Risks induced by Extreme

storm

Simple Object Access Protocol
XML for remote procedure calls
Representational state transfer
Climate and forecasting
Royal Netherlands Meteorological Institute
Python implementation of the Data Access Protocol
Dapper Data Viewer
Thematic Realtime Environmental Distributed Data Services
MSG Cloud Physical Properties
Actueel Hoogtebestand Nederland
Distributed Oceanographic Data System
Hypertext Transfer Protocol
American Standard Code for Information Interchange

© 2012 Blackwell Publishing Ltd
Transactions in GIS, 2012, 16(2)

