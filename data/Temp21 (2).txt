Geoinformatica
DOI 10.1007/s10707-017-0306-1

Knowledge extraction from crowdsourced data
for the enrichment of road networks

· Klaus Arthur Schmid1 ·

Gregor Joss´e1
Andreas Z ¨ufle2 · Georgios Skoumas3 ·
Matthias Schubert1 · Matthias Renz2 ·
Dieter Pfoser2 · Mario A. Nascimento4

Received: 28 April 2016 / Revised: 3 July 2017 / Accepted: 31 July 2017
© Springer Science+Business Media, LLC 2017

Abstract In current navigation systems quantitative metrics such as distance, time and
energy are used to determine optimal paths. Yet, a “best path”, as judged by users, might
take qualitative features into account, for instance the scenery or the touristic attractive-
ness of a path. Machines are unable to quantify such “soft” properties. Crowdsourced data
provides us with a means to record user choices and opinions. In this work, we survey

Mario A. Nascimento’s work was partially supported by NSERC, Canada.

(cid:2) Matthias Schubert

schubert@dbs.ifi.lmu.de

Gregor Joss´e
josse@dbs.ifi.lmu.de

Klaus Arthur Schmid
schmid@dbs.ifi.lmu.de

Andreas Z¨ufle
azufle@gmu.edu

Georgios Skoumas
gskoumas@dblab.ece.ntua.gr

Matthias Renz
mrenz@gmu.edu

Dieter Pfoser
dpfoser@gmu.edu

Mario A. Nascimento
mario.nascimento@ualberta.ca

1

Ludwig-Maximilians-Universit¨at M¨unchen, 80538, M¨unchen, Germany

2 George Mason University, Fairfax, 22030, USA

3 National Technical University of Athens, Zografou 15773, Greece

4 University of Alberta, Edmonton T6G2R3, Canada

Geoinformatica

heterogeneous sources of spatial, spatio-temporal and textual crowdsourced data as a proxy
for qualitative information of users in movement. We (i) explore the process of extracting
qualitative information from uncertain crowdsourced data sets employing different tech-
niques, (ii) investigate the enrichment of road networks with the extracted information by
adjusting its properties and by building a meta-network, and (iii) show how to use the
enriched networks for routing purposes. An extensive experimental evaluation of our pro-
posed methods on real-world data sets shows that qualitative properties as captured by
crowdsourced data can indeed be used to improve the quality of routing suggestions while
not sacrificing their quantitative aspects.

Keywords Crowdsourced data · Routing · Data mining · Path computation · Knowledge
discory · Road networks

1 Introduction

Crowdsourced data is paramount in a plethora of scientific and real-world applications.
Technological progress, such as the ubiquity of smartphones and GPS receivers, has greatly
facilitated contributing information. Nowadays, a large share of crowdsourced data (or:
user-generated content) contains spatial information, often referred to as volunteered geo-
graphic information (VGI), as introduced in [1]. VGI may refer to geo-tags which have been
explicitly or implicitly added to a tweet, picture or status update. Also, a check-in at a reg-
istered location or a review for a restaurant’s menu in a social network can be considered
VGI. Other examples include the shared record of a user’s favorite cycling route or a textual
description of a museum in a blog entry.

In this work, we explore how different user-generated data sources may be used to enrich
road networks in order to be brought to use for routing purposes. It is our hypothesis that
crowdsourced data conveys semantic knowledge and that it expresses sentiment. In contrast,
commercial solutions and established algorithms almost exclusively rely on quantitative
measures, i.e., “hard” metrics. Using crowdsourced data as a proxy, we aim to bring rout-
ing suggestions in line with users’ preferences. For example, assuming that Flickr users
take photos of particularly appealing places, a routing algorithm which prefers areas where
photos are dense, generates paths which are likely to be more appealing.

The diversity of spatial crowdsourced data constitutes one of the main challenges of this
work. Some data sources are inherently noisy, others provide particular depth of informa-
tion. For example, check-ins at curated locations are more reliable than geo-tagged tweets
which are dependent on the quality of the user’s GPS signal and the density of possible
Points of Interest (POI) in their environment. A plain textual mention of a “Tibetian Yoga
Studio”, for instance, may be ambiguous and might not be mapped to a unique location. As
textual sources are particularly ambiguous, we develop specific methods. The general topic
of data quality, however, is beyond the scope of this paper. In general, we trust the surveyed
data sources and aim at extracting valuable information for routing purposes.

Another phenomenon which is addressed in this paper are particular relations between
a number of POIs. Especially for the application of routing, it makes sense to not only
consider singular POIs but multiple connected and related POIs. For instance, when con-
sidering the sequence of check-ins of one user during a day, the sequence may indicate a
recommendable itinerary.

Geoinformatica

Extracting knowledge from crowdsourced data, we want to enrich the underlying road
network such that it may be used for conventional shortest path algorithms. Given source
and destination, we provide paths which serve as a trade-off between quantitative routing
criteria such as distance and the qualitative information provided by the crowd. Allowing
for slight detours from cost-optimal paths, we generate paths which reflect the underlying
qualitative criteria. While many related problems, such as the family of Orienteering Prob-
lems, have been proved to be NP-hard, we aim for easy integration and polynomial runtime
at query time. We explore different methods for the enrichment of the road network. In addi-
tion to network modification, we introduce a meta-network which ties path computation to
the POIs of the network, generating valid itineraries. Our evaluation is based on real-world
crowdsourced data sets and real-world tourist trip recommendations.

The methodology of this paper is summarized in Fig. 1. Processing heterogeneous data
sources, we propose extraction methods to mine (sequential) occurrences of POIs. These
occurrences are used for different approaches of network enrichment. Finally, conventional
routing algorithms may be applied to the enriched networks in order to produce alternative
path results.

As an example for the query output, consider the routing scenario in Fig. 2 which is set
in the city of Paris, France. The solid line represents the conventional shortest path from
starting point “Gare du Nord” to the destination at “Quai de la Rap´ee”. The dot dashed
and dotted lines represent alternative paths computed in enriched networks as proposed in
this paper. The triangles in this example mark POIs as extracted from travel blogs, in this
case the POIs correspond to landmarks and sights. For instance, the path represented by the
dot dashed line passes locations like “Place de la R´epublique”, “Cirque d’hiver” and “la
Bastille” and justifiably satisfies the requirement of being touristically appealing. Compared
to the conventional shortest path, indicated by the solid line, it will yield greater value for
travelers.

Fig. 1 Flow chart illustrating the methods presented in this paper

Geoinformatica

Fig. 2 Shortest (solid line) and alternative paths (dot dashed and dotted lines) along POIs in Paris, France.
This result is output of the methods presented in this paper. [Originally published in [2]]

This work is divided into three parts. First, we give an overview of different data sources,
categorize them, mention advantages as well as possible drawbacks. Second, we explore
how crowdsourced knowledge can be extracted from different data sources. We present
different approaches for singular, pairwise or sequential occurrences of POIs. Third, we
investigate how the knowledge may be used to enrich the underlying road network and may
be employed in routing algorithms. In our experiments, we show that routing algorithms
indeed benefit from incorporating crowdsourced knowledge. More precisely, we are able
to generate paths similar to professional tourist trip recommendations. These paths reflect
the qualitative criteria but only incur a minimal increase in path length. This work extends
the research presented in [3], which focused on spatial relations between pairwise occur-
rences of POIs. Incorporating ideas published in [4, 5], we additionally present means for
enrichment based on singular occurrences of POIs. A further novel extension in this work
is considering sequences of POIs (triples or longer). Finally, the our evaluation integrates
further datasets.

Geoinformatica

The rest of this paper is organized as follows: In Section 2, we summarize related
research. Section 3 classifies data sources. Extracting knowledge from these sources is
detailed in Section 4. Section 5 introduces several methods for enriching road networks
with the extracted knowledge. The whole process is evaluated experimentally in Section 6.
Section 7 concludes this work with a summary of its contributions.

2 Related work

2.1 Semantic mining and enrichment of trajectories

The discovery of semantic places through the analysis of raw trajectory data has been inves-
tigated thoroughly over the course of the last years. The objective of this field of research is
to analyze user trajectories and, in combination with POI databases, to extract semantically
relevant places based on spatio-temporal patterns (number of times a POI is visited and the
time spent there). The authors in [6–8] provide solutions for the semantic place recognition
problem and categorize the extracted POIs into pre-defined types such as “home”, “work”,
“education” and “shopping”. Moreover, the concept of “semantic behavior” has recently
been introduced. This refers to the use of semantic abstractions of the raw mobility data,
including not only geometric patterns but also knowledge extracted jointly from the mobil-
ity data as well as the underlying geographic and application domains in order to understand
the actual behaviour of users in movement. Several approaches like [9–11, 11–13] have been
introduced during the last decade. The core contribution of these articles lies in the devel-
opment of a semantic approach that progressively transforms the raw mobility data into
semantic trajectories enriched with POIs, segmentation and annotations. Finally, a recent
work, [14], extracts and transforms the aforementioned semantic information into a text
description in the form of a diary. The difference between our work and these approaches is
that the mentioned approaches neither integrate the extracted semantic information into the
road network nor use it for routing purposes. Instead, they combine trajectories with POI
databases to extract semantic information on POIs and possibly enrich other trajectories
(e.g., paths computed by an arbitrary algorithm) with semantic information. For instance,
a sequence of timestamped geo-coordinates might be mapped to the semantic sequence:
home → work → kindergarden → supermarket → home → restaurant.

2.2 Qualitative routing

The term qualitative routing is not defined precisely. We use it to describe two approaches to
routing which do not solely rely on absolute measures and are therefore more “qualitative”
rather than purely quantitative. First, the computation of routes which are easier to memo-
rize, describe and follow. Second, the computation of routes which are particularly scenic,
interesting or popular.

The first problem has been tackled from various angles and even research disciplines.
Following a rather cognitive line of argument, the authors of [15] minimize the complex-
ity of a route description. This is done by finding a trade-off between distance and weights
which describe the complexity of the routing description at every intersection. Different
cognitive models for the complexity can be employed. Later works explore the role of land-
marks in route descriptions [16] and strategies on how to create compact route descriptions
[17]. In [18], the authors explore the concept of route descriptions in detail by defining
and evaluating agent models and deriving an agent-centric qualitative representation of the

Geoinformatica

graph. A less cognitive and more spatial approach is chosen by the authors of [19]. They
introduce cost criteria that allow for a trade-off beween distance and complexity based on
network properties. It might be possible that the cognitive agent models could benefit from
the extraction process presented in this work, however, this goes beyond the scope of the
paper. Our methods are based on crowdsourced knowledge such that ideally the crowd
becomes its own agent, possibly making complex models obsolete.

The second problem has for instance been examined in [20] where a method is presented
for computing beautiful, quiet and happy paths, as the authors phrase it. In order to quantify
these qualities, the authors rely on explicit statements about the beauty of locations, obtained
from a platform which asked users to specifically rate photos according to three categories.
This is a valid approach, however, it does not scale well. In contrast, we argue to mine this
kind of information from existing crowdsourced data, in order to avoid acquiring ratings in
the manner of mechanical turks for locations on a global scale.

Two recent works which address a similar problem but rely on existing crowdsourced
data are [21, 22]. Similar to the work in this paper, the authors of [21] propose to enrich
a road network with a notion of popularity mined from geo-tagged photos. Note that we
review heterogeneous data sources while [21] is limited to photos. Also, the problem and
its solution differ from what is presented in this work. The user in [21] is asked to specify
a number of landmarks for which connecting paths are computed which take the popu-
larity of road segments into account. For each route segment connecting two consecutive
landmarks, the optimal connecting path (the one with maximum popularity) is computed.
Maximizing the popularity is equivalent to the Longest Path Problem which is NP-hard in
general. Instead, our work aims at integrating crowdsourced knowledge into polynomial
routing algorithms for point-to-point queries with no additional input parameters (such as
landmarks to be visited along the way). An interesting use of crowdsourced data is presented
in [22] where the authors grid the road network and sample a location from each cell. Then,
using the pretrained neural network ImageNet [23], the authors classify the Google Street
View pictures of each sample location according to six categories of scenicness (“sky, river,
coast, . . .”). At query time, for a user input of start, target, maximum travel time budget
and one of the six categories, a route is computed which maximizes the scenicness score of
the chosen category while abiding by the budget. However, the problem is NP-hard (it is an
instance of the Arc Orienteering Problem, see below). An approximate solution is given but
no runtime numbers and no comparison to optimal results are presented.

2.3 Touristic trip planning

There are numerous variations of touristic trip planning problems and most are related to the
original trip planning query (TPQ) [24]. The input of a TPQ are start and target as well as a
set of categories (of POIs). The output is the cost-optimal path from start to target visiting
exactly one instance of each category. The NP-hard traveling salesman problem can easily
be reduced to the TPQ by assuming that every POI belongs to its own category. Hence,
efficient solutions to the TPQ or further constrained modifications are heuristic. However,
in real-world scenarios the candidate sets of POIs may often be narrowed down drastically
(e.g., by spatial pruning or additional constraints), allowing for a full enumeration of all
solutions within seconds.

Early variations of the TPQ, [25, 26], allowed for a particular order of some of the cate-
gories and for further constraints regarding the entities of the categories. Further constrained
modifications of the query often focus on the use case of touristic trip planning, occasionally
also referred to as itinerary planning, largely summarized in [27]. For example, the query

Geoinformatica

objective may be to maximize the subset of a set of predefined POIs which can be visited in
a tour with a certain time-constraint [28]. Younger works in this area exploit crowdsourced
data for POI categorization [29], for POI-popularity estimation [30], for POI-recommender
systems [31], for the determination of opening hours or recommended visiting times [32],
for deriving the average duration of stay at each POI [33] or for combinations of the above.
In contrast to these works, we do not focus solely on the purpose of itinerary planning but
follow a more general approach. We emphasize the process of knowledge extraction with
regard to the diversity of the crowdsourced data, its quality and properties. Also, we investi-
gate various different data types and sources and give insight on the aspects of related POIs
and sequences of POIs. It is our belief that itinerary planning methods like the above could
be refined using the contributions of this work. However, we choose not to adapt the rather
rigid structure and the NP-hard nature of trip or itinerary planning queries.

2.4 Orienteering problems

Another relevant family of NP-hard problems are the orienteering problem (OP) and the
arc-orienteering problem (AOP) and variants thereof. The input of both are start and target
locations and a cost budget, usually a maximum travel time. Additionally, there is a non-
negative value assigned to the nodes of the graph of the OP, while for the AOP there is a
value assigned to the edges of the graph (or arcs, hence the name). The output of both queries
is the path from start to target which has the greatest accumulated value among all paths
from start to target not exceeding the cost budget. The OP and numerous modifications have
been thoroughly studied [34], especially in the field of Operations Research. Lately, the
AOP has gained attention [35, 36], also in the database research community [37]. The con-
tributions of this work have great relevance for the OP and AOP, as the extracted knowledge
can be conceived as a value associated with nodes or edges. Using the techniques proposed
and compared in this paper, crowdsourced information may be integrated into existing solu-
tions, adding another facet to the perception of “value” in OPs and AOPs. As mentioned
before, we focus on incorporating crowdsourced knowledge into conventional shortest path
algorithms with polynomial runtime. We therefore distinguish the ideas presented in this
paper from OP and AOP solutions.

3 Data types and processing

In the following, we give a brief overview of different types of data sources. All of the
sources are explored theoretically and practically. Subsequent to this introduction, we
introduce our methodology of knowledge extraction and network enrichment.

3.1 Spatially enriched data

By spatially enriched data we refer to data with attached or inherent geo-tags, e.g., check-
ins at pre-defined locations, geo-tagged tweets or geo-tagged images. The great benefit of
basic spatial point data is its wide availability and large coverage. Most services relying
on spatially enriched data provide APIs and exemplary data sets, such as Foursquare, Yelp,
Twitter, Flickr.1 While check-ins at curated locations provide precise spatial information

1www.foursquare.com, www.yelp.com, www.twitter.com, www.flickr.com

Geoinformatica

geo-tagged data is more error prone due to imprecise GPS sensors. The authors of [38]
show that the deviation of geo-tags from their actual positions is sufficiently small when
the locations are popular locations such as tourist hotspots. Interestingly, [39] shows that
the deviation differs for different photo sharing services. In addition, [39] also shows that
deviation is greater in Latin America and Asia than in North America and Europe, the latter
two with an average deviation not exceeding 60 meters. Given these results and the fact that
GPS signals are not exactly but very close to being normally distributed around the actual
position [40], we choose to trust geo-tags as provided by our data sources.

Of course, the spatial information is just an additional component to the actual content
of the service, e.g., Twitter’s tweets, Yelp’s reviews or Flickr’s photos. Depending on the
content, different notions of information, value or popularity are reflected. For example, the
number of Flickr photos in the vicinity of a particular POI may be interpreted as a measure
for its appeal or, more generally, its popularity (as in [3–5, 37]). Similarly, the number
of check-ins in location-based networks like Foursquare and Yelp may be considered a
measure for trendiness or popularity (as in [29, 31, 32]). While Flickr photos tend to describe
aesthetic appeal, accumulated check-ins rather reflect the popularity of restaurants, bars
or clubs (according to the users of the particular service). This underlines the diversity of
information provided by different data sources.

3.2 Spatio-temporal data

We define spatio-temporal data as sequences of timestamped locations, possibly enriched
with additional data, such as textual descriptions of a trip, of locations visited along the trip
or meta-information like the vehicle used for the trip or the weather on that particular day.
The prime example of spatio-temporal data are trajectories as collected by contributors to
the open source map service OpenStreetMap, as contributed by users of shared mobility
services such as Capital Bikeshare, or as recorded and uploaded by runners, cyclists or
others to platforms like Endomondo.2 However, any temporally ordered sequence of geo-
locations can be classified spatio-temporal data, like consecutive check-ins of a particular
user of a location-based network. In this case, if a significant number of users has visited
the same locations within the time frame of for example a day, one may recommend visiting
these locations as part of a day’s trip (as in [30, 31, 33]).

3.3 Textual data

From data which contains explicit spatial information, we now turn to implicitly spatial
data. Pure textual narrative, for instance blog entries or other text corpora, often contains
mentions of POIs. Aside from the lack of geo-locations, the ambiguity of language and
duplicate identifiers raise difficulties. For instance, “Chinatown” is not a unique identi-
fier, neither is “Gelateria Bella Italia” (it does not even relate locally) and a “Tibetian
Yoga Studio” is most likely not in Tibet. Nevertheless, we want to stress the importance
of textual data as it is a particularly rich source of crowdsourced information. Although
authoring explicit spatial data has been facilitated by technical progress, it sometimes still
requires special applications and/or special knowledge, e.g., when contributing to Open-
StreetMap. Hence, many users are more comfortable using narrative when generating
content. Especially when evaluating visited places, users often generate narrative using

2www.openstreetmap.org, www.capitalbikeshare.com, www.endomondo.com

Geoinformatica

qualitative adjectives such as “beautiful”, “interesting” and “cool”. Similarly with move-
ment patterns, a lot of users describe their motion using toponyms and spatial relations
(“near to”, “next to”, “close by”, etc.) rather than using geo-coordinates. Hence, there is
a largely unused abundance of crowdsourced knowledge in the form of blog entries or
other narratives (freely) available on the internet. In the following, we describe how we
mine toponyms and in turn geo-locations from travel blogs as an example for crowd-
sourced textual data. This is a prerequisite for the knowledge extraction methods presented
in Sections 4.1 and 4.3.

In order to gather travel blog entries, we use web-crawling techniques and compile a
database consisting of 250,000 blog entries from 20 different travel blogs3 as presented in
[2, 41]. Extracting qualitative information from text requires the detection of toponyms, i.e.,
placenames within the raw text. By geoparsing, candidate phrases containing references to
POIs are identified. Let us note that geoparsing is a method well-established in the field of
Natural Language Processing, and we used the Natural Language Toolkit [42] in our imple-
mentation. Subsequently, we geocode these POIs, i.e., we map the POIs onto geo-locations.
This is done using the geographical gazetteer database GeoNames4 which contains over ten
million POI names, their synonyms and their coordinates worldwide. Of the 500,000 POIs
mined from the text corpus, we were able to geocode 480,000. For further details, we refer
the reader to [43] and [41].

4 Knowledge extraction

This section describes the extraction process of qualitative knowledge from crowdsourced
data with increasing complexity. First, singular occurrences of POIs are examined, then
relationships and sequences are investigated. Particular attention is paid to textual data due
to its ambiguity and noise.

4.1 Single occurrences

Accumulation of separate occurrences of POIs is a basic but effective method for quanti-
fying spatial information resulting in numeric scores which reflect some notion of value or
popularity. The number of photos taken in the vicinity of a POI or the number of check-
ins at particular locations have both been employed as a measure for popularity in research.
When considering check-ins, the basic approach is to sum up the number of check-ins at
each location and directly use this score as a measure. A straightforward extension is to
factor in the location-specific rating provided by the corresponding location-based social
network, e.g., the ten-point-rating of Foursquare or the five-star-rating of Yelp.

In contrast, geo-tagged photos are not necessarily taken exactly at the POI they depict
but in a more or less strict vicinity. One basic approach is to consult a POI database (e.g.,
GeoNames) to define a distance threshold ε and to count the photos in the ε-range of each
POI. Alternatively, one may assign all pictures to a certain POI which have this POI as their
nearest neighbor, as suggested in [37]. Another means of aggregation is presented in [44].
The authors propose to give logarithmically decreasing weight to subsequent photos of the
same POI by the same user.

3www.travelblog.com, www.traveljournal.com, www.travelpod.com
4www.geonames.org

Geoinformatica

Results of any of these means of aggregation may be improved when considering the
text tags of the given photos. Using a gazetteer database which provides synonyms (e.g.,
“Cologne Cathedral”, “K¨olner Dom”, “Hohe Domkirche St. Petrus”), the text tags of all
photos in a greater vicinity of the POI may be scanned for word matches and assigned
accordingly.

Besides check-ins and geo-tagged photos we propose another measure for popularity
based on single occurrences of POIs in crowdsourced data. While photos tend to measure
appeal and check-ins indicate popularity, we also exploit a combination of two crowd-
sourced data sets to infer sentiment according to Twitter. As described before, we have
access to the names and geo-locations of touristically relevant POIs. Crawling Twitter’s
public feed for mentions of each POI’s synonymous toponyms, it is possible to obtain a
significant number of tweets in the area of interest. Finally,we apply the sentiment analysis
feature of the Natural Language Toolkit [42] to each tweet and aggregate the output score
for each POI separately. This gives us another notion of popularity in terms of a numeric
score for each POI reflecting the sentiment of Twitter users in regard to that POI which will
be examined in our experimental evaluation.

4.2 Pairwise occurrences

We now investigate how to mine sequences of POIs rather than separate occurrences. By
considering pairs of POIs, for example, it is possible to model connections between the
POIs. Depending on the nature of the pairings different knowledge will be reflected in the
connections. If a significant number of users checked in at the same two locations consec-
utively, it might make sense to recommend the pair of locations rather than each location
separately when planning an itinerary or a route. Check-ins at pre-defined locations are
hardly subject to errors (compared to GPS data) due to the fact that the set of curated
locations where checking in is possible. Therefore, it usually suffices to simply sum and
normalize occurrences of pairs of check-ins in order to score their value when visited in
combination. As before, additional information such as specific ratings may easily be taken
into account. More importantly, when considering pairs of POIs visited in conjunction, spa-
tial connectivity will become a factor. We explore this aspect in the following using purely
textual data to show that even intricate data sets can be mined for knowledge about pairwise
occurrences.

We make use of the text corpus described in Section 3.3. More precisely, we consider
toponyms (mapped to POIs) which are linked by spatial relations describing closeness, such
as “nearby”, “next to”, “at”, “in” or “in front of”. We refer to these spatial relations as
closeness relations. If a pair of POIs is mentioned significantly often linked by a closeness
relation, one may deduce that the two POIs are in fact close to each other. From the text
corpus of 250,000 travel blog entries, we were able to mine 660,000 triplets of the form
(Pi, closeness relation, Pj ). Here and in the following, we denote POIs by Pk with vary-
ing index. A sample of POIs in London, UK, as well as New York City, US, and their
respective closeness relations are visualized in Fig. 3.

The details to our probabilistic approach are given in the Appendix. For each triplets of
the form (Pi, closeness relation, Pj ) we compute a spatial feature vector reflecting dis-
tance and orientation of the POIs’ locations. The entirety of feature vectors for a specific
closeness relation is used to train a Gaussian Mixture Model (GMM). Given a particular
GMM and the spatial feature vector of a pair of POIs, we obtain the (posterior) probabil-
ity that these POIs stand in the given closeness relation to each other. From the posterior
probabilities we derive a closeness score for each pair of POIs. This score reflects a

Geoinformatica

on

in

towards

at

on

at

i n

at

at

right

at

at

near

at

on

near
in

in

right

at

in

on

in

on

f r o n t

at
on

near

in

on

in
near

on

in

left

across
in

at
at
behind

at
in
towards
at

at

at

on

front

on
on
in

in
in
at

on

at

in

on

at

near
in

at

at

at

at

in
west

at

in

towards

in
in
on

in

in
on
towards

front
on

in
in
on

at

in

in

at

on
in

a t

on
in

in

across

in

towards

at

on

near
in
at

in

south

in
at

in
at

near
on

in

on

on

away

in
at

in

at

at

in

at

in

at

at

on

in

at

in

on

at
at
in

in

in

on

onin
by

in

on

by

in

on

on

at

in

at

in

at

in

next

near

out

at

on

at

in

in

beyond

in

in

in
towards

on

in

in

in

at

in

near

on

in

in

out

outside

at
on

in

in

in

at

in

on
into

at

in

in

in

in
in

at

at

on

in

in

at

in

at

in

on

at

at

on

i n

by

at
on

on

in

in

at

within

on

at

at

in

on

in

Fig. 3 POIs (nodes) and their relations (edges) extracted from travel blogs. Visualized are two samples from
London, UK, (left) and New York City, US. [The right illustration was originally published in [41]]

confidence in the notion of closeness as reflected by the relations in the underlying data.
Hence, this method can be used to evaluate occurrences of pairs of POIs in textual data
w.r.t. their closeness. In the following, when speaking of a pairwise occurrence (of POIs),
we mean a mined pair of POIs with non-zero or sufficient score.

4.3 Sequential occurrences

Extending the above introduced concept, we now consider sequential occurrences of POIs
having more than two elements. By the same logic as above, general sequences of POIs
might bear additional information compared to single or pairwise occurrences. In particular,
itineraries might be refined incorporating triples, quadtruples or even longer sequences of
POIs. In the use case of itinerary planning, combining two separate pairs of occurrences
might yield unwanted categorical duplicates. For instance, consider two distinct pairs of
POIs both containing a restaurant. In this case, concatenating the two pairs will guide the
user to two restaurants, possibly within a short time-span. When mining longer sequences of
POIs, we gain valuable information about combinations of POIs which the crowd found to
be valid. For example, longer sequences might also contain two restaurants. However, when
mining such a sequence frequently, it implies a validation by the crowd, e.g., one restaurant
might be a great lunch spot, the other a nice dinner place. Accumulating the significant
sequences, we obtain a measure for the relevance of a certain combination of POIs. Clearly,
this also holds for similar sequences in other types of crowdsourced data, like, for instance,
Flickr photos. Mining sequential photos of Flickr users to extract knowledge about their
movement patterns is an established approach in the research community [31, 33].

From a theoretical point of view, the process of knowledge extraction is similar to that
described above. Consider, for example, consecutive Foursquare check-ins by one user dur-
ing a day. If the user checks in at two places, the combination forms a pair, if they check in
at three places, a triple is formed. In this interpretation of the data, the two pairs contained
in a triple need not necessarily form a pair themselves. Another way of looking at the data
might be to imply that every relevant triple also generates two pairs. Besides consecutive

Geoinformatica

Foursquare check-ins and Flickr pictures, one may also extract sequences of POIs from tex-
tual sources, for example from travel blog entries, following the approach introduced above.
The challenge is now, how to enrich the network with the obtained scores. Consider the fol-
lowing example: Assume you have mined and quantified the score of two POI pairs (Pi, Pj )
and (Pj , Pk) and the score of their concatenation (Pi, Pj , Pk). The score of the triple might
surpass the score of the pairs. This might be because relevant triples are not considered to
generate pairs or simply because triples are scored higher than pairs . The question on how
to use the quantified knowledge in order to enrich the underlying road network is tackled in
the next section. As before, when speaking of a sequential occurrence (of POIs), we mean a
mined sequence of POIs with non-zero or sufficiently significant score (greater than a given
threshold).

5 Enrichment

In this section, we show how the popularity scores presented in the previous section are
made actionable for routing purposes. We explore two different approaches: For the first
approach, presented in Section 5.1, we pursue the idea that a gain in score corresponds to a
reduction in cost, i.e., gain and cost are assumed to be reciprocal. Conventional routing algo-
rithms expand paths with promising edges, i.e., edges with low cost values. By reducing the
cost of edges with non-zero score, conventional routing algorithms favor these edges, steer-
ing the exploration in the direction of such areas. Following this first approach, we obtain
what we refer to as enriched graphs. For the second approach, presented in Section 5.2, we
introduce what we refer to as POI graphs, i.e., a meta-network where nodes correspond to
POIs and edges correspond to shortest paths between them. This allows for the computation
of paths which are ensured to visit POIs provided by the data source.

Both approaches utilize path computation algorithms which minimize given cost criteria
algorithms such as Dijkstra’s algorithm [45] and state-of-the-art path skyline algorithms
[46, 47]. We refer to these algorithms as conventional routing algorithms.

5.1 Enriched graphs

We model any road network as a directed and weighted graph derived from OpenStreetMap5
(OSM) data, as illustrated in Fig. 4a. We denote the graph by G = (V , E, c), where
the vertices (or nodes) v ∈ V correspond to crossroads, dead ends etc., and the edges
e ∈ E ⊆ V × V represent streets connecting vertices. Furthermore, let c : E → R+
0 denote
the function which maps every edge onto its cost criterion. We introduce the following nota-
tions: euv = (u, v) and cuv = c(euv). If not stated otherwise, the cost criterion is distance.
Other possible criteria are for instance travel time or energy consumption. If multiple cost
criteria are used, they are denoted by c1, . . . , ck. Furthermore, let P denote the set of POIs.
We assume every POI to be a node in the graph, i.e., P ⊆ V . This is a minor constraint
as we can easily map each POI to the nearest node in the graph or introduce pseudo-nodes
at the POI’s location. Finally, a set of consecutive edges is referred to as path. Clearly, the
notion of a cost criterion c extends to any path p. By c(p) we denote the summed cost of
the edges of path p.

5www.openstreetmap.org

Geoinformatica

(a) Part of a road network with two
POIs (black circles).

(b) Illustration of two possible skyline
paths connecting a pair of related POIs.

Fig. 4 Example Road Network

Single occurrences In Section 4.1 we describe the knowledge extraction process consider-
ing single occurrences of POIs. The output of this process is a normalized, node-associated
score. Thus, POIs are assigned a numeric score in the range [0, 1], describing some notion
of value or popularity. 0 corresponds to POIs with no score, and 1 corresponds to the highest
possible score. In order for this score to be used in conventional routing algorithms, it has
to be offset against the underlying cost criterion. Otherwise, the optimal path would be the
solution to a traveling salesman problem visiting all POIs to acquire the maximum possible
score. We consider the score to be a reduction in cost, and, in the following, we convert the
node-associated score into an edge-associated cost.

Let s(v) denote the score we associate with a node v ∈ V . Note that for v ∈ V \ P :
s(v) = 0, and for P ∈ P : s(P ) ≥ 0. For each edge (u, v) = e ∈ E, we define the
score-discounted cost (sdc) sdc(e) as

sdc(e) := c(e) · φ(s(u)+s(v))
(1)
where φ ∈ (0, 1) is a scaling factor for the influence of the respective score. Intuitively, if e
connects two vertices u and v with score 0, sdc(e) equals c(e). As the total score s(u)+s(v)
of nodes u and v increases, the score-discounted cost of e decreases exponentially. Thus,
for an exceptionally large score of u and v, the adjusted cost sdc(e) of edge e approaches
zero. The parameter φ controls how quickly the score-discounted cost sdc(e) converges to
zero for an increasing score s(u) + s(v) of the two vertices connected by e, making the
discounted edge e more attractive for routing algorithms.

If a given road network graph G is enriched with a score function sdc reflecting the
popularity of single occurrences of POIs, we refer to G1 = (V , E, sdc) as the enriched
(road network) graph. Since each edge in G1 is given the score-discounted cost sdc(e),
the notion of optimal paths will change according to the new cost measure. This way, we
achieve our goal of incorporating the notion of crowdsourced qualitative information using
conventional shortest path algorithms.

Pairwise occurrences Now, let us consider pairwise occurrences of POIs such as con-
secutive check-ins of a user of a location-based network. The actual path the user chose
between those check-ins is not recorded. Although there is a (spatial) connection between
the check-in locations, it is unclear which part of the network should be enriched. We make
the assumption that users generally prefer cost-optimal paths, i.e., paths which are optimal
under the given cost criteria, such as the shortest path, fastest path or pareto-optimal paths.

Geoinformatica

We propose to discount all edges along these paths, such that routing algorithms will pre-
fer sections of the network with many optimal paths between crowd-favored pairs of POIs.
To summarize and illustrate this, reconsider Fig. 4b. The set of optimal paths w.r.t. multiple
cost criteria is highlighted. Our approach decreases the cost of all edges located on any of
the highlighted paths connecting the POIs. This approach is described in greater detail in
the following.

If the underlying road network uses one cost criterion only, usually distance or travel
time, we discount the cost-optimal path connecting the pair of POIs. In multicriteria road
networks, e.g., additional cost values for energy consumption or toll fees, there are several
possibilities of enrichment. A straightforward approach is to discount the cost-optimal paths
according to each criterion, i.e., enriching up to d paths with crowdsourced knowledge when
the network has d criteria. In order to increase the density of enrichment, we propose to
enrich the path skyline or linear path skyline [46, 48, 49]. If the number of cost criteria
is relatively high (more than three) and/or the average extent between query end points is
relatively big (> 100 km), it is recommendable to use the linear path skyline instead of the
conventional path skyline to restrict the influence of enrichment. Once we have selected the
set of paths to enrich, we proceed as follows.

Let (Pi, Pj ) denote a pair of POIs mined from the data. For instance, two frequent con-
secutive check-in locations or two POIs which are connected by spatial closeness relations.
According to one of the definitions above, we compute a set of optimal paths, denoted by
Si,j . Although the paths contained in Si,j differ from one another, they often share edges. If
an edge occurs in more than one optimal path, we only discount its cost once. Let Ei,j ⊂ E
denote the set of all distinct edges which are part of at least one optimal path from Pi to Pj .
Then we define the score-discounted cost of cost criterion ci of an edge as
sdci(e) = ci(e) ·

(1 − φsij )

(cid:2)

e∈Ei,j

As before, φ ∈ (0, 1) is a scaling factor. sij denotes the score of the pair of POIs. For
example, sij might be the number of consecutive check-ins at Pi and Pj normalized by the
maximum number of check-ins at a pair of POIs. Or, sij = csij might be the closeness score
defined in Section 4.2. Analogous to before, given a road network graph G, we define the
enriched (road network) graph for a score sij reflecting connections between pairs of POIs
as G2 = (V , E, sdc1, . . . , sdck).

Discussion The above approaches directly modify the costs in the underlying road net-
work. The cost of an edge is reduced if a relevant amount of qualitative information
regarding that edge (or its vicinity) is found. More precisely, if edges e and f have the same
cost but e has a higher score than f , then sdc(e) < sdc(f ). When mining single occur-
rences of POIs from crowdsourced data, this adequately reflects the local influence of the
score of each POI on the cost of the adjacent edges. When considering pairs of POIs, the
cost of an edge is reduced if it is part of an optimal path connecting the pair. This, however,
does not “force” routing algorithms to compute a path which actually visits both of these
POIs. This can be ensured by introducing a meta-network.

5.2 POI graphs

For some applications, visiting POIs may be desirable (e.g., when planning touristic
itineraries). For these applications, we introduce a meta-network which also allows to con-
sider sequential occurrences of POIs. We refer to this meta-network as POI graph because

Geoinformatica

the nodes of the graph correspond to POIs and the edges correspond to paths connecting
these POIs.

Enrichment of pairwise occurrences In the following, we build a POI-graph G2
POI using
pairwise occurrences. Each POI mentioned in a significant number of occurrences forms
a vertex of G2
POI. For any pairwise occurrence between two POIs Pi and Pj an edge eij ,
is added to G2
POI. This edge holds a reference to the cost-optimal path connecting the pair.
Figure 4b depicts an example: A new edge is added as a shortcut between the two depicted
POIs. Note that the precomputation of cost-optimal paths is a static preprocessing step
which does not aim to accelerate subsequent path searches but to bind path computation
stronger to the set of mined POI pairs.

When issuing a query, the user inputs start and target nodes. Of course, these are not
necessarily POIs, i.e., part of G2
POI. Thus, we propose a slight modification of Dijkstra’s
algorithm, as pseudo-coded in Algorithm 1. The idea is to find entry and exit POIs which
are close to the start and target node respectively (for details about this rather technical step
we refer the interested reader to [3]). Subsequently, two paths are computed in the original
road network: the cost-optimal path from s to the entry POI and the cost-optimal path from
the exit POI to t. Between entry and exit POI, routing is executed in G2
POI, i.e., following
cost-optimal paths between pairs of POIs which have been mined. Note that according to
the inherent cost criteria, the result path is unlikely to be optimal. This is a desired effect:
We explicitly want to compute paths which trade-off between quantitative aspects and qual-
itative knowledge. As we will show in our experiments, cost-optimal paths cannot reflect
qualitative knowledge while paths in enriched graphs and POI graphs can and do.

Enrichment of sequential occurrences So far we discussed the enrichment of single
and pairwise occurrences. The reason is that in order to enrich the network with crowd-
sourced knowledge from sequential occurrences of POIs, a meta-network is needed. Assume
that in one scenario only the two POI pairs (Pi, Pj ) and (Pj , Pk) were mined from the
data, and in another scenario the triple (Pi, Pj , Pk) was mined from the data. In the for-
mer case, users frequently travel from Pi to Pj , and from Pj to Pk, but do not take the
full journey from Pi to Pk (via Pj ). In the latter case, the full journey was mined as a fre-
quent sequence of POIs, and, thus, Pj might be a simple stopover in-between two popular
POIs Pi and Pk. When mining pairwise occurrences of POIs, the distinction between these

Geoinformatica

scenarios is not possible. The information that the sequence of all three POIs is popular is
lost. We now extend the concept of the POI graph to triples of occurrences, then to arbitrary
sequences.

POI to triples of POIs as G3

We denote the extension of a POI graph G2

POI. Before, POIs
which occurred in sufficiently many pairs according to the data formed a node. In G3
POI each
POI forms a node which occurs in sufficiently many pairs or sufficiently many triples with
greater score than its two consecutive pairs. This means, we only introduce edges for triples
which bear greater score when visited in sequence than visiting its two pairs separately,
i.e., s(Pi, Pj , Pk) > s(Pi, Pj ) + s(Pj , Pk). As before, each pair of POIs mined from the
data is connected by an edge, also called direct edge for distinction. Additionally, for any
triple (for which holds s(Pi, Pj , Pk) > s(Pi, Pj ) + s(Pj , Pk)), we introduce a indirect edge
(or shortcut) in G3
POI from Pi to Pk holding a reference to the concatenated cost-optimal
path from Pi to Pj and from Pj to Pk. This is illustrated in Fig. 5 where the doubled lines
represent shortcuts visiting triples of POIs and the single lines represent paths between POIs.
We refer to the middle node of a shortcut, as seen in Fig. 5a) as an intermediate node. In the
following, we denote the direct edge from Pi to Pj by eij and the indirect edge (Pi, Pj , Pk)
by eij k.

The idea of introducing shortcuts to model particularly valuable sequences of POIs is
appealing. However, conventional routing algorithms may generate result paths with cycles.
This is due to two reasons. First, intermediate nodes are not explicitly visited by a routing
algorithm and can therefore not be flagged appropriately. Second, in order to promote the
usage of sequences of POIs, we discount shortcuts which may lead to violations of the
triangle inequality. e.g., cij k < cij + cj k. Before we decide which cycles to avoid and how,
we introduce definitions to distinguish different types of cycles.

Definition 1 In a directed graph, a cycle is a path (oriented and consecutive set of edges)
where no node is visited twice except for the start/end node. We distinguish between cycles
where the start/end node is a conventional node or an intermediate node (of an indirect
edge). We refer to the former as (simple) cycles and to the latter as inter (intermediate)

Fig. 5 Illustration of the introduced terminology (a)), of cycles with direct and indirect return (b) and c))
and of inter cycles with direct and indirect return (d), e) and f))

Geoinformatica

cycles. Furthermore, we distinguish between cycles where the last edge, i.e., the “returning”
edge, is a direct edge and where it is an indirect edge. We refer to these cycles as having
direct return or indirect return, respectively.

The possible occurrences of these cycles are depicted in Fig. 5: Fig.5b and c show simple
cycles with direct and indirect return, respectively. Figure 5d, e and f show inter cycles,
where the cycle is closed at a node which is not explicitly visited by the routing algorithm,
as it is “hidden” by a shortcut.

In the following, we examine which type of cycle may be part of a result path generated
by a cost-minimizing routing algorithm and how this affects the result. We first consider
simple cycles which require no handling at all, stated by the following lemma.

Lemma 1 Simple cycles cannot occur in result paths.

Proof This lemma is a direct consequence of the Dijkstra property: When visited, every
node is reached through the cost-optimal path. Formally, the cost of any path p =
(. . . , ei,j , . . . , ei,k, . . . ) will never be less than that of p(cid:7) = (. . . , ei,k, . . . ) as all edge costs
are non-negative, i.e., ci,k ≤ ci,j + · · · + ci,k.

Next, consider inter cycles with direct and indirect return, as illustrated in Fig. 5d, e and
f. Let us first consider inter cycles with indirect return. Clearly, such cycles imply a detour.
Yet, this detour may be compensated by the increased popularity incurred by a valuable
sequence of POIs. The gain of visiting the sequence (Pi, Pj , Pk) may justify revisiting Pj ,
reflected in a sufficiently significant score-discounted cost. However, this is only valid for
inter cycles with indirect return, not for those with direct return. This is because inter cycles
with direct return offer no additional gain for revisiting a POI. Figuratively speaking, if the
gain of the sequence has been collected, returning to a previously visited POI bears no gain.
Hence, we want to ensure that inter cycles with direct return cannot occur when employing
a routing algorithm on a POI graph with triples G3
POI fulfills a specific requirement,
we can prove this property. The left side of Fig. 6 exemplifies the occurrence and illustrates
notation.

POI. If G3

Lemma 2 Let G3
(Pi, Pj , Pk) holds:

POI be a POI graph for pairs and triples of POIs. If for every indirect edge

δij k < cj k + ckj

((cid:5))

then no result path has inter cycles with direct return. δ denotes the additional discount of
the POI triple over the concatenation of the two pairs, i.e., δij k := cij + cj k − cij k.

Fig. 6 Illustration of an inter cycle with direct return in a triple of POIs (left). Visualization of both possible
inter cycles with direct return in a 4-sequence of POIs

Proof We first prove the statement for cycles of the form (Pi, Pj , Pk), (Pk, Pj ). Assume,
there was an inter cycle with direct return:

Geoinformatica

By the property ((cid:5)) we have:

cij k + ckj ≤ cij

cij = cij + cj k + ckj − cj k − ckj
cij + cj k + ckj − δ

<
((cid:5))
= cij k + ckj

which is a contradiction to the assumption. Hence, there cannot exist an inter cycle with
direct return in a result path. For any longer cycles (Pi, Pj , Pk), . . . , (Pk, Pj ) the statement
holds because edge-costs are non-negative.

Note that if one of the POI pairs is not connected, the property is fulfilled trivially. If
(Pi, Pj ) are not connected, the property is always fulfilled, if (Pk, Pj ) are not connected,
then no direct return to an intermediate node is possible. It should be noted that in the data
set for our experiments with triples of POIs, the property was rarely violated, and enforcing
it bears minor computational overhead.

In the following, we extend the lemma to sequences of POIs. The problem with
sequences of n POIs is the possible direct return to any of its n − 2 intermediate node. For
a sequence of four POIs this is illustrated on the right side of Fig. 6. Lemma 2 forbids the
direct return to the last intermediate node, i.e., the n − 1-st POI. In order to also forbid the
other direct returns, we have to formulate similar conditions for all other intermediate nodes.
With increasing length of sequences, however, it becomes less likely that cases occur where
these conditions have to be enforced. Also, the conditions can be checked when constructing
the POI graph, i.e., only once during a preprocessing phase of graph extraction.

For this purpose, we introduce the following new notation. Sequences of POIs will be
indexed by numbers instead of letters. Additionally, by δr,s, r > s, we denote the difference
in cost between the s-prefix sequence of an r-sequence. For instance, for a sequence of
four POIs (P1, P2, P3, P4), δ4,2 = c12 − c1234 or δ4,3 = c123 − c1234. Generally, δr,s :=
c1,...,s − c1,...,r . Note that these values are not necessarily positive. If they are, this implies
a high discount of the full sequence compared to the prefix sequence. Obviously, since
all edges, direct or indirect, have a non-negative cost, the cost of visiting additional POIs
increases monotonically – despite any discount. Hence, the greater the interval between s
and r, the less likely the value is positive. Bearing this in mind, we now extend the above
statement inductively. This means, for any POI graph with sequences of POIs up to length
r, we assume the statement for sequences up to length r − 1 holds.

Lemma 3 Let Gr
indirect edge (P1, . . . , Pr ) the following statments hold

POI be a POI graph for sequences of POIs up to length r. If for every

δr,r−1 < cr,r−1
δr,r−2 < cr,r−2
...
δr,3 < cr,3
δr,2 < cr,2

Geoinformatica

then no result path has inter cycles with direct return.

Proof As before, it suffices to prove the statement for cycles of the form

which directly follows from the above:

(P1, . . . , Ps, . . . , Pr ), (Pr , Ps)

c1,...,r + cr,s > c1,...,s

Any inter cycle with direct return to POI Ps has greater cost than the shortcut of length s,
e1,...,s. Like before, the cycle cannot be part of a result path as it has greater cost than the
cycle-free counterpart. The argument holds analoguously for longer cycles.

In the following, we assume POI graphs for triples and longer sequences to fulfill the
above properties. Therefore, it is ensured that we do not produce result paths with cycles
(with direct return). For routing purposes, we may use Algorithm 1, replacing G2
POI
or Gr
POI dependent on the POI graph at hand. For a given user query, i.e., start and target
nodes, close entry and exit POIs are retrieved. From start to entry POI and from exit POI to
target, the cost-optimal paths in the underlying road network are computed. Between entry
and exit POIs, routing is executed in G3
POI, i.e., hopping along pairs, triples or longer
sequences of POIs. Finally, the three subpaths are concatenated yielding a path from start to
target.

POI by G3

POI or Gr

This concludes the section on enrichment of road networks with knowledge mined from
crowdsourced data. In the next section, we investigate the whole pipeline experimentally.
We examine different data types, different data sets and different means of enrichment.

6 Experimental evaluation

In this section, we evaluate the presented methods experimentally. Finding measures for
evaluation, however, is not straightforward. Obviously, if there existed an absolute mea-
sure for popularity, quality or value, this work would be obsolete. Nevertheless, first, we
deliver a proof a concept that paths generated in networks enriched with crowdsourced
knowledge indeed provide a valuable trade-off between quantitative metrics and qualitative
information. We compare professional tourist trip recommendations to the paths generated
by our proposed approaches when using consecutive Foursquare check-ins as a data source.
Second, we examine the influence of parameter φ for the enrichment of networks, as pre-
sented in Section 5.1. We also examine the actual distance of pairs of POIs perceived as
“close” according to the travel blog data. Third, we compare our proposed enriched network
(Section 5.1) to our proposed meta-network (Section 5.2). We show that paths generated
in our meta-network indeed steer the trade-off between quantitative metrics and qualitative
information in the direction of qualitative information. Fourth and finally, we investigate the
impact of taking sequences of POIs instead of pairs of POIs into account. We substantiate
the claim that with marginal overhead, it is possible to improve results further. Before we
go into detail on the results, we briefly explain the setup.

In order to draw comparisons between the different settings, we locate all our exper-
iments in the city of Paris, France, which has high data density for all our sources. For
road network data, we use OpenStreetMap which according to the recent results presented
in [50, 51] has particularly high data quality in Europe. The road network extracted from
the raw data has about 1M nodes and around 1.8M edges. All language processing was

Geoinformatica

implemented in Python, the modeling of pairwise occurrences was implemented in Matlab.
The tasks of network enrichment and path computation were conducted in the Java-based
framework MARiO [52] on an Intel(R) Core(TM) i7-3770 CPU at 3.40GHz and 32 GB
RAM running Linux (64 bit).

For all experiments, we rely on three data sources from which we extract different notions
of popularity. First, a Flickr data set, provided by authors of [53], consisting of 14M pho-
tos worldwide and over 40K photos in the metropolitan area of Paris, France. Second, a
Foursquare data set, provided by the authors of [54, 55], consisting of 33M check-ins by
over 250K users at more than 3.5M venues worldwide, thereof 7.6K venues in the area
of Paris. Third, the aforementioned textual data set extracted from travel blogs. This tex-
tual data set contains 200 significant POIs and 2K occurrences of closeness relations (see
Section 4.2) in the area of Paris. Using Twitter’s public feed, we obtain around 200K tweets
regarding these POIs. From each data source, we may derive different enriched networks
and meta-networks. For instance, mining Foursquare check-in data for single occurrences,
we obtain G1(FSQ). Mining the same data set for pairwise occurrences, we may construct
the enriched graph G2(FSQ) as well as the POI graph G2
POI(FSQ). Each of these networks
is utilized to compute paths, and in general result paths are different when computed in dif-
ferent networks. Table 1 gives an overview which type of (POI) graph is derived from which
source and introduces the notation used (FLR, FSQ, TXT). Note that this selection is not
exhaustive.

Evidently, the density of the data sets varies considerably. Therefore, we restrict ourself
to single, pairwise and triple occurrences of POIs and omit longer sequences. In order to
obtain meaningful results, we empirically determine eleven hotspot regions in Paris where
all data sets are particularly dense. A hotspot is a circular region with a 500 meter radius
centered such that it contains significantly many data points of all sources. The hotspot
centers are visualized in Fig. 7. Covered by the entirety of the eleven hotspots are over
5K nodes of the underlying road network. For a query, two random nodes are drawn from
this set as start and target. The results of each setting are grouped in distance brackets
corresponding to the Euclidean distance between start and target. For each setting 6K runs
are executed.

As a measure for evaluation of crowd popularity, we use Flickr picture density (as, for
instance, used in [4, 31, 33, 37]). For a given path p, the Flickr score SFLR corresponds to the
summed number of Flickr photos within a 40 meter radius of the course of p. Clearly, the

Table 1 This table shows which type of enriched graph or POI graph can be derived from the different
sources used in this work

Graph

Number of occurrences

G1
Enriched
graph single

G2
Enriched
graph pairs

POI

G2
POI graph
pairs

POI

G3
POI graph
triples

Flickr (FLR)

Foursquare (FSQ)

Travel Blogs + Sentiment
Analysis (TXT+SA)

Travel Blogs + Closeness
Relations (TXT+CR)

3

3

3

7

7

3

7

3

7

3

7

3

7

3

7

7

Geoinformatica

Fig. 7 Visualization of the eleven hotspot centers in Paris, France

measure is biased towards graphs enriched with Flickr data. However, in lack of an objective
measure for quality, we argue that SFLR is a well-established indicator for popularity.

6.1 Proof of concept

Using crowdsourced data for network enrichment, we propose a scalable approach to com-
pute paths which do not sacrifice quantitative aspects but reflect the qualitative information
provided by the crowd. Of course, quality is inherently subjective and will always be subject
to discussion. Hence, there cannot be an absolute measure for quality; a fact that impedes
evaluation of our methods. Nevertheless, we provide an exemplary proof of concept. We
consider tourist trip recommendations as presented in a tourist guide for Paris.6 Particularly,
we consider some of the tours where start and target are distinct. For a given start and target
pair we compute the conventional shortest path as a baseline. Additionally, we employ the
meta-network G2
POI(FSQ), i.e., the POI graph enriched with pairwise Foursquare check-ins.
Note that all the examples are located in inner-city Paris where many areas are pedestrian
precincts or parks and many streets are one-way. Our road network extracted from Open-
StreetMap data, however, is optimized for driving and therefore not applicable here. Thus,
we utilized Algorithm 1 to generate a sequence of POIs and determine the shortest paths
between these POIs in a pedestrian network. We compare the derived walking paths to the
professional tourist trip recommendations.

The results are displayed in Fig. 8 where POIs are indicated by markers, the green lines
correspond to the tourist trips, the purple lines correspond to shortest paths and the red
lines correspond to the output of our algorithm as just described. For these cases of popular
tourist routes recommended in a professional guide, our approach is capable of returning

6Insight Guides: Explore Paris, https://www.insightguides.com/shop/product/insight-guides-explore-paris/
9781786716590,seeGoogleBooksforexcerpts.

Geoinformatica

Fig. 8 Comparison of professional tourist trip recommendations (green), conventional shortest paths (pur-
ple) and POI sequences provided by Algorithm 1 and connected by walking paths (red). Markers indicate
POIs recommended in the tourist guide

paths that are very similar. This becomes even more evident, when we compare these paths
to conventional shortest paths, depicted as purple lines in Fig. 8. A perfect example is shown
in the top-left example, where the shortest path will completely avoid the (subjectively and
qualitatively speaking) beautiful island ˆIle de la Cit´e, containing famous touristic attractions
such as the bridge Pont Neuf and the cathedral of Notre-Dame. Yet, we still see some dif-
ference to the professional tourist routes which point to limitations of our approach. Many
parts of the professional tourist routes involve cycles, for instance going to one dead-end
and returning. Since our approaches employ shortest path algorithms (albeit on modified
networks), such cycles are not possible. In contrast, our approaches avoid cycles as cycles
reflect suboptimality in networks with non-negative costs.

Summarizing, the examples in Fig. 8 show that our methodology is indeed able to pro-
duce paths which greatly resemble professional tourist trip recommendations, but without
having to purchase and carry this information. In all examples, the shortest path hardly vis-
its any POIs and cannot compete. The professional tourist trips visit slightly more POIs than
our paths but mostly by allowing for cycles in the path. Nevertheless, the POI sequences
provided by our algorithm yield competitive paths in terms of touristic appeal. This shows
that networks enriched with crowdsourced data are indeed able to reflect underlying metrics
as well as the qualitative knowledge provided by the crowd.

6.2 Parameter and closeness evaluation

In the following, we evaluate the influence of the parameter φ. Recall that φ ∈ [0, 1] scales
the impact of the scores on the costs of a road network edge. For the same score, a smaller
φ will yield greater reduction in cost (cf. Eq. 1). Figure 9a shows the SFLR score results

Geoinformatica

for paths in three different graphs, G1(FLR), G1(FSQ) and G1(TXT+SA) (see Section 5.1).
The score results are indicated by the size of the circles and given relative to the SFLR score
of the conventional shortest path. As expected, the scores increase for decreasing φ. For φ
values lower than 0.5 the result paths become unreasonably long, i.e., sacrificing their quan-
titative aspects which we want to avoid. As mentioned before, the measure SFLR is biased
towards graphs enriched with Flickr data. Hence, it is not surprising that G1(FLR) attains
the highest scores. While G1(FSQ) scores slightly less, G1(TXT+SA) scores significantly
lower. This implies that the notions of popularity induced by Flickr and Foursquare data sets
are more parallel to each other while that of travel blog data is rather orthogonal. Overall,
we may conclude that parameter φ serves its purpose as designed. The default value which
has been shown to be most efficient and is used in all other experiments is φ = 0.7.

Next, we examine the notion of closeness as provided by closeness relations mined from
travel blog data. As explained in Section 4.2 (and detailed in the Appendix), we mine travel
blogs for pairwise mentions of POIs which are linked by words implying spatial closeness
such as “next to”. Training a probabilistic model on the positions of the POIs, we obtain a
closeness score for each pair of POIs. We claim that this score reflects a confidence whether
a given pair of POIs is close as perceived by the crowd. In particular, a higher closeness
score does not imply that POIs are likely to be closer to each other but that the confidence
that they are close is higher. We will now substantiate the claim that this notion of closeness
is congruent with intuition. Figure 9b displays the actual distance between pairs of POIs
considered close as suggested by our method (i.e., closeness score greater 0). The median
of distances is below 2.5 kilometers, 75% are closer than 5 kilometers. Outliers may be
attributed to false text mining (e.g., “white is as close to blue as the Eiffel Tower is close
to the Statue of Liberty”) or to tourists traveling by bike or car rather than walking and
therefore using a different understanding of closeness. For comparison, we also show the
distance between two consecutive Foursquare check-ins. It is easily observed that the notion
of closeness derived from travel blogs is stricter than that of consecutive check-ins. Hence,
our method may, in fact, be applied to mine a representative notion of closeness from noisy
textual narrative.

(a) Parameter evaluation
for
scaling parameter
in graphs
G1 (FLR), G1 (FSQ), G1 (TXT+SA)
w.r.t. the measure SFLR.

(b) Actual distances between pairwise
Foursquare check-ins compared to POI
pairs with positive closeness
score
mined from travel blogs.

Fig. 9 Parameter and closeness evaluation

Geoinformatica

6.3 Comparing enriched graphs and POI graphs

In the following, we compare the different graph types presented in Sections 5.1 and
5.2. When mining pairwise occurrences of POIs, we may derive two types of graphs, the
enriched graph and the meta-network referred to as POI graphs. Consider a pair of POIs
Pi, Pj mined with significant score from the data source at hand. In an enriched graph the
cost of the shortest path from Pi to Pj will be reduced according to the score of the pair.
Hence, applying a conventional shortest path algorithm, the discounted edges along this
path are likely to be favored. In the POI graph, Pi and Pj will become nodes connected by
an edge. Applying Algorithm 1, the “whole” path between Pi and Pj will be considered as
a single edge, forcing the algorithm to actually visit the POIs. Paths generated in POI graphs
are therefore expected to be less quantitative and instead earn higher qualitative scores. For
pairwise occurrences we rely on two data sources, consecutive Foursquare check-ins and
closeness relations in travel blogs. From these sources four graphs are derived, two enriched
graphs (G2(FSQ), G2(TXT+CR)) and two POI graphs (G2
POI(TXT+CR)). In
analogy to the Flickr score measure SFLR, we define two measures tailored to the data
sources FSQ and TXT+CR. The Foursquare score SFSQ is the total number of check-ins at
POIs within a 40 meter of the course of the given path. The textual score STXT+SA is the
total number positive mentions of all POIs within a 40 meter radius of the route of the given
path. SFSQ and STXT+SA are obviously biased towards graphs enriched with Foursquare data
and textual data respectively. However, in this section, we compare different graph types
enriched with the same data source. Therefore, the bias equally applies to the different graph
types.

POI(FSQ), G2

Figure 10a and b show the results for Foursquare graphs G2(FSQ) and G2

POI(FSQ) rel-
ative to path lengths and SFSQ scores of conventional shortest paths. Figure 10c and d
show the results for textual closeness graphs G2(TXT+CR), G2
POI(TXT+CR) relative to
path lengths and STXT+SA of conventional shortest paths. In terms of path length, both
enriched networks, G2(FSQ) and G2(TXT+CR), create results hardly longer than the short-
est paths. Of course, when routing in a POI graph, paths increase considerably in length.
Compared to the shortest paths, we observe roughly doubled path lengths in G2
POI(FSQ)
and G2
POI(TXT+CR). Interestingly, the increase in length is greater when start and target are
closer. The detours which have to be made due to the structure of the POI graph carry less
weight as the overall distance grows.

POI(FSQ)) to five times (G2

For the marginal increase in length using enriched graphs G2(FSQ) and G2(TXT+CR),
results attain considerably higher scores as shown in Fig. 10b and d. SFSQ scores are around
30% higher than those of shortest paths, STXT+SA scores are roughly double those of short-
est paths. As expected, the POI graphs intensify this effect. By roughly doubling path
length, three (G2
POI(TXT+CR)) the scores of shortest paths are
attained. Of course, this effect is dependent on parametrization and data density, but the
results substantiate the claim that routing in POI graphs yields higher qualitative scores. For
an application where quantitative metrics are less important, POI graphs may be employed.
This holds, for example, for tourist route recommendation systems where path length is a
minor criterion. Also, in the case of sportive routing, e.g., for cyclists and runners, path
length might be a limiting factor, but attractiveness of the path itself is usually the pri-
mary factor. In contrast, when only minor increase in length is tolerated, enriched networks
yield the better trade-off. For negligible additional path length, considerable gain in score is
achieved. This may be beneficial for car navigation systems. For drivers, travel time is usu-
ally the highest ranked criterion. However, some drivers might b e willing to accept a minor
detour for a more scenic trip.

Geoinformatica

(a) Path lengths in G (FSQ) and GPOI(FSQ)

(b) SFSQ scores in G (FSQ) and GPOI(FSQ)

(c) Path
GPOI(TXT+CR)

lenghts

in G (TXT+CR) and

in G (TXT+CR)

and

(d) STXT+SA scores
GPOI(TXT+CR)

Fig. 10 Path lengths and scores of optimal paths in Foursquare graphs (top) and textual closeness graphs
(bottom) relative to shortest path (in G)

6.4 Comparing pairs and triples

POI(FSQ) and G3

For our final setting, we examine the benefit of enriching POI graphs with sequential occur-
rences. We rely on consecutive Foursquare check-ins (of a user during one day), i.e. the POI
graphs G2
POI(FSQ) as defined in Sections 5.1 and 5.2. As mentioned before,
we were able extract just about 28K consecutive check-in pairs by the same user during one
day. Extending the sequence of consecutive check-ins to triples, we were able to mine 14K
triple occurrences. Combining pairs and triples of POIs, we build a POI graph G3
POI(FSQ)
which, in addition to the links between POI pairs, holds shortcuts for relevant occurrences
of POI triples. Algorithm 1 can be applied to this kind of graph without modification. How-
ever, the structure of the graph can lead to cycles during path computation. In Section 5.2,
we detailed which kinds of cycles in result paths are problematic. We explained which are
to be avoided (indirect cycles with direct return) and how to ensure this by asserting a par-
ticular property (recall Lemma 2). Building G3
POI(FSQ), we encountered violations of this
property in a negligible number of triples (< 100). It can therefore be stated that ensuring
the correctness of POI graphs for triples is not at all a limiting constraint.

Figure 11a shows the path lengths, and Fig. 11b shows the Foursquare scores SFSQ.
Additionally using triples of POIs has hardly any increasing effect on path lengths. This
can be attributed to the presence of edges between pairs as well as triples in G3
POI(FSQ).
Therefore, if the trade-off between length and score of a triple is suboptimal, the routing
algorithm will often choose the path corresponding to only one of the pairs. Thus, the POI

Geoinformatica

(a) Path lengths

(b) SFSQ scores

Fig. 11 Path lengths and scores of optimal paths in graphs G2
path (in G)

POI(FSQ) and G3

POI(FSQ) relative to shortest

graph for triples offers additional knowledge without degrading the knowledge extracted
from pairwise occurrences. At the cost of virtually no increase in path length, we are able to
attain 15% to 30% higher scores in G3
POI(FSQ). This emphasizes
the value of POI sequences for routing purposes. Seeing as the overhead in programming is
low, it can be recommended to integrate this kind of knowledge if it may be extracted from
the corresponding data source.

POI(FSQ) compared to G2

6.5 Runtime evaluation

This section describes the query-time performance of proposed algorithms G1, G2, G2
POI,
and Gr
POI on various distances between path start and destination. As is shown in Fig. 12,
overall runtime scales slightly superlinearly with variations between approaches. All times
are given in milliseconds per query.

Baseline approaches G1 (orange) and G2 (green) operate as traditional routing on
enriched pre-processed graph, where Dijkstra’s algorithm was used for path finding. Note
that any routing algorithm could be used here instead. Due to the lack of additional over-
head, paths for short distances are found in comparatively short time. However, an increase
in distance keeps G2 relatively stable in runtime, whereas G1 takes significantly longer to
return resuls. We argue this is caused by the distribution of enrichment data sources – G1

Fig. 12 Runtime evaluation for different distances between path start and destination

Geoinformatica

is based on single-instance flickr images that have diverse distributions on a local level,
but can be found in almost every neighborhood. Hence, a Dijkstra search over longer dis-
tances explores large sections of the network where cost has dropped due to enrichment
discounts. In contrast, G2 is based on the materialization of POI-pair relationships, which
typically affects corridors and sub-sets of the road network, keeping overall edge cost up.
This behaviour can be easily adjusted by fine-tuning enrichment parameters.

Meta-network approaches G2

POI (light blue) and Gr
POI (dark blue) employ a two-step
routing process and therefore take more time to compute results. More specifically, for every
connection of two relevant POI along the path, an entire new Dijkstra-search has to be issued
to find this connection in the actual road network. In direct comparison, Gr
POI takes slightly
longer since it uses more available sequences of POIs that ultimately need to be translated
into road paths.

7 Conclusions and outlook

This work covers the topics of knowledge extraction and network enrichment. Our goal was
to incorporate qualitative information into routing algorithms in order to bring path compu-
tation more in line with human intuition. To achieve this goal, we extracted knowledge from
heterogeneous sources of crowdsourced – i.e., user-generated – spatial data, including spa-
tially enriched data, spatio-temporal data and purely textual data. By using this knowledge
to enrich existing networks or to construct abstract meta-networks, we map the qualitative
preferences of users onto the actual road network. As a result, we are indeed able to com-
pute paths which correspond to the respective sentiment of the crowd, and it is possible to
represent varying sentiments using different data sources.

In our extensive overview, we investigate different data types and sources, examine vari-
ous occurrences of inherent knowledge and present different means for network enrichment.
Furthermore, our wide theoretic fundament is substantiated by a number of experiments
using real-world datasets with different characteristics. Our results clearly show that incor-
porating qualitative information into road networks is not only feasible but leads to enhanced
solutions for the task of path computation, i.e., paths which reflect qualitative knowledge
without sacrificing their quantitative aspect.

Appendix: Mining Spatial Closeness from Textual Data

As presented in [3], we rely on a probabilistic model to counter the ambiguity inherent in
textual data. This is done in three steps. First, we create feature vectors for each occurrence
of a particular spatial closeness relation. Second, employing the feature vectors we train
a Gaussian Mixture Model (GMM) for each kind of closeness relation. Third, we use the
derived GMMs to infer a closeness score which can be used to enrich the underlying road
network.

For each occurrence of a closeness relation (e.g., “next to”) mined from the text (e.g.,
the triplet (Pi, “next to”, Pj )), a spatial feature vector vij = (r, φ) is created. vij describes
the Euclidean distance between Pi and Pj and the orientation as the counterclockwise rota-
tion of the x-axis, centered at Pj , to Pi. Thus, for any triplet extracted from the corpus
(sufficiently often) we obtain a two-dimensional feature vector. We group these vectors by
the relation they represent, obtaining a set of vectors VRELk for each of the closeness rela-
tions RELk. For each relation, we propose to train a probabilistic model. Following the

argumentation in [43] where similar relations were examined, we propose employing
GMMs, a well-proven and extensively studied method for many supervised and unsuper-
vised learning problems [56].

A GMM is a weighted sum of a fixed number M of Gaussian component densities

Geoinformatica

Pθ (v) =

wig(v; μi, (cid:7)i)

M(cid:3)

i=1

where v is an l-dimensional vector, wi are the mixture weights (summing to 1) and

g(v; μi, (cid:7)i) =

(cid:4)

1
(2π )l det((cid:7)i)

(cid:5)
1/2 exp

(cid:6)

− 1
2

(cid:7)

(v − μi)T (cid:7)i(v − μi)

is an l-variate Gaussian density function with mean vector μi ∈ Rl and covariance matrix
(cid:7)i ∈ Rl×l. The model is fully characterized by the weights, mean vectors and covariance
matrices, collectively represented in θ = {wi, μi, (cid:7)i}, i = 1, . . . , M. In our case, l = 2,
the dimensionality of the spatial feature vectors v. For the parameter estimation of each
Gaussian component, Expectation Maximization (EM) [57] is the state-of-the-art technique.
It updates the parameters of the components iteratively w.r.t. a given (feature) vector set
until a convergence threshold is reached.

Employing EM, we obtain a set of probabilistic models P(· |θ k), one for each closeness
relation RELk ∈ {REL1, . . . , RELm} in the set of all closeness relations. For a pair of
POIs Pi and Pj with spatial feature vector vij , P
θ k (vij ) is the probability that Pi and Pj
stand in spatial relation RELk to each other. Based on this information, we now derive a
closeness score for pairs of POIs by Bayesian inference.

For two distinct POIs, let RELij denote the set of all closeness relations existing between
Pi and Pj . Note that RELk denotes an abstract relation, while RELij denotes the set of
occurrences of relations between a pair of POIs. Furthermore, let vij denote the spatial
feature vector of Pi and Pj . In order to determine a numeric score describing the close-
ness of the POIs, we estimate the posterior probability of all closeness relations RELk and
accumulate them. The posterior probability of relation RELk is given by

P(RELk | vij ) =

(cid:8)

P(vij | θ k) P(θ k)
m
l=1

P(vij | θ l) P(θ l)

where P(θ k) = P(RELk) denotes the prior probability of relation RELk given by the
trained model represented by θ k.

In a traditional classification problem the task would be to choose the closeness relation
with the highest posterior and to assign the pair of POIs to this class. We, in contrast, con-
sider each posterior probability P(RELk | vij ) as a measure of confidence of the existence
of RELk between Pi and Pj . Stressing that all considered relations represent spatial close-
ness, we combine all posteriors into one measure which we call closeness score csij of the
pair of POIs Pi and Pj :

csij = 1
m

m(cid:3)

k=1

P(RELk | vij )
max{P(RELk | vij ) | ∀ i (cid:10)= j }

This closeness score can be used to enrich the underlying road network.

Geoinformatica

References

1. Goodchild MF (2007) Citizens as sensors: the world of volunteered geography. GeoJournal 69:211–221
2. Skoumas G, Schmid KA, Joss´e G, Z¨ufle A, Nascimento MA, Renz M, Pfoser D (2014) Towards
knowledge-enriched path computation. In: Proceedings of the 22nd ACM SIGSPATIAL international
conference on advances in geographic information systems, Dallas/Fort Worth, TX, USA, November
4-7, 2014, pp 485–488

3. Skoumas G, Schmid KA, Joss´e G, Schubert M, Nascimento MA, Z¨ufle A, Renz M, Pfoser D (2015)
Knowledge-enriched route computation. In: Advances in spatial and temporal databases - 14th interna-
tional symposium, SSTD 2015, Hong Kong, China, August 26-28, 2015. Proceedings, pp 157–176
4. Joss´e G, Franzke M, Skoumas G, Z¨ufle A, Nascimento MA, Renz M (2015) A framework for com-
putation of popular paths from crowdsourced data. In: 31st IEEE international conference on data
engineering, ICDE 2015, Seoul, South Korea, April 13-17, 2015, pp 1428–1431

5. Joss´e G, Schmid KA, Z¨ufle A, Skoumas G, Schubert M, Pfoser D (2015) Tourismo: A user-preference
tourist trip search engine. In: Advances in spatial and temporal databases - 14th international symposium,
SSTD 2015, Hong Kong, China, August 26-28, 2015. Proceedings, pp 514–519

6. Lv M, Chen L, Chen G (2012) Discovering personally semantic places from gps trajectories. In: ACM

CIKM12, pp 1552–1556

7. Yan Z, Chakraborty D, Parent C, Spaccapietra S, Aberer K (2011) Semitri: A framework for seman-
tic annotation of heterogeneous trajectories. In: Proceedings of the 14th international conference on
extending database technology, pp 259–270

8. Palma AT, Bogorny V, Kuijpers B, Alvares LO (2008) A clustering-based approach for discover-
ing interesting places in trajectories. In: Proceedings of the ACM symposium on applied computing,
pp 863–868

9. Alvares LO, Bogorny V, Kuijpers B, de Macedo JAF, Moelans B, Vaisman A (2007) A model for
enriching trajectories with semantic geographical information. In: Proceedings of the 15th annual ACM
international symposium on advances in geographic information systems. ACM, pp 22:1–22:8

10. Parent C, Spaccapietra S, Renso C, Andrienko G, Andrienko N, Bogorny V, Damiani ML, Gkoulalas-
Divanis A, Macedo J, Pelekis N, Theodoridis Y, Yan Z (2013) Semantic trajectories modeling and
analysis. ACM Comput Surv ’13 45:42:1–42:32

11. Spaccapietra S, Parent C (2011) Adding meaning to your steps. In: Proceedings of the 30th international

conference on conceptual modeling, pp 13–31

12. Yan Z, Chakraborty D, Parent C, Spaccapietra S, Aberer K (2013) Semantic trajectories: Mobility data

computation and annotation. ACM Trans Intell Syst Technol 4:49:1–49:38

13. Yan Z, Spremic L, Chakraborty D, Parent C, Spaccapietra S, Aberer K (2010) Automatic construc-
tion and multi-level visualization of semantic trajectories. In: Proceedings of the 18th international
conference on advances in geographic information systems, pp 524–525

14. Feldman D, Sugaya A, Sung C, Rus D (2013) idiary: From gps signals to a text-searchable
diary. In: Proceedings of the 11th ACM conference on embedded networked sensor systems. ACM,
pp 6:1–6:12

15. Duckham M, Kulik L (2003) Simplest paths: Automated route selection for navigation. In: Proceedings

of the international conference on spatial information theory COSIT 2003. Springer, pp 169–185

16. Duckham M, Winter S, Robinson M (2010) Including landmarks in routing instructions. Journal on

Location Based Services 4(4):28–52

17. Richter KF, Duckham M (2008) Simplest instructions: Finding easy-to-describe routes for navigation.
In: Proceedings of 5th international conference geographic information science 2008, pp 274–289
18. Westphal M, Renz J (2011) Evaluating and minimizing ambiguities in qualitative route instructions. In:
Proceedings of the 19th ACM international conference on advances in geographic information systems,
pp 171–180

19. Sacharidis D, Bouros P (2013) Routing directions: Keeping it fast and simple. In: Proceedings of the

21st ACM international conference on advances in geographic information systems, pp 164–173

20. Quercia D, Schifanella R, Aiello LM (2014) The shortest path to happiness: Recommending beautiful,

quiet, and happy routes in the city. CoRR (abs/1407.1031

21. Sun Y, Fan H, Bakillah M, Zipf A (2015) Road-based travel recommendation using geo-tagged images.

Comput Environ Urban Syst 53:110–122

22. Runge N, Samsonov P, Degraen D, Sch¨oning J (2016) No more autobahn!: Scenic route generation using
googles street view. In: Proceedings of the 21st international conference on intelligent user interfaces.
ACM, pp 147–151

23. Krizhevsky A, Sutskever I, Hinton GE (2012) Imagenet classification with deep convolutional neural

networks. In: Advances in neural information processing systems, pp 1097–1105

Geoinformatica

24. Li F, Cheng D, Hadjieleftheriou M, Kollios G, Teng SH (2005) On trip planning queries in spatial
databases. In: Proceedings of the 9th international conference on advances in spatial and temporal
databases. SSTD’05. Springer-Verlag, Berlin, Heidelberg, pp 273–290

25. Kanza Y, Safra E, Sagiv Y, Doytsher Y (2008) Heuristic algorithms for route-search queries over

geographical data. In: ACM SIGSPATIAL GIS, p 11

26. Chen H, Ku WS, Sun MT, Zimmermann R (2011) The partial sequenced route query with traveling rules

27. Gavalas KC, Mastakas K, Pantziou G (2014) A survey on algorithmic approaches for solving tourist trip

in road networks. Geoinformatica 15:541–569

design problems. J Heuristics 20:291–328

generation. Springer

28. Garcia A, Arbelaitz O, Linaza MT, Vansteenwegen P, Souffriau W (2010) Personalized tourist route

29. Chen C, Zhang D, Guo B, Ma X, Pan G, Wu Z (2015) Tripplanner: personalized trip planning leveraging

heterogeneous crowdsourced digital footprints. IEEE Trans Intell Transp Syst 16:1259–1273

30. Hsieh HP, Li CT, Lin SD (2012) Exploiting large-scale check-in data to recommend time-sensitive
routes. In: Proceedings of the ACM SIGKDD international workshop on urban computing. ACM
31. Brilhante I, Macedo JA, Nardini FM, Perego R, Renso C (2013) Where shall we go today?: Planning
touristic tours with tripbuilder. In: Proceedings of the 22nd ACM international conference on information
& knowledge management. CIKM ’13. ACM, New york, NY, USA, pp 757–762

32. Hsieh H, Li C (2014) Mining and planning time-aware routes from check-in data. In: Proceedings of the
23rd ACM international conference on conference on information and knowledge management, CIKM
2014, Shanghai, China, November 3-7, 2014, pp 481–490

33. De Choudhury M, Feldman M, Amer-Yahia S, Golbandi N, Lempel R, Yu C (2010) Automatic con-
struction of travel itineraries using social breadcrumbs. In: Proceedings of the 21st ACM conference on
hypertext and hypermedia. HT ’10. ACM, New york, NY, USA, pp 35–44

34. Vansteenwegen P, Souffriau W, Oudheusden DV (2011) The orienteering problem: a survey. Eur J Oper

Res 209:1–10

35. Souffriau W, Vansteenwegen P, Berghe GV, Oudheusden DV (2011) The planning of cycle trips in the

province of east flanders. Omega 39:209–213

36. Verbeeck C, Vansteenwegen P, Aghezzaf EH (2014) An extension of the arc orienteering problem and

its application to cycle trip planning. Transport Res E-Log 68:64–78

37. Lu Y, Shahabi C (2015) An arc orienteering algorithm to find the most scenic path on a large-scale road
network. In: Proceedings of the 23rd SIGSPATIAL international conference on advances in geographic
information systems. GIS ’15. ACM, New York, NY, USA, pp 46:1–46:10

38. Hauff C (2013) A study on the accuracy of flickr’s geotag data. In: Proceedings of the 36th international
ACM SIGIR conference on Research and development in information retrieval. ACM, pp 1037–1040
39. Zielstra D, Hochmair HH (2013) Positional accuracy analysis of flickr and panoramio images for

selected world regions. J Spat Sci 58:251–273

40. Zandbergen PA (2008) Positional accuracy of spatial data: Non-normal distributions and a critique of the

national standard for spatial data accuracy. Trans GIS 12:103–130

41. Skoumas G, Pfoser D, Kyrillidis A, Sellis T (2016) Location estimation using crowdsourced spatial

relations. ACM Trans Spatial Algorithms Syst 2:5:1–5:23

42. Loper E, Bird S (2002) Nltk: The natural language toolkit. In: Proceedings of the ACL-02 work-
shop on effective tools and methodologies for teaching natural language processing and computational
linguistics, vol 1, pp 63–70

43. Skoumas G, Pfoser D, Kyrillidis A (2013) On quantifying qualitative geospatial data: A probabilistic
approach. In: Proceedings of the second ACM international workshop on crowdsourced and volunteered
geographic information, pp 71–78

44. Schlieder C, Matyas C (2009) Photographing a city: an analysis of place concepts based on spatial

choices. Spat Cogn Comput 9:212–228

45. Dijkstra EW (1959) A note on two problems in connexion with graphs. Numer Math 1:269–271
46. Schubert M, Renz M, Kriegel HP (2010) Route skyline queries: a multi-preference path planning

47. Shekelyan M, Joss´e G., Schubert M (2015) Paretoprep: Efficient lower bounds for path skylines and fast

approach. In: Proceedings ICDE, pp 261–272

path computation SSTD15

48. Shekelyan M, Joss´e G, Schubert M, Kriegel H (2014) Linear path skyline computation in bicriteria
networks. In: Database systems for advanced applications - 19th international conference, DASFAA
2014, bali, indonesia, april 21-24 2014. Proceedings, Part I, pp 173–187

49. Shekelyan M, Joss´e G, Schubert M (2015) Linear path skylines in multicriteria networks. In: ICDE15,

pp 459–470

50. Neis P, Zielstra D (2014) Recent developments and future trends in volunteered geographic information

research: The case of openstreetmap. Future Internet 6:76–106

Geoinformatica

51. Neis P, Zielstra D, Zipf A (2013) Comparison of volunteered geographic information data contributions

and community development for selected world regions. Future Internet 5:282–300

52. Graf F, Kriegel HP, Renz M, Schubert M (2011) Mario: multi-attribute routing in open street map.
In: Advances in spatial and temporal databases. vol 6849 of lecture notes in computer science,
pp 486–490

53. Mousselly-Sergieh H, Watzinger D, Huber B, D¨oller M, Egyed-Zsigmond E, Kosch H (2014) World-
wide scale geotagged image dataset for automatic image annotation and reverse geotagging. In:
Proceedings of the 5th ACM multimedia systems conference, pp 47–52

54. Yang D, Zhang D, Chen L, Qu B (2015) Nationtelescope: monitoring and visualizing large-scale

collective behavior in lbsns. J Netw Comput Appl 55:170–180

55. Yang D, Zhang D, Qu B (2015) Participatory cultural mapping based on collective behavior in location

based social networks. ACM Transactions on Intelligent Systems and Technology. in press

56. Bishop CM (2006) Pattern recognition and machine learning (information science and statistics).

Springer-verlag New York, inc., secaucus, NJ, USA

57. Dempster AP, Laird NM, Rubin DB (1977) Maximum likelihood from incomplete data via the em

algorithm. J R Stat Soc Ser B 39:1–38

Gregor Joss´e received his degree in mathematics and his PhD
degree in computer science from the Ludwig-Maximilians-Unversit¨at
Munich, Germany, in 2012 and 2016, respectively. His PhD the-
sis titled “Efficient Query Processing in Complex Modern Traf-
fic Networks” addressed several
theoretical and practical prob-
lems occurring in modern traffic networks. Gregor Joss´e is cur-
rently a researcher at the Database Systems Group of the Ludwig-
Maximilians-Universit¨at in Munich and has been a co-author in 13
peer-reviewed publications.

Klaus Arthur Schmid is a post doctoral researcher at Ludwig-
Maximilians-Unversity Munich, Germany. He reiceived his doctorate
in computer science in 2016, his thesis entitled “Searching and Min-
ing in Enriched Geo-Spatial Data”. His research is focused on spatio-
temporal query processing, spatio-temporal data-mining, uncertain
data management and he co-authored fifteen publications.

Geoinformatica

Andreas Z ¨ufle is an assistant professor at the department of Geog-
raphy and Geoinformation Science at George Mason University. He
received his PhD in Computer Science and his Diploma in Statis-
tics and Computer Science from Ludwig-Maximilians-Universit¨at
(LMU Munich) in Munich, Germany. Dr. Z¨ufle’s research quest is
to bridge the gap between datascience and geo-science, two fields
working independently on often identical research problems. To bring
these communities together, Dr. Z¨ufle has been co-organizing and
program-co-chairing the International ACM SIGMOD Workshop on
Managing and Mining Enriched Geo-Spatial Data (GeoRich) for the
last three years. His research is focused on spatiotemporal query pro-
cessing, spatio-temporal data-mining, uncertain data management.
Since 2011, he published more than 50 papers in refereed conferences
and journals and has an h-index of 14.

Georgios Skoumas received his degree in electronic and com-
puter engineering from the Technical University of Crete in Chania,
Greece, the M.Phil. degree in computer science from the University
of Cambridge in Cambridge, U.K., in 2010, and the Ph.D. degree
in electrical and computer engineering from the National Technical
University of Athens in Athens, Greece, in 2015. He was a Research
Assistant with Idiap Research Institute in Martigny, Switzerland, in
2011 and a visiting Research Assistant with Ludwig-Maximilian-
Universit¨at in Munich, Germany, in 2014. His research interests lie
in the areas of data mining and machine learning. Dr. Skoumas was a
recipient of a Marie Curie Fellowship in 2011.

Matthias Schubert is a professor at
the Ludwig-Maximilians-
Universit¨at (LMU Munich) and one of the founders of the Data
Science Lab at LMU Munich. He received his doctoral degree in
Computer Science in 2004 and finished his habilitation in 2009.
According to Google Scholar (as of July 2017) his publications have
been cited more than 1,700 times, resulting in an H-index of 22. His
research areas are spatial information systems, similarity search and
data mining. He did applied research projects in the areas of web
crawling, medical imaging, fleet optimization for electric vehicles
and game analytics.

Geoinformatica

Matthias Renz is Associate Professor at the Computational and Data
Science Department at the George Mason University (GMU), Fair-
fax, VA, USA. His main research topics are data science, scientific
and spatial databases, data mining and uncertain databases. To date,
he has more than 100 peer-reviewed publications that in total received
over 1800 citations with an h-index of 19. He served as general chair
and program chair for several international conferences including
SSTD, ACM SIGSPATIAL, and DASFAA, founded and organized
workshops at ACM SIGMOD and ACM SIGPATIAL, gave several
invited tutorials, seminars, and keynotes.

Dieter Pfoser is an associate professor at the Department of Geog-
raphy and Geoinformation Science, George Mason University, USA.
He received his PhD in Computer Science from Aalborg Univer-
sity, Denmark in 2000. His research interests include spatiotemporal
databases, routing algorithms and crowdsourcing geospatial data. He
has co-authored over 90 papers in peer-reviewed journals and confer-
ences. He is an editorial board member of Transactions in GIS and
an associate editor of Geoinformatica. He has been a PC co-chair
of SSTD 2011 and W2GIS 2014, and organized the SIGSPATIAL
GEOCROWD Workshops in 2012 and 2013.

Mario A. Nascimento is a Professor at the University of Alberta’s
Department of Computing Science and currently serves as the depart-
ment’s Chair.

Before joining the University of Alberta in 1999, he was a
researcher with the Brazilian Agency for Agricultural Research and
also an adjunct faculty member with the Institute of Computing of
the University of Campinas. Mario has also been a visiting professor
at the National University of Singapore’s School of Computing, Aal-
borg University’s Department of Computer Science, LMU’s Institute
for Informatics and at the Federal University of Ceara in Brazil.

His main research interests is contained in areas of spatial and
spatiotemporal data management and according to Google Scholar
his publications have been cited ∼3,300 times (∼2,950 according to
Semantic Scholar), earning him an H-index of 28. In 2007 he was
recognized as a Senior Member of the ACM.

Besides often serving as a program committee member for the
main database conferences, and as (co-) chair of several workshops
and symposia, Mario has also served as ACM SIGMOD’s Information Director (2002–2005) and ACM
SIGMOD Record’s Editor-In-Chief (2005–2007). He is currently a member of the VLDB Journal’s Editorial
Board and of the SSTD Endowment’s Board of Directors. He also serves as Chair of the NSERC-Computer
Science Liaison Committee and CS-Can/Info-Can representative at CRA’s Board of Directors.

Finally, he finds it rather amusing writing about himself in the third person.

